<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>20220514 - 漫画荣格 - 第六章：荣格与东方思想</title>
      <link href="2022/05/14/20220514-comicjung-chap6/"/>
      <url>2022/05/14/20220514-comicjung-chap6/</url>
      
        <content type="html"><![CDATA[<h2 id="第六章-荣格与东方思想"><a href="#第六章-荣格与东方思想" class="headerlink" title="第六章 荣格与东方思想"></a>第六章 荣格与东方思想</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul><p>每一条道路都是通往真理的无数条道路中的一条。</p><p>所有物质都是一个物质的诸多侧面，我们把心向着道路敞开的话，就会知道走哪条路。</p><p>弟子心中做好准备的时候，师傅自然就会过来。</p><p>荣格曾经在给一位女病人做心理分析时受阻，因为她总是什么都知道。因此，分析就中断了。</p><p>而有一次，女病人说昨晚做了一个梦。有人在梦中给了她一个黄金做的神圣甲虫。这时，窗外正好有一只甲虫撞到玻璃上发出声响，荣格将其拿进来，告诉女病人说“这里有你的圣甲虫”。发生这件事以后，她的合理主义出现了变化。</p><p>之后，因为她消除了原有知识的障碍，所以，对她的心理分析进展得很顺利。</p><p>是那个偶然的巧合···不，那不是偶然的。类似的事情，经常会发生。</p><p>长久以来，我们相信，只有因果关系才是真实的。因果关系才是合理主义思想的基础。但，荣格认为，也存在着与因果关系相对的，应该称为“共时性”的关系。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220514215014.png"></p><p>人类意识的根源如果只有一个的话，那些“巧合”就不会让人感到奇怪了。</p><p>荣格当时对天宫图（占星算命用的图）和历史的相关性很感兴趣，想再好好研究一下易经。</p><p>这个设想的实现花了 20 多年的时间，终于在 1952 年发表了《自然现象与心理结构》一书。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220514215231.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220514215240.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220514215320.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220514215346.png"></p><p>1938 年，荣格应印度政府的邀请到了印度。这使他有幸看到了与北非不同的高度分化了的不同性质的文明。</p><p>东方是欧洲的对照镜。原本相同的东西，在欧洲和印度却各有不同的表现。</p><p>尤其令人惊讶的是，东方人并不忌讳“恶”。有意思的是，他们认为“恶”包括在自然界当中。荣格把这件事记录在以后出版的《四位一体论》中。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220514215624.png"></p><p>荣格在释迦牟尼频繁讲经的地方，分析基督教与基督教徒。基督教徒努力寻求善。尽管将要被恶俘虏，但印度人却感到自己是在善恶的彼岸，他们从恶中逃脱了出来，并且克服了恶。</p><p>荣格认为，释迦牟尼和基督教都是自己的具体体现，但它们的意义却完全不同。</p><p>释迦牟尼理性地克服了世界，而基督教是作为受难者来客服世界。基督教是忍耐，释迦牟尼是彻悟。但是，在印度，释迦牟尼是完美的人。</p><p>基督教在基督教徒中得到了统一，人们应该感觉到基督教。可是，历史上却说“应该模仿基督教”，这就把神置于外了。因为每个人都没有把自己自身向全体敞开，所以导致自己越来越渺小。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220514215945.png"></p><blockquote><blockquote><p>图中的“自己”，应该指代的是意识和无意识的中心。</p></blockquote></blockquote><p>而意识存在于宇宙的菩萨中，菩萨按照神的意志行事。我们敞开心灵去看待神，就会使自我不断丰富并成长。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220514220120.png"></p><p>我们生存在宇宙的安排中，让偶我们的意识去认识。在理念上，只要领会到神，神就会存在与我们的心中。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220514220157.png"></p><blockquote><blockquote><p>有些像早些年看到过对于“开光既是开灵智”的解释：开光并不是某种物理意义上的措施，而是指人在看到“被开光”的物体就能够想到相应的神/品质，从而最终开灵智。</p></blockquote></blockquote><p>当然，必须要知道：认为自己=神的时候，由于骄傲自大而关闭了自己的意识：认为自我=自己，已经完全被同化了，这都是很危险的。</p><p>但对荣格来说，印度是研究过程，不是研究对象。</p><p>所有道路，都是为了让他重新塑造欧洲精神的主题。</p><p>实际上，到东方考察，对荣格来说是很有意义的经历，使他想到了对立原理的统一，这有助于他对炼金术的研究。</p><p>他觉得，释迦牟尼的内心反省确认了他的意向理论。中国道教的思维方式证实了他的共时性原理。</p><p>他觉得，自己的心灵终于向着“统一的世界”敞开了，心里很平静。</p><p>然而，1944 年，由于神志不清和骨折，荣格停止了罗马的旅行。</p><p>荣格还有很多事情想写下来，能起床的时候，他就拼命地写。</p><p>晚年的托妮，因为过量吸烟和饮酒，患上了关节炎和孤独症。</p><p>1953 年 3 月 20 日，托妮突然去世。</p><p>荣格对她的去世，没有做过任何警告梦或预知梦，感到很不安。最后，也没有出席托妮的葬礼。</p><p>但是，之后他追悼了托妮，为托妮制作了纪念碑，并立在丘斯那哈特地区的自家院子里。</p><h3 id="短评-9：荣格被东方思想吸引"><a href="#短评-9：荣格被东方思想吸引" class="headerlink" title="短评 9：荣格被东方思想吸引"></a>短评 9：荣格被东方思想吸引</h3><p>荣格对东方思想产生浓厚的兴趣，与他和汉学家里哈路特·威廉赫尔姆的会面有很大影响。</p><p>荣格通过威廉赫尔姆，对中国的《易经》、《太乙金华宗旨》产生了极大兴趣。《太乙金华宗旨》一书的内容是以冥想形式介绍了中国式的炼金术，这正与荣格关心的西方炼金术相关。荣格也亲自体验过古印度瑜伽理论的冥想法，可以说，冥想体验是感知自己人格深处的无意识的方法。</p><p>荣格被《易经》的这里所吸引，经常使用芦苇棒算卦。荣格提倡的共时性的思维，就是从易经的原理领悟出来的。</p><p>西藏佛教也对荣格影响很大，荣格画了一张代表整个心理形象的菩萨图。有一位欧洲患者在自己的无意识中发现，这张图中的菩萨和西藏佛教的菩萨一样。荣格是希望通过画菩萨图来发现心灵深处涌出的意象，进而找到探索无意识世界的钥匙。</p><p>就这样，荣格积极地把东方思想介绍到欧洲，他对很多东方经书都做了注解。因此，在东西方思想融合的过程中，荣格所起的作用不容忽视。</p><p>但是，荣格的心理学与佛教的唯心思想不同。唯心思想是大乘佛教之一，认为“所有现象都是心理产生的”，主张通过接受瑜伽思想是自己的心理转变，达到大彻大悟的境界。其将意识分为 8 大作用，其中有六觉：视觉、耳觉、嗅觉、味觉、触觉和感觉，此外，还有根本性的自我执着意识“超自然意识”、产生所有表象的根源性意识。</p><blockquote><blockquote><p>想到了 <a href="https://baike.baidu.com/item/%E3%80%8A%E5%9D%9B%E7%BB%8F%E3%80%8B/1772525">《坛经》</a>中云：“时有风吹幡动。一僧曰风动，一僧曰幡动。议论不已。惠能进曰：‘非风动，非幡动，仁者心动。”</p></blockquote></blockquote><p>根源性意识被看做与荣格心理学中的集体无意识相适应，这种观点当然不是荣格所关心的。但是，它作为研究荣格心理学的方法之一，是与东方思想相比较的研究，也是很有意思的。</p><h3 id="短评-10：共时性与道教"><a href="#短评-10：共时性与道教" class="headerlink" title="短评 10：共时性与道教"></a>短评 10：共时性与道教</h3><p>共时性是荣格提出的理论，它与因某种原因而得出某种结果的“因果关系”正好相反。荣格在实践中得出结论：“有关联性的事情容易同事或连续发生”，这就是共时性，也就是说，共时性是一定意义上的一致性，有别于单纯的同时发生。</p><p>共时性可以分为以下类型：</p><ul><li>心理想的事情与实际发生的事情相吻合。例如，看到眼前的桌子，就想桌子上要是有鲜花该多好啊，这时，正好有一个朋友拿着鲜花来拜访你。<blockquote><blockquote><p>心想事成？</p></blockquote></blockquote></li><li>梦见或幻觉到的事情同异地发生的事情一致。如，梦到有人死了，实际上那人真的在他乡去世了，这样的传闻很多。<blockquote><blockquote><p>类似预知梦</p></blockquote></blockquote></li><li>某个意象就是将来实际发生的事情，也就是所谓的预言。</li></ul><p>这些现象，用因果关系是无法解释清楚的，但经常被解释为偶然的巧合。可是，在中国的道教或《易经》中，看到这类现象就不足为奇了。另外，东方有些谚语“心想事成”、“说曹操曹操到”、“弟子心中做好准备的时候，师傅自然就会过来”等，也都包含着共时性的原理。</p><p>再如，白天虽然看不见星星，但星星白天也在闪烁。如果心灵的眼睛睁开，则可以认识到白天也在闪烁的星星。就这样，敞开心扉去认识大自然的客观现象，就会发现共时性其实并不神秘，而是很自然的事情，也可以说，这类似于道教中的道的幻觉所看到的一瞬间的事情。</p><p>道教认为，宇宙中的统一原理与世界上的万物都有关系，所有物质都可以说是“宇宙统一体”的各个侧面。因为所有物质都属于一个统一体，所以，两种以上的物质就具有关联性，这也就不奇怪了。</p><blockquote><blockquote><p>出处莫不是《庄子·知北游》？<br>东郭子问于庄子曰：“所谓道，恶乎在？”庄子曰：“无所不在。”东郭子曰：“期而后可。”庄子曰：“在<a href="https://baike.baidu.com/item/%E8%9D%BC%E8%9A%81/10141463">蝼蚁</a>。”曰：“何其下邪？”曰：“在稊稗。”曰：“何其愈下邪？”曰：“在瓦甓。”曰：“何其愈甚邪？”曰：“在屎溺。”东郭子不应。</p></blockquote></blockquote><p>荣格提出了共时性与道教的关系，描述说：“对共时性的理解，是打开研究东方思想神秘世界的钥匙。”</p><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Psychology-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Learning Notes </tag>
            
            <tag> Psychology </tag>
            
            <tag> Carl Gustav Jung </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220513 - 漫画荣格 - 第五章：炼金术时代 心理的变化与成长</title>
      <link href="2022/05/13/20220513-comicjung-chap5/"/>
      <url>2022/05/13/20220513-comicjung-chap5/</url>
      
        <content type="html"><![CDATA[<h2 id="第五章-炼金术时代-心理的变化与成长"><a href="#第五章-炼金术时代-心理的变化与成长" class="headerlink" title="第五章 炼金术时代 心理的变化与成长"></a>第五章 炼金术时代 心理的变化与成长</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul><p>1926 年，荣格做了个具有决定意义的梦：他和一个农夫被关在了某家公馆的院子里，农夫叫喊：“啊！我们被关进了 17 世纪”，但自己却一点也没有感到不安，并坚信“总有一天能出去”。</p><p>荣格从梦中得到启示：自己一生要研究的书籍，应该在 17 世纪的书籍中。</p><blockquote><blockquote><p>希望每个人都有机会做这样，理解这样的梦</p></blockquote></blockquote><p>旅行回来后，荣格贪婪地读书，埋头研究。《我的思想》一书即将完成，但画的地图还有些不足之处。</p><p>他读完了关于唯理主义宗教思想的所有书籍，之后不知该研究什么。</p><p>唯理主义归根到底是说明了弗洛伊德的可怕的父辈权威，只会让人产生绝望与苦恼。</p><p>荣格认为，一定要在心里深处找到光明的另一个侧面，研究作为人类心理变化容器的子宫的原理。</p><p>1928 年，里哈尔特·威廉赫尔姆寄来一本有关中国炼金术的书籍《太乙金华宗旨》。这本书虽然不是讲述真正的炼金术，但它告诉了荣格“菩萨”的存在，是荣格研究炼金术的重要的航标。</p><blockquote><blockquote><p>玄起来了</p></blockquote></blockquote><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220513210115.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220513210133.png"></p><p>荣格让托妮去收集有关炼金术的书籍。尽管如此，很长时间，他一致认为炼金术是莫名其妙的东西，没有去理会。</p><p>但很快，荣格就和威廉赫尔姆一起研究起了道教与菩萨。1929 年，二人完成了《黄金精华的秘密》艺术，可惜的是，书籍完成不久，威廉赫尔姆就去世了。</p><p>菩萨图和道教的太极图，在荣格以后的研究中，对他影响很大。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220513210420.png"></p><p>很长时间，道的阴阳相生成了荣格的研究主题，他感到，阴阳图说明了光明与黑暗是可以统一的。</p><p>并且他还觉得，通过研究异教，可以重新认识他一直否定的基督教。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220513210554.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220513210619.png"></p><p>荣格发现，他希望自己周围的女性们是太母的原型，他已经超越了希望她们是圣母的这一单方面的愿望。</p><p>他希望她们从一些压抑及原型的支配中解脱出来，获得自由，使自己成为一个独立的人。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220513210819.png"></p><p>在和她们和谐交往的过程中，荣格开始贪婪地阅读有关炼金术的书籍。</p><p>刚看上去，好像是一些无聊的化学反应的梦，但渐渐地，他发现，书中讲的不正是人类心理的变化吗？</p><p>无意识是一个过程，通过自我对无意识的参与，使心理产生变化并得到发展，其个性化的过程就是炼金术。</p><p>掌握炼金术，就是“神秘的结合”。</p><p>荣格在其著作中揭示：人的降生，就是为了通过改变自己的参与来改变并发展心灵这一“自己实现”的人生旅程。</p><p>荣格发现了其他学派的炼金术，日后撰写了一部题为《心理学与炼金术》的巨著，并因此创立了“个性化过程”这一荣格分析心理学中特有的理论。</p><p>而且，正是在这一研究过程中，荣格提出了“自己”这个概念。因此，荣格又自信地提出了“原型”、“集体无意识”等概念。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220513211422.png"></p><p>1933 年起，希特勒纳粹势力的抬头，正像荣格所说，是集体无意识的表现，是疯狂症。</p><p>他认为，因为没有意识到“自己”这个概念，所以，欧洲将要被集体无意识吞噬。这很危险···！</p><p>如同欧洲内部发生痉挛一样，欧洲将要再次卷入战争的旋涡。</p><p>此时，弗洛伊德由于反对迫害犹太人的运动而受到纳粹的迫害，为能帮助弗洛伊德，荣格与他取得了联系。</p><p>那时的弗洛伊德，因为<a href="https://zh.wikipedia.org/zh-hk/%E4%B8%8B%E9%A2%9A%E7%99%8C">下颚癌症</a> 做了几次手术，身体非常衰弱，但是他觉得不能接受荣格的···“敌人的帮助”。</p><p>弗洛伊德 1939 年流亡英国，第二年去世，享年 83 岁。</p><p>荣格再次失去了父亲。</p><p>荣格、埃玛、托妮都迎来了人生的晚年。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220513212135.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220513212150.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220513212208.png"></p><p>荣格后来异常活跃，1940 年在艾拉诺斯发表了《三位一体教义的心理学解释》。</p><p>1941 年和卡尔·可雷尼伊合著《神话学入门》，在艾拉诺斯发表了《弥撒的变化象征》。</p><p>此外，还和物理学家泡利·瓦尔夫甘谷甲流了对未来的展望。晚年的荣格，不仅继续进行心理学的研究，还涉及到神话学、自然科学等广泛的领域，深入研究人类的内心深处。当然，还有宗教学，尤其是积极向其他学派解释基督教。</p><p>他还在原本基督教对“神-圣灵-孩子”三位一体的神圣解释基础上融合阴阳思想进行了拓展，提出了“神-圣灵-恶魔-基督教”的四位一体说法。这个四位一体，是光明与黑暗、东方与西方，以及所有物质的结合，使得基督教展现更高水平的神圣。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220513212504.png"></p><p>荣格已经不害怕潜入意识深处了，而且还自由自在地往返于意识和无意识之间。</p><p>有一天，荣格做了这样一个梦：</p><p>家里有一栋从未进去过的房子，里面有一扇双层梦。进去一看是一个实验室。窗前有张桌子，上面放着许多玻璃容器，那是他父亲的工作间。瓶子里有各种各样的鱼。</p><p>有一位叫汉斯的年轻人拉开了窗帘。下一间是母亲的房间，顶棚上吊着 5 个箱子，分成 2 排。那间房子很宽敞，顶棚上吊着的箱子距离地面约有 60 厘米，每个箱子下面分别有两张床，就像庭院中的大亭子。这是他母亲的幽灵来访的屋子。</p><p>窗外有个大厅，管乐队在大声演奏。</p><p>他知道，母亲是为来访的幽灵布置的这个屋子。</p><p>管乐队表现出了表面的欢乐和世俗。可是，他们背后，气氛却截然不同，是沉默的亭子和实验室。</p><p>父亲房间里的鱼代表基督教，父亲关照着基督教徒的灵魂。</p><p>母亲的房间是灵魂来访时的招待会，母亲正保护着死者的灵魂。</p><p>他作为父亲和母亲的孩子，肩负的任务就是治愈灵魂。</p><p>他醒了。</p><p>他不再迷茫，他的存在，是为了将欧洲的白昼（基督教）和夜晚（神秘思想）相结合。</p><p>而且，人类的存在，是为了与没有规定要称为“神”的实体相对的···</p><p>他必须将神圣意向的明暗两面结合起来。白昼和黑夜是一个物体的不同侧面。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220513213357.png"></p><h3 id="短评-7：荣格与炼金术"><a href="#短评-7：荣格与炼金术" class="headerlink" title="短评 7：荣格与炼金术"></a>短评 7：荣格与炼金术</h3><p>炼金术是一项科学技术，是从普通金属中提炼出贵金属，尤其是指黄金提炼技术。也包括了提炼长生不老药（炼仙丹）和万能药的技术。这一技术的产生，一般都认为，是由古希腊时代的亚历山大，结合各种冶炼技术、染色技术、宗教和哲学思想而产生的。这一技术的思想在《赫尔墨斯文库》中作为赫尔墨斯思想，受到了人们的推崇，在欧洲、阿拉伯搬到得到了不断推广。</p><p>炼金术历来被认为是伪科学、迷信，在近代科学形成前就应该被摒弃，但其发展至今，却没有停留在单纯的物质生产上，而是以系统的思想和实践为基础，形成了独特的解释世界的理论框架。炼金师在进行科学作业的的同时，也注重内心体验，即心灵深处发生的变化。两个对立的物质相结合，便可以产生新的物质，荣格的这一观点，形象地解读了炼金术。</p><blockquote><blockquote><p>这倒是以前所不曾了解的部分</p></blockquote></blockquote><p>荣格认为，炼金术的工艺以及其中所含的男女特征，与人类的人生及心理变化的方式很相似，于是，就将炼金术与心理治疗相结合，把炼金工艺和技术用于精神分析，创立了自己独特的精神分析疗法。当然，荣格的炼金术与原本意义上的炼金术完全不同。</p><p>荣格研究了炼金术的分离、分析、综合与合成的过程，以此提出了精神分析的四个阶段：①叙述-②解释清楚-③教育-④变化。</p><p>最初两阶段相当于炼金术中的分离、分析，其理论相当于弗洛伊德的还原法，荣格的理论中还增加了教育和变化。荣格分析理论的目的，并不满足于通过精神分析来减轻患者的病状，而是使患者的人格得到健康成长，使心理健康发展。</p><p>当然，为了实现这一目标，精神分析医生与患者，都必须以正直的心理（如同炼金原料）进入分析状况（如同将原料装入蒸馏器中），都很认真的两者，通过相互作用，彼此都发生了变化。</p><p>的确，荣格学派的精神分析医生，在给患者进行分析的同时，自己也在不断变化、成长。无论是精神分析医生还是患者，只有在相互信任、负责的基础上，才能得到心理的变化和成长。</p><h3 id="短评-8：唯理主义"><a href="#短评-8：唯理主义" class="headerlink" title="短评 8：唯理主义"></a>短评 8：唯理主义</h3><p>唯理一词的本意在希腊语中是“知识”的意思，唯理主义不同于基督教兴起时出现的思想运动——“旧唯理教派”。旧唯理教派与历史无关，多出现在各种宗教中。应该看到，荣格的唯理研究，在很大程度上也注重认识神灵世界的旧唯理教派。</p><p>唯理主义是在罗马边境、埃及、叙利亚、巴勒斯坦等国兴起的，并出现了很多流派，有许多被认为是基督教的异端教派。</p><p>其实，它是一种独立的思想运动，它的世界观的表现形式是否定希腊以来的普遍宇宙论（星尘观），这一思想在当今已经被否定。</p><p>唯理主义认为，世界分为物质的和神灵的，而神灵世界高于物质世界。</p><p>下面简单介绍唯理主义救世论：</p><p>人类是通过神灵的某个机遇来到地球，并被投胎到并非原本就有的物质世界里，这并不是人类的本来面目。但是，如果获得了关于人类本来面目的知识，人类就会觉醒，灵魂也就会脱离肉体而进入至高无上的神灵世界，再次成为神灵。</p><p>这种观点，否定了基督教徒所倡导的上帝创造的世界。而且，如果人类本来就有神性的话，就不需要救世主耶稣基督了。实际上，唯理主义的神话世界几乎与基督教的神话世界完全对立，是对基督教价值体系的完全反驳。因此，唯理主义的各流派受到了基督教的猛烈镇压，4 世纪后就迅速衰落了。</p><p>不过，唯理主义思想中，不是依靠自身以外的神灵，而是通过自我觉醒来救助自己的观点，对于现代人来说，也是很有价值的理论。也许正是这一点，使荣格非常重视研究唯理主义。</p><p>深层心理学中认为，人的肉体内存在着本来的自己，通过唯理主义观点才可以认识到，这种思想与荣格的无意识理论是一致的。唯理主义诞生的同时，炼金术也开始在埃及出现了。所以，荣格在研究唯理主义之后，很自然地就开始了炼金术的研究。</p><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Psychology-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Learning Notes </tag>
            
            <tag> Psychology </tag>
            
            <tag> Carl Gustav Jung </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220511 - 漫画荣格 - 第四章：旅途 欧洲文明失去了什么</title>
      <link href="2022/05/11/20220511-comicjung-chap4/"/>
      <url>2022/05/11/20220511-comicjung-chap4/</url>
      
        <content type="html"><![CDATA[<h2 id="第四章-旅途-欧洲文明失去了什么"><a href="#第四章-旅途-欧洲文明失去了什么" class="headerlink" title="第四章 旅途 欧洲文明失去了什么"></a>第四章 旅途 欧洲文明失去了什么</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul><p>1923 年，荣格母亲去世。同年，他在宝林根湖畔建造了一座塔，这对他来说，是“新的人生”的开始。</p><p>母亲去世前后的一段时间里，荣格每天都在旅行中度日，这也许不是偶然的旅游观光。第一次旅行是 1920 年去了北非，1924 年到北美，然后又到了东非等地访问。</p><p>他很久以来的梦想就是从他国看欧洲，也从外在因素看待自己的人生。</p><p>他暂时离开托妮、埃玛，也在旅行途中，承受失去母亲的痛苦。</p><p>在突尼斯（非洲），他发现非洲女人几乎都戴着面罩，不戴面罩的女人被认为是妓女。而且，有很多男性相互搂抱，他心想难道就像古希腊那样，有很多同性恋吗？</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220511232853.png"></p><p>导游不像欧洲人那样轻浮，迈着坚实的脚步，脚步虽轻，但具有顽强的生命力。不知是天热的缘故，还是原始的符咒力，荣格似乎喜欢上了这个国家。</p><p>这一想法使荣格就像得了感染症。并且他还做了这样一个梦：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220511233044.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220511233118.png"></p><p>荣格在梦中被一名非洲酋长样的人（后面简称为酋长）袭击，但最终反制了他。并之后要求酋长读书，理由是“因为我战胜了你，所以，你必须读完这本书”。</p><p>荣格后来明白，酋长对他来说是影子，是与自己有关的种族的影子。梦境暗示的是荣格与北非相遇的东西。</p><p>在意识中，他感到了作为欧洲人的文明的优越感，但却畏惧非文明。北非对他来说是危险的。他以一个欧洲人的意识，遭到了北非这一无意识的激烈攻击，似乎就要被打败，那正是杀人现象的象征。</p><p>他们忘却了史前时代的最初的记忆。欧洲人失去的东西，可能就在欧洲以外的地方。或许，失去已久的神，也在那里？</p><p>在荣格即将离开北非的时候，内心深处特别渴望那位一直被他否定的神。</p><p>1924 年，荣格访问了新墨西哥的印第安人村庄普韦布洛。</p><p>美国是白人社会，但在那里却不同。他去那里的目的，是为了寻找在北非看到的“非欧洲的东西”。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220511233658.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220511233713.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220511233730.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220511233744.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220511233807.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220511233825.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220511233850.png"></p><p>1925 年，荣格到了肯尼亚和乌干达。那里的印第安人，就像普韦布洛的印第安人一样，也是那么完美和谐。女人和男人一样，都是宝贵的劳动力。而在欧洲，主张女性权利平等的结果，却失去了男女平等协作的和谐生活。</p><p>荣格在这里收到了一个解梦的请求：<br>“我以前的老医师们的梦，他们知道要爆发战争，要流行疾病，或者何时会下大雨。不过，白人来到非洲后，就没有人做梦了，现在，英国人知道这一切。”</p><p>荣格从他的话中，好像看到了欧洲人失去了与灵魂交流的能力、仙女、神灵、生命力。</p><p>当地人在早上，太阳升起的时候，会从小屋里跑出来，把唾液吐在手上，双手伸向太阳。太阳是神，唾液是包含个人生命力的实质的灵魂。这个仪式的意思，也就是说“我们把我们活着的灵魂奉献给神”。</p><p>人类基本的冲动，就是试图从原始的黑暗中挣脱出来。人类自古以来就憧憬光明。过去，我们朝拜闪烁在天空的光、拯救世界的神。</p><p>如果说欧洲的知识是光明，那么，非洲人就生活在心灵根本的黑暗中。所以，他们对神的憧憬是纯真的，而生活在光明中的欧洲人也不要害怕神。</p><p>那是，荣格知道了，神是“存在”的。</p><p>我们任何人都在平等地接受着伟大的神灵之光的恩惠。而且，荣格还认为，人类的生存都应该包含着这个“意思”。我们虽然孤独，但我们与神同在。</p><p>无论是个人还是全世界，都是有意义的存在。</p><p>荣格知道自己的意识已经不害怕无意识的黑暗了。所以他跨过尼罗河，从非洲的心脏地区到埃及的旅程，对他来说，就成了诞生光明的一个过程。</p><p>他已经不再轻易地收到无意识的支配了，他实现了崭新的自我。</p><p>这次旅程给了荣格满意的答案和经历。</p><h3 id="短评-6：关于英雄神话"><a href="#短评-6：关于英雄神话" class="headerlink" title="短评 6：关于英雄神话"></a>短评 6：关于英雄神话</h3><p>荣格非常重视研究神话世界，因为他认为，在人类的无意识中，存在着超越文化和时间的人类共有的“形成神话的”因素。</p><p>下面介绍欧洲中世纪主要流传的两个英雄神话故事。</p><p>首先介绍尼伯龙根之歌，故事的主人是齐格菲，被编成的故事有：日耳曼神话《尼伯龙根的戒指》、北欧神话《埃达》、德国的叙事诗《尼伯龙根之歌》等。</p><p>莱茵河畔的勃艮第王国，统治者是宫塔国王，他有一位漂亮的王妃，名为克里姆希尔德。荷兰国的王子——齐格菲来向王妃求婚，他降服了巨龙，身上溅上了龙血，使自己变成了不死之身。宫塔国王向齐格菲王子提出了一个要求：“如果你能帮助我取到冰岛的美女——卜隆西卢特，我就把克里姆希尔德王妃送给你。”</p><blockquote><blockquote><p>按照之前的太母原型，这里的齐格菲自带反叛母性的内核？</p></blockquote></blockquote><p>在王子的帮助下，冰岛的美女可以成为宫塔国王的妻子，可是，冰岛美女——卜隆西卢特却爱上了前来牵线搭桥的齐格菲王子。他也知道，如果自己嫁给宫塔国王，齐格菲王子就要娶克里姆希尔德王妃为妻。所以，卜隆西卢特一直拒绝嫁给宫塔国王，还是齐格菲再次出面斡旋，事情才得到圆满解决。</p><p>可是，平静的日子没有持续多久，几年后，齐格菲王子和克里姆希尔德从荷兰回到勃艮第王国，克里姆希尔德发现卜隆西卢特爱慕王子，就与她发生了激烈的口角。宫塔国王感到气氛紧张，就命令手下人——哈根暗杀齐格菲王子。虽然王子被认为是不死之身，但他的后背没有溅上龙血，所以王子被刺中后背而死去。</p><p>齐格菲死后，克里姆希尔德为了向宫塔国王和哈根复仇，嫁给了匈奴人埃泽鲁，骗出宫塔国王和哈根两人，并将他们杀死。克里姆希尔德最后也被东戈特的老将军杀死。</p><p>另外，在介绍一个中世纪欧洲文学史上最重要的亚瑟国王的传说，据说主人公亚瑟确有其人，率领凯尔特人夺回 6 世纪至 12 世纪被撒克逊人占领的国土，是一位传说中的英雄人物。</p><p>不列颠国王维瑟尔，使用魔法变成康沃尔公爵，与王妃依古雷奴交往，生下了亚瑟。亚瑟得到一把埃库斯卡里巴宝剑，当上了不列颠国王，并与古微內卜阿结婚。在他奔走于各国、踏上远征罗马的途中，听说他的外甥莫鲁多雷特夺走了王位、霸占了他的妻子，得知这一消息后，他回国杀死了外甥，自己也受了重伤。后来，在阿巴伦的埃特纳岛去世了。</p><p>以这个故事为原型，以后又出现了圆桌骑士团的故事、圣杯传说、特利斯坦和伊左都的故事等，使亚瑟王的传奇故事越传越广。</p><p>圣杯传说具有 12 世纪末欧洲兴起的基督教色彩。季度在最后的晚餐时所使用的餐具当中，被子被用来接住十字架上的基督流出的血，这个杯子就是圣杯。法国诗人克雷蒂安·德·特罗阿，把寻找这个圣杯的过程写成《裴卢斯巴卢的故事》，但克雷蒂安最终没有写完，由后人续写完成。</p><p>荣格发现这些英雄故事中含有共同的主题，列举如下：</p><p>降服大龙=脱离母亲、获得自立<br>得到宝剑等=获得男性原理<br>寻找和得到圣杯或公主=获得女性原理<br>悲剧性死去=回归子宫（回到母胎中）</p><p>此外，还有出生异常、出生后马上要被杀掉等主题。</p><p>对于这些共同的主题，荣格解释说，这不单单是流传过程中出现的现象，而是由集体无意识中的原型所产生的。</p><p>中世纪的传奇故事，尤其是在没有精炼的部分故事中，包括了民众的许多无意识的愿望和心理特征，具有很强的研究魅力。我们之所以超越时代、不断地被英雄故事所吸引，也正反映了这些故事中存在着人类心理共有的原始情感。</p><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Psychology-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Learning Notes </tag>
            
            <tag> Psychology </tag>
            
            <tag> Carl Gustav Jung </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220510 - 漫画荣格 - 第三章：冒险进入内心深处、发现集体无意识</title>
      <link href="2022/05/10/20220510-comicjung-chap3/"/>
      <url>2022/05/10/20220510-comicjung-chap3/</url>
      
        <content type="html"><![CDATA[<h2 id="第三章-冒险进入内心深处、发现集体无意识"><a href="#第三章-冒险进入内心深处、发现集体无意识" class="headerlink" title="第三章 冒险进入内心深处、发现集体无意识"></a>第三章 冒险进入内心深处、发现集体无意识</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul><p>时间转到荣格与弗洛伊德的美国之旅。</p><p>荣格很钦佩弗洛伊德的才华，也很思念他，但是，对于他的性理论，却未曾完全接受过。</p><p>弗洛伊德虽已察觉到荣格不相信他的理论，但却有意识否认这一点。也许是害怕内心意识而排斥动摇其性理论的因素。</p><p>弗洛伊德对超自然现象也感兴趣，尽管在逃避，但还是再次被吸引了，并因此感到有些绝望。这一态度表现在弗洛伊德与荣格的交往方式上。</p><p>二人在美国克拉克大学的演讲顺利结束，但值得一提的是演讲之外的事情。</p><p>荣格和威廉姆·詹姆斯的相识，使其在唯灵论问题上，与弗洛伊德的关系开始紧张。</p><p>弗洛伊德相信荣格是其真正的继承人。一天，二人在餐桌上交谈，弗洛伊德让荣格讲讲他做的梦，要进行分析，荣格反让弗洛伊德分析一下他自己的梦。弗洛伊德表示自己的工作是分析，而不是研究自己的心理，并且对自己梦的分析，在某种程度上可能会威胁自己的权威。自那时起，荣格开始失去对弗洛伊德的信任，因其似乎比起研究，更重视个人隐私。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220510232504.png"></p><p>荣格讲述了一个曾做过的梦，请弗洛伊德分析：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220510232718.png"></p><p>这个梦揭示了人类心理的双重结构图，架设了人类心理基础的“非个人的”特征。</p><p>二层表示意识，一层表示无意识的第一平面。越往里走，周围的光线就越暗。洞穴是原始人的世界，是一是几乎打不到的无法搞清楚的世界。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220510232857.png"></p><p>二人谈话继续。弗洛伊德说道，国际精神分析学会将要成立，会所准备设在苏黎世，他希望荣格担任会长。（荣格犹豫不决）</p><p>弗洛伊德表示自己不讨厌神学了，想冷静地分析超自然问题，不过，他认为荣格最近的观点不适合做自己的继承人。</p><p>奇怪的是，弗洛伊德从美国回来后，热衷于参加降灵会。荣格拜访弗洛伊德家，两人都奇怪地感受到了超自然现象。</p><p>二人爆发了争论，弗洛伊德不希望看到荣格舍弃性理论。而荣格确信了弗洛伊德恐惧神学，而且在死命维护性理论。自那时起，荣格的无意识异常活跃，他不断地做一些很形象的梦。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220510233422.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220510233454.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220510233514.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220510233528.png"></p><p>荣格不明白这个梦的意思，但他前不久做过类似的梦。</p><p>他觉得这个梦的意思，是指奥地利边境的海关职员。他认为，“国境”是他和弗洛伊德之间的分界线，是意识和无意识的界限。</p><p>在荣格的心中，弗洛伊德已经死了。</p><p>从美国回来后，荣格辞去了布尔克赫尔茨里医院的工作，在苏黎世丘斯那哈特地区自己的家中开办起了私人诊所。</p><p>工作中，对荣格影响最大的是他的一位病人托妮·博鲁芙。她第一次来到诊所时是一位忧郁症患者，而现如今作为弗洛伊德的助手，发挥着她的聪明才干。</p><p>1913 年，苏黎世会所的会议上，荣格与弗洛伊德擦肩而过。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220510234126.png"></p><p>这意味着荣格“失去了父亲”，他必须一个人继续向未知的领域挑战。</p><p>荣格在 1914 年的梦中，以可怕的速度，摔下了意识的深渊：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220510234318.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220510234334.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220510234352.png"></p><p>这时，荣格的妻子意识到荣格失去弗洛伊德，其精神踏入前人未曾涉及的领域后，自觉已经无法再支撑荣格的心灵。并且认为荣格老是把女儿阿加特看成海莉。在这样的前提下，荣格的妻子让他如果需要安慰的话，就去找托妮，不要碰女儿阿加特。她理解荣格的心理开始了不寻常的冒险，如果能为人类带来知识财富，她什么都可以原谅，觉得托妮也一定愿意成为其精神殉教者。</p><p>在妻子埃玛的建议下，托妮和荣格的情人关系真的开始了。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220510234841.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220510234915.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220510234938.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220510234957.png"></p><h3 id="短评-5：原型和集体无意识"><a href="#短评-5：原型和集体无意识" class="headerlink" title="短评 5：原型和集体无意识"></a>短评 5：原型和集体无意识</h3><p>荣格在进行心理治疗和对巫师的研究过程中，遇到过无法认为是个人无意识产生的语言和意象。通过研究，荣格认为，人类心理也许还广泛存在着远古的无意识，这种远古无意识并非来自个人体验，而是来自人类共有的心理功能，即来自遗传下来的脑组织。荣格把这种来自远古的无意识称为“集体无意识”，把人类共有的心理功能称为“原型”。</p><blockquote><blockquote><p>（集体无意识只包含来自远古的无意识吗？个人无意识会转化为集体无意识吗？）</p></blockquote></blockquote><p>荣格把意象进一步分为个体意象和根源性意象。<br>个体意象是局限在个人人生中对特定人物和现实的记忆，所以，其与个人的无意识和情综相适应。这一个体意象没有集体的含义，也没有文化的含义。</p><blockquote><blockquote><p>（复习一下情综：荣格在其“语言联想实验”中发现的，明显表露出的、潜藏在人类心理无意识下的阻碍叫做情综，是“通过感情来证实的，作为无意识下的内心内容的情感和意象”的综合体）</p></blockquote></blockquote><p>相反，根源性意象具有神话主题所表现的那种远古性格，因为这是所有民族及时代共有的特征，所以，才会在各种各样的故事与形象中反复出现。原型就是这一根源性意象。</p><p>即使在从未有过文化交流的国家之间，也会有目的类似的神话或传统，这些相似之处正是来自于原型。荣格通过对患者的分析以及解析自己的梦境，找到了根源性意象，而且他还认为，大脑中的记忆和意象不仅仅是由外在的各种条件造成的，还是通过生命中先天固有的内在形式形成的。</p><blockquote><blockquote><p>（所谓血脉？）</p></blockquote></blockquote><h4 id="代表性的原型"><a href="#代表性的原型" class="headerlink" title="代表性的原型"></a>代表性的原型</h4><p>荣格设想了各种作为意象表面的原型，这些原型尽管不能证明人类内心深处的所有意象，但还是涉及其中几个非常重要的原型。</p><p>但在荣格心理学中，没有发现与伟大的母亲这一原型相反的具有暴力特征的父亲原型。这是因为，在严父管教下长大的弗洛伊德发现了恋母情结，而荣格的母亲却非常威严。</p><blockquote><blockquote><p>（因为荣格认为其父亲不具阳刚之气，父亲形象被威严的母亲形象所消弭？）</p></blockquote></blockquote><p>（1）角色</p><p>我们生活在社会上，每人都发挥着各自的作用，扮演者人们所期望的各种人格角色。所谓角色，就有扮演的意思，比如，母亲就像母亲，父亲就像父亲，这些角色在需要时任何人都可以扮演，人们以与现实社会完全匹配的角色生存着，角色表现出的表面上的人格，不会伤害自己，也具有不伤害他人的润滑剂的作用。</p><p>因为暴露在别人面前的自己“不是真正的自己”而感到苦恼的人，也为数不少。我们有时感到自己好像是在“伪装”自己。不过，如果自己感到毫不怀疑“真正的自己”，即无法区分角色和自我的时候，自我就与无意识一致，并受到无意识的支配。</p><p>如果外在的表现太好，不知道自己的角色应该扮演成什么样时，顽固的意识态度就被定化，人在精神上就无法发展。</p><blockquote><blockquote><p>（冲突造就成长？）</p></blockquote></blockquote><p>所以，无论从外在表现保护自我，还是客观地认识无意识，都需要角色。</p><p>（2）阴影</p><p>阴影是隐藏在可以意识到的自己内在的人格的阴暗部分，也可以说是存在与我们的无意识中的未成熟的“另一个自己”。人在梦境中，有时会梦见强盗、小偷、敌人、恶魔等，有时也梦见自己身边的交往不愉快的人。如果自己感到很不顺心，或者感觉自己周围有不能愉快交往的同性，那很可能就是你自己的阴影造成的。</p><p>阴影不一定都是坏事，也蕴藏着创造性和未知的可能性。尽管人们在某种意义上难以解决自己的阴影，但是，在认识到自己阴影的同时就会有很大收获。如果再把阴影融合到意识当中，也许就会发现以前否定的东西中包含着其它的意义，可能还会弥补自己的不足，因此，认识到阴影，将对人格的发展起到非常重要的作用。</p><p>（3）女性原理、男性原理</p><p>荣格认为，一个人的心理同时存在男性特征和女性特征，其中，将内含男性特征的称为女性，将内含女性特征的称为男性，人们的异性观受到男女性原理的很大影响。</p><blockquote><blockquote><p>（所谓阴中有阳，阳中有阴）</p></blockquote></blockquote><p>人们在意识中，强调表面上的性别，即男要像男，女要像女，所以内在异性受到压抑，也就很容易趋向萎缩。所以，理论上很男子汉的男性，内心却比较脆弱，甚至有的家庭不和，出现暴力。</p><p>女性，由于内在男性特征趋于萎缩，完全远离了男性特征，使自己只有奉献、不去接受，或者过于抱怨，不能很好地处理家庭关系。</p><p>所以，要想步走极端，与异性和睦相处，关键在于认识到自己心理存在着的异性特征。</p><p>荣格认为，无论对于个人还是对于社会，都应该平衡发展女性原理和男性原理。</p><p>（4）伟大的母亲（太母）</p><p>养育万物的母性形象就是伟大的母亲（太母），这是被理想化了的母性形象。相反，她也具有吞噬万物的可怕特性，如果不离开这样的母性，自己不能获得独立，就会在不知不觉中受到太母的摆布。</p><p>可以看到这样的现象：男性永远离不开母亲，不能曾为一个具有自我独立的人；女性，支配和干涉男性，就像母亲对子女那样，给对方寄予过多期望。</p><p>太母以负面面孔出现时，就是魔鬼、女妖、母老虎等角色 ，如同神话故事中经常出现的英雄降龙的故事，表现的主题是叛逆期的少年幻想在精神上摆脱了母亲，自己获得了独立。</p><blockquote><blockquote><p>（所以勇者斗恶龙，其实内核是反叛母亲？）</p></blockquote></blockquote><p>（5）年长智者</p><p>该原型被视为男性成长过程中精神和心灵的终点的象征，是超越了一切社会野心之后的老成的男性，是仙人一般的形象。荣格非常敬重自己想象中的弗莱蒙这一人物，这是他的老智者的形象，作为派生的人物形象，有男神、谷物之神、童子（永远的少年）、闪电（雷神）的角色。</p><p>老智者如同男性的太母一样，是女性可以依赖的人物。尽管有恋父情结，但对男性来说，老智者是权威的象征，是导师。</p><blockquote><blockquote><p>（物壮则老，体现终极状态的老者形象身上却能派生出童子的形象，感觉这也是荣格受道家思想影响的其中一种体现形式？）</p></blockquote></blockquote><p>（6）自己</p><p>荣格将包括这些原型的无意识和意识相结合，设想了人类的心理中心，取名为自己。</p><p>自己是意识与无意识、善与恶、男性与女性等的对立统一。自己以象征意义出现的时候，扮演者神、佛、菩萨等的角色，人们畏惧这些形象，甚至强烈地迷信她们。</p><h4 id="个性化与自己实现"><a href="#个性化与自己实现" class="headerlink" title="个性化与自己实现"></a>个性化与自己实现</h4><p>以上介绍的原型，有时在不知不觉中会对意识产生破坏性的影响。但是，当人们意识到它们的时候，就会想方设法从原型中摆脱出来，形成独立的自由的意识，也就可以获得自己生存的“个性”。荣格将这种从集体无意识支配中的分化叫做个性化——自己实现。个性化是人格发展的非常重要的条件。</p><p>个性化的过程如下：</p><p>我们在生活中的形象与扮演的普通角色是一致的，但，稍微遇到一点挫折而脱离自己的角色时，就会看到自己的阴影。我们遇到阴影时，必须承认，这一阴影也是我们自己的一部分。</p><blockquote><blockquote><p>（即前面所提，冲突造就成长的机会）</p></blockquote></blockquote><p>进而，在阴影深处，也会看到心理内在的异性特征，或是女性特征，或是男性特征。在陷入恋爱的爱河困境时，为了摆脱出来，需要从内心深处的女性原理或男性原理这一异性特征中彻底解放出来，并且还可以看到内心深处的异性特征的太母或年长智者的形象，这是很危险的，因为这些都是离自己的人格很近的内在形象，一旦与现实角色相一致，就会坚信自己接近神了。</p><blockquote><blockquote><p>（彻底解放…所指为何呢？内心深处的异性特征的太母或年长智者的形象，是如何与现实角色相一致的呢，这可能吗？）</p></blockquote></blockquote><p>最后表现出来的是自己。不过，自我与自己的同一并不是自己实现。所谓自己实现，就是自我与自己进行对话“内在形象是我、不是我”相互协调的过程，重要的是丰富自我与自己的关系，即自我与自己的关系永远不能终结。</p><blockquote><blockquote><p>（自我是意识中心，自己是心理中心（包含意识与无意识）。碰到问题，自我看到阴影，借此机会看到部分自己，所以上面所指的内心深处的异性特征的太母或年长智者的形象与现实角色一致，指的是自我与部分自己的统一？怎么个统一法呢？有点无法想象。<br>按书中所说，自己实现所指的是碰到问题，自我看到阴影，借此机会看到部分自己，而后摆脱这部分自己的过程，或者用其话语，即将这部分原本属于集体无意识中支配的部分分化的过程。<br>所以意识到了这部分未分化的集体无意识，即原型，最终导向的是自我对原型的主观摆脱。<br>这里的主观摆脱，是因为怕其将自我吞噬？那么除了摆脱之外，有没有可能在某种程度上实现原型的主观内化呢，即这部分原本未知的集体无意识被自我有意识地纳入意识范畴，所导向的结果能想到的是意识的边界扩张，但其实际意义为何，甚至是否具有可行性，还没想清楚…）</p></blockquote></blockquote><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Psychology-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Learning Notes </tag>
            
            <tag> Psychology </tag>
            
            <tag> Carl Gustav Jung </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220509 - 漫画荣格 - 第二章：寻找失去的父亲 同弗洛伊德的相识与创造性的回忆</title>
      <link href="2022/05/09/20220509-comicjung-chap2/"/>
      <url>2022/05/09/20220509-comicjung-chap2/</url>
      
        <content type="html"><![CDATA[<h2 id="第二章-寻找失去的父亲-同弗洛伊德的相识与创造性的回忆"><a href="#第二章-寻找失去的父亲-同弗洛伊德的相识与创造性的回忆" class="headerlink" title="第二章 寻找失去的父亲 同弗洛伊德的相识与创造性的回忆"></a>第二章 寻找失去的父亲 同弗洛伊德的相识与创造性的回忆</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul><p>荣格和埃玛结婚后，每天像着迷似的埋头撰文，为患者治病。</p><p>1905 年，当时的布尔克赫尔茨里精神病院在奥根·布鲁勒的领导下开展精神性疾病的治疗和研究。</p><p>荣格进行了 3 个领域的研究：歇斯底里症、语言联想法、早期性痴呆。</p><p>当时倾向于唯灵论研究的荣格，在理论上却依赖于分析心灵现象的 P·让内、泰奥德尔·弗鲁鲁努瓦的理论。</p><p>当时弗洛伊德还没有提出明确的性理论，正受到知识界人士的极大关注。</p><p>荣格也不例外，向其寄去了自己的著作《诊断的联想研究》，并开始与弗洛伊德通信。</p><p>1907 年 3 月，荣格拜访了位于维也纳的弗洛伊德的家。二人终于见面。</p><p>那天，二人交谈了 13 个小时，彼此都对对方给予了很大的期望。</p><p>其实，荣格刚开始并不是完全赞同弗洛伊德的性理论。弗洛伊德很乐观地认为荣格将要接受自己的理论。</p><p>弗洛伊德与荣格的密切交往，使布鲁勒对荣格的感情出现了裂痕。</p><p>荣格越来越倾向于弗洛伊德。他像对待父亲一样仰慕布鲁勒，但他还是期望弗洛伊德能代替父亲。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220509231123.png"></p><p>弗洛伊德与荣格彼此间信任日益加深。但事业上却与此相反，荣格对唯灵论和神学极为关注。</p><p>在与弗洛伊德交往过程中，荣格遇到一个关键的问题，他偶尔读到一本关于太阳神的文章。他发现文章所讲的事情酷似几年前遇到的一个患者的言行。</p><p>当时患者有过一番关于风和男性生殖器的言论。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220509231345.png"></p><p>那位患者不可能读到这篇关于太阳神的文章，而且，没有文化基础的人也不可能理解文章的意思。<br>可那位患者说的话和荣格所读关于太阳神的文章内容完全一致。</p><p>“性理论中没有解决的问题是什么呢？”，荣格想“在我们的心里，隐藏着一种结构…”</p><p>此时荣格与埃玛的关系其实并不融洽。埃玛认为荣格只知道读书和给弗洛伊德写信，她心中委屈，也想要学心理学，只是为了想和荣格有共同话题。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220509231705.png"></p><p>埃玛作为后来荣格派的研究者，也留下了功绩。而使埃玛走上研究成名之路的，可能就是他们夫妻关系中一种不完美感觉的作用。</p><p>荣格身边的女性们，统称荣格·弗拉温。<br>不可思议的是，他周围的这些女性，并不是以普通女性的身份和荣格在一起，可以确切地说，她们是一些分析家，并显示了她们的才能和功绩。</p><p>其中有一位名叫扎比娜的俄罗斯犹太人上流社会女孩，她与荣格的相识，是因为她曾在 1904 年作为强迫症患者，接受过荣格的治疗。</p><p>荣格在扎比娜身上看到了海莉的影子，此后，荣格经常因为幻想海莉而感到痛苦。</p><p>荣格认为这种错投的热情，必须放弃，或者转向其他人…而彼此相谈甚欢的扎比娜不断映入荣格眼帘。</p><p>很自然，患者与分析医生之间，又是要比家庭成员更能相互理解。很快，荣格和扎比娜之间的关系就很密切了。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220509232327.png"></p><p>那时，荣格觉得扎比娜既是母亲，又是女儿阿加特，也好像看到了海莉。他认为扎比娜很危险，必须打退、戳穿她。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220509232437.png"></p><p>这时，荣格发现，他身上有某种“女”性的意象团。假设那种意象团叫灵魂，他正是被那个意象团所表现出来的海莉、母亲、扎比娜迷住了。选择埃玛就是为了选择远离灵魂的女性，为了不让她们吞掉。</p><p>荣格觉得母亲、海莉、扎比娜都是危险的女性，她们就像强大的母亲即太母那样，以莫名的感情包围着自己。那是一种无法抗拒的魅力，是一种走向死亡的危险。</p><p>扎比娜也表现出了对荣格的极大热情。荣格为了逃避这种“烈火”，必须经常到平静的湖边修养。</p><p>可是，扎比娜太爱荣格了，她心里失去了平衡，大力宣扬两人的关系，甚至写信告诉弗洛伊德。弗洛伊德并没有轻信扎比娜的一家之言，甚至觉得她可能患有神经病。</p><p>荣格没有告诉弗洛伊德实情，但是，扎比娜去见了弗洛伊德，丑闻越来越大。</p><p>荣格自觉不能永远隐瞒，试图通过见扎比娜父母见面说明情况的方式来解决。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220509233129.png"></p><p>荣格自觉已经解决了事情，并去信向弗洛伊德“报喜”：“扎比娜渐渐地把对我的爱情转向了友情，我准备帮助她取得学位”。弗洛伊德这位“父亲”，建议荣格暂时停止分析，去美国的克拉克大学旅游调整心情。</p><p>妻子曾与荣格当面对峙。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220509233545.png"></p><p>荣格 1909 年 9 月和弗洛伊德去美国克拉克大学演讲旅行。他也没有想到，这次旅行使二人产生了关键性的隔阂。</p><h3 id="短评-3：心理的结构"><a href="#短评-3：心理的结构" class="headerlink" title="短评 3：心理的结构"></a>短评 3：心理的结构</h3><p>不同的心理学家，对心理结构的解释不同。<br>弗洛伊德把心理分为自我和本我（初期分为意识和无意识）。<br>荣格提出了自我与自己的理论。无意识又进一步被分为个人无意识和集体无意识。</p><p>荣格认为的“心理”，包含无意识和有意识的全部。人类内心不仅存在着意识到的部分，还存在着没有意识到的部分。</p><p>无意识最早由弗洛伊德提出，而后荣格将弗洛伊德的个人无意识理论发展，提出了集体无意识的概念，这一理论是荣格心理学里最具特色的部分。</p><p>我们通常认为自己自身是“我”或者“自己”，这时的“我”和“自己”就是自我，不管是过去、现在，还是将来，自我都具备认为自己一直是同一个人的“自己同一性”。自我意识到的内心世界，即我们 平时感受、思考的喜怒哀乐，就是“意识”领域。自我存在于意识的中心，但自我并不是整个“心理”的中心。</p><p>关于自我的解释，荣格把包含意识和无意识在内的整体心理功能称之为“自己”。自己是心理的核心，包括我们的全部心理。</p><p>荣格从幼时就感到自身以外还应该存在着另一个自己，即“2 号我”。尽管有多种不同想法，但把“1 号我”理解成自我，把“2 号我”理解为自己，这样就容易解释了。</p><p>（哈？自己不是全部心理吗，那不是应该是 1+2 号我才是自己吗？）</p><p>荣格认为，自己超越自我，自己存在于人类内心的底层，充满着许多由神话般的因素组成的庞大的“可能性”，所以，他给患者进行精神分析时，非常重视存在与心理底层的神话般的世界。</p><p>荣格认为自我和自己的相互作用在人格发展过程中起着主要作用。他认为，人类一生的成长，是在不断地倾听无意识中的内心深处的自己的心声、不断探究同自己的关系。</p><p>荣格通过亲自体验的人生感受，研究分析了同自己的关系，将意识——自我提高到了更高的境界。</p><h3 id="短评-4：个人的无意识与情结"><a href="#短评-4：个人的无意识与情结" class="headerlink" title="短评 4：个人的无意识与情结"></a>短评 4：个人的无意识与情结</h3><p>对于情结（complex），不同心理学家有不同解释和用法。一般理解为自卑情结（inferiority complex），荣格却把情结理解为无意识中的某种有强烈感情的意象群，这里的无意识被称为个人的无意识，与个人的经历和体验有关。</p><p>（也就是说，个人无意识并非先验存在，也随着个人经历不断发展）</p><p>荣格在“语言联想实验”中，发现了有情感价值的情结。该实验中，事先规定一百个简单单词，要求被测试的人尽快说出从提到的某个单词联想到的其他单词，并记下回答的单词和时间，这一实验重复进行两次。</p><p>在反复进行的实验中，荣格发现，被测试的人对几个单词的回答速度异常迟缓，或出现奇怪的反应，或表现得很拘谨。通过分析这些单词发现：这些单词之间有着某些关联性，被测试的人展开联想的背后，存在着某种感情阻碍。</p><p>荣格把这种明显表露出来的、潜藏在人类心理无意识下的阻碍叫做情综，是“通过感情来证实的，作为无意识下的内心内容的情感和意象”的综合体。</p><p>每个人的心理都在无意识中存在着某种阻碍，这种阻碍具有独立性，有时会破坏意识的统一，有时会使意识失去理智。</p><p>情综就是意识不愿承认的心灵创伤和厌恶的感觉的反映，所以平时很少表现出来，但却极大地嘤想着人们的行为和感情。正因如此，为了避免受到情综的支配，必须意识到其存在。</p><p>如果没有完全意识到情综，就无法主动改变自己的行为。只有自己认识到自己的缺点和弱点，内心能量才有可能向着创造性的方向发展。</p><p>（这里的“创造性方向”，所指为何呢？）</p><p>所以，不要只从厌恶、痛苦的单方面去认识勤工在那个，也根本不必介意自己内心存在的情综。</p><hr><h3 id="题外话"><a href="#题外话" class="headerlink" title="题外话"></a>题外话</h3><p>有一部名为<a href="https://movie.douban.com/subject/4221515/">《危险方法》</a>的电影描绘了荣格在这一时期的种种事件，以及他与弗洛伊德最终决裂的种种过程。</p><p>俄罗斯犹太女孩扎比娜与荣格的隐秘故事，荣格妻子所进行的“语言联想实验”等种种情节在片中均有体现。看完这章再回头看一遍电影，想必会别有感受。</p><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Psychology-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Learning Notes </tag>
            
            <tag> Psychology </tag>
            
            <tag> Carl Gustav Jung </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220508 - 漫画荣格 - 第一章：青年时代 荣格与唯灵论体验</title>
      <link href="2022/05/08/20220508-comicjung-chap1/"/>
      <url>2022/05/08/20220508-comicjung-chap1/</url>
      
        <content type="html"><![CDATA[<h2 id="第一章-青年时代-荣格与唯灵论体验"><a href="#第一章-青年时代-荣格与唯灵论体验" class="headerlink" title="第一章 青年时代 荣格与唯灵论体验"></a>第一章 青年时代 荣格与唯灵论体验</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul><p>1875 年 7 月 26 日，荣格出生在瑞士博登湖畔的凯斯维尔。</p><p>小时候害怕黑夜。因为父亲是牧师，所以从小就看过人们为死者哭得痛不欲生的样子。</p><p>据说荣格小时候“见过”不久前死去的人。这时母亲会教他念祈祷从而祈求耶稣上帝让其避免伤害。所以，荣格在当时非常喜欢耶稣上帝，认为其仁慈、了不起。</p><p>可有一天，他脑海中有了新的念头：“上帝要来带走我们，该怎么办？”他在梦中看到上帝不是长着大翅膀的仁慈老人，而是头戴黑帽，身穿黑衣，一脸阴险的人。</p><p>因为总是被噩梦惊醒，荣格不知什么时候起，晚上就总和父亲一起睡。直到很大都这样，他觉得父亲一生小心敬慎，没有一点男人的阳刚之气。而且感觉父亲也穿着黑衣，要吃掉自己…</p><p>自那时起，他感觉身边出现了一个“2 号我”（后面简称为“2”），一直观察自己，直到长大，都在悄悄告诉自己许多事情。</p><p>有一次，“2”告诉自己，他看到巴赛尔大教堂上的玉座之神从玉座上起来后就在圣堂顶上随便大小便。虽然自己不断告诉自己“神是神圣的，不可随便乱猜想”，但当脑海中出现那个情境时，却感到很自然。</p><p>“即使是活神仙，也不会受教会枷锁的束缚！”这样的念头出现了。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220508222830.png"></p><p>有一天，母亲突然对他说，怀疑有神的存在，是因为眼睛被蒙住了吧？应该读一读歌德的《浮士德》了。</p><p>荣格感到在母亲或母亲的身上，有一种太母般的先知。<br>也许是因为母亲知道有关恶魔或灵魂的事情，他觉得母亲知道的事情要比崇拜神灵的父亲知道得更多。而且，母亲也可能知道自己身上有一个“2 号我”，母亲身上也许就有一个“2 号母亲”…</p><p>比起父亲，荣格更敬重、畏惧母亲。而且，感到自己有些地方很像母亲。</p><p>荣格有一个表妹叫做海莉，总是说着“看见一个金色的大火球从屋顶落在了院子里”这样的类似的话，别的人都觉得海莉在说谎话，但荣格觉得海莉的感觉没有错。</p><p>荣格为海莉解释她所看到的现象叫做“球形闪电”，是一种物理现象。也有人认为它像其他东西。</p><p>海莉告诉荣格“扎姆埃鲁爷爷常和她一起玩游戏”，但其实海莉的祖父扎姆埃鲁早已去世。</p><p>这里顺便介绍荣格和海莉的家谱：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220508223802.png"></p><p>荣格外祖父扎姆埃鲁是巴塞尔的墓室，著名的犹太民族主义者。其一生结过两次婚，前妻去世后，仍在房间里放着前妻坐过的椅子，每周都会在固定时间，对着椅子，与她“交谈”。</p><p>海莉继承了这一传统，成为擅长预言并能通灵的才女。荣格在书中所描述的 S.W. 小姐，说的就是海莉。</p><p>荣格在后来发表的《关于神秘现象的心理和病理》一文中，把海莉说成“知识贫乏、教育水平低、心理就像头盖骨得了佝偻病似的”。</p><p>童年时的海莉，预言大多准确。且，据说预言贝露塔生孩子的时间正好和实际分娩时间一致。</p><p>一天，荣格让海莉告诉自己更多事情，海莉说：“好吧，长大以后，我会和卡尔，就我们两人，乘坐白马拉着的金色马车，到巴黎去旅行”。</p><p>那时的荣格，正为自己的人生前途而苦恼，他在对基督教的反驳和父亲的期望面前，不知该如何选择学业和工作。</p><p>荣格就和海莉以及附近邻居的女孩，一起举行了降灵会。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220508224510.png"></p><p>荣格逐渐相信了灵魂的存在，倾心于唯灵论。</p><p>在降灵会开始时，海莉扮演外祖父，活灵活现地再现家族的传奇故事，后来就大谈宇宙理论体系。随后，海莉逐渐长大成人，而降灵会却还在重复那些无聊的内容。</p><p>最初信奉唯灵论的荣格，渐渐地以冷静的态度来观察海莉的能力。母亲，以及海莉的家人对举行降灵会已经颇有微词。当时，荣格父亲的病情急剧恶化。荣格也不知道自己该做什么工作，也许还在内心身处希望父亲死去。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220508224848.png"></p><p>那时，荣格确信母亲的身上存在着一个叫做“2 号母亲”的身影。</p><p>当时，神学、自然科学、医学、哲学，还有精神医学，都没有引起荣格的极大兴趣，但是在教科书中学到了“人格疾病”的内容，之后，很快被其理论所吸引。所以基本决定要研究精神医学，并告诉了要好的女朋友埃玛。她是一位稳重、有魅力的姑娘，荣格非常欣赏她。</p><p>荣格之所以决定研究“心理疾病”，实际上是因为，在其内心深处，对海莉的“神秘性”以及对其自己身上和母亲身上的“2 号”，抱有极大兴趣。</p><p>降灵会一直没有停止，但后来只有荣格和海莉两个人一起做。15 岁的海莉，正处于少女春心萌动的时期，像成熟女孩那样诱惑着荣格。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220508225426.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220508225449.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220508225512.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220508225534.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220508225554.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220508225625.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220508225639.png"></p><p>荣格放弃了海莉，同年与埃玛订婚。</p><p>1900 年，荣格励志学习精神医学。他在布尔克赫尔茨里精神病院，担任奥根·布鲁勒教授的助手。</p><p>荣格发表论文《关于神秘现象的心理和病理》，表明了其与海莉已经彻底决裂。从文章中可以看出，荣格的青春期已经过去了。</p><p>这篇论文的发表也意味着与外祖父家关系的断绝，而外祖父家曾经还资助过荣格，以让其完成学业。</p><p>但是，两年后的 1902 年，荣格在结婚前还和海莉在巴黎幽会。就在当时，海莉儿时关于二人在巴黎乘马车的预言成真：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220508230320.png"></p><p>荣格不知道自己为什么以前那么害怕这位文荣的女人，他觉得当时的海莉就像《哈姆雷特》中的奥菲利亚或亚瑟王的王妃古奥乃维亚。</p><p>当时的海莉已经患上了肺结核。</p><p>1905 年，据说荣格结婚第二年，海莉为其妻子做了一件漂亮的晚礼服。6 年后，即 1911 年，再有两天就到海莉 30 岁生日的时候，海莉却停止了呼吸。</p><p>荣格内心痛苦：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220508230918.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220508230934.png"></p><p>荣格为了弥补失去的海莉，开始研究灵魂论、原型论等，创立了独特的心理分析理论。</p><h3 id="短评-2：荣格心理学的时代背景和唯灵论"><a href="#短评-2：荣格心理学的时代背景和唯灵论" class="headerlink" title="短评 2：荣格心理学的时代背景和唯灵论"></a>短评 2：荣格心理学的时代背景和唯灵论</h3><p>超心理学是研究超自然现象的学科，是将心灵感应、意念（精神冲动），即所谓第六感觉等作为研究对象，研究用自然法则无法解释的精神现象，探究人的超感觉知觉，它把具有能与死者互通信息的灵魂能力的人称为巫师。在巫师当中，能够通过意念引起物体游离等物理现象的人称为物理性巫师，能够与死者以心传心地进行交流的人被称为心理性巫师。</p><p>唯灵论是“迷信生者与死者的信息交流”，对唯灵论的研究被称为心灵研究。</p><p>巫师术早在古代就有了，而现在一般所说的巫师，是指 19 世纪中期在美国兴起的近代心灵主义运动以后出现的超能力者。另外，巫师形成的超自然现象的活动叫降灵会。降灵会上主要使用圆桌转圈的方法，人们围坐在圆桌旁，如果桌子任意倾斜，或是发出声音，就被人为是灵魂在回答问题。</p><p>近代唯灵论的信念体系，被认为是 19 世纪错综复杂的西欧社会中“危机与不安”在宗教上的反映之一。在当时，已有的宗教已经失去了活力，出现了合理主义及产业革命，人们的心理承受着特殊的紧张压力。在这样的不稳定气氛的强烈影响下，唯灵论在追求科学与宗教相结合的运动中产生了，并很快在欧美大众的心中扎下了根。</p><p>巫师与死者的交流依靠的是一种昏睡现象。在精神分析诞生之前，西欧盛行催眠术。催眠术与唯灵论的盛行是在同样的年代。</p><p>而且，当时的歇斯底里症主要在女性中流行。<br>心理疾病的特点：在不同时代，表现并流行某种特殊病症，这种病证像病毒一样，在该时代某个人群（主要是女性）中感染。就像经常有人自称巫师，类似病症就在当时流行了，这些人大都是通过暗示和模仿来表现的。</p><p>难道成为巫师就能使当时社会上出现的主要现象——<br>“内心的压抑和无意识的欲望”爆发出来吗？实际上，荣格遇见的巫师，很多人都声称是想引起周围人的注意。大多数巫师，被医学专家认为是患有“某种程度的精神疾病或某种程度的精神病”。</p><p>巫师流行的年代是在 19 世纪末：女性地位开始提高，妇女开始走出家庭、走向社会的时代。也许是因为女性将压抑在无意识中的压力，以歇斯底里症或巫师的形式发泄或表现了出来。</p><p>但，也有很多人的表现无法用病理学解释，如日本大本教的出口直子，虽然是个文盲，却能自动记录笔记，被称为“笔先”。</p><p>关于巫师的几种解释：</p><ul><li>与死者对话的“死后存在说”</li><li>与上一种相反的“超 ESP 假说”等（ESP——extrasensory perception，超感觉现象），即具有可以根据石基信息源超灵感地领悟死者信息的能力</li></ul><p>不管哪种解释，都难以证明人死后灵魂还存在的说法。1920 年后，通过超心理学的方法，人们逐渐认识到巫师不仅仅局限于本来的意思，应该是广义的心灵能力之一。</p><h4 id="唯灵论与荣格"><a href="#唯灵论与荣格" class="headerlink" title="唯灵论与荣格"></a>唯灵论与荣格</h4><p>唯灵论一词自古以来就为世界各地区所熟知，尤其是西欧，传统上就存在着唯灵论，19 世纪中叶自美国开始，出现了唯灵论运动。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220508232455.png"></p><p>荣格相信唯灵论主要是受其家庭影响。荣格外祖父是个有名的通灵能人，据说荣格的祖母、母亲，还有女儿阿加特也有通灵能力。</p><p>在心灵主义主导的环境中长大的荣格，自然而然地关注唯灵论。在传统基督教世界观和新的科学世界观之间摇摆不定的荣格，当然有可能倾向于相信心灵主义和超心理的能力。荣格在学生时代就和表妹海莉等一起组织降灵会，这使他对唯灵论愈加关注。</p><p>从荣格 1897 年发表的《关于心理学的若干考察》的论文中，可以看出学生时代的荣格就是一个心灵主义者。当时，荣格坚信灵魂是“独立于空间和时间的”不灭的实际存在。但到了 1902 年，在撰写学位论文《关于超自然现象的心理和病理》时，立场有所改变，开始怀疑心灵现象。</p><p>在论文中，荣格分析了和海莉在一起组织的降灵会，他不从相信心灵现象的角度去写，而是以无意识的自动症状（自动写字及幻觉等），甚至以认为是骗术的角度去写。荣格关注的问题已经不在心理现象范围，而是把通灵出现的灵魂看做是“无意识的部分人格”。</p><p>从这篇论文中可以看到，荣格已经摒弃心灵主义，转向精神医学。但，他在抛开心灵主义后，仍对心灵现象抱有兴趣，如果他不研究心灵现象与巫师，也许就不会产生荣格心理学中特有的原型理论和情综学说。从这个意义上说，唯灵论创造出了一个特殊的分析心理学家——荣格。</p><p>再有，荣格对心理现象的兴趣，使其在日后创立了共时性理论。共时性也是和心灵感应等超常现象相关的思维方式。也就是说，荣格在共识性理论中重新领会认识了曾经研究过的心灵问题。</p><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Psychology-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Learning Notes </tag>
            
            <tag> Psychology </tag>
            
            <tag> Carl Gustav Jung </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220508 - 漫画荣格 - 序章：精神分析的黎明</title>
      <link href="2022/05/08/20220508-comicjung-chap0/"/>
      <url>2022/05/08/20220508-comicjung-chap0/</url>
      
        <content type="html"><![CDATA[<h2 id="序章：精神分析的黎明"><a href="#序章：精神分析的黎明" class="headerlink" title="序章：精神分析的黎明"></a>序章：精神分析的黎明</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul><p>“自我”由法国哲学家笛卡尔提出，近代以来，其被理解为存在与意识的统一</p><p>“无意识”是 19 世纪法国心理学家 P.  让内及之后的奥地利心理学家弗洛伊德提出</p><p>基督教的绝对统治力量衰弱是精神医学这一新领域诞生的条件之一</p><p>mesmerize：催眠术，其名来自于 18 世纪堪称现代精神疗法鼻祖的弗朗兹·安东·梅斯梅尔，其医学博士论文《关于行星对人体疾病的影响》</p><p>推断当时医学和科学还没有从占星术和宗教中独立出来</p><p>梅斯梅尔发明了动物磁疗法成名，但这一成就并未被法国科学学术派所接受，他被迫离开法国，最后在瑞士去世，但其功绩是近代心理学发展重要基础。</p><p>梅斯梅尔功绩：</p><ul><li>从过去宗教统治中解放出来，赋予心理治疗科学性设想。指出过去认为是恶魔缠身的“疾病”的病因是“磁气”的作用</li><li>在医生和患者之间建立了相互依赖的心理治疗关系</li></ul><p>皮尤伊泽尔：继承了梅斯梅尔磁疗法的弟子，并发展形成了“催眠术”。他发现人在催眠状态下感受不到自己的意识，开始表现出另一个意识。</p><p>到 19 世纪，法国巴黎公社与德意志帝国相继成立。维也纳迎来学术、艺术鼎盛时期，德国哲学家尼采在当时提出“神灵已死”。基督教不再是知识分子精神支柱。</p><p>1885 年，弗洛伊德 29 岁，到法国巴黎萨伯居里医院留学，师从神经学家 J.M. 夏可。</p><p>在对歇斯底里症研究中，弗洛伊德发现了催眠术的局限性，提出精神分析疗法。</p><p>在这之前的十几年，荣格出生在瑞士博登湖畔。其父亲是一位耶稣教牧师，母亲是位能通灵的才女。</p><p>19 世纪是近代合理主义开始卷入混乱旋涡的时代，据说在欧洲大陆幽灵出现最多的地方是封闭的瑞士。</p><p>荣格就出生在保守的宗教（父亲）与近代神灵思想（母亲）组成的家庭中。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220508004545.png"></p><h3 id="短评-1：深层心理学的学派"><a href="#短评-1：深层心理学的学派" class="headerlink" title="短评 1：深层心理学的学派"></a>短评 1：深层心理学的学派</h3><p>心理学起源可追溯到古希腊时代，普拉东和亚里士多德的灵魂论。</p><p>近代，心理学作为独立科学，是从提倡经验论的英国人约翰洛克、大卫休谟等人的联合心理学开始的。1879 年 威廉冯特（Wilhelm Wundt）创建了世界上第一个心理学实验室，形成了研究经验性感觉、意思与情感等的现代心理学基础，并得到了不断继承与发展，出现了行为心理学、发展心理学、功能主义心理学、格式塔心理学（完型心理学）等分支。</p><p>精神分析也是心理学一个分支，是从治疗/研究神经症状和精神病的精神医学中产生。以精神异常和病症为研究对象，这一点有别于学术上的心理学。</p><p>精神分析鼻祖为弗洛伊德，再追究可以追溯到梅斯梅尔。这好像是精神病学史上的普遍说法。</p><p>梅斯梅尔（Franz Friedrich Anton Mesmer）：出生于理性的 18 世纪，将由于基督教思想束缚而患上的心理疾病，采取从宗教束缚中解脱出的治疗方法，认为恶魔缠身而患上的心病，是受到行星影响，采用磁疗法治疗取得成功。从今观之，似乎可笑，但在当时，能将宗教与疾病分开，的确是件了不起的大事。</p><p>皮尤伊泽尔：梅斯梅尔的弟子，继承其理论，并将磁疗法发展为催眠术疗法。可以说精神分析起源于催眠术。</p><p>（这里很奇怪，我尝试着去寻找这位梅斯梅尔的弟子，无果，之后也试着搜了催眠术的发展脉络，期间也并未发现有类似名字的人…书中又没有标明原名，只得作罢。关于催眠术创始人，一说是英国人 James Braid）</p><p>弗洛伊德（Sigmund Freud）：19 世纪催眠术疗法权威 Jean-Martin Charcot 弟子。在催眠术基础上，弗洛伊德设想人的内心存在着连自己都未知的部分，发现了“无意识”的存在，抛开催眠术，通过提问和对话方式减轻患者症状，创立了精神分析法。</p><p>精神分析法设想人类心理存在无意识、自我、性本能、恋母情结、爱情、死的本能等，从精神创伤中寻找精神疾病病因。患者若是认识到这一点，症状就会消失。理论重点在父亲和孩子关系上。</p><p>弗洛伊德流派和很早从弗洛伊德理论分离出来的阿德勒（Alfred Adler）的个人心理学以及荣格（Carl Gustav Jung）的分析心理学，统称为深层心理学。</p><p>阿德勒认为精神疾病不是由精神创伤引起，而是患者心中产生的“权力欲”造成。</p><p>荣格认为精神疾病不能都归咎于性欲，而是个人心理发展过程。理论重点放在和母亲的关系上。</p><p>弗洛伊德的自我研究理论，由 Anna Freud（其女儿）、Heinz Hartmann、Erik Homburger Erikson等人继承并发展，形成了自我心理学，成为美国精神分析主流。</p><p>与其对应的是新弗洛伊德学派，代表人物：<a href="https://en.wikipedia.org/wiki/Harry_Stack_Sullivan">Harry Stack Sullivan</a>、<a href="https://zh.wikipedia.org/zh-sg/%E5%8D%A1%E4%BC%A6%C2%B7%E9%9C%8D%E5%A6%AE">Karen Horney</a>、<a href="https://zh.wikipedia.org/wiki/%E5%9F%83%E9%87%8C%E5%B8%8C%C2%B7%E5%BC%97%E7%BD%97%E5%A7%86">Erich Fromm</a> 等。</p><p>在英国发展形成了对象关系论。</p><p>荣格的分析心理学，被发展为几大分支学派：发展派；古典派；原型派。</p><p>现代日本人喜爱荣格，可能是荣格心理学中有许多日本人需要的东西吧。人们不再相信：只要科学发展了，物质丰富了，就会有绝对的幸福。荣格一生追求探索“人的心理应该怎样成长”，那些对“生存”的根本发生动摇的现代人，可以从荣格的心理学中找到满意的答案。</p><p>现代人在思索“需要什么”时，翻开荣格的心理学，就会有一个寻求答案的机会了。</p><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Psychology-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Learning Notes </tag>
            
            <tag> Psychology </tag>
            
            <tag> Carl Gustav Jung </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>漫画荣格：内心深处结构的解析 摘抄/笔记</title>
      <link href="2022/05/07/20220507-comicjung-toc/"/>
      <url>2022/05/07/20220507-comicjung-toc/</url>
      
        <content type="html"><![CDATA[<h1 id="漫画荣格：内心深处结构的解析-摘抄-笔记"><a href="#漫画荣格：内心深处结构的解析-摘抄-笔记" class="headerlink" title="漫画荣格：内心深处结构的解析 摘抄/笔记"></a>漫画荣格：内心深处结构的解析 摘抄/笔记</h1><h2 id="Why-Note"><a href="#Why-Note" class="headerlink" title="Why Note"></a>Why Note</h2><p>为了解荣格理论中的集体潜意识，对《漫画荣格：内心深处结构的解析》一书进行摘抄/笔记，特此记录。</p><h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>以下基本信息引用自<a href="https://book.douban.com/subject/1020001/">豆瓣</a>：</p><blockquote><p>本书以漫画的形式，以通俗易懂的语言配以情景对话，对20世纪的心理学家——荣格的生平和他的分析心理学进行描述。重点介绍了荣格的心理历程，对其思想影响较大的人物和事件，分析了唯灵论、心理的结构、个人无意识与集体无意识、原型、共时性等荣格思想中的精华。读者可以借助漫画的魅力重新理解荣格的思想世界。本书适合对心理学感兴趣的广大读者，尤其是青少年读者。</p></blockquote><h2 id="Content"><a href="#Content" class="headerlink" title="Content"></a>Content</h2><ol start="0"><li><a href="https://medill-east.github.io/2022/05/08/20220508-comicjung-chap0/">20220508 - 漫画荣格 - 序章：精神分析的黎明</a></li><li><a href="https://medill-east.github.io/2022/05/08/20220508-comicjung-chap1/">20220508 - 漫画荣格 - 第一章：青年时代 荣格与唯灵论体验</a></li><li><a href="https://medill-east.github.io/2022/05/09/20220509-comicjung-chap2/">20220509 - 漫画荣格 - 第二章：寻找失去的父亲 同弗洛伊德的相识与创造性的回忆</a></li><li><a href="https://medill-east.github.io/2022/05/10/20220510-comicjung-chap3/">20220510 - 漫画荣格 - 第三章：冒险进入内心深处、发现集体无意识</a></li><li><a href="https://medill-east.github.io/2022/05/11/20220511-comicjung-chap4/">20220511 - 漫画荣格 - 第四章：旅途 欧洲文明失去了什么</a></li><li><a href="https://medill-east.github.io/2022/05/11/20220511-comicjung-chap5/">20220513 - 漫画荣格 - 第五章：炼金术时代 心理的变化与成长</a></li><li><a href="https://medill-east.github.io/2022/05/11/20220511-comicjung-chap6/">20220514 - 漫画荣格 - 第六章：荣格与东方思想</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> Study-Psychology-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Learning Notes </tag>
            
            <tag> Psychology </tag>
            
            <tag> Carl Gustav Jung </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220506 - Level Design Book - BOOK 1. PROCESS - Combat - Balance</title>
      <link href="2022/05/06/20220506-leveldesignbook-combat-balance/"/>
      <url>2022/05/06/20220506-leveldesignbook-combat-balance/</url>
      
        <content type="html"><![CDATA[<h2 id="Balance"><a href="#Balance" class="headerlink" title="Balance"></a>Balance</h2><ul><li><p><a href="https://book.leveldesignbook.com/process/combat/balance">原文链接</a></p></li><li><p><a href="https://medill-east.github.io/2022/04/28/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></p></li></ul><blockquote><p>玩家在整个关卡中能做的选择，玩家可以去哪里的公平性</p></blockquote><hr><h3 id="Why-balance-a-level"><a href="#Why-balance-a-level" class="headerlink" title="Why balance a level"></a>Why balance a level</h3><p>地图平衡是贯穿整个关卡的真实的以及玩家可感知的公平性。玩家是会怪自己没有理解怎么利用关卡，还是会怪关卡设计师把他们置于绝境呢？</p><p>一个平衡良好的关卡支持多种玩法风格，也会让玩家保持对于结果的投入（保持期待与热情），平衡不佳的地图可能会促使玩家因为沮丧或挫败而退出游戏。</p><p>尽管可以说平衡适用于任何关卡，但平衡对于基于战斗的关卡和竞技性的多人地图而言最为重要。</p><h4 id="Single-player-has-no-balance"><a href="#Single-player-has-no-balance" class="headerlink" title="Single player has no balance"></a>Single player has no balance</h4><p>对于对抗 AI 的游戏而言，“平衡”其实没什么意义。几乎所有合作性的“Player vs. Enemy” （PVE）或是单人游戏都会故意不平衡以利于玩家。</p><p>敌人 AI 会故意占据有明显弱点的位置，因为这些情况下的游戏是基于完成的目标而设计的。此时，一个“公平”的关卡为玩家提供了充足信息和机会来取胜。AI 对手的目标是以一种有趣的方式输掉。从本质上讲，我们必须以玩家喜好来操纵游戏，并为玩家提供令人信服的机会来进一步操纵游戏。</p><p>所以当我们谈论地图平衡时，所指的是多人地图平衡，而不是单人/PVE。</p><p>有关单人游戏/PVE/合作战斗的更过内容，可以看<a href="https://medill-east.github.io/2022/05/05/20220505-leveldesignbook-combat-encounter/">遭遇战</a>。</p><hr><h3 id="Game-balance"><a href="#Game-balance" class="headerlink" title="Game balance"></a>Game balance</h3><p>首先，让我们回顾一下基本的游戏平衡</p><h4 id="Counters"><a href="#Counters" class="headerlink" title="Counters"></a>Counters</h4><p>在<a href="https://zh.wikipedia.org/wiki/%E7%9F%B3%E5%A4%B4%E3%80%81%E5%89%AA%E5%AD%90%E3%80%81%E5%B8%83">石头剪刀布 （RPS）</a>中每一种行为都会被另一种行为克制。<br>竞技性游戏经常依赖于一种 RPS 的隐喻来实现平衡。像是街头霸王这样的格斗游戏归结为攻击/投掷/格挡（攻击克制投掷，投掷克制格挡，格挡克制攻击）。像星际争霸这样的策略战争游戏是步兵/炮兵/骑兵（步兵克制骑兵，骑兵克制炮兵，炮兵克制步兵）。这种模式因游戏和类型而异（近战/法师/射手…霰弹枪/狙击手/步枪…坦克/辅助/伤害…核心/上路/中路/打野/辅助）</p><p>从这样的观点出发，平衡意味着克制关系。如果玩家对于对手的移动/策略没有任何可能的克制办法，那么系统就是不平衡的。任何平衡的克制系统都需要 3 个以上的可选项，因此用于克制的出招（<a href="https://www.sirlin.net/articles/game-balance-and-yomi">“yomi”</a>）是不同于自己最初始的出招且不同于敌方出招的第三选项</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220506113806.png" alt="diagram comparing Rock Paper Scissors vs Attack Throw Block (right image by David Sirlin, from https://www.sirlin.net/articles/designing-yomi)"></p><h4 id="Dilemmas-payoffs-dominant-strategies"><a href="#Dilemmas-payoffs-dominant-strategies" class="headerlink" title="Dilemmas, payoffs, dominant strategies"></a>Dilemmas, payoffs, dominant strategies</h4><p>囚徒困境是1950年代美军智库设计的思想实验，是<a href="https://en.wikipedia.org/wiki/Game_theory">博弈论</a>的核心概念：</p><blockquote><p>犯罪团伙的两名罪犯被捕。每个囚犯单独监禁，无法与他人交流。每个囚犯都有机会通过作证对方犯罪来背叛，或是沉默来与对方合作。可能的结果：</p><ul><li>AB 彼此背叛，各自服刑两年</li><li>A 背叛，B 沉默，A 将被释放，B 服刑三年</li><li>A 沉默，B 背叛，A 服刑三年，B 释放</li><li>AB 都沉默，每人服刑一年</li></ul></blockquote><p>以下是表示为回报矩阵的可能结果，其中监禁年数用负分表示，目标是最大化最高分：</p><table><thead><tr><th align="left"></th><th align="left">B 沉默（合作）</th><th align="left">B 背叛（敌对）</th></tr></thead><tbody><tr><td align="left">A 沉默（合作）</td><td align="left">A -1 B -1</td><td align="left">A -3 B 0</td></tr><tr><td align="left">A 背叛（敌对）</td><td align="left">A 0 B -3</td><td align="left">A -2 B -2</td></tr></tbody></table><p>在这个标准囚徒困境中，博弈论者认为玩家应该总是选择背叛。 为什么？ 假设你是 A，如果 B 配合，那么你应该背叛，因为 0 年的监禁比 1 年的监禁要好； 即使 B 背叛，那你也应该背叛，因为 2 年监禁比 3 年监禁要好。</p><p>囚徒困境在英国游戏节目金球奖的最后一轮“Split or Steal”中最为流行：</p><iframe width="485" height="273" src="https://www.youtube.com/embed/S0qjK3TWZE8" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>出于这个原因，背叛是一种优势策略，因为其他玩家做什么并不重要。 总是选择背叛能获得最多的胜利，最坏的情况是平局。 就成本/积分而言，如果您总是背叛其他玩家，您实际上不会输。 要了解原因，请观看英国游戏节目 Golden Balls 中最著名的时刻（上面的视频），参赛者 Nick Corrigan 使用这种优势策略对抗另一位参赛者 Ibrahim Hussein 以取胜。<p>从这个角度来看，<strong>平衡意味着在你的系统中避免出现能获得最高理论收益的优势策略</strong>。 如果存在一个优势策略，那么理论上所有理性的玩家都会选择它，这使得其余策略无关紧要，因此是不平衡的。</p><h4 id="Feedback-loops"><a href="#Feedback-loops" class="headerlink" title="Feedback loops"></a>Feedback loops</h4><p>加热器是一种简单的自平衡系统。当加热器检测到太冷时，它会加热；当加热器检测到太热时，它会停止加热。在<a href="https://en.wikipedia.org/wiki/System_dynamics">系统动力学</a>中，这个负反馈回路（negative feedback loop）是一个平衡回路，因为它稳定了系统的状态。相比之下，想象一个加热器，当变得更热时，它继续加热，最终导致着火并烧毁房子——这是一个正反馈循环（positive feedback loop），一个加强自身效果的强化循环。</p><p>在游戏中，<strong>平衡的循环给予处于劣势的玩家翻盘的机会</strong>。例如，赛车游戏通常会通过给予他们更快的速度奖励（例如 Gran Turismo 中的人工智能汽车）或更好的物品（例如马里奥赛车中的蓝色冲刺）来“左右局势”，从而使比赛感觉更刺激和有竞争性。然而，这也可能导致（对于优势玩家的）不公平，或者让人感觉像是人为制造的旷日持久的僵局。强化循环有助于更强大的玩家增加他们的优势，就像在任何资源产生更多资源的游戏中一样（例如，在反恐精英中，金钱可以买到更好的枪，这使得杀戮更容易，赚更多的钱，买更好的枪……等等。 ）。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Adoption_SFD_ANI_s.gif" alt="Dynamic stock and flow diagram of model _New product adoption_ (model from article by John Sterman (https://en.wikipedia.org/wiki/John_Sterman &quot;John Sterman&quot;) 2001)"></p><h4 id="Balancing-for-feel"><a href="#Balancing-for-feel" class="headerlink" title="Balancing for feel"></a>Balancing for feel</h4><p>游戏平衡现在看起来像是一个可以证明的数学问题——如果结合所有的克制关系、反馈循环和数字，那么你的游戏或关卡现在就完美平衡了！</p><p>看哪，标准石头剪刀布的完美平衡收益矩阵：</p><table><thead><tr><th align="left"></th><th align="left">B 出石头</th><th align="left">B 出布</th><th align="left">B 出剪刀</th></tr></thead><tbody><tr><td align="left">A 出石头</td><td align="left">A: 0  ,  B: 0</td><td align="left">A: 0  ,  B: +1</td><td align="left">A: +1  ,  B: 0</td></tr><tr><td align="left">A 出布</td><td align="left">A: +1 , B: 0</td><td align="left">A: 0 , B: 0</td><td align="left">A: 0 , B: +1</td></tr><tr><td align="left">A 出剪刀</td><td align="left">A: 0 , B: +1</td><td align="left">A: +1 , B: 0</td><td align="left">A: 0 , B: 0</td></tr></tbody></table><p>理论上，石头剪刀布是完美平衡的，所有选项有着相同胜率。 没有导致连续获胜的强化循环，过去的回合不会影响未来的回合。 这种完美的平衡是否让石头剪刀布成为有史以来最伟大的游戏？相反，有些人可能会说完美的平衡最终使它成为一个无聊的游戏！ 所有的出招感觉都是一样的，没有办法冒很大的风险来获得丰厚的回报，并且有 33% 的几率无事发生。</p><p>不平衡的克制、优势策略或失控的负反馈循环在游戏中不一定是坏事。 如果优势策略实现了我们的体验目标，那么，让它存在！即使它不那么让人难以抉择，使用优势策略仍然会让人感到戏剧性和影响力。 除非是非常明显的胜利，否则普通胜利的冲击可能并不强烈。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220506224943.png"></p><p>若想让“石头”感觉像是一个重大的戏剧性的决定：<br>| |B 出石头|B 出布|B 出剪刀|<br>|:—-|:—-|:—-|:—-|<br>|A 出石头|A: -10 , B: -10|A: 0 , B: +5|A: +15 , B: 0|<br>|A 出布|A: +5 , B: 0|A: 0 , B: 0|A: 0 , B: +1|<br>|A 出剪刀|A: 0 , B: +15|A: +1 , B: 0|A: 0 , B: 0|</p><p>Journey 是一款游戏，玩家可以在彼此附近“啁啾”以补充其他玩家的跳跃能量。 合作显然是这里的主导战略，但这就是重点：</p><table><thead><tr><th align="left"></th><th align="left">B 叽喳（合作）</th><th align="left">B 不叽喳（不合作）</th></tr></thead><tbody><tr><td align="left">A 叽喳（合作）</td><td align="left">A: +1 jump , B: +1 jump</td><td align="left">A: +0 jump , B: +1 jump</td></tr><tr><td align="left">A 不叽喳（不合作）</td><td align="left">A: +1 jump , B: +0 jump</td><td align="left">A: +0 jump , B: +0 jump</td></tr></tbody></table><p>这也意味着：一个平衡的游戏/关卡通常并不是我们所想要的</p><h4 id="Fairness"><a href="#Fairness" class="headerlink" title="Fairness"></a>Fairness</h4><p>公平是玩家对平衡的心理感知。但公平与否与是否真的平衡其实并不一定相关。通常竞技性的多人地图应为双方提供 50 % 的平均胜率。</p><p>一般优先考虑公平而不是平衡。公平并不是完美数学，而是理解玩家体验和反应。玩家就是事实的制定者，如果玩家都说 2+2=5，那就等于 5 又有何妨。</p><p>游戏设计师对“公平”的定义不同。 <a href="https://www.sirlin.net/articles/balancing-multiplayer-games-part-3-fairness">David Sirlin 将公平定义</a>为“技巧水平相同的玩家有平等的获胜机会，无论他们的开局条件如何。”</p><h5 id="Match-tournament-design"><a href="#Match-tournament-design" class="headerlink" title="Match/ tournament design"></a>Match/ tournament design</h5><p>规则和程序会影响玩家使用地图的方式，特别是在竞技性的多人游戏中。</p><ul><li>换边。当双方在比赛中切换阵营时，地图平衡的重要性会降低。</li><li>层级列表。常见于 MOBA 和格斗游戏中。将不同等级、角色、装备等进行等级分类，仅在相同等级内平衡。 Sirlin 认为所有 S 级（过于好）和 F 级（过于差）角色都该被重新设计。</li><li>锦标赛。竞技性多人锦标赛的分支设计是一门完整的科学，可以说这基本上是元关卡设计。开放式/封闭式？循环赛/淘汰赛？一支队伍在某地图上比另一只队伍更拿手怎么办？队伍可以否决地图吗？地图池怎么决定？</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220506232146.png" alt="photo of the Green Monster wall at Fenway Park by &quot;wallyg&quot; under CC-BY license (https://commons.wikimedia.org/wiki/File:Fenway_Park_Home_Plate_and_Green_Monster.jpg)"></p><p>以下是关于上图的解说，直翻：</p><blockquote><p>例如，上图是美国波士顿美国职棒大联盟芬威球场左侧场地后侧的一堵异常高大的绿墙“绿魔”。在关卡设计和地图平衡方面，绿魔在场上为防守团队提供了巨大的优势；绿魔如此高（11.3米），击球手很难击出本垒打翻墙。</p><p>但在整个棒球比赛的大背景下，球队在多局比赛中反复转换角色，这是公平的，因为两支球队都处于类似的劣势。整体游戏设计框架我们如何理解平衡，有时地图平衡甚至有些无关紧要。</p><p>（棒球书呆子争论绿色怪物是否对击球手不利。击球手可以瞄准墙壁并将球从墙上反弹，这对于左外野手来说更难接球。左撇子投手在芬威经常遭受更糟糕的统计，因为右-击球手在这些“墙球双打”中得分更多。）</p></blockquote><hr><h3 id="Map-balance"><a href="#Map-balance" class="headerlink" title="Map balance"></a>Map balance</h3><p>地图平衡涉及以下方面：</p><ul><li>实用性：该区域有用/有趣？为什么玩家到这里/在这里停留？</li><li>成本：区域是否容易到达/停留？玩家是否需要耗费大量时间/资源才能这么做？玩家在这里会让别的地方更脆弱吗？</li><li>信息：玩家知道这里存在吗？玩家必须追踪/记忆多少信息才能使用该区域？有隐藏成本吗？误解会发生什么有趣的事吗？</li></ul><p>关卡设计目标并不是最大化实用性。在关卡设计中设计一个总是有用（高实用性）、容易到达（低成本）、明显（可见信息）的“完美”区域实际上并不理想。因为所有“理性”玩家都会选这样的地区。那构建其他地区的意义何在？</p><p>理想情况下，地图的每个部分都应该有特定的用途，具体取决于游戏状态，并通过情境弱点阻止玩家停留太久，通过有限的信息过滤让玩家犯有趣的错误。</p><h4 id="Territory-map-control"><a href="#Territory-map-control" class="headerlink" title="Territory/ map control"></a>Territory/ map control</h4><p>领地：玩家可追踪，防御，且通常从中受益的区域。</p><p>拥有更多领地就有更多地图控制权。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220506233409.png" alt="map control diagram with &quot;P&quot; (player) on left, and &quot;E&quot; (enemy) territory on right -- from &quot;The Door Problem of Combat Design&quot; by Andrew Yoder"></p><h4 id="Chokepoints"><a href="#Chokepoints" class="headerlink" title="Chokepoints"></a>Chokepoints</h4><p>领土通常以阻塞点（chokepoints），即较小的区域或通道为界，这些区域可以被占领以防御敌人入侵。</p><p>在多人 PvP 地图中，在地图上分布 3-4 个阻塞点，每条路一个阻塞点。 不应该能够从一个点覆盖所有阻塞点。</p><p>例如，在 Counter-Strike 地图 de_cache 中，上车道  (A) 有两个小阻塞点，中车道有一个大阻塞点，而下车道 (B) 有一个大阻塞点。<br>反恐（CT）小组的工作是保护橙色炸弹点，这两个炸弹点在开始时都牢牢地在他们的领土内（战线左侧）。 CT 有一种安全的方式从中间迂回到 A，但 T 可以从两个阻塞点攻击 A。 B 更靠近 CT 和 Ts，但从 B 迂回需要更长的时间。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220506233744.png" alt="battle line and chokepoint breakdown on de_cache by Sal Garozzo and Shawn Snelling for Counter-Strike: Global Offensive, from GDC 2015: Community Level Design for Competitive CS:GO"></p><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/04/28/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></li></ul><hr><h2 id="暂告段落"><a href="#暂告段落" class="headerlink" title="暂告段落"></a>暂告段落</h2><p>后面有些部分感觉并未写完。毕竟本“书”还处于不断填坑过程中，暂时打算等坑再填填再来继续随译/笔记。</p><p>至目前为止其实看下来更多是一个体系梳理的感觉，但要真正落到生产设计中，感觉还需要更精细化和深入的内容。后面可能会暂时转向关卡设计的另一本书。</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-LevelDesign </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Level Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220505 - Level Design Book - BOOK 1. PROCESS - Combat - Encounter</title>
      <link href="2022/05/05/20220505-leveldesignbook-combat-encounter/"/>
      <url>2022/05/05/20220505-leveldesignbook-combat-encounter/</url>
      
        <content type="html"><![CDATA[<h2 id="Encounter"><a href="#Encounter" class="headerlink" title="Encounter"></a>Encounter</h2><ul><li><p><a href="https://book.leveldesignbook.com/process/combat/encounter">原文链接</a></p></li><li><p><a href="https://medill-east.github.io/2022/04/28/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></p></li></ul><blockquote><p>通常与 NPC 进行的连续不断的开放式挑战</p></blockquote><h3 id="What-is-an-encounter"><a href="#What-is-an-encounter" class="headerlink" title="What is an encounter?"></a>What is an encounter?</h3><p>遭遇战是一系列支持多种玩家策略的系统性挑战：</p><ul><li>序列：可以有连续多个 beats/ waves/ 挑战</li><li>系统性：使用重复游戏元素设计语言</li><li>多样性：理想情况下，不仅有一种特定解决方案或最佳策略</li><li>战术：即兴的短期玩法风格/行为</li></ul><p>许多游戏以非暴力形式来构建挑战：如谜题，对话，或是迷你游戏等。但是在关卡设计文化中，“遭遇战”通常指的是动作/射击/RPG 品类游戏中的单人战役及 PVE（player vs. enemy）</p><p>原文里没填的坑：有关更多非暴力挑战设计，请看谜题。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220505211328.png" alt="combat front diagram for a cover-based military shooter, from &quot;Creating Conflict: Combat Design for AAA Action Games&quot; by Michael Barclay, Sam Howels, Pete Ellis at GDC Europe 2016 (via GdcVault.com) (https://www.gdcvault.com/play/1023791/Creating-Conflict-Combat-Design-for)"></p><hr><h3 id="Combat-story"><a href="#Combat-story" class="headerlink" title="Combat story"></a>Combat story</h3><p>遭遇战是有关<a href="https://medill-east.github.io/2022/04/29/20220429-leveldesignbook-pre-production-pacing/">节奏</a>的艺术。何时，在哪里，发生了什么，会让玩家有何种反应？</p><p>可以把它当成一个故事，但是是通过战斗来讲述的——一场有起因，经过，结果的遭遇故事：</p><ul><li>起因，在战斗开始前：<ul><li>敌人们已经在战场中了吗，还是毫无察觉，或是在来的路上？</li><li>是否由玩家选择合适加入战斗</li><li>玩家是否知道敌人的布局和构成？</li></ul></li><li>经过，战斗中：<ul><li>短线作战还是长时作战？多少波或阶段？</li><li>有任何会影响战斗的脚本事件吗</li><li>有特别需要强调的路线或是策略吗</li></ul></li><li>结果，战斗后：<ul><li>玩家怎样知道战斗结束了</li><li>是否有多种可能结果</li></ul></li></ul><p>好的遭遇战能够帮助玩家理解发生了什么，也能讲述一个拥有清晰起因和后果的连贯故事。</p><p>这里配了龙叔电影中遭遇战的录制 233：</p><iframe width="735" height="413" src="https://www.youtube.com/embed/YX327SIoSMk" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>下面这段话直翻了：> 在上面的纪录片《成龙：我的特技》（1999）的视频片段中，成龙为大片《尖峰时刻》（1998）编排并导演了一个打斗场景。 成龙对每个演员的动作都强调了一种“身体逻辑”； 因此，当他和克里斯·塔克的行为相互影响时，这意味着他们角色的合作关系达到了情感高潮。 布雷特·拉特纳 (Brett Ratner) 经常提出的关于枪支的愚蠢问题完全没有抓住重点。 性格就是行动，行动不断流动。 枪无所谓，它只是帮助观众遵循身体逻辑的工具。<h3 id="Starting-an-encounter-footholds"><a href="#Starting-an-encounter-footholds" class="headerlink" title="Starting an encounter: footholds"></a>Starting an encounter: footholds</h3><p>对于强调掩护的单人动作射击游戏，让玩家在战斗真正开始前有机会调查竞技场：</p><ul><li>从哪里开始打</li><li>了解敌人的进攻路线</li><li>如果打不过从哪里跑</li></ul><p>如果不帮玩家理解布局，他们只会在门口毫无想象力的战斗，竞技场的设计就白做了，玩家会反过来怪游戏提供的信息不够多，不知道什么时候利用竞技场。</p><p>怎么吸引玩家进入竞技场，了解布局，而后交战？Andrew Yoder 将之称为 <a href="https://andrewyoderdesign.blog/2019/08/04/the-door-problem-of-combat-design/">战斗设计的门问题</a></p><p>让玩家找到立足点的方法：</p><h4 id="方法-1：玩家伏击敌人"><a href="#方法-1：玩家伏击敌人" class="headerlink" title="方法 1：玩家伏击敌人"></a>方法 1：玩家伏击敌人</h4><p>开始时让敌人意识不到玩家存在，玩家可从入口处进入。这让玩家有一些时间来制定计划，并在准备好时开始攻击。</p><p>玩家一开始可能会很容易消灭暴露在外的不知情敌人，但可以在拐角处隐藏/产生更多敌人，在战斗开始时引入这些敌人增援。</p><p>这种模式在开放世界游戏或任何点缀着敌人前哨的大型景观中很常见。符合这些品类行动自由的美学。</p><h4 id="方法-2：敌人包围玩家"><a href="#方法-2：敌人包围玩家" class="headerlink" title="方法 2：敌人包围玩家"></a>方法 2：敌人包围玩家</h4><p>开始时没有敌人，玩家就能够在竞技场中游荡到中央。一旦越过某些范围，或是机关，就触发遭遇战。可以放置一些东西和资源到场中作为“诱饵”。</p><p>有经验的玩家一眼就能识破这种明显的陷阱，并且一看到空旷的竞技场房间或者看到“免费”的诱饵就提高警惕。</p><p>这种伎俩其实用一次就不好使了。防止敌人保卫战很困难，因为重复死亡以及缺乏对战斗的掌控会让玩家感到后悔或不公。</p><p>这种模式常见于经典射击/恐怖游戏。玩家们通常都会对此有心理准备。</p><h4 id="方法-3：带有可选单向入口的-Vista"><a href="#方法-3：带有可选单向入口的-Vista" class="headerlink" title="方法 3：带有可选单向入口的 Vista"></a>方法 3：带有可选单向入口的 Vista</h4><p>Vista 应该指的是制高点。</p><p>设计玩家在开始时会处于一个制高点，从这里可以看到远处的竞技场内部，但不能攻击到敌人。玩家可以收集信息，制定计划，并在愿意的时候开始战斗。</p><p>可以让玩家从一个单向通道进入，在玩家进入时可以选择将其身后的门关闭，这样一旦玩家入场，敌人也知晓，类似一种“公平战斗”。</p><p>如果玩家测试的时候没有很好利用 vista，可以尝试：a. 在 vista 上放置资源；b. 使得通往 vista 的路更加顺畅；c. 一开始阻塞通往竞技场的路，并混淆入口（如 U 型转弯路，这里说实话一下子看到觉得不是很直观，没想出来指的是哪种）；d. 以上所有。</p><p>这种模式在 BOSS 战或是大型高潮编排中很常见。强迫玩家在一个故意建造的 vista 停留是一个强有力的设计暗示，警告玩家：不要草率，做好准备。</p><hr><h3 id="Encounter-design-tools"><a href="#Encounter-design-tools" class="headerlink" title="Encounter design tools"></a>Encounter design tools</h3><h4 id="Define-play-styles"><a href="#Define-play-styles" class="headerlink" title="Define play styles"></a>Define play styles</h4><p>玩家一般不会每种机制都喜欢使用，一些人会偏爱某种策略，主升某种流派，或是偏爱特定武器。这里必须区分一下玩法风格和玩家个性：</p><p>玩法风格/打法（play style）：短期的战术或是模式。玩家的模式就像天气一样，毫无预兆就可能更改。<br>玩家个性（player persona）：整体的长期行为和动机。玩家个性，是玩家整体行为的氛围，一般不会改变。</p><p>在以上前提下，建议：遭遇战应该迫使玩家改变打法，但不要挫败玩家个性。</p><p>有关定义和研究玩家的更多内容，请看<a href="https://book.leveldesignbook.com/process/blockout/playtesting/persona">玩家个性</a>。</p><p>对于每个项目，定义一些玩家打法：</p><ol><li>定义一些可能的玩家战术/行为/模式</li><li>用简短易读的名字标记它</li></ol><p>例子：</p><ul><li>平台跳跃游戏：跑者（runners）、跳者（jumpers）、滑翔者（gliders，啥意思，一直滑铲？）、游泳者（swimmers，啥意思，爱走水路不爱走陆路？）</li><li>设计游戏：狙击手（snipers），霰弹枪手（shotgunners），喷雾（spray，这…也没懂）和祈祷（pray，啥意思，这个真没懂），露营者（campers，蹲点的）</li><li>开放世界游戏：探险家（explorers）、战士（fighters）、司机（drivers，滴滴滴）、收藏家（collectors，仓鼠）</li><li>策略游戏：冲刺者（rushers）、海龟者（turtlers，疯狂保命，苟）、扩张者（expansionists）、微观/宏观（micro/macro，这啥，细节和大局观？）</li><li>所有游戏：完成者（completionists）、速通（speedrunners）、知识猎人（lore hunters，全成就吧应该是）、直播（streamers，主播）、新手（newbs）等。</li></ul><p>然后把玩法风格应用到遭遇战设计中：</p><ul><li>哪些关卡/遭遇应该支持哪些游戏风格？</li><li>你是否试图同时支持太多的游戏风格？（贪多嚼不烂啊）</li></ul><hr><h3 id="Arena-design"><a href="#Arena-design" class="headerlink" title="Arena design"></a>Arena design</h3><p>也是没填完的坑：分解 sock 的图表并单独讨论它们</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220505224014.png" alt="different floor design diagrams for encounters by Simon O&#39;Callaghan"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220505224039.png" alt="different fps encounter elements by Simon O&#39;Callaghan"></p><hr><h3 id="Example-combat-bosses-in-God-of-War-2018"><a href="#Example-combat-bosses-in-God-of-War-2018" class="headerlink" title="Example: combat bosses in God of War (2018)"></a>Example: combat bosses in God of War (2018)</h3><p>纵观第三人称动作游戏《战神》（2018），玩家可以尝试击败 9个被称为“女武神”（Valkyries）的可选 BOSS。所有女武神共享相似的角色美术、动画和招式，但在不同条件下以不同顺序使用，在构建战斗变化的同时有效重用了相同资源。</p><p>玩家游玩并解锁区域来解锁 BOSS，这种区域解锁的方式暗含了一种顺序，但并没有强制玩家按照这种顺序来进行战斗。前三个专门设计为一种松散教程（loose tutorials）供玩家来识别和学习，尽管有时候设计师也会利用这种潜在的建议顺序，通过混合以前的模式（prior patterns）来强迫玩家重新学习（已经学过的内容的）新的使用时机（relearn new timings）。</p><p>Sony 前战斗设计师 Jason de Heras <a href="https://twitter.com/jasondeheras/status/1376005093028335617">在 Twitter 上详述了战斗设计</a>:</p><p>下面直翻：</p><blockquote><p>Gunnr 有 2 次独立攻击，其作用是鼓励招架（黄色 FX）；他们的预期窗口/攻击速度相似，以允许一致的招架时间。 [它] 鼓励玩家招架，但不是必须招架。 Gunnr 的所有攻击都可以左/右/后躲避或招架，[除了] 有 1 次不可招架（红色）攻击 […] 在一系列初始攻击之后执行，因此玩家有足够的时间准备。不可阻挡的攻击几乎为零跟踪，因此玩家可以以最小的精度向右躲避。</p></blockquote><blockquote><p>Gunnr 通常会躲开以发起她的独立攻击。这给了玩家一个明显的视觉感受，但也有大量的分层预期时间，大约 2-3 秒来准备和应对随后的攻击。 […] Gunnr 在躲避然后攻击之后几乎没有停机时间（virtually no downtime after evading and then attacking，指的应该是攻击被格挡后不会下坠，玩家可以直接发起攻击？），这可以说使战斗更容易了。这减少了玩家必须制定策略的变量。设计者让战斗保持高强度，但实际上将敌人置于易受攻击的位置。</p></blockquote><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/LDB_GodOfWar_JasonDeHeras_ValkyrieTelegraph.gif" alt="animated GIF showing Gunnr&#39;s attacks with long anticipation and yellow FX to encourage parry / evade (https://twitter.com/jasondeheras/status/1376005121830658049)"></p><blockquote><p>与 Gunnr 不同，Kara 的 2 次攻击强烈迫使玩家回避/阻挡。 由于这些攻击具有相似的启动姿势，因此玩家必须识别红色 FX 以选择回避或阻挡。 […]  Kara 共享 Gunnr’s 短跑/俯冲?，但是 [如果] 玩家在招架/防守时失误，他们将很容易受到附近 Draugrs 的攻击，[增加紧张感。] Kara’s 翅膀滑击（wing swipe） 是一种独立的攻击，给了她另一种躲避并重置战斗的混招。 […] Kara’s 翅膀滑击 的范围会导致它故意 miss。 如果玩家大意或贪了，这种设计会让他们更容易错失机会（sleep）或者进行攻击。 最后一小段向前短冲使这种攻击具有欺骗性。</p></blockquote><blockquote><p>Geirdriful 分享了 Gunnr 和 Kara 的一些招式，但增加了 2 种独特的攻击来打造强大/全面的招式 […] 可以招架的攻击。 […] Geirdriful 的侧翼挥击组合与 Gunnr 的相同，但用作独立攻击（与 Gunnr 的反击相反），这是另一种使战斗更难预测的组合。 Geirdriful 共享 Gunnr 不可阻挡的翅膀冲击（wing thrust），但作为独立攻击增加了平移/速度。 如果玩家先与 Gunnr 战斗，那么在无法阻挡的翅膀冲击之前移除翅膀滑击（wing swipes）将迫使他们重新学习此攻击的节奏。<br><a href="https://twitter.com/jasondeheras/status/1376005093028335617">– Jason de Heras (@JasonDeHeras)</a></p></blockquote><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220505230700.png" alt="spreadsheet breakdown showing the moveset matrix for valkyrie bosses in God of War (2018), by Jason de Heras (via Twitter)(https://twitter.com/jasondeheras/status/1376005158656638977)"></p><hr><h3 id="Example-stealth-boss-in-Dishonored"><a href="#Example-stealth-boss-in-Dishonored" class="headerlink" title="Example: stealth boss in Dishonored"></a>Example: stealth boss in Dishonored</h3><p>在第一人称潜行游戏《耻辱》中，任务 7 “洪水区”中，玩家面对的是一个 Boss NPC。 他们可以偷偷溜过它而不被发现或试图与老板战斗。 Arkane Studios 的关卡设计师 Dana Nightingale 评论了她的设计文件：</p><blockquote><p>通常我讨厌 BOSS 战，所以设计一个规避了所有我不喜欢的部分的 BOSS 战让我感到兴奋。 […] 设计与 Daud 的相遇仍然是我最自豪的事情之一。 我喜欢看人们玩它。</p></blockquote><blockquote><p>大块的文本很适合“开发评论”（dev commentary），但如果你有一百个文档要保持最新状态，或者你是必须阅读它们的人，那么它就不能很好地工作。 更简单，但传达更多，始终是我们的目标。 这真的很难。</p></blockquote><blockquote><p><a href="https://twitter.com/DanaENight/status/1371022031886635011">– Dana Nightingale (@DanaENight)</a></p></blockquote><p>Nightingale 的原始设计文件（见下方）概述了这次遭遇战的明确设计目标，以证明异常封闭的竞技场布局是合理的。 此外，由于《耻辱》是一款具有许多不同玩家能力的“沉浸式模拟”RPG 游戏，她使用流程图格式来想象不同的玩家策略以及遭遇脚本如何优雅地处理边界情况。 然而，正如她所指出的，阅读内容很多。 在设计简介中写太多细节并不一定会改善规划或设计。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/LDB_Encounter_Daud_Dishonored_DanaNightingale.png" alt="design documents for boss encounter in Dishonored, by Dana Nightingale (https://twitter.com/DanaENight/status/1370643659792744449)"></p><p>BOSS 战的其中一个通关例子，它满足了 Nightinggale 的设计目标吗？和初始的设计意图有何不同呢？</p><p>（视频里面玩家用了类似“子弹时间”的技能来顺利偷到了东西，并且也没有触发战斗，算是满足了原始设计中的“逃课”目的，但却并非直接溜走，玩家用自己的方式做到了“雁过无痕”。）</p><iframe width="485" height="273" src="https://www.youtube.com/embed/yE3yO4zMMgg" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><hr><h3 id="Further-reading"><a href="#Further-reading" class="headerlink" title="Further reading"></a>Further reading</h3><ul><li><a href="https://www.gameaipro.com/">Game AI Pro</a> is the main game industry publication about game AI programming and techniques – professionally written and edited – and <strong>free to read.</strong> If you’re not a programmer, some of it will be difficult to understand, but try to push through it anyway. If you can understand 50% of it, it’ll still help you a lot. A valuable community resource for combat designers.</li><li><a href="https://www.youtube.com/watch?v=oB4JMy9OjKk"><strong>“Basics of Classic FPS Combat Encounter Design”</strong></a> (47 min video) by Andrew Yoder</li><li><a href="https://www.nathanielchapman.games/pedrothedagger/encounter-design-topics-rng-in-encounter-design">“Encounter Design Topics: RNG in Encounter Design”</a> by Nathaniel Chapman is about when and how to apply randomness to combat, especially in a multiplayer or MMO context.</li><li>  <a href="https://www.youtube.com/watch?v=s9bleQCTdTo">“Quake Mapping Tips: Difficulty Balance in Level Design” (8 min) video by Michael Markie</a> workshops Quake 1 combat encounters at different difficulty tiers, while offering general design commentary and advice. Markie uses different monster behavior and weapon / ammo placement to encourage different player movement within the same room layout. A great primer even if you’re not mapping for Quake.</li></ul><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/04/28/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-LevelDesign </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Level Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220504 - Level Design Book - BOOK 1. PROCESS - Combat - Enemy Design</title>
      <link href="2022/05/04/20220504-leveldesignbook-combat-enemydesign/"/>
      <url>2022/05/04/20220504-leveldesignbook-combat-enemydesign/</url>
      
        <content type="html"><![CDATA[<h2 id="Enemy-design"><a href="#Enemy-design" class="headerlink" title="Enemy design"></a>Enemy design</h2><ul><li><p><a href="https://book.leveldesignbook.com/process/combat/enemy">原文链接</a></p></li><li><p><a href="https://medill-east.github.io/2022/04/28/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></p></li></ul><blockquote><p>为具有不同行为，强弱项的 NPC 制作原型</p></blockquote><h3 id="What-is-enemy-design"><a href="#What-is-enemy-design" class="headerlink" title="What is enemy design?"></a>What is enemy design?</h3><p>以下是一些有关敌人设计的类型的行业共识/建议：</p><ul><li>多样性：与每种类型的敌人战斗时都应该有不同的感觉，避免过于相似的敌人</li><li>等级：敌人有强有弱，需要明确定义</li><li>长生命周期：敌人类型不应该存在过时的说法。一个弱小的早期敌人在游戏后期应该仍然有趣，一个中期的 BOSS 后期也可以转化为普通怪等</li><li>紧急性（也许该理解为多变性？）：不同类型的敌人组合应该造就不同的应对策略。玩家不应该存在可以应付所有情况的“万金油”/“一招鲜”</li><li>智能：敌人应该给人不同的智力和情感错觉（恐惧、愤怒等）</li><li>“聪明”的敌人应该有与之对应的生存能力，否则还没来得及展示他们有多聪明就挂了</li><li>一致性：敌人应该有清晰的模式/特征以供玩家进行识别和利用</li></ul><p>敌人设计通常是一项与 AI 设计师，程序，角色美术，动画，声效设计等团队成员共同合作的复杂工作。要注意，这并不是一本战斗设计的书。</p><p>一些敌人设计的例子，可以看<a href="https://book.leveldesignbook.com/process/blockout/metrics/doom">Doom metrics</a> 和 <a href="https://book.leveldesignbook.com/process/blockout/metrics/quake">Quake metrics</a></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220504120238.png" alt="Enemy rosters can be surprisingly complicated and varied; monster sprites from Doom 2 (1994) by id Software"></p><hr><h3 id="Enemy-roster"><a href="#Enemy-roster" class="headerlink" title="Enemy roster"></a>Enemy roster</h3><p>想象一下我们要制作一款动作游戏。以下是一些用于填充敌人名单的基本角色，包含它们的敌人类型以及相应战斗职能。<br>|角色|行为|<br>|:—-|:—-|<br>|Grunt|无脑攻击玩家，直截了当，容易搞定|<br>|Squad|轮流组团进攻，也会后退/迂回|<br>|Leader|高生存能力，会给附近的盟友增益|<br>|Tank|高生存能力，但速度慢且体积大（容易被玩家击中或躲避其攻击）|<br>|Swarm|小型快速攻击者，生命值低但近距离伤害高|<br>|Sniper|慢速远程攻击，没有队友掩护就很脆弱|</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220504121403.png" alt="different Combine soldier designs from Half-Life 2 (2004) and Half-Life: Alyx (2020) by Valve Software"></p><h3 id="Balancing-a-roster"><a href="#Balancing-a-roster" class="headerlink" title="Balancing a roster"></a>Balancing a roster</h3><p>用表格方式来组织敌人列表很直观也很有效：</p><table><thead><tr><th align="left">ROLE</th><th align="left">SPEED</th><th align="left">HEALTH</th><th align="left">RANGE</th><th align="left">DPS</th></tr></thead><tbody><tr><td align="left">Grunt</td><td align="left">Medium</td><td align="left">Weak</td><td align="left">Close</td><td align="left">Low</td></tr><tr><td align="left">Squad</td><td align="left">Medium</td><td align="left">Average</td><td align="left">Mid</td><td align="left">Low</td></tr><tr><td align="left">Leader</td><td align="left">Medium</td><td align="left">Average</td><td align="left">Mid</td><td align="left">Medium</td></tr><tr><td align="left">Tank</td><td align="left">Slow</td><td align="left">Strong</td><td align="left">Close</td><td align="left">Medium</td></tr><tr><td align="left">Swarm</td><td align="left">Fast</td><td align="left">Weak</td><td align="left">Close</td><td align="left">High</td></tr><tr><td align="left">Sniper</td><td align="left">Slow</td><td align="left">Weak</td><td align="left">Long</td><td align="left">High</td></tr></tbody></table><p>表格形式可以帮助设计师对敌人进行平衡以及定位差距。但思维不要局限于表格，对于上面的表格也许可以考虑下面这些方面：</p><ul><li>只有 1 个快速的敌人？ 也许Leader 也应该 Fast，才能感觉与Squad 更加不同？</li><li>没有高 DPS 中距离攻击范围的敌人。 应该有吗？会增添乐趣？还是作为功能型敌人来设计？</li><li>这个矩阵设计是不是太简单了？ 我们需要一个 Size 列，一个 Behavior 列吗？ 等等</li></ul><p>要分析一个已有游戏中的敌人列表：游玩多个关卡，制作自己的表格。</p><ul><li>哪种地形/布局最适合哪种敌人</li><li>哪些敌人类型可以很好地配合？为什么？</li><li>在关卡中出现了敌人的哪些组合方式？</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220504122510.png" alt="the Grunt, Elite, Jackal, and Hunter are distinctive Covenant faction enemies from Halo 1 (2001) by Bungie"></p><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/04/28/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-LevelDesign </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Level Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220503 - Level Design Book - BOOK 1. PROCESS - Combat</title>
      <link href="2022/05/03/20220503-leveldesignbook-combat/"/>
      <url>2022/05/03/20220503-leveldesignbook-combat/</url>
      
        <content type="html"><![CDATA[<h2 id="Combat"><a href="#Combat" class="headerlink" title="Combat"></a>Combat</h2><ul><li><p><a href="https://book.leveldesignbook.com/process/combat">原文链接</a></p></li><li><p><a href="https://medill-east.github.io/2022/04/28/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></p></li></ul><blockquote><p>设计玩家、NPC 之间或内部的物理冲突</p></blockquote><h3 id="What-is-combat-design"><a href="#What-is-combat-design" class="headerlink" title="What is combat design"></a>What is combat design</h3><p>战斗是游戏设计中最常见也是被探索得最为深刻的话题。一些工作室甚至有专门的战斗设计师，专门负责构建战斗系统和调整战斗。这是 2010 年代随着军事射击游戏/掩护射击游戏/黑魂等游戏的兴起才出现的行业惯例。</p><p>如果没有一些已经制作好的战斗设计，想要直接制作战斗关卡是很难的。这也是为什么建议做 mod：这样就可以直接重用游戏中已经得到验证的核心战斗系统，而不用自己重建。</p><p>如果没有选择冲突类型的游戏，可以直接学习有关<a href="https://book.leveldesignbook.com/process/layout">布局</a>的内容。</p><hr><h3 id="Combat-concepts"><a href="#Combat-concepts" class="headerlink" title="Combat concepts"></a>Combat concepts</h3><p>设计战斗系统时，考虑以下方面：</p><ul><li><a href="https://book.leveldesignbook.com/process/combat/enemy">敌人设计</a>：定义不同类型的敌对 NPC 类型<ul><li>理想情况下，每种类型都有不同的行为、优势、劣势</li><li>如果敌人类型过于重复，战斗体验会感觉枯燥单一</li></ul></li><li><a href="https://book.leveldesignbook.com/process/combat/encounter">遭遇战</a>：与 NPC 对抗的结构型战斗<ul><li>开放式战斗谜题：玩家需要即兴解决</li><li>游戏内的遭遇战通常会涉及一些<a href="https://book.leveldesignbook.com/process/scripting">脚本</a></li></ul></li><li><a href="https://book.leveldesignbook.com/process/combat/balance">平衡</a>：主观（觉得平衡）和客观（真的平衡）都要体现，通常体现在 PvP 中<ul><li>玩家可以哪里，他们能控制什么东西</li><li>平衡的关卡有能构建玩家对于布局的信任，并想着期望的目标不断加码</li></ul></li><li><a href="https://book.leveldesignbook.com/process/combat/arena">竞技场设计</a>：专门为战斗而设的空间<ul><li>设计可能的立足点，阻塞点，覆盖模式等</li><li>这部分会稍晚些提到。在理解敌人设计和遭遇战设计之前是无法很好地知道竞技场设计的需求的</li></ul></li></ul><hr><h3 id="Combat-mechanics"><a href="#Combat-mechanics" class="headerlink" title="Combat mechanics"></a>Combat mechanics</h3><p>战斗机制是玩家用于对抗敌人的可重用的动作/技能/武器。常见战斗机制有：</p><ul><li><strong>收集</strong>有关布局和敌人的信息</li><li><strong>远离</strong>危险，<strong>占领</strong>目标</li><li><strong>瞄准</strong>特定的敌人类型/弱点</li><li>当看到<strong>攻击信号</strong>（或者进攻机会时） <strong>示意</strong>攻击</li><li>将攻击/武器动作组成<strong>连招</strong></li><li><strong>阻挡</strong>敌人的攻击：在正确的时间<strong>招架</strong>/<strong>反击</strong>/<strong>闪避</strong></li><li>在敌人无法击中或看到你的地方<strong>寻找掩护</strong></li><li>管理<strong>资源</strong>，清点<strong>拾取物</strong>（血包，弹药等）</li><li>在环境中布置<strong>陷阱</strong>（爆炸桶、水、岩浆、悬崖等）</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/GodOfWar2014_CombatPrototype.gif" alt="在简单的测试地图中测试战神（2018）的战斗原型，来源为 https://80.lv/articles/evolution-of-god-of-war-from-2014-to-2018/"></p><h3 id="Weapon-design"><a href="#Weapon-design" class="headerlink" title="Weapon design"></a>Weapon design</h3><p>许多游戏为玩家提供了多种可用武器。武器设计是有关概念化、制作和平衡武器库的过程。需要考虑：</p><ul><li>武器的感觉和幻想：较大的射速较慢的枪 vs. 偷偷摸摸的刀 vs. 轰鸣电锯</li><li>关于伤害，射程，射速，弹药供应等方面的统计数据<ul><li>对于枪而言：需要考虑不同的散射度，后坐力，瞄具，穿透力，弹匣大小，装填速度等</li></ul></li><li>态势感知：挑选最合适/有效的武器</li><li>弹药经济的管理：不浪费资源</li><li>武器升级，装备升级等</li></ul><hr><h3 id="TODO-Combat-examples"><a href="#TODO-Combat-examples" class="headerlink" title="TODO: Combat examples"></a>TODO: Combat examples</h3><p>原文还没填这里的坑</p><hr><h3 id="TODO-Combat-workflow"><a href="#TODO-Combat-workflow" class="headerlink" title="TODO: Combat workflow"></a>TODO: Combat workflow</h3><ul><li>制作测试用的战斗关卡原型</li><li>怎么知道一个战斗“足够好了”</li></ul><p>原文还没填这里的坑</p><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/04/28/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-LevelDesign </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Level Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220502 - GDC2017 塞尔达：旷野之息的三角之力</title>
      <link href="2022/05/02/20220502-gdc2017-zelda/"/>
      <url>2022/05/02/20220502-gdc2017-zelda/</url>
      
        <content type="html"><![CDATA[<h2 id="塞尔达：旷野之息的三角之力"><a href="#塞尔达：旷野之息的三角之力" class="headerlink" title="塞尔达：旷野之息的三角之力"></a>塞尔达：旷野之息的三角之力</h2><p> 虽然以前已经看过一次视频，但所谓好记性不如烂笔头，这里重新复习一下最出色的开放世界的设计理念，本文基本整理自参考文章 <a href="https://cowlevel.net/article/2091350">荒野之息-用乘法打造开放世界玩法</a>，也感谢作者 <a href="https://cowlevel.net/people/ThouSun">ThouSun</a> 的辛苦整理。</p><p>原视频：<a href="https://www.youtube.com/watch?v=QyMsF31NdNc">Breaking Conventions with The Legend of Zelda: Breath of the Wild</a></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220502224332.png" alt="三角之力"></p><ul><li>the wisdom to make - Takuhiro Dohta</li><li>the power to show - Satoru Takizawa</li><li>the courage to say - Hidemaro Fujibayashi</li></ul><h2 id="P1-旷野之息设计核心-乘法式玩法"><a href="#P1-旷野之息设计核心-乘法式玩法" class="headerlink" title="P1 旷野之息设计核心-乘法式玩法"></a>P1 旷野之息设计核心-乘法式玩法</h2><p>Hidemaro Fujibayashi</p><h3 id="立项之初的两个核心问题"><a href="#立项之初的两个核心问题" class="headerlink" title="立项之初的两个核心问题"></a>立项之初的两个核心问题</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220502233204.png" alt="立项之初的核心问题"></p><ol><li><p>塞尔达系列游戏最重要的核心是什么</p><ul><li>让玩家自由选择<ul><li>自由决定去哪里</li><li>自由决定干什么</li></ul></li></ul></li><li><p>如何打破塞尔达常规，挖掘新内容</p><ul><li>之前作品中的相同点<ul><li>空气墙的存在阻碍了玩家移动</li><li>线性推进的剧情和流程</li><li>事先设计好的游戏体验</li><li>所有谜题都能在网上找到答案</li></ul></li><li>如何打破<ul><li>被动游玩 -&gt; 玩家主导的主动游玩（active game）</li></ul></li></ul></li></ol><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220502224615.png" alt="具有启发意义的地图"><br>来自地图的启发：玩家起初对整个世界是无知的，通过一步步探索，发现这个世界的美妙之处。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220502233754.png" alt="打破前作的限制"></p><h3 id="Active-Game"><a href="#Active-Game" class="headerlink" title="Active Game"></a>Active Game</h3><p>怎么做</p><ul><li>移除空气墙，并且添加攀爬能力<ul><li>原本阻碍玩家前进的墙现在成为了可选择的新道路</li><li>这样玩家在游玩时会不断问自己：你要选哪条路</li></ul></li><li>有了攀爬后，玩家爬到顶端会想干什么呢？——跳下去，所以引入滑翔能力</li></ul><h3 id="乘法式游戏"><a href="#乘法式游戏" class="headerlink" title="乘法式游戏"></a>乘法式游戏</h3><p>前作的设计</p><ul><li>使用自然理论或简单科学知识创造谜题</li><li>在每个谜题中独立运用知识作为谜题提示</li><li>很多道具/机制是专属于谜题的<ul><li>可以严格把控游戏体验细节</li><li>消耗很多开发资源</li><li>不适合开放世界</li></ul></li></ul><p>旷野之息的设计</p><ul><li><p>行为（Action） x 场景（Field）</p><ul><li><p>让每个行为在不同场景下有不同用途</p></li><li><p>玩家可以自由组合</p></li><li><p>让物品对玩家行为做出反应</p></li><li><p>物品与物品也能相互影响</p></li><li><p>例子</p><ul><li><p>攻击</p><ul><li>对敌人造成伤害</li><li>对树，砍倒</li></ul><p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/log.gif" alt="用攻击砍倒树木"></p></li><li><p>火把</p><ul><li>点燃物体</li></ul><p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/fire.gif" alt="用火点燃物体"></p></li><li><p>扇子</p><ul><li>吹飞</li></ul></li></ul></li></ul></li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/defence.gif" alt="打回怪物投掷的石块" style="zoom:70%;" /><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/timestop.gif" alt="“发射”经过时停蓄力的炸药桶"></p><p>想法验证：2D Demo</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/2d2.gif" alt = "用弓箭穿过火焰来点燃木质物品" style="zoom:90%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/2d3.gif" alt= "砍倒树木后利用浮木过河" style="zoom:90%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/2d4.gif" alt= "点燃火把后用其点燃其他可燃烧物体" style="zoom:90%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220502225648.png" alt= "动作 x 处境 x 物体的无限可能" style="zoom:105%;" /><p>Player Action x Field x Object</p><p>游戏中玩家在面对一个处境以及相应的目标时，可以充分组合自身行为以及场景物体，并基于交互逻辑自由游玩，从而实现了玩家主导（active game）</p><h2 id="P2-乘法式玩法的技术实现"><a href="#P2-乘法式玩法的技术实现" class="headerlink" title="P2 乘法式玩法的技术实现"></a>P2 乘法式玩法的技术实现</h2><p>Satoru Takizawa</p><h3 id="游戏物理"><a href="#游戏物理" class="headerlink" title="游戏物理"></a>游戏物理</h3><p>塞尔达作为一款动作游戏，其最重要的部分是什么呢？</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220502235706.png" alt="处理碰撞和移动的物理引擎"></p><p>动作游戏 = 碰撞+人物移动+物体状态</p><ul><li>游戏物理<br>碰撞和移动的核心都是物理<br>游戏中，为了得到更好的操纵性，更好的反馈以及充分满足游戏设计的需求，需要的不是真实世界中的物理，而是游戏物理。</li></ul><p> havoc 引擎为游戏物理提供了可行性</p><p>物理为塞尔达创造的行为（action）</p><ul><li>爬墙，墙的陡峭程度会影响体力消耗<ul><li>可以爬墙，那可不可以爬怪？</li><li>爬蓄力后的箱子？<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220502230231.png" alt="利用经过时停蓄力后的箱子移动到对岸"></li></ul></li><li>用磁力操纵金属物体</li><li>砍树，树会倒下变成木头</li><li>让时间停止，反复敲打以积攒能量</li></ul><p>游戏物理支撑了玩家的可能行为</p><h3 id="化学引擎"><a href="#化学引擎" class="headerlink" title="化学引擎"></a>化学引擎</h3><p>物理引擎解决了移动规则（碰撞和移动），化学引擎用于解决状态变化</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220502230406.png" alt="处理状态变化的化学引擎"></p><p>核心定义</p><ul><li>元素<ul><li>火</li><li>水</li><li>风</li><li>电</li></ul></li><li>材质<ul><li>木</li><li>铁</li><li>角色</li></ul></li></ul><p>化学引擎的三条核心规则</p><ul><li>元素可以改变材质状态<ul><li>如火将青葱大树变为光秃树干</li></ul></li><li>元素可以改变元素状态<ul><li>如水可以灭火</li></ul></li><li>材质和材质无法相互影响</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/chem1.gif" alt="火燃木，水灭火"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/chem2.gif" alt="导电现象"></p><p>化学引擎就是状态计算器，处理状态变化。之所以叫做化学引擎就是希望它能做游戏中创造“化学反应”：游戏规则由物理、化学引擎统一管理，直观理解的同时可以通过 action x field x object 创造无限可能，也希望玩家能主动发掘有趣的行为。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>如何做出乘法玩法——通过物理和化学来连接游戏中的所有东西</p><p>物体/玩家行为/元素等都经过精心设计，可以相互产生影响</p><p>物体之间的相互影响又与常见物理/化学现象相关，从而创造出旷野之息的有趣开放世界</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220502231706.png" alt="物理+化学引擎所创造的无限可能"></p><h3 id="乘法玩法在开放世界中的应用"><a href="#乘法玩法在开放世界中的应用" class="headerlink" title="乘法玩法在开放世界中的应用"></a>乘法玩法在开放世界中的应用</h3><p>旷野之息与前作不同，一般不会有明显谜题摆在玩家面前，那么如何利用乘法玩法创造谜题呢？</p><p>答案是 处境 x 目标</p><ul><li>玩家可能面对的小目标<ul><li>打败敌人</li><li>到达目的地</li></ul></li><li>玩家需要做的<ul><li>在当前处境下探索实现目标的方法</li></ul></li><li>体验目标<ul><li>无限选择</li><li>让玩家感到“我真是个天才”</li></ul></li><li>为实现体验目标所做的<ul><li>为其提供充分的物体<ul><li>河边的石头<ul><li>静止 蓄力 飞到对岸</li></ul></li><li>沟壑边的大树<ul><li>砍倒成为桥</li></ul></li><li>沟壑两旁的草<ul><li>点燃后乘风而起</li></ul></li><li>在地图上各个地方放宝箱以引导玩家到达 主动创造产生“天才”时刻的机会</li></ul></li></ul></li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/wind2.gif" alt= "乘着火焰燃烧处而生成的风起飞" style="zoom:85%;" /><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/wind.gif" alt="乘风破浪"></p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/mag.gif" alt= "电引雷" style="zoom:85%;" /><h2 id="P3-为玩法打造的艺术风格"><a href="#P3-为玩法打造的艺术风格" class="headerlink" title="P3 为玩法打造的艺术风格"></a>P3 为玩法打造的艺术风格</h2><h3 id="旷野之息艺术风格的探索"><a href="#旷野之息艺术风格的探索" class="headerlink" title="旷野之息艺术风格的探索"></a>旷野之息艺术风格的探索</h3><p>塞尔达系列一贯的标准：在充分满足玩法需求前提下，尽可能满足真实感。</p><p>这也意味着，艺术为玩法服务是第一优先级，让风格尽可能真实是次要的。</p><p>制作了历代塞尔达的高清重置 Demo 后选择了风之杖的风格：保持一定真实感的同时，可以更轻松地实现为玩法服务的动作/画面。并且这种风格也有较高独特性和辨识度。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220502232523.png" alt="塞尔达：风之杖"></p><h3 id="旷野之息画风如何满足玩法设计需要"><a href="#旷野之息画风如何满足玩法设计需要" class="headerlink" title="旷野之息画风如何满足玩法设计需要"></a>旷野之息画风如何满足玩法设计需要</h3><p>为了让玩家直观理解前面所提到的基于物理和化学变化所实现的玩法，不能在美术表现上完全不重视真实感。</p><p>风之杖的画面风格可能过于卡通画，会让玩家觉得游戏是面向小孩子的，这并非我们所愿。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220502232705.png" alt="美术风格的平衡"></p><p>于是决定取中间值：满足风之杖中的玩法易于落地的特点，同时加入更多真实感。</p><p>例子：旷野之息中将树砍倒的动作很真实，但再砍一下地上的树木，就会噗地一下变成整理好的树枝。这些是精心考虑了玩法和真实性之间的平衡之后的结果：尽可能提供直观理解的同时（充分真实性），也保障了流畅操作性（玩法）。</p><p>做饭，滑翔，滑盾等行为也同理。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/cook.gif" alt="做饭"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/fly.gif" alt="滑翔和滑盾"></p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> GDC </tag>
            
            <tag> Learning Notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220502 - Level Design Book - BOOK 1. PROCESS - Pre-production - Scope</title>
      <link href="2022/05/02/20220502-leveldesignbook-pre-production-scope/"/>
      <url>2022/05/02/20220502-leveldesignbook-pre-production-scope/</url>
      
        <content type="html"><![CDATA[<h2 id="Scope"><a href="#Scope" class="headerlink" title="Scope"></a>Scope</h2><ul><li><p><a href="https://book.leveldesignbook.com/process/preproduction/scope">原文链接</a></p></li><li><p><a href="https://medill-east.github.io/2022/04/28/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></p></li></ul><blockquote><p>项目周期代表了一个项目的规模以及复杂度，通常在原型推进过程中不断对周期进行验证。</p></blockquote><p>在 <a href="https://medill-east.github.io/2022/04/28/20220428-leveldesignbook-pre-production/">pre-production</a> 一节中，我们已经设定了最初的周期和期望。</p><p>游戏开发中的传统智慧是假设每个项目开始时都超期了。即使是小型的合理的项目也可能有隐藏问题。关卡设计也不例外，即使是很小的关卡也可能需要多次迭代和游戏测试才能验证通过。如果有疑问的话，就缩减周期以及去掉不必要的非支柱性的游戏设计吧。</p><p>随着工作经验（或是团队信任度）的提升，最终会在估计项目周期方面做得越来越好。如果是游戏开发新手，建议遵循 50% 的原则：想想尽可能小的项目，然后直接砍掉 50% 内容，这样就有 50%的机会来真正做完。</p><hr><h3 id="Feasibility"><a href="#Feasibility" class="headerlink" title="Feasibility"></a>Feasibility</h3><p>对于大型/商业项目，pre-production 其实就是可行性研究：项目能否在给定时间和资源下完成？项目是否合理还是太理想化了？其可行性到底如何？</p><p>游戏引擎和工具的选择极大地影响了机制和系统的制作可行性。 例如，使用 Doom 3 引擎制作开放世界驾驶游戏将非常困难，因为该引擎没有内置对大型景观或车辆的支持。</p><h4 id="Engine-and-tools"><a href="#Engine-and-tools" class="headerlink" title="Engine and tools"></a>Engine and tools</h4><p>可行性可不只意味着使用最喜欢的游戏引擎。每个项目都有着不同的需求和目标。</p><ul><li>所有权：依赖另一家公司是否明智？许多大型工作室使用的是自研引擎而不是 Unity 或 Unreal。</li><li>劳工：能招聘到和留住人才吗？比如小型工作室无法避免大型工作室以更高的薪资挖人，他们可能会避免使用 Unreal。（大概是技术不互通所以不好挖的意思？）</li><li>技术优先：能改变设计以契合技术吗？比如对于使用 Doom 引擎的工作，制作一个射击游戏比起平台跳跃游戏就更加可行（Doom 没有跳跃键）。</li></ul><hr><h3 id="Pipeline"><a href="#Pipeline" class="headerlink" title="Pipeline"></a>Pipeline</h3><p>游戏开发中的管线可以理解为多个不同的生产步骤。Pre-production 是搞清楚大多数管线的时候。</p><p>Build 管线可将可玩的可执行文件分发给玩家，而 art 管线会关注于将 2D 图像或 3D 模型转换为游戏引擎所支持的格式。以下这些词基本都是管线的一部分：convert，import，export，compile，bake。</p><p>关卡设计管线有一些差异。有时候可能需要单独的工具或插件来生成景观或是搭建建筑。在 2010 年前，游戏引擎在加载关卡文件之前需要对地图编译进行优化或是对其进行错误检查是很常见的步骤。</p><hr><h3 id="Prototyping"><a href="#Prototyping" class="headerlink" title="Prototyping"></a>Prototyping</h3><p>最好的验证可行性的方式就是制作原型。原型是一个小型的项目，可视其为专门回答了某一个问题。</p><p>1997 年，Apple 的研究者 Stephanie Houde 和 Charles Hill 发表了一篇名为 <a href="https://hci.stanford.edu/courses/cs247/2012/readings/WhatDoPrototypesPrototype.pdf">“What Do Prototypes Prototype?”</a> 的著名文章。Houde 和 Hill 定义了三种原型的通用分类：</p><ul><li>功能验证型，Role：它怎么来满足用户需求，在其生命周期内它扮演了什么样的角色？</li><li>技术验证型，Implementation：技术可行吗？怎么来制作？</li><li>感官验证型，Look and feel：看起来会是什么样的？感觉如何？</li></ul><p>在针对其中任何一项进行原型制作时，这一过程就被称之为概念验证（proof of concept）。原型的形式可能是纸面的，引擎的技术 demo，或是一个玩家可游玩的测试关卡。</p><p><a href="https://book.leveldesignbook.com/process/layout">Layouts</a> 和 <a href="https://book.leveldesignbook.com/process/blockout">blockouts</a> 也是用于回答设计问题的原型。</p><hr><h3 id="Vertical-Slice"><a href="#Vertical-Slice" class="headerlink" title="Vertical Slice"></a>Vertical Slice</h3><p>当尝试将多方面组合成一个更大的集成原型时就是在制作一个垂直切片——一个带有体验设计（role），音视频润色（look and feel），功能技术基础（implementation）的已完成游戏的“示例”切片。（其实就是早期演示视频）</p><p>制作垂直切片可以让团队验证管线可行性。如果能够使用当前工具盒流程制作出出色的切片，那么工具可能就够用了。如果做不出，那么可能需要对工作方式进行调整。</p><p>垂直切片还有助于衡量项目周期。如果制作 10% 的内容需要 5 个月，那么可以大概推算全部做完可能要 50 个月。（真实情况远比这复杂，但大概意思，领会精神）</p><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/04/28/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-LevelDesign </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Level Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220501 - Level Design Book - BOOK 1. PROCESS - Pre-production - Worldbuilding</title>
      <link href="2022/05/01/20220501-leveldesignbook-pre-production-worldbuilding/"/>
      <url>2022/05/01/20220501-leveldesignbook-pre-production-worldbuilding/</url>
      
        <content type="html"><![CDATA[<h2 id="Worldbuilding"><a href="#Worldbuilding" class="headerlink" title="Worldbuilding"></a>Worldbuilding</h2><ul><li><p><a href="https://book.leveldesignbook.com/process/preproduction/worldbuilding">原文链接</a></p></li><li><p><a href="https://medill-east.github.io/2022/04/28/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></p></li></ul><blockquote><p>如何概念化以及设计游戏世界中的虚构历史</p></blockquote><h3 id="What-is-worldbuilding"><a href="#What-is-worldbuilding" class="headerlink" title="What is worldbuilding?"></a>What is worldbuilding?</h3><p>这是一个在较高维度对游戏世界的虚构历史及设定进行概念化的过程。</p><p>这一过程其实沿袭自小说写作，特别是科幻或奇幻小说家们通常会构建用于详细描述背景故事、传说、人物关系的“圣经”。</p><p>在世界观文档中可以描述星球的其后、游戏事件之前所发生的的详细的政治历史，甚至是一些平凡的细节，比如每个人早上的起床时间，或是主角的母亲喜欢吃什么样的晚餐。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220501224225.png" alt="map of &quot;Dunwall&quot;(https://dishonored.fandom.com/wiki/Dunwall), the fictional city featured in Dishonored (2012) by Arkane Studios; strongly inspired by London"></p><h3 id="Worldbuilding-for-games"><a href="#Worldbuilding-for-games" class="headerlink" title="Worldbuilding for games"></a>Worldbuilding for games</h3><h4 id="Avoid-premature-worldbuilding"><a href="#Avoid-premature-worldbuilding" class="headerlink" title="Avoid premature worldbuilding"></a>Avoid premature worldbuilding</h4><p>从关卡设计，而不是从叙事设计的角度出发，要避免过早进行世界构建。世界构建也是一项工作，但是如果做得太早，那么只是非生产性的精力浪费。在最开始的时候只构建必须的部分。</p><p>在整个 pre-production 制作过程中，游戏世界的形状和内容可能会发生巨大改变。如果一开始就太早地囿于细节，那么这部分的工作很可能会被浪费。想象一下你写了 10 页关于房子历史的文档，但最终房子关卡被项目砍了。如果写了 20 页关于怪物及其文化的文档，但随后怪物都被替换为了制式的人形 NPC。不要陷入细节中，这样可以让自己免于被砍的失望，也可以让项目保持灵活。</p><p>虽然世界构建有趣也有用，但对于新手而言，这个过程通常会分散对于基本核心工作的注意力，即用角色和动作来讲述引人入胜的故事。谨记，人们所喜欢的史诗奇幻、科幻和超级英雄的世界是由数千名经验丰富的专业人士花费多年构建，并在无数次迭代中有丰厚资金支持。当我们孤身工作时，少给自己挖坑。</p><h4 id="Embrace-functional-worldbuilding"><a href="#Embrace-functional-worldbuilding" class="headerlink" title="Embrace functional worldbuilding"></a>Embrace functional worldbuilding</h4><p>克林特·霍金（Clint Hocking）创造了 <a href="https://clicknothing.typepad.com/click_nothing/2007/10/ludonarrative-d.html">ludonarrative dissonance</a> 来描述当玩家的表现（“ludo”）和设计师的预期故事（“narrative”）不合拍（“dissonance”）时的情况</p><p>但其实大部分玩家对于这种漏洞或冲突是很包容的（或是不在乎）。</p><p>所以对于游戏叙事而言，这本书中更偏爱所谓的功能性世界构建：故事是用于解决游戏中的问题和消除不连贯性的。</p><ul><li>设计问题：玩家“穿越重复的走廊和射击广场” vs. “套利外星人入侵后的巨大地下军事综合体”</li><li>技术问题：怪物“因为寻路 AI 坏了所以无法在水中游弋” vs. “怕水”</li></ul><h4 id="Minimal-worldbuilding"><a href="#Minimal-worldbuilding" class="headerlink" title="Minimal worldbuilding"></a>Minimal worldbuilding</h4><p>从最重要，不可缺少的部分开始构建，以建立关卡设定以及支撑体验目标。</p><p>建立最基本的关卡需要回答的问题：</p><ul><li>Past<ul><li>谁创造了这个地方（为什么？玩家如何知道）</li></ul></li><li>Present<ul><li>现在谁在这里活动（为什么？玩家怎么知道）</li></ul></li><li>Future<ul><li>玩家将以什么方式影响这个地方（为什么？玩家怎么知道过去发生了什么？这里的居民会作何反应）</li></ul></li></ul><p>以下是一个动作游戏关卡的最简故事：</p><ol><li>谁创造了这个地方——一个人类家庭建造了一个小木屋<ul><li>玩家怎么知道的<ul><li>看起来就是一个以人类居住习惯建造而成的小木屋，并且里面有人类家具和多张床</li></ul></li></ul></li><li>现在谁住这里——一些吃掉了人的怪兽<ul><li>玩家怎么知道<ul><li>里面有怪物，有上了年头的尸骨，没有活人</li></ul></li></ul></li><li>玩家如何影响这个地方——玩家可以杀死怪物<ul><li>玩家怎么知道<ul><li>怪物是敌对势力，会在其可见范围内攻击玩家</li></ul></li></ul></li></ol><p>即使是这样的简短故事在未来也拥有巨大的叙事潜力。什么类型的木屋？多大的家庭？为什么他们挑了这个地方定居？为什么怪物攻击人类？有没有不杀掉怪物来解决这个问题的办法？“家庭 vs. 怪物”的主题如何在关卡的其余部分或是游戏其他部分来引起共鸣？</p><hr><h3 id="Comprehensive-worldbuilding"><a href="#Comprehensive-worldbuilding" class="headerlink" title="Comprehensive worldbuilding"></a>Comprehensive worldbuilding</h3><p>对于一个大型/长期项目而言，世界观的构建就显得重要许多。世界观圣经通常由三种世界设计文档构成：地图（maps），时间线（timelines），笔记（notes）。</p><p>可以从<a href="https://book.leveldesignbook.com/appendix/tools">工具列表</a>中寻找用于维护设计文档的工具，如个人 wiki 或是笔记库。</p><h4 id="Maps"><a href="#Maps" class="headerlink" title="Maps"></a>Maps</h4><p>绘制一个不仅仅只是有可游玩区域的游戏世界地图。关卡与这个更广阔世界或宇宙的关系是什么？地图制作在虚构小说写作中非常常见，对于关卡设计师而言，地图也是最直观有效的世界构建工具。</p><p>最简单的让玩家参与的方式就是合理性。如果你刚开始学世界构建，试着从熟悉的，类似地球的东西开始入手。</p><h5 id="Terrain-climate-map"><a href="#Terrain-climate-map" class="headerlink" title="Terrain/ climate map"></a>Terrain/ climate map</h5><p>先绘制地形/气候图。为了构建像地球一样的合理性，从一些基本的地球科学原则开始：</p><ol><li>绘制大洲。模拟<a href="https://en.wikipedia.org/wiki/Continental_drift">大陆漂移</a> 并确保它们能拼在一起。</li><li>画出风和维度。<a href="https://en.wikipedia.org/wiki/Prevailing_winds">盛行风</a>随维度变化，并与陆地相互作用。</li><li>画出山和海。<a href="https://en.wikipedia.org/wiki/Mountain_formation">山脉</a>沿着断层线或是火山形成。<a href="https://en.wikipedia.org/wiki/River">河流</a>一般从山顶或湖泊流向大海。</li><li>标记气候。赤道更热，两极更冷。山脉可以阻挡/困住降雨。气候潮湿，还是刮风？下雨？暴风雨？</li></ol><p>更多有关设计地形/生物群落的信息，看<a href="https://book.leveldesignbook.com/process/blockout/massing/landscape">这里</a>。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220501233837.png" alt="example worldbuilding climate map, from &quot;Growing Your Iceberg&quot; by N. K. Jemisin (https://nkjemisin.com/2015/08/worldbuilding-101/)"></p><p>一旦有了世界的坚实基础，就可以通过夸大/极端化某些方面让其变得独特/奇幻。</p><p>在上面的示例地图中，作者 N.K. 杰米辛创造了一个世界，两个大陆略高于赤道。 随后杰米辛将目光聚焦在了两大洲之间的一段高能量赤道海域，并将其放大为一条名为“眼泪之海”的“地狱走廊”，沿岸生长着珍贵的“怒木”树。 虽然一个不断遭受海啸困扰的地区生长着魔法树木本身是不可信的，但当这样的设定融入一个更平凡的世界时，它会感觉更加合理和特别。</p><h5 id="Political-maps"><a href="#Political-maps" class="headerlink" title="Political  maps"></a>Political  maps</h5><p>在构建完自然景观之后，就可以开始构建人文景观了。人们住在哪里，为什么住在那里？对于人们来说什么是重要的东西？</p><p>在设计社会时，作者 N. K. Jemisin 强烈推荐学习一些基本的<a href="https://en.wikipedia.org/wiki/Sociology">社会学知识</a>并进行研究——并避免依赖对现有现实世界中的文化的隐晦刻板印象。</p><p>现实世界中存在的一些政治冲突和紧张氛围可能也会成为让你的世界更有趣的原因：边界争夺，区域命名，政治归属。</p><ul><li>定义地图制作者，他们是谁，制作地图的动机是什么？他们与所绘制地区的关系是什么？</li><li>对于同一个地区从不同角度绘制多种地图。同一地区 100 年前什么样，500 年前什么样？不同特征或背景的人在绘制同一地区时会不会有所不同，或是用他们单独的名字？世界中的模糊和冲突点是什么？一张“错误”的地图可能比起一张精确的地图更加有趣。</li><li>绘制没有边界和地标的非几何地图。一个城市的“社会地图”会是什么样呢？经济地图？情绪地图？</li><li>将一些区域留白。世界上的每个角落并不是在一开始都与每个人都相关的，没有神秘感，就不能驱使玩家探索和冒险。</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220501235206.png" alt="uncertainty is natural; a not-very-helpful in-game player map for mission &quot;The Sword&quot; in Thief: The Dark Project (1998)"></p><h4 id="Timelines"><a href="#Timelines" class="headerlink" title="Timelines"></a>Timelines</h4><p>构建游戏世界的历史时间线，并辅以简短标记。</p><p>这个地区或地方的历史是什么？人们发生了怎样的变化？历史和地理一样，也有浓厚政治色彩，会根据编写历史的人的立场和视角而改变。构建历史时，必须考虑历史学家及其背景，他们写给谁看，最重要的是，他们夸大了什么，隐瞒了什么？</p><p>目标并不是构建权威的史实，思考一下每一段历史所隐含的宏大主题或想法是什么。</p><p>（来自 Heaven’s Vault? 的时间线例子）</p><ul><li>定义历史学家。他们是从何时何地开始写作的？他们的时间和地点将如何影响他们的感知、记忆或所涉及的内容？</li><li>设计多个重叠的时间线。最好具有特定的相似性和矛盾性。</li><li>在每个时间轴上留下被遗忘的漏洞。想想历史学家忘记了什么或他们记错了什么。您在游戏中的部分体验可能涉及改写历史、填补这些空白，或找出没人知道的历史新漏洞。</li></ul><h4 id="Notes"><a href="#Notes" class="headerlink" title="Notes"></a>Notes</h4><p>关卡设计师可能偏爱可视化文档，但叙事设计师可能更依赖于以指引卡，私人 wiki 或其他组织过的文字性笔记，可能包括：</p><ul><li>人物传记、日常生活、家史</li><li>位置描述、旅游指南、地质或生态调查</li><li>文化入门、宗教经典、地方历史</li><li>世界内的书籍、小册子、演讲</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220502000050.png" alt="worldbuilding docs / concept art for Half-Life 2 (2004) / Episode 3; short story by Marc Laidlaw, concept art by Andrea Wicklund"></p><hr><h3 id="Examples-of-worldbuilding"><a href="#Examples-of-worldbuilding" class="headerlink" title="Examples of worldbuilding"></a>Examples of worldbuilding</h3><h4 id="The-Witness-2016"><a href="#The-Witness-2016" class="headerlink" title="The Witness (2016)"></a>The Witness (2016)</h4><p>Thekla Studio 花费六百万美刀，七年时间来构建了这个第一人称解密探险游戏的世界。</p><p><a href="https://www.fletcher.studio/blog/2017/5/26/the-witness-designing-video-game-environments">Fletcher 继续接手了这个世界的重新设计</a></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220502000423.png" alt="screenshot of the middle island area from the final released version of The Witness (2016) by Thekla Studios"></p><p>后面还有几段详细的设计过程没有写在本文中，引述自<a href="https://www.fletcher.studio/blog/2017/5/26/the-witness-designing-video-game-environments">“The Witness: Designing Video Game Environments” by Fletcher Studio, 26 May 2017</a>。有需要可以到原文中查看。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220502000656.png" alt="aerial ecological collage study conducted by architecture firm Fletcher Studio in 2011 for The Witness (https://www.fletcher.studio/blog/2017/5/26/the-witness-designing-video-game-environments)"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220502000715.png" alt="geological collage study conducted by Fletcher Studio in 2011 for The Witness (https://www.fletcher.studio/blog/2017/5/26/the-witness-designing-video-game-environments)"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220502000737.png" alt="timeline of the three fictional civilization that inhabited the island in The Witness, worldbuilding by Fletcher Studio (https://www.fletcher.studio/blog/2017/5/26/the-witness-designing-video-game-environments)"></p><hr><h3 id="To-review…"><a href="#To-review…" class="headerlink" title="To review…"></a>To review…</h3><ul><li>世界构建是关于构建整个游戏世界的历史以及概念设计的过程<ul><li>游戏中的世界构建既可能是面向开发者的（设计文档），也可能是面向玩家的（故事）</li><li>对于动作游戏的关卡设计，不要太早地做太多有关世界设计的工作。更改世界观来契合关卡要容易得多</li></ul></li><li>最小世界构建：谁建造了这个地方，谁现在住在这里，玩家在这里能干什么？对于大多数关卡，简单的答案足矣</li><li>详尽世界构建：构建地图，时间线，笔记。只有当项目足够大或是以团队方式推进的时候才需要这么做</li></ul><hr><h3 id="Further-reading-sources"><a href="#Further-reading-sources" class="headerlink" title="Further reading/ sources"></a>Further reading/ sources</h3><ul><li><p>  <a href="https://nkjemisin.com/2015/08/worldbuilding-101/"><strong><em>“Worldbuilding 101: Growing Your Iceberg”</em></strong></a> by <a href="https://nkjemisin.com/about/">N.K. Jemisin</a>, for Writer’s Digest Online Workshop 2015 is our recommended general introduction to worldbuilding. Much of the material on this page is paraphrased from Jemisin’s excellent talk.</p></li><li><p>  <a href="https://researchportal.port.ac.uk/portal/en/theses/story-as-a-function-of-gameplay-in-first-person-shooters-and-an-analysis-of-fps-diegetic-content-19982007(ae0dcf2e-43a0-4549-973f-340c88ba4815).html"><strong><em>“Story as a function of gameplay in First Person Shooters and an analysis of FPS diegetic content 1998-2007”</em></strong></a> by Dan Pinchbeck. Useful overview of academic theories applied to action game design, with focus on Gibson’s affordance, suzjet / fabula, Barthes’ functions and indices, the academic basis of this book’s stance on functional worldbuilding.</p></li><li><p>  <a href="http://twitch.tv/handeyesociety"><strong><em>“Collaborative Critical World-building in 30 Minutes or Less”</em></strong></a> by <a href="https://kaelan.online/">Kaelan Doyle Myerscough</a>, for <a href="https://www.handeyesociety.com/event/wordplay2020/">WordPlay 2020</a> explores alternative methods for worldbuilding, especially in groups.</p></li><li><p>  <a href="https://emshort.blog/2018/03/06/books-on-worldbuilding/"><strong><em>“Books on Worldbuilding”</em></strong></a> (2018) by <a href="https://emshort.blog/">Emily Short</a> is a great list of worldbuilding books and resources, along with Short’s insightful commentary on applying the methods to game narrative.</p></li><li><p>  <a href="https://www.game-cities.com/virtual-cities"><strong>“Virtual Cities: An Atlas and Exploration of Video Game Cities”</strong></a> (2020) by urban planner <a href="https://www.game-cities.com/">Konstantinos Dimopoulos</a> is a book that analyzes the urban worldbuilding in 45 different virtual cities, with a mostly Western / European urban focus.</p></li></ul><hr><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>正如文中所提到的一样，这里所涉及的世界构建，特别是详尽世界构建可能绝大部分情况下都用不到？但是在构建关卡过程中如果有与之契合的世界观架构肯定是能够更好地进行设计的。只是这种能够将一个概念“一以贯之”的团队，恐怕屈指可数（希望自己有一天也能效力于这样的团队哈哈）。</p><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/04/28/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-LevelDesign </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Level Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220430 - Level Design Book - BOOK 1. PROCESS - Pre-production - Research</title>
      <link href="2022/04/30/20220430-leveldesignbook-pre-production-research/"/>
      <url>2022/04/30/20220430-leveldesignbook-pre-production-research/</url>
      
        <content type="html"><![CDATA[<h2 id="Pre-production-Research"><a href="#Pre-production-Research" class="headerlink" title="Pre-production-Research"></a>Pre-production-Research</h2><ul><li><p><a href="https://book.leveldesignbook.com/process/preproduction/research">原文链接</a></p></li><li><p><a href="https://medill-east.github.io/2022/04/28/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></p></li></ul><blockquote><p>如何学习、分析、拆解其他的关卡/真实世界的参照</p></blockquote><h3 id="Why-do-research"><a href="#Why-do-research" class="headerlink" title="Why do research?"></a>Why do research?</h3><ul><li>设计并不是孤立存在的，有其历史，有其发展，也必然会有其依托。</li><li>有一群参考可以启发并帮助你开始设计。</li><li>收集参考，拆解细节，学习架构。并且可以自己构建一个由许多参考图像共同构建的“通用模式”（类似归纳总结）。</li></ul><p>原文中也提供了可用于以上过程的 <a href="https://book.leveldesignbook.com/appendix/tools#2d-art-tools">2D 美术工具列表</a>。</p><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p>设计并非凭空想象，想要把人画好，就要大量观察人；想绘制地标，就多看地标。没有调查，就没有设计依凭。（也是<a href="https://www.gcores.com/radios/101694">张兆弓老师所讲过的成长三步</a>中的第一步，观察）</p><p>参考的意义所在：</p><ul><li>为了创新，就要了解现有的东西，然后打破常规</li><li>为了创造奇怪的感觉，就需要先创造常规的东西，而后打破常规（有点像另一篇关卡设计文章中所讲的<a href="https://www.worldofleveldesign.com/categories/game_environments_design/silhouette-environment-design-basics.php">如何创造多样化的剪影环境设计</a>）</li></ul><h3 id="Real-world-reference"><a href="#Real-world-reference" class="headerlink" title="Real world reference"></a>Real world reference</h3><p>如果真实感和位置合理性（sense-of-place）对项目很重要，那么就要在 <a href="https://book.leveldesignbook.com/process/layout">布局</a> or <a href="https://book.leveldesignbook.com/process/blockout">白模搭建</a> 前充分调研。</p><p>真实世界调研的注意事项：</p><ul><li>（当没有发生世界灾难时）亲临现场（哈哈哈哈）</li><li>通过<a href="https://www.google.com/maps/@35.5940327,139.744906,3a,90y,62.41h,87.97t/data=!3m7!1e1!3m5!1sAF1QipOL0pvY1l6N5XUyeMzQhvP_uNACjyE6iGb2AfK5!2e10!3e12!7i10000!8i5000?hl=zh-Hans">谷歌街景</a>来虚拟造访</li><li>对于一些著名建筑或景观，可以试着在政府/建筑归档中找找蓝图或者建造计划，甚至可以在 <a href="https://sketchfab.com/">SketchFab</a> 上找找有没有 3D 扫描的模型。</li></ul><p>接下来便可以开始：</p><ul><li>创造一个永远不会出现在游戏中的原型</li><li>把布局画出来，或是搭建白模关卡，这时关注还原度，先不考虑游戏性。观察参照物本身，而不是你所想象的样子。</li></ul><p>这种类型的二次创作经验其实不仅仅意味着观察，它也会迫使你来回答关于架构本身以及一些你可能从未想过的问题。</p><p>你并不会用这个布局或是白模，他在之后它们可以让你实际的布局或白模变得更好。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220430113453.png" alt="recreating an authentic British village in Untitled Goose Game; from &quot;Google Maps, Not Greyboxes: Digital Location Scouting for Untitled Goose Game&quot; for GDC 2021 by Jake Strasser, https://www.youtube.com/watch?v=cCsMz5tUXmc"></p><h3 id="In-game-reference"><a href="#In-game-reference" class="headerlink" title="In-game reference"></a>In-game reference</h3><p>比如说你想建造一个拥有隧道/地下通道的关卡。那调研就会涵盖学习其他具有这些元素的经典关卡。比如经典 CS 地图 de_dust，好消息是<a href="https://www.johnsto.co.uk/design/making-dust/">地图创作者 Dave Johnston 写过他是如何进行设计</a>的：</p><blockquote><p>My past mapping experience was mostly creating tight interiors rather than not vast exteriors, and so I was feeling very lost. Desperate, I shoe-horned a bend in the road leading to a downward slope, and at the end of it - an underground cavern.<br>It didn’t work, of course. While the CT spawn area was light and airy, this giant room was gloomy, boxy and felt dead compared to the sunny exterior I’d already made. Observing it also lacked any gameplay potential, I swiftly deleted it. Dust would be an outdoor map.<br>[…] The shallow decline into the underpass is perhaps one of my favourite aspects, both aesthetically and as a player who spent many hours armed with a Steyr Scout at the crest popping off opponents’ heads.</p></blockquote><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220430114506.png" alt="underpass in de_dust by Dave Johnston for Counter-Strike 1.6"></p><p>他的话提供了一些思路：避免建造阴暗、像洞穴一样和死气沉沉的东西。把现有的长长的，阳光明媚的缓坡，通向未知环境的内部隧道和一开始的不成熟想法比对一下，你会发现这种<a href="https://book.leveldesignbook.com/process/combat/balance">平衡</a>创造出了一个危险的，具有微妙垂直度以及远处视野的狙击小巷。</p><p>这里的关键不是学习 de_dust 本身，让我们关注一下这个调研过程：</p><ol><li>我想知道更多关于 de_dust 地下通道的内容</li><li>我搜索了 <code>de_dust underpass</code></li><li>我阅读了设计师关于创造这个地下通道的原因和心路历程</li><li>从结果而言，我现在注意到了一些原来我没有关注的内容</li></ol><p>其他学习一个参考设计的方法：</p><ul><li>游玩关卡，自己分析，做笔记或是绘制草图</li><li>搜索网站、粉丝社群、论坛，看看其他人对此有何评论</li><li>在视频网站上搜索 gameplay 视频，看其他人是怎么游玩的</li><li>询问其他人对此设计的想法以及关注点</li></ul><hr><h3 id="Breakdown"><a href="#Breakdown" class="headerlink" title="Breakdown"></a>Breakdown</h3><p>最直接的拆解方式就是用关卡设计器或 3D 查看器进入关卡，飞来飞去，好好研究。</p><blockquote><p>注意：<br>有时候可以解包关卡文件或者下载翻录的地图几何图形，常用网站有 <a href="https://www.models-resource.com/">Models Resource</a> 或者 <a href="noclip.website">noclip.website</a>。只可以出于个人教育目的这么做，也不要重新发布或是用这些作品作为自己的作品。</p></blockquote><p>但大多数情况下，你都没法拿到地图源文件，这时候就需要利用利用照片或是截图来对其进行绘画分解。</p><p>先把截图导入你熟悉的 <a href="https://book.leveldesignbook.com/appendix/tools#2d-art-tools">2D 美术工具</a>中，把主要的线条，图形，和物体高亮。用相同的颜色来标记重复出现的部分，注意分层堆叠（tiered stacks）和对称。</p><p>比如下面的布鲁克林大桥的绘画分解，上半部分有两个尖尖的哥特式拱门，每个垂直部分都沿着高度进行了严格的切分（with strong trim segmenting each vertical division along its height）；结构的其余部分是一些四四方方的米色砖块。并且具有明显的左右对称，这意味着可以先绘图分解其中一侧，然后复制粘贴另一侧来节省时间。对于现实世界参考，还可以看设计图来更好理解形状和比例。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220430120808.png" alt="example paintover breakdown of a Brooklyn Bridge tower, with color blocks highlighting symmetry and repetition"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220430120830.png" alt="example concept art breakdown by Lea Kronenberger; concept art by Chong Fei Giap, via Beyond Extent, https://www.beyondextent.com/articles/balancing-modularity-and-uniqueness-in-environment-art"></p><h3 id="Moodboard"><a href="#Moodboard" class="headerlink" title="Moodboard"></a>Moodboard</h3><p>深度拆解某一个不是那么有用，或是拥有大量参考时，更适合的一种方式是把它们放到一起来作为一个情绪板（moodboard）。情绪板由许多拥有相似物体，体验，或感受的不同参考和图片组成。图片，电影截图，游戏截图，示意图，概念美术，任何形式的媒体都可以放进去。当对他们整体进行学习时，你会发现他们的通用模式或是趋势。</p><p>情绪版可以帮助我们确定原本模糊的体验目标。如果想制作一个令人恐惧的关卡，那么，“恐惧”意味着什么？意思是令人不安的恐惧，还是某些地方“不对劲”？还是指怪诞的僵尸？那么是什么样的僵尸呢，缓慢的蹒跚僵尸，还是那种精神错乱乱跑的？</p><p>收集参考资料来比较分析时，更容易产生有利于实现体验目标的更加具体的想法。情绪版也可以帮助你向具有不同想法的其他团队成员来解释你的想法。</p><p>![example moodboard (screenshots from Hitman), blockout, and art pass for an “Italian Villa” project <a href="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220430121621.png">by Stavaas, via Polycount, https://polycount.com/discussion/171905/ue4-italian-villa-environment</a></p><h3 id="To-review…"><a href="#To-review…" class="headerlink" title="To review…"></a>To review…</h3><p>调研能够帮助你规划和构建关卡</p><ul><li>为了调研，先搜集一堆参考材料<ul><li>为了更好地研究参照物，对其进行仔细研究——小型的二次创作/依葫芦画瓢，关注于还原度，并仔细观察</li></ul></li><li>对于某个具体的参照物进行细节拆分，视觉剖析<ul><li>绘图拆解参考图像，添加标签和笔记</li></ul></li><li>在 moodboard 中寻找多个参考间的共性</li></ul><hr><h3 id="Now-what"><a href="#Now-what" class="headerlink" title="Now what?"></a>Now what?</h3><ul><li>  Use research to inform the <a href="https://book.leveldesignbook.com/process/layout"><strong>layout</strong></a> and <a href="https://book.leveldesignbook.com/process/blockout"><strong>blockout</strong></a>.</li></ul><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/04/28/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-LevelDesign </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Level Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220429 - Level Design Book - BOOK 1. PROCESS - Pre-production - Pacing</title>
      <link href="2022/04/29/20220429-leveldesignbook-pre-production-pacing/"/>
      <url>2022/04/29/20220429-leveldesignbook-pre-production-pacing/</url>
      
        <content type="html"><![CDATA[<h2 id="Pre-production-Pacing"><a href="#Pre-production-Pacing" class="headerlink" title="Pre-production-Pacing"></a>Pre-production-Pacing</h2><ul><li><p><a href="https://book.leveldesignbook.com/process/preproduction/pacing">原文链接</a></p></li><li><p><a href="https://medill-east.github.io/2022/04/28/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></p></li></ul><blockquote><p>在一个关卡中为玩家规划多种供其体验的活动和事件</p></blockquote><h3 id="What-is-pacing"><a href="#What-is-pacing" class="headerlink" title="What is pacing?"></a>What is pacing?</h3><p>Pacing 是一个关卡中通常所说的活动和时间的顺序和节奏。</p><p>单人游戏关卡倾向于设计更强烈的 pacing。如果玩家在关卡中对于发生了什么感到迷惑，或是不知道他们该干什么，那么这可能意味着该关卡的 pacing 有问题。</p><p>一个有效的 pacing 计划应该强调下满这些方面：</p><ul><li>Scope：在每个关卡中玩家能做什么</li><li>Hierarchy：关卡的哪一部分是最重要的</li><li>Causality：为什么先做这个后做这个（活动）</li><li>Information：何时告诉玩家什么内容</li><li>Intensity：玩家该在什么时候投入更多精力，而在什么时候休息和恢复</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220429193812.png" alt="用于 Journey （2012）的好看的 pacing/叙事表，取自 GDC 2013 &quot;Designing Journey&quot; 演讲"></p><h3 id="Beats-and-variation"><a href="#Beats-and-variation" class="headerlink" title="Beats and variation"></a>Beats and variation</h3><p>在你的关卡中会发生些什么？体验是由哪些丰富的时刻和地点来定义的？</p><p>Beat 是一个关卡中自成一体的一小部分。一个单独的区域，事件，活动，或是元素。</p><p>可以把这些 beats 比作一首音乐中的节拍。当这些节拍被一起演奏时就汇聚成了音符和旋律。它们可以被单独辨明理解，但也可以作为整体的一部分。为了让节拍更加有趣，音乐作曲家们用不同的方法来排列节拍来创造变奏：</p><ul><li>pulse：为节拍创建规律的模式，就像心跳一样。参见<a href="https://zh.wikipedia.org/wiki/%E8%8A%82%E6%8B%8D">音乐中的节拍</a>。<ul><li>如每一关都会有一个单独的出口</li></ul></li><li>accent/ stress：强调或加强某些节拍。<ul><li>比如有些时候难以找到/到达的出口</li></ul></li><li>rest：加入一些较弱的节拍或是沉默，可以使听众对于节拍再次敏感起来。<ul><li>如有时出口很容易可以找到/到达</li></ul></li><li>motif：一个短暂的重复街拍序列。<ul><li>如有时玩家在到达出口前会与 BOSS 作战</li></ul></li><li>variation：以不同的旋律、节奏来重复一系列的节拍。<ul><li>如某些关卡有多个出口</li></ul></li><li>syncopation：离谱（go off-beat）节拍，也是现代流行音乐的基础。<ul><li>如 BOSS 战进行到一半时，另一个 BOSS 出现了</li><li>或者是一个其后隐藏了怪物的假的出口</li><li>有时 BOSS 会摧毁出口，从而无处可逃了</li><li>玩家获得了创造出口的能力</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220429195236.png" alt="强调音乐理论中的不同节拍（metric、rhythmic、syncopation、anticipation）来自 Jack Perricone 的“Melody in Songwriting”"></p><h3 id="Set-pieces"><a href="#Set-pieces" class="headerlink" title="Set pieces"></a>Set pieces</h3><p>布景（set piece）是一种具有独特概念或是令人难忘的活动的特别制作的节拍。</p><p>该做法通常来自电影制作，具有高预算的电影项目通常会会制作具有特殊布景和复杂计划的昂贵场景——观众会记住的刺激场面。<br>比如，好莱坞动作大片本质上就是一系列布景——精心制作的大型战斗，追逐，或反抗死亡的特技（death defying stunts）。电影中的其余部分主要是以一种半连贯的方式来将这些布景连接起来，并在紧张的布景间让观众们“得以喘息”。大型的动作游戏的思路其实也差不多。<br>但是布景并不一定意味着大型的劲爆动作片段。喜剧的一大特点就是令人尴尬的场景，浪漫故事可能会重点强调第一次约会或是婚礼，戏剧可能更倾向于催人泪下的忏悔或是背板，而谋杀之谜会以侦探对于真相的讲述而告终。<br>游戏或电影中任何感觉到重要、令人难忘或是昂贵的场景，都可能是一个布景。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220429200316.png" alt="still from the memorable Lobby shootout set piece from the action film The Matrix (1999)"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220429200340.png" alt="still from the memorable dance scene set piece from the film Pulp Fiction (1994)"></p><p>游戏中的布景通常有以下特点：</p><ul><li>昂贵。这些布景通常需要许多特制的美术及动画资源，并且经过了大量迭代。无法轻易地重制或是用于它途，所以它们的生产本就有风险。</li><li>不可跳过。这些布景和项目的核心 pillars 和体验目标紧密相连。如果存在玩家有可能因为错过了它们而反过来怪游戏制作不好的风险，为什么还费心制作呢？</li><li>脚本意味很重，并且一定程度上是线性的，以确保可靠的体验。<ul><li>如果一个布景可以以三种不同的方式被游玩/播放，它就相当于三个布景，就有三倍的制作成本。</li></ul></li></ul><hr><p>这样貌似速度太慢了，也不利于学习，后面的会转为笔记的形式。</p><p>布景的关卡设计通常包括</p><ul><li>BOSS 战，大型谜题，或是大型编排——包含大量<a href="https://book.leveldesignbook.com/process/scripting">关卡脚本</a>的东西。</li><li>竞技场战斗，玩家在完成被困在一个大房间中，直到完成挑战</li><li><a href="https://book.leveldesignbook.com/process/env-art#hero-props-landmarks">地标性建筑</a></li></ul><p>一个项目中应该至少包含一个布景。</p><p>不要人心不足蛇吞象，再好的布景想法做不出来也是白搭。</p><h3 id="“Pile-of-beats”-approach"><a href="#“Pile-of-beats”-approach" class="headerlink" title="“Pile of beats” approach"></a>“Pile of beats” approach</h3><p>可用于基于战斗或是解密游戏的布景设计流程：</p><ol><li>构思，布局，白模搭建一个独立的战斗/谜题</li><li>对白模进行测试迭代，直到玩法被验证或被证实不可行</li><li>重复上述两步骤直到有足够原型（数十个）</li><li>基于需要来安排这些原型来构建节拍</li></ol><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220429205736.png" alt="screenshot of test chamber sign in Portal 1, with icons showing the different elements present in this puzzle"></p><h3 id="Teach-test-twist"><a href="#Teach-test-twist" class="headerlink" title="Teach, test, twist"></a>Teach, test, twist</h3><ul><li>Teach：教会玩家怎么玩</li><li>Test：稍微提升难度后，看看玩家到底会玩没有</li><li>Twist：可以开始魔改了</li></ul><p>“teach” and “test” beats in Test Chamber 10 of Portal 1, walkthrough let’s play video：</p><iframe width="805" height="453" src="https://www.youtube.com/embed/ZFwxnKY7CUo" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><h3 id="Critical-path"><a href="#Critical-path" class="headerlink" title="Critical path"></a>Critical path</h3><p>关键路径的几种形式：</p><ul><li>对于遭遇战，关键路径可能是击败敌人的理想策略</li><li>对于谜题，关键路径是可能最让人满意的解题思路</li><li>对于移动/跑酷游戏，关键路径是完成关卡的理想路线，更多内容参见<a href="https://book.leveldesignbook.com/process/layout/flow">Flow</a></li></ul><h3 id="Plotting-and-documentation"><a href="#Plotting-and-documentation" class="headerlink" title="Plotting and documentation"></a>Plotting and documentation</h3><p>Beats 不同的组织/可视化方式:</p><ul><li>Beat sheet<ul><li>文字形式的列表</li></ul></li><li>Flowchart<ul><li>可以展示 beats 之间关系</li></ul></li><li>intensity plot<ul><li>配有时间线和玩家行为的柱状图</li></ul></li></ul><h4 id="Beat-sheet"><a href="#Beat-sheet" class="headerlink" title="Beat sheet"></a>Beat sheet</h4><ul><li>一些可用于团队合作的在线黑板<ul><li><a href="https://trello.com/">Trello</a>, <a href="https://www.notion.so/">Notion</a>, <a href="https://miro.com/">Miro</a>, <a href="https://www.codecks.io/">Codecks</a></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220429210719.png" alt="internal pinboard for planning The Last Of Us (2013) by Naughty Dog from V&amp;A Videogames (2018)"></p><p>其实感觉像是 user journey？</p><h4 id="Flowchart"><a href="#Flowchart" class="headerlink" title="Flowchart"></a>Flowchart</h4><ul><li>在线 flowchart 工具<ul><li><a href="https://miro.com/">Miro</a></li></ul></li></ul><p>一些制作原则：</p><ul><li>保持简洁<ul><li>少词</li><li>省略不重要的节拍</li></ul></li><li>尽可能让其往一个方向“流”</li><li>根据 beat 类型对其进行区别着色</li><li>把大的流程图划分为多个小流程图</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220429211028.png" alt="flowchart design documentation for a stealth boss encounter in Dishonored, by Dana Nightingale"></p><h4 id="Graph"><a href="#Graph" class="headerlink" title="Graph"></a>Graph</h4><p>为了在《半条命 2》和《Left 4 Dead》中调整关卡节奏，Valve 设计师将节拍分为四类：</p><ul><li>探索、四处走动和导航空间。 通常是一个关卡的开始和结束。</li><li>战斗，与敌人战斗。</li><li>Choreo，一些对话或编排的脚本序列。 通常安排在在战斗之前或之后。</li><li>解密，找到物品藏匿处，打开一扇门。 用于分隔战斗序列。</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220429211405.png" alt="intensity graph for White Forest Inn encounter in Half-Life 2: Episode Two, GDC China 2014"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220429211519.png" alt="internal spreadsheet for Journey (2012) by thatgamecompany, from V&amp;A Videogames (2018)... note multiple rows for different experience goals, and the intensity bars at the top"></p><h3 id="Pacing-advice"><a href="#Pacing-advice" class="headerlink" title="Pacing advice"></a>Pacing advice</h3><ul><li>开始时舒缓而静谧</li><li>高低有致（松弛有度）</li><li>避免让最终 BOSS 或遭遇战成为强度最大的部分<ul><li>这里原文引了传统叙事理论中的 <a href="https://en.wikipedia.org/wiki/Three-act_structure">Three-Act Structure</a>, <a href="https://en.wikipedia.org/wiki/Dramatic_structur">Gustav Freytag’s Five-Act Structure</a>, and <a href="https://en.wikipedia.org/wiki/Poetics_(Aristotle)">Aristotle’s Poetics</a>。</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220429212124.png" alt="diagram of a typical five act plot structure by StoryboardThat... the vertical axis is better understood as &quot;suspense&quot; rather than &quot;intensity&quot;"></p><p>经典叙事理论当然有用，但也不要被其限制，有时候这样的手法会让人感觉过于老套。</p><h3 id="Multiplayer-pacing"><a href="#Multiplayer-pacing" class="headerlink" title="Multiplayer pacing"></a>Multiplayer pacing</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220429212519.png" alt="much of the pacing in multiplayer maps like League of Legends (left) or de_dust2 (right) depends heavily on travel time, layout, and flow"></p><p>竞技游戏中尤其要考虑平衡性问题，如双方到达相同地点的时间。如 CS 中需要让双方几乎在相同的时间到达阻塞点，详见<a href="https://zhuanlan.zhihu.com/p/24324182">这篇文章</a>。</p><h3 id="Open-world-nonlinear-pacing"><a href="#Open-world-nonlinear-pacing" class="headerlink" title="Open world / nonlinear pacing"></a>Open world / nonlinear pacing</h3><p>开放世界中的节奏需要通过关卡布局以及<a href="https://book.leveldesignbook.com/process/blockout/metrics">Metrics</a> 来把控。</p><p>随着与目标的距离越来越近，通常会有更多的阻碍物出现。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220429213122.png" alt="open world mission diagram with safe observation area in green and high security objective area in red, for Assassin&#39;s Creed, by Phillippe Bergeron for GDC 2016: &quot;Level Design Workshop: 360 Approach for Open World Mission Design&quot;"></p><h3 id="Against-pacing"><a href="#Against-pacing" class="headerlink" title="Against pacing"></a>Against pacing</h3><p>规划 pacing 当然有用，但只限于早期。随着项目推进，要更关注于做出来的东西本身。</p><h3 id="To-review…"><a href="#To-review…" class="headerlink" title="To review…"></a>To review…</h3><p>Pacing 是关卡中理想的活动/事件顺序或节奏。Beat 代表着一个活动/事件.</p><ul><li>单人游戏关卡通常有清晰地关键路径和大的布景。</li><li>对于带有战斗和解密系统的“遭遇式”游戏，先创建一堆 beats 再来组合的方法通常不错。记得 teach-test-twist。</li><li>多人游戏的 pacing 更多由关卡布局调控而不是由预制事件调控。</li><li>开放世界/非线性游戏的 pacing 需要更宽松的“区域”方法。越靠近核心区域，强度越高。</li></ul><p>Pacing 的设计文档可能包括：</p><ul><li>Beat sheet<ul><li>书面性的大纲，pacing 列表</li></ul></li><li>Flowchart<ul><li>带有箭头和逻辑标识的可视化大纲</li></ul></li><li>Graph<ul><li>根据玩家指标（如 intensity）绘制图形</li></ul></li></ul><p>这些文档在开发时通常会过时，按需更新或舍弃。</p><h3 id="Further-reading-on-pacing"><a href="#Further-reading-on-pacing" class="headerlink" title="Further reading on pacing"></a>Further reading on pacing</h3><ul><li>A lot of industry theory about pacing / plotting comes from film and TV screenwriting, where <a href="https://en.wikipedia.org/wiki/Robert_McKee">Robert McKee</a>‘s influential book <em>Story: Substance, Structure, Style and the Principles of Screenwriting</em> (1997) looms large. Critics argue that McKee’s methods result in stale formulaic storytelling, but for better or worse, it’s hard to deny his influence.</li><li>  The narrative design field has spent much more time thinking about pacing than level designers. Anytime an author talks about “plot”, they’re talking about pacing, and you can relate their insights to level design.</li></ul><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/04/28/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-LevelDesign </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Level Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>案例汇总</title>
      <link href="2022/04/28/index-showcase/"/>
      <url>2022/04/28/index-showcase/</url>
      
        <content type="html"><![CDATA[<h2 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h2><ul><li><a href="https://haodongliao.itch.io/yin-yang-messenger">Yin Yang Messenger Game Demo</a></li><li><a href="https://haodongliao.itch.io/my-3d-platformer">Space Jumper Game Demo</a></li><li><a href="https://medill-east.github.io/2021/10/26/for-love-demo-showcase-and-analysis/">For Love Demo 展示及分析</a></li></ul><h2 id="策划案"><a href="#策划案" class="headerlink" title="策划案"></a>策划案</h2><ul><li><a href="https://medill-east.github.io/2021/07/26/shen-jiang-san-guo-first-recharge-plan/">神将三国首充策划案</a></li></ul><h2 id="体验报告"><a href="#体验报告" class="headerlink" title="体验报告"></a>体验报告</h2><ul><li><a href="https://medill-east.github.io/2021/07/26/shen-jiang-san-guo-game-experience-report/">神将三国游戏体验报告</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Blog-Index </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Index </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏拆解/分析/设计反思汇总</title>
      <link href="2022/04/28/index-gameanalysis/"/>
      <url>2022/04/28/index-gameanalysis/</url>
      
        <content type="html"><![CDATA[<h2 id="拆解分析"><a href="#拆解分析" class="headerlink" title="拆解分析"></a>拆解分析</h2><ul><li><a href="https://medill-east.github.io/2022/03/06/teardown-analysis-diabolo/">暗黑破坏神 3 拆解分析</a></li><li><a href="https://medill-east.github.io/2021/12/12/teardown-analysis-gunfire-reborn/">枪火重生 Teardown Analysis</a></li></ul><h2 id="目标体验及设计反思"><a href="#目标体验及设计反思" class="headerlink" title="目标体验及设计反思"></a>目标体验及设计反思</h2><ul><li><a href="https://medill-east.github.io/2021/11/16/thinking-of-the-florence/">Florence 目标体验及设计反思</a></li><li><a href="https://medill-east.github.io/2021/11/06/thinking-of-the-clash-heroes/">Clash Heroes 目标体验思考及设计反思</a></li><li><a href="https://medill-east.github.io/2021/07/26/analysis-of-league-of-legends-and-glory-of-kings-players-segmented/">英雄联盟与王者荣耀玩家分段分析</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Blog-Index </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Index </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>随想汇总</title>
      <link href="2022/04/28/index-thinking/"/>
      <url>2022/04/28/index-thinking/</url>
      
        <content type="html"><![CDATA[<h2 id="随想"><a href="#随想" class="headerlink" title="随想"></a>随想</h2><ul><li><a href="https://medill-east.github.io/2021/11/02/drinking-games/">喝酒游戏列举与思考</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Blog-Index </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Index </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220428 - Level Design Book - BOOK 1. PROCESS - Pre-production</title>
      <link href="2022/04/28/20220428-leveldesignbook-pre-production/"/>
      <url>2022/04/28/20220428-leveldesignbook-pre-production/</url>
      
        <content type="html"><![CDATA[<h2 id="Pre-production"><a href="#Pre-production" class="headerlink" title="Pre-production"></a>Pre-production</h2><ul><li><p><a href="https://book.leveldesignbook.com/process/preproduction">原文链接</a></p></li><li><p><a href="https://medill-east.github.io/2022/04/28/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></p></li></ul><blockquote><p>如何用机制（mechanics），体验目标（experience goals）和支柱（pillars）来规划游戏关卡</p></blockquote><h3 id="What-is-pre-production"><a href="#What-is-pre-production" class="headerlink" title="What is pre-production?"></a>What is pre-production?</h3><blockquote><p>计划（plans）不那么重要，但是规划这件事本身（planning）很关键。——某个人</p></blockquote><p><strong>预生产</strong>是项目的早期阶段，在这一阶段你产生想法，并且试图来弄清这个项目到底是干嘛的。这一阶段需要回答一些宏观的设计问题：</p><ul><li>你在做的是什么<ul><li>玩家们能在这里干什么（机制，体验目标，节奏（pacing））</li><li>哪一部分是最重要的（支柱）</li></ul></li><li>你要如何来进行制作<ul><li>面对同一问题时，别人是怎么解决的（research，调研）</li><li>你需要多少时间，这可行吗？（scope，周期）</li></ul></li></ul><p>你对于这些问题的答案在项目推进过程中会发生改变，这没问题。</p><p>规划是有用的，但它并不神奇。直到你真的开始动手制作之前，你不会完全理解你所做的东西。</p><hr><h3 id="Project-planning"><a href="#Project-planning" class="headerlink" title="Project planning"></a>Project planning</h3><p>“规划一个关卡”具有多种形式。一些人在真正落实到某一个概念前先制作并测试小型的原型，你也可以先写下设计目标以及限制。</p><p>为了能实现团队合作的目标，你必须制定计划以及确保不同计划之间有充分的交流，否则你会对其他人失望，项目最终会以失败告终。</p><p>但对于一个小型的、单人的、爱好性质的项目，规划没有那么重要。制定一个简单的计划，然后享受整个即兴创作和发现过程中的兴奋与刺激吧。</p><h4 id="Minimal-Checklist"><a href="#Minimal-Checklist" class="headerlink" title="Minimal Checklist"></a>Minimal Checklist</h4><p>如果你能够回答以下几个基本问题，就足以开始一个小型的单人 jam 项目了：</p><ul><li><input disabled="" type="checkbox"> 电梯演讲<ul><li>在三句话之内，描述项目概念以及什么让这个项目变得有趣</li></ul></li><li><input disabled="" type="checkbox"> 工具<ul><li>你使用什么引擎或工具？</li><li>它们适合于这个项目吗？</li><li>从功能性而言，你有什么问题吗？</li></ul></li><li><input disabled="" type="checkbox"> 粗略划定周期<ul><li>这个项目将花费多长时间</li><li>多少个关卡</li><li>关卡大小（大关卡还是小关卡）</li><li>工作量（大关卡指的是多大的关卡）</li></ul></li></ul><h4 id="Recommended-checklist"><a href="#Recommended-checklist" class="headerlink" title="Recommended checklist"></a>Recommended checklist</h4><p>但实际上，除了以上基本问题外，你还应该能够回答以下设计相关问题：</p><ul><li><input disabled="" type="checkbox"> 支柱<ul><li>这个项目最重要的 2-3 个主题/特性是什么</li></ul></li><li><input disabled="" type="checkbox"> 目标体验<ul><li>你期望玩家们在面对每个关卡时有什么样的反应</li><li>或者说期待他们有什么样的情绪或行为</li></ul></li><li><input disabled="" type="checkbox"> 机制<ul><li>玩家最常经历或使用的活动/交互/技能是什么</li></ul></li><li><input disabled="" type="checkbox"> 资源列表<ul><li>对于每一个关卡，需要什么样的模型，纹理，音效</li><li>已经准备好这些资源了吗，还是需要某人来进行制作</li></ul></li></ul><h4 id="Full-checklist"><a href="#Full-checklist" class="headerlink" title="Full checklist"></a>Full checklist</h4><p>对于一个三人以上或是预期三个月以上的项目，还需要进一步回答下列问题：</p><ul><li><input disabled="" type="checkbox"> 节奏<ul><li>在每一个关卡具体发生了什么</li><li>为什么会发生这些</li><li>关卡之间怎么连接</li></ul></li><li><input disabled="" type="checkbox"> 调研<ul><li>关卡的设计启发/来源/参考是什么</li><li>团队成员之间对于同一件事是否有相同的理解和解释</li><li>以更大的文化或者产业视角，如何看待这个项目</li></ul></li><li><input disabled="" type="checkbox"> 世界观架构<ul><li>这些关卡所在的世界/宇宙是什么样子的</li><li>是谁创造了这些地方</li><li>什么样的逻辑/情绪指导着关卡建造和使用？（不是很能理解这里的 use 使用的指代，也许指的是游玩？）</li><li>详细的周期指定<ul><li>每一周，甚至更加具体的事件段，应该在做什么</li><li>在最终发版前，什么样的特性/关卡是锦上添花，有了更好，但是却可以被砍掉的</li><li>这一过程实际非常复杂，一些商业化工作室甚至聘请一个或多个制作人来主要负责周期</li></ul></li></ul></li></ul><h3 id="Mechanics"><a href="#Mechanics" class="headerlink" title="Mechanics"></a>Mechanics</h3><p>游戏机制指的是在游戏中任何重复出现的活动，系统或策略，基本是玩家经常进行或使用的任何行为。核心机制是一个游戏最常被使用和基础的动作或是系统，而不太频繁的活动可被称为次要机制。</p><blockquote><p>何为“机制（mechanic）”有诸多讨论，本书中融合了各家意见。如果想详细了解机制之争，可以<a href="https://en.wikipedia.org/wiki/Game_mechanics">看这里</a>。</p></blockquote><p>一些讨论游戏机制的例子：</p><ul><li>超级马里奥 64 的游戏机制由在平台间奔跑跳跃以到达出口的核心机制组成。一些马里奥 64 的关卡也含有通过撞击砖块来触发的隐藏快捷通道等次要机制。</li><li>Doom 的核心机制包括奔跑和射击，几乎没有或者只含有少量的跳跃。有时玩家能够引诱怪物们互相攻击，这是一种被称为内斗（in-fighting）的次要机制。</li><li>《神偷：暗黑计划 (Thief: The Dark Project)》是一款关于避免直接冲突的潜行游戏，其核心机制是响亮、快速的脚步声会吸引守卫。和马里奥和 Doom 相反，该游戏不鼓励快速移动，奔跑也是一个次要机制。</li></ul><p>以上的三款游戏在某种程度上是类似的——都是 3D 动作游戏，都需要在不死亡的前提下到达出口。然而，它们也拥有不同于彼此的规则和游戏机制，而这些其实意味着不同的关卡设计方法。若是使用制作马里奥风格的平台跳跃关卡手法来制作 Doom 关卡可能会让其非常难，而使用制作 Doom 的关卡手法来制作神偷的关卡也会使其难得难以想象。</p><p>不要为了这些品类而设计，不要限于熟悉的模式和惯例中。要为了实际存在的游戏而进行设计，感受游戏本身。如果你是在为一个已经存在的游戏来制作 mod，至少先玩这个游戏几个小时，也玩玩其他社区作品。看看 YouTube 上的游玩视频，并注意其他玩家（应该指的是其他 modder？）如何结合不同的机制和游戏系统。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220428131527.png" alt="超级马里奥 64 游戏手册的某一页，其中详细描述了不同的动作和机制"></p><h4 id="What-if-you-haven’t-finalized-mechanics-yet"><a href="#What-if-you-haven’t-finalized-mechanics-yet" class="headerlink" title="What if you haven’t finalized mechanics yet?"></a>What if you haven’t finalized mechanics yet?</h4><p>不知道机制时，创建关卡是很难的。机制和关卡互相依存。不在关卡中测试就无法评估机制，而在确立机制前也没办法很好地评估一个关卡。</p><p>如果改变机制，你最终会做很多无用功，得到很多基于废弃机制的过时关卡。但如果没有建立足够的测试关卡来衡量机制的潜力，你最终可能会得到一个第一关后就变得无趣的无聊机制。</p><p>在游戏开发的整个过程中，你很可能会推翻或者重做关卡。你甚至可能需要重做同一关好几次。没关系，不要将这视作一种无用功，把每一个废弃的版本都视作宝贵的调研。这就是为何我们称之为游戏开发——开发是一个耗费时间的渐进过程。搞清楚什么是一个好的关卡和好的游戏是需要花费时间的。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220428143052.png" alt="大金刚（1981）的早期设计文档，其中展现了机制，控制和玩法流向。取自 Shigeru Miyamoto (from https://twitter.com/forestillusion/status/1443284433268666368/"></p><h4 id="Build-test-maps"><a href="#Build-test-maps" class="headerlink" title="Build test maps"></a>Build test maps</h4><p>作为规划过程的一部分，游戏设计师们经常需要制作简易的可玩地图——一种 blockout 风格的测试地图。这些简陋的关卡只限于开发者内部使用，并且通常不会在最终的公开版本中发布。</p><p>从我们的目的而言，这些地图基本不含任何的关卡设计，它们只是大的方形场地，填充着随机的物体和 NPC。</p><p>但这并不意味着这些地图没用。这些简单的用于测试的可玩地图对于测试游戏机制、物体表现以及游戏整体感觉是非常中啊哟的。</p><p>有关构建用于内部使用的测试地图的更多内容，可以<a href="https://book.leveldesignbook.com/process/blockout/metrics">看这里</a>。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/GodOfWar2014_CombatPrototype.gif" alt="在简单的测试地图中测试战神（2018）的战斗原型，来源为 https://80.lv/articles/evolution-of-god-of-war-from-2014-to-2018/"></p><h3 id="Experience-Goals"><a href="#Experience-Goals" class="headerlink" title="Experience Goals"></a>Experience Goals</h3><p>体验目标指的是让玩家在游玩过程中能够理解或经历的某种想法，感觉，或是活动。为了提出概念性的目标体验，可以试着补充下面的句子：“在这一关中，玩家应该【学会/感到/经历】”</p><ul><li>在这一关中，玩家应该…<ul><li>学会如何使用双跳能力（教程体验）</li></ul></li><li>在这一关中，玩家应该…<ul><li>感到脆弱，在到达安全屋后放松下来（情感体验）</li></ul></li><li>在这一关中，玩家应该<ul><li>躲避致命的陷阱并在最后解锁一条捷径。 （活动体验）</li></ul></li><li>在这一关中，玩家应该…<ul><li>感觉就像他们正在逃离中世纪的监狱。 （幻想体验）</li></ul></li></ul><h4 id="Advice-for-setting-goals"><a href="#Advice-for-setting-goals" class="headerlink" title="Advice for setting goals"></a>Advice for setting goals</h4><ul><li>要具体</li></ul><p>目标体验不必复杂或深刻，但明确而清晰的体验目标可以帮助你决定要构建的内容以及辨别哪些是不必要的。<br>比如，“玩家应该玩得高兴”，这是一个模糊的目标，这样的目标无法帮助你进行设计决策。玩家应该体会到什么类型的乐趣？轻松休闲的乐趣，还是一种深度参与的乐趣？<br>或者说，如果目标是“让玩家感到恐惧”，那么具体指的是什么类型的恐惧？有身体恐惧（body horror），存在恐惧（existential horror），对失败的恐惧，对拒绝的恐惧，中年危机等。</p><ul><li>从玩家角度思考</li></ul><p>体验目标应该避免过度抽象，试着从玩家对其进行思考。理想情况下，当玩家游玩这一关卡时，他们会有怎样的理解，或如何描述他们的感受呢？<br>比如说，“玩家应该享受非线性（non-linearity）”是一个大多数人难以把握或甚至都不会考虑到的抽象结构。这就不是一个有用的体验目标。这里所指的享受是什么意思，非线性又是什么意思呢？<br>想象一下在玩家游玩之后进行一场采访，关于这个关卡，你希望他们说些什么呢？如果他们说“感觉，很…非线性…”，你可能会觉得这是种侮辱。</p><ul><li>定义多重目标</li></ul><p>关卡通常都不止有一个体验目标。即使是一个简单直白的教程关卡，也可以从额外设定的某些叙事情节，幻想或情绪体验目标中受益。这些体验目标肯定不如教会玩家如何游玩来得重要，但它们仍然能引导设计决策。<br>比如，“玩家应该一次性面对五个敌人”是关卡中一个和战斗相关的机制目标。但是有太多的细节还有待确定。一次面对五个敌人应该是一种让玩家感到容易还是困难的体验？这一关卡该被设计在什么地方，是否需要为了可以容纳更多的敌人而设计更大的空间？</p><p>让我们尝试为其添加额外的体验设计目标：“玩家应该感到不知所措，但之后发现了一个强化道具”，“玩家应该觉得他们正在保护营地免受丧尸攻击”等等。这样就将足智多谋，防御，生存，和家园的主题引入了进来。营地的概念意味着应该有一个中等大小的户外场地，现在可以就具体的营地类型进行调研（军事营地？徒步旅行营地？冬季营地？），从而让规划更加具体。</p><h3 id="Pillars"><a href="#Pillars" class="headerlink" title="Pillars"></a>Pillars</h3><p>贯穿整个项目的最重要的目标体验就是支柱（pillars）——结构性地支撑和证明整个设计的最重要的想法。设定 pillars 可以帮助团队在项目推进过程中有一个共同视野，并且免除那些并不直接服务于主要目标的“冗余”工作。<br>对于每一个关卡或地区，pillars 是一种帮助你概念化其短期体验目标的设计规划工具。你的关卡的每一个更小的体验目标或是玩法节奏都应该某种程度上服务于你的 pillars，并最终服务于更宏观的游戏体验。<br>为了便于这些大的设计目标在团队中进行沟通（原文用的 Internalize），用简短的短语或单词来为每个 pillar 命名。比如索尼圣莫尼卡的战神（2018）的内部设计 pillars 是战斗，父/子和探索：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220428221919.png" alt="战神（2018）的核心体验目标/pillars，由 SIE Santa Monica Studio 呈现"></p><p>因为这是一个具有高额预算的 3A 游戏，他们的体验目标也包括了像是“高光学【动作捕捉】保真度”这样的生产价值目标。<br>你可能在想，这个和角色动画有关的目标与关卡设计关系不大，但想想一个让动捕角色动画看起来很糟的关卡——谁应该对此负责来改变工作呢，关卡设计师还是动画师？<br>因为整个团第都已经同意将动捕动画作为具有高优先级的 pillar，这样的实现公示意味着关卡设计师也应该调增关卡以适应已有的动画。<br>如此，pillars 能够帮助我们来定义什么才是对整个项目而言重要的东西，从而使得整个开发过程中能够做出更加一致和连贯的决策。</p><hr><h3 id="Example-“Mask-of-the-Rose”"><a href="#Example-“Mask-of-the-Rose”" class="headerlink" title="Example: “Mask of the Rose”"></a>Example: “Mask of the Rose”</h3><p>Mask of the Rose 是一个由 Failbetter Games 制作的 2D 视觉小说/基于选择的叙事游戏。尽管它并不是一个具有 3D 关卡的射击游戏，它也有一些相似的 pre-production 需求：</p><blockquote><p>“在 Failbetter，当我们从预生产全面投入生产中时，游戏必须有一个合理紧凑的设定好的周期，必须建立用于生产不同类型内容的管线，并且有关游戏本质的问题都有相应的答案。<br>什么样的问题？在 Mask of the Rose 项目中，它们包括：<br>将使用什么引擎和中间件来制作游戏？<br>制作管线是什么样的，它是自动化的吗？<br>游戏中会有哪些【玩法系统】？是否已经对这些系统进行了充分的原型设计？<br>在游戏中会出现多少个角色？制作角色的美术流程是什么？玩家如何自定义主角？”<br>—— Stuart Young, <a href="https://www.failbettergames.com/news/leaving-pre-production-on-mask-of-the-rose">“Leaving Pre-Production on Mask of the Rose”</a>, 16 August 2021</p></blockquote><h3 id="Example-Dishonored-2-“Clockwork-Mansion”"><a href="#Example-Dishonored-2-“Clockwork-Mansion”" class="headerlink" title="Example: Dishonored 2, “Clockwork Mansion”"></a>Example: Dishonored 2, “Clockwork Mansion”</h3><p>Dishonored 是一个有关探索复杂地区的 3A 品质第一人称潜行动作 RPG 游戏系列。在 耻辱 2 中，有一个“发条大厦”关卡，其中的关卡结构会动态变化。</p><p>Arkane Studios 设计师 Dana Nightingale 构建了一个概念验证预生产原型：（原文括号中为 Twitter thread，不是很理解这里所代表的含义）</p><blockquote><p>“我在 2013 年初，早在该地图被获准加入游戏中之前就创立了这个概念验证原型。当时的想法介于“它好棒”和“我还是应该继续打磨”之间。确实如此，但在地图正式确定之前，仍有超过一年的时间。<br>但可以肯定的是，我能够让一堆方块移动变形为我想要的样子。如果使用真实几何来做是不可能的，这也是我制作这个原型的原因。<br>这个原型引入了房间的概念，这些房间像货物集装箱一样移动和嵌入不同地方，让整个地图的布局完全动态，并且没有使房间产生形变。很高兴我们没有走让房间形变的那个方向。<br>…<br>在对其他原型进行了将近一年的工作后，是时候重新审视这一关卡并最终对其进行验证了。我做了一个新的版本，其中曲折的房间更少了，但是更加强调“场景背后”的区域。”<br>—— <a href="https://twitter.com/DanaENight/status/1448582302855045124">Dana Nightingale (@DanaENight), 14 October 2021</a></p></blockquote><p>这个关卡在预生产阶段花费了 7 个月，在大约 18 个月后被纳入了最终的版本中。</p><iframe width="560" height="315" src="https://www.youtube.com/embed/-BgynKsHKUo" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><hr><h3 id="To-review…"><a href="#To-review…" class="headerlink" title="To review…"></a>To review…</h3><ul><li>机制是游戏中的重复系统和重复交互<ul><li>核心机制是出现频率最高的，次要机制偶尔会丰富更有经验的玩家的游戏体验</li></ul></li><li>体验目标是整个关卡与玩家有关的设计目标</li><li>Pillars 是整个游戏的主要设计目标。想让玩家从中学习、感受或理解什么？</li><li>多大程度上需要预生产的规划？这需要具体情况具体分析：<ul><li>小型的随意项目可以几乎不需要规划<ul><li>大型的长期项目可能需要一个大型的的内部 wiki</li><li>对于从来没有一起合作过的团队，预生产的规划可以帮助合作者们相互协调和信任</li></ul></li></ul></li><li>规划可以帮助你，但不要让其限制你。一旦已经进入项目中，根据需要来改变或者重新制定计划。</li></ul><h3 id="Now-what"><a href="#Now-what" class="headerlink" title="Now what?"></a>Now what?</h3><ul><li>Pre-production in more detail:<ul><li><a href="https://medill-east.github.io/2022/04/30/20220430-leveldesignbook-pre-production-research/"><strong>Research</strong></a> is vital for projects focusing on story or realism.</li><li>Single player projects require special attention to <a href="https://medill-east.github.io/2022/04/29/20220429-leveldesignbook-pre-production-pacing/"><strong>pacing</strong></a>.</li><li>Projects often start too big and must be <a href="https://medill-east.github.io/2022/05/02/20220502-leveldesignbook-pre-production-scope/"><strong>scoped</strong></a> down.</li><li>Big narrative projects benefit from <a href="https://medill-east.github.io/2022/05/01/20220501-leveldesignbook-pre-production-worldbuilding/"><strong>worldbuilding</strong></a>.</li></ul></li><li>Or you might move on to the <a href="https://book.leveldesignbook.com/process/layout"><strong>layout</strong></a> phase of level design.</li></ul><h3 id="Further-reading-and-resources"><a href="#Further-reading-and-resources" class="headerlink" title="Further reading and resources"></a>Further reading and resources</h3><ul><li><a href="https://www.youtube.com/watch?v=R75g3elj7y4"><strong>“A Series of First Steps - Overcoming the Digital Blank Page”</strong> by Seth Marinello</a> (GDC 2014)</li><li><a href="https://www.youtube.com/watch?v=CpOoTAVeEcU"><strong>“An Approach to Holistic Level Design”</strong> by Steve Lee</a> (GDC 2017)</li><li><a href="https://www.youtube.com/watch?v=kzQDVtysXjA"><strong>“Finding Duskers: Innovation Through Better Design Pillars”</strong> by Tim Keenan</a> (GDC 2017)</li><li><a href="https://www.playfulproductionprocess.com/"><strong>“A Playful Production Process”</strong></a> (2021) by Richard Lemarchand is an approachable textbook that introduces game production methods, ideal for late high school / university students.</li><li>  <a href="https://en.wikipedia.org/wiki/Pre-production">Pre-production (Wikipedia)</a> is a formalized process for film and music industries.</li></ul><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/04/28/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-LevelDesign </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Level Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Level Design Book 随译/笔记</title>
      <link href="2022/04/28/20220428-leveldesignbook-toc/"/>
      <url>2022/04/28/20220428-leveldesignbook-toc/</url>
      
        <content type="html"><![CDATA[<h1 id="Level-Design-Book-随译-笔记"><a href="#Level-Design-Book-随译-笔记" class="headerlink" title="Level Design Book 随译/笔记"></a>Level Design Book 随译/笔记</h1><h2 id="Why-Note"><a href="#Why-Note" class="headerlink" title="Why Note"></a>Why Note</h2><p>最近在学习关卡设计有关知识，对《Level Design Book》中相关章节进行随译/笔记，特此记录。</p><h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>以下基本信息引用自<a href="https://book.leveldesignbook.com/">官网</a>：</p><blockquote><p><strong>The Level Design Book</strong> gathers level design knowledge for 3D video games in an approachable, up-to-date, and critical way. It is for level designers of all experience levels and game engines.</p></blockquote><h2 id="Content"><a href="#Content" class="headerlink" title="Content"></a>Content</h2><h3 id="BOOK-1-PROCESS"><a href="#BOOK-1-PROCESS" class="headerlink" title="BOOK 1. PROCESS"></a>BOOK 1. PROCESS</h3><h4 id="Pre-production"><a href="#Pre-production" class="headerlink" title="Pre-production"></a>Pre-production</h4><ol><li><a href="https://medill-east.github.io/2022/04/28/20220428-leveldesignbook-pre-production/">20220428 - Level Design Book - BOOK 1. PROCESS - Pre-production</a></li><li><a href="https://medill-east.github.io/2022/04/29/20220429-leveldesignbook-pre-production-pacing/">20220429 - Level Design Book - BOOK 1. PROCESS - Pre-production - Pacing</a></li><li><a href="https://medill-east.github.io/2022/04/30/20220430-leveldesignbook-pre-production-research/">20220430 - Level Design Book - BOOK 1. PROCESS - Pre-production - Research</a></li><li><a href="https://medill-east.github.io/2022/05/01/20220501-leveldesignbook-pre-production-worldbuilding/">20220501 - Level Design Book - BOOK 1. PROCESS - Pre-production - Worldbuilding</a></li><li><a href="https://medill-east.github.io/2022/05/02/20220502-leveldesignbook-pre-production-scope/">20220502 - Level Design Book - BOOK 1. PROCESS - Pre-production - Scope</a></li></ol><h4 id="Combat"><a href="#Combat" class="headerlink" title="Combat"></a>Combat</h4><ol><li><a href="https://medill-east.github.io/2022/05/03/20220503-leveldesignbook-combat/">20220503 - Level Design Book - BOOK 1. PROCESS - Combat</a></li><li><a href="https://medill-east.github.io/2022/05/04/20220504-leveldesignbook-combat-enemydesign/">20220504 - Level Design Book - BOOK 1. PROCESS - Combat - Enemy Design</a></li><li><a href="https://medill-east.github.io/2022/05/05/20220505-leveldesignbook-combat-encounter/">20220505 - Level Design Book - BOOK 1. PROCESS - Combat - Encounter</a></li><li><a href="https://medill-east.github.io/2022/05/06/20220506-leveldesignbook-combat-balance/">20220506 - Level Design Book - BOOK 1. PROCESS - Combat - Balance</a></li></ol><h2 id="暂告段落"><a href="#暂告段落" class="headerlink" title="暂告段落"></a>暂告段落</h2><p>后面有些部分感觉并未写完。毕竟本“书”还处于不断填坑过程中，暂时打算等坑再填填再来继续随译/笔记。</p><p>至目前为止其实看下来更多是一个体系梳理的感觉，但要真正落到生产设计中，感觉还需要更精细化和深入的内容。后面可能会暂时转向关卡设计的另一本书。</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-LevelDesign </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Level Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习笔记汇总</title>
      <link href="2022/04/28/index-notes/"/>
      <url>2022/04/28/index-notes/</url>
      
        <content type="html"><![CDATA[<h2 id="学习笔记"><a href="#学习笔记" class="headerlink" title="学习笔记"></a>学习笔记</h2><ul><li><a href="https://medill-east.github.io/2022/05/02/20220502-gdc2017-zelda/">GDC2017——塞尔达：旷野之息的三角之力</a></li></ul><h2 id="游戏关卡设计相关"><a href="#游戏关卡设计相关" class="headerlink" title="游戏关卡设计相关"></a>游戏关卡设计相关</h2><ul><li><a href="https://medill-east.github.io/2022/04/28/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></li></ul><h2 id="图形学相关"><a href="#图形学相关" class="headerlink" title="图形学相关"></a>图形学相关</h2><ul><li><a href="https://medill-east.github.io/2021/07/16/games101-introduction-to-mordern-computer-graphics/">GAMES101——现代计算机图形学入门笔记</a></li></ul><h2 id="读书笔记"><a href="#读书笔记" class="headerlink" title="读书笔记"></a>读书笔记</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Blog-Index </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Index </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>暗黑破坏神 3 拆解分析</title>
      <link href="2022/03/06/teardown-analysis-diabolo/"/>
      <url>2022/03/06/teardown-analysis-diabolo/</url>
      
        <content type="html"><![CDATA[<h2 id="《-暗黑破坏神-3》-Teardown-Analysis"><a href="#《-暗黑破坏神-3》-Teardown-Analysis" class="headerlink" title="《 暗黑破坏神 3》 Teardown Analysis"></a>《 暗黑破坏神 3》 Teardown Analysis</h2><h3 id="游戏概况"><a href="#游戏概况" class="headerlink" title="游戏概况"></a>游戏概况</h3><ul><li>开发公司：暴雪</li><li>上线时间：2012 年 5 月 15 日</li><li>类型：RPG + PVE 刷宝</li><li>特色：<ul><li>多种职业+套装+技能组合可供选择</li><li>几乎无尽的难度可供挑战</li><li>鲜明的装备阶梯</li><li>不断变强的可能性（巅峰等级系统）</li><li>有趣的隐藏机制（藏宝秘窟、奶牛关等）</li></ul></li></ul><h3 id="游戏截图展示"><a href="#游戏截图展示" class="headerlink" title="游戏截图展示"></a>游戏截图展示</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/screenshot.jpg" style="zoom: 50%;" /><h3 id="Core-Loop-展示"><a href="#Core-Loop-展示" class="headerlink" title="Core Loop 展示"></a>Core Loop 展示</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/CoreLoopDiablo202203061208.jpeg"  /><p>这次的拆解分析会采用和上次稍不同的方式来进行。首先会从玩家视角出发对其需求进行分析，而后会从策划视角出发对一些拆解过程中所思所想的设计问题进行分析思考。</p><h3 id="玩家视角-需求分析"><a href="#玩家视角-需求分析" class="headerlink" title="玩家视角 - 需求分析"></a>玩家视角 - 需求分析</h3><p>从 Coreloop 中可以看出，玩家追求基本分为三大方面，即观看新剧情、角色能力提升，以及天梯排名提升。其中观看新剧情的需求主要是满级前的基础需求，而角色能力提升是满级后的进阶需求，最终的天梯排名提升算是玩家的最终需求，三种需求分别对应基础玩家，进阶玩家和顶级玩家。</p><h4 id="玩家基础需求-观看新剧情"><a href="#玩家基础需求-观看新剧情" class="headerlink" title="玩家基础需求 - 观看新剧情"></a>玩家基础需求 - 观看新剧情</h4><p>可以从 Coreloop 中看到，新剧情的解锁需要完成剧情任务。而剧情任务完成后一般可以获得经验奖励以及可能的普通装备奖励。这一阶段的基础需求完成后，玩家便会产生更高层级的角色能力提升需求。</p><h4 id="玩家进阶需求-角色能力提升"><a href="#玩家进阶需求-角色能力提升" class="headerlink" title="玩家进阶需求 - 角色能力提升"></a>玩家进阶需求 - 角色能力提升</h4><p>在主线剧情通关后，玩家等级基本会达到接近满级的水平，此时可以选择通过以下几种方式来升到满级：</p><ul><li>完成悬赏任务</li><li>到普通地图中杀怪</li><li>到秘境地图中杀怪</li></ul><p>而升到满级之后，玩家的技能和天赋也会全部解锁，此时算是正式开始了下一阶段，渴望提升角色能力。</p><p>可以从 Coreloop 中看到，玩家角色能力的提升有两大途径，即装备增强和角色增强，下面会分别对两种途径进行梳理。</p><h5 id="角色能力提升-装备增强"><a href="#角色能力提升-装备增强" class="headerlink" title="角色能力提升 - 装备增强"></a>角色能力提升 - 装备增强</h5><p>游戏中的装备分为次级(灰色)/高等(白色)/魔法(蓝色)/稀有(黄色)/传奇/ 5种，其中传奇为橙色，套装为绿色。不同装备带有不同的词缀以及数值。后文中会主要使用颜色对装备进行指代，普通装备包括了灰色，白色，蓝色和黄色装备。传奇装备包括了橙色和绿色装备。</p><ul><li>新普通装备</li></ul><p>从 Coreloop 中可以看到，新普通装备的获取可以通过以下途径：1. 完成剧情任务；2. 地图中击杀掉落；3. 血岩碎片抽取。<br>普通装备主要服务于满级前的阶段，属于过渡装备，所以其淘汰率很高，后期可能会有两种用途：1. 分解之后获取材料；2. 黄色品质装备可在卡奈模仿处消耗材料升级为同类传奇品质装备。</p><ul><li>新传奇装备</li></ul><p>如前所述，传奇装备包含了橙色传奇装备和绿色套装装备。不仅如此，传奇品质之上还有更高品质的远古传奇和太古传奇装备。传奇装备也是角色能力提升的核心。这里一并将剩余几个装备增强机制介绍后统一梳理玩家通过装备增强角色的思路。</p><ul><li><p>装备附魔（洗装备属性）<br>装备附魔是一种通过重置现有装备的其中一条属性来实现的装备增强方式，即所谓的“洗装备属性”。同一件装备只能洗一条属性，并且每一条原属性可洗出的属性类型是预设的（但数值随机）。</p></li><li><p>宝石镶嵌<br>宝石镶嵌是一种通过将宝石镶嵌到有孔装备中来达到增强装备目的的方式，不同的宝石镶嵌到不同部位中会有不同的效果。</p></li><li><p>卡奈魔方能力<br>卡奈魔方是游戏中的一种特殊道具，其获取需要通过在特定普通地图中完成特殊任务。最常用的卡奈魔方能力可能涉及：1. 属性萃取；2. 套装转换；3. 稀有物品升级。</p></li></ul><p><em>属性萃取</em>：传奇物品本身可能会带有特殊属性（橙字描述），但由于身上可装备物品的数量限制，很有可能出现想要 A 和 B 装备的特殊属性，但是只能装备一件装备的情况。可以通过卡奈魔方萃取 A 的特殊属性（A 在被萃取后会被毁坏）并装备该词条，此时相当于共同拥有了 A 和 B 两件装备的特殊属性。</p><p><em>套装转换</em>：游戏过程中很可能出现的情况是一个套装的相同部件重复爆出了，此时可以通过卡奈魔方的套装转换功能，通过消耗材料将该部件转换为同一套装下的其它部件（有可能还是会转换出相同部件）。</p><p><em>稀有物品升级</em>：该功能可以通过消耗材料对稀有物品进行品质升级。但因为消耗材料较多，所以并不是一种性价比很高的方式，玩家通常在缺少特定传奇装备情况下才会使用该功能来获取传奇物品。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220306232538.png" style="zoom: 33%;" /><p>玩家的装备增强大致分为两个路线：1. 基于套装的装备增强思路；2. 基于散件的装备增强思路。无论哪种路线，其装备获取和增强方式都是一样的：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Equip202203061235.jpeg"></p><p>这里主要关注新传奇装备。从图中可以看到，新传奇装备的获取可以通过以下途径：1. 地图中击杀掉落；2. 完成悬赏任务；3. 血岩碎片抽取。</p><ul><li><p>地图击杀掉落<br>如图所示，普通地图的爆率较低，玩家一般会选择通关秘境地图（以下简称小秘境）和宏伟秘境（以下简称大秘境）来获取新传奇装备。其中小秘境的怪物和普通怪物一样，会正常掉落物品，即玩家在通关小秘境过程中就可以有几率获取新传奇装备，在击杀小秘境最终 BOSS 也有较高几率获取新传奇装备。而大秘境的区别在于，其中除最终 BOSS 之外的怪物是不会掉落物品的，所以玩家只有成功击杀大秘境的最终 BOSS 才能有几率获取新传奇装备。</p></li><li><p>完成悬赏任务<br>玩家完成悬赏任务一般是为了获取特殊的悬赏材料用于卡奈魔方。完成悬赏任务虽然有几率获取新传奇装备，但因为其出货率不稳定，且不确定具体会拿到什么装备，所以一般玩家可能不会将悬赏任务作为获取新传奇装备的主要途径。除非是为了某些具有特殊出货率的装备，如完成第一章的悬赏任务有较高的几率获得降低一件套装所需件数效果的皇家华戒。</p></li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220306232622.png" style="zoom:50%;" /><ul><li>血岩碎片抽取<br>血岩碎片的获取方式有如下几种：1. 通关秘境（大或小均可）；2. 完成悬赏任务；3. 击杀血岩盗宝贼（小几率出现的特殊宝箱怪）。玩家可以通过花费血岩碎片抽取特定部位的装备，不同部位的抽取费用不同（武器（75）&gt;首饰（50）&gt;其他饰品（25））。该方式也是获取新传奇装备的常用方式之一。</li></ul><p>在获取到心仪装备后，玩家便可根据需要，使用装备附魔（洗装备属性），宝石镶嵌来对装备属性进行提升。</p><h5 id="角色能力提升-角色增强"><a href="#角色能力提升-角色增强" class="headerlink" title="角色能力提升 - 角色增强"></a>角色能力提升 - 角色增强</h5><p>角色增强主要包括了以下几个方面：1. 新技能/天赋的获取；2. 巅峰属性提升；3. 特殊能力提升。</p><p>其中新技能/天赋的获取需要依托于英雄等级，而玩家的技能和天赋搭配通常需要结合装备属性（如套装对某个技能有特殊加成情况下就会专门点出与之相关的技能与天赋）。</p><p>巅峰属性的提升依托于玩家的巅峰等级，巅峰等级与玩家账号绑定，其升级消耗的是角色满级之后所获得的经验值。巅峰等级每提升一级就可以获得一点巅峰属性。玩家可以根据自己的需求进行加点。其中部分属性是有加成上限的（50 点），但主属性的加点是没有上限的。这意味着只要能够不断提高巅峰等级，就能够不断增加主属性，实现角色增强的目的。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/peakattribute.jpg" style="zoom:50%;" /><p>角色增强的最后一部分和特殊能力有关。这里的特殊能力指的是通关宏伟秘境之后能够获取的特殊宝石上的能力，通过宝石镶嵌机制可以将宝石镶嵌到特定部位（我所玩的秘法师职业的特殊宝石镶嵌部位通常为戒指）的装备中来得到这些特殊能力加成。一共 22 枚传奇宝石，在全部获取前，每次限时通关大秘境都能获取一枚新的传奇宝石，直到全部获取。且每次限时通关大秘境之后都能获得 3 次（如果在进入大秘境前选择加强大秘境则可以获得 4 次）传奇宝石的升级机会。每枚传奇宝石的效果都不一样，且升级到 25 级之后会解锁特殊能力。每次升级传奇宝石都可以对特殊宝石能力词条中的数值进行提升。</p><h4 id="玩家最终需求-天梯排名提升"><a href="#玩家最终需求-天梯排名提升" class="headerlink" title="玩家最终需求 - 天梯排名提升"></a>玩家最终需求 - 天梯排名提升</h4><p>大部分玩家其实会停留在前一阶段，而有这一阶段需求的玩家基本可以称为该游戏的最核心玩家。玩家在这一阶段的追求是在尽可能短的时间内通关更高等级的大秘境，从而获得更高的天梯排名（基于大秘境等级，同等级则用时少的排名高），收获荣誉与游戏内奖励。</p><h3 id="策划视角-相关设计反思"><a href="#策划视角-相关设计反思" class="headerlink" title="策划视角 - 相关设计反思"></a>策划视角 - 相关设计反思</h3><p>这里对拆解过程及游玩过程中所想到的一些点从策划视角进行设计反思。</p><h4 id="游戏的核心目标体验是什么？游戏通过哪些手段来实现核心目标体验？"><a href="#游戏的核心目标体验是什么？游戏通过哪些手段来实现核心目标体验？" class="headerlink" title="游戏的核心目标体验是什么？游戏通过哪些手段来实现核心目标体验？"></a>游戏的核心目标体验是什么？游戏通过哪些手段来实现核心目标体验？</h4><p>我个人认为暗黑破坏神 3 的目标体验有以下几方面：1. 爽快感；2. 挑战感；3. 目标感。</p><ol><li>爽快感<br>何为爽快：这里的爽快主要有两方面，即装备掉落时的获得感以及造成伤害时的满足感。<br>何以爽快：如上所言，爽快感主要体现在装备掉落和伤害机制。</li></ol><p>设计师通过视觉和听觉两方面加强了装备掉落时的获得感。<br>视觉层面上，传奇物品掉落时会有相应的橙色或绿色光柱冲天而立，十分抓眼。而听觉层面上，物品掉落时会有金属坠地的声音，这也在另一方面加强了玩家“出货了”的心理预期，令人满足。此外，玩家在 NPC 处消耗血岩碎片抽取物品时也会有“大量出货”的兴奋感。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/equip.jpg" style="zoom:50%;" /><p>而造成伤害的满足感主要通过视觉层面和机制层面得以加强。<br>视觉层面上，在玩家打开伤害显示后（默认打开），玩家的每一次伤害都通过飘字形式得以显现，暴击伤害还会以橙色字体突出显示。这样的即时视觉反馈很好地满足了玩家“造成了成吨输出”的心理预期，令人满足。而机制层面主要指的是玩家借助套装或特殊装备可以实现的伤害质变。套装在完全组装之后其伤害提升是质变的，玩家在套装组成前和组成后能够体会到明显的伤害变化，非常爽快。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220306232710.png" style="zoom:50%;" /><ol start="2"><li>挑战感<br>何为挑战：这里的挑战主要有两方面，即角色装备提升的困难感和通关更高难度秘境的困难感。<br>何以挑战：角色装备提升的困难感主要是通过装备掉落几率体现的，而限时通关秘境的困难感主要通过相关机制体现。</li></ol><ul><li>装备提升的困难感</li></ul><p>游戏进行到中后期，基本能够凑齐所玩英雄的所有套装以及大部分传奇物品，再之后想要提升需要靠以下几种方式： 1. 通过装备附魔对装备属性进行提升；2. 继续刷图来获取同一装备的更高品质装备。</p><p>其中通过装备附魔对装备属性进行提升的方式只能在一定程度上实现伤害的量变提升，无法达到质变提升。并且前面也提到过，附魔时能够“洗”的属性是基于物品原本的属性类型的，并不能“洗”出所有的属性，所以这一方式对于角色装备的提升其实较小。</p><p>前面已经大致提过游戏中的装备阶层是次级(灰色)/高等(白色)/魔法(蓝色)/稀有(黄色)/传奇/ 5种，其中传奇为橙色，套装为绿色。而传奇物品中也有更细的品级分类，从低到高依次是传奇，远古传奇，太古传奇。远古和太古物品和传奇物品大致相同，但基础属性（伤害或护甲）以及非百分比词缀的上下限数值都较高。</p><p>只有达到70级的角色，才能在苦痛难度下获得远古物品，掉落在地时，远古物品的橙色光效和普通传奇物品相同，只有在辨识后才能确定是否是远古物品。在经过辨识后，远古物品的物品图标会有橙色的边框（套装物品为绿色边框），物品描述中也会标明“远古”。它们会通过全部途径掉落，包括怪物、宝箱、卡达拉、赫拉迪姆宝箱、卡奈魔盒，或者由铁匠与珠宝匠制造。</p><p>太古物品掉落在地时会带有闪亮的红色光柱，游戏中任何产出传奇物品的途径都可能掉落，包括赫拉迪姆宝箱、卡达拉和卡奈魔盒，但你必须先单人成功完成一个最低70层的大秘境才有获取太古物品的资格。太古物品比远古更加稀有，并且所有词缀都呈现完美的远古级别数值，包括物品的传奇威能。</p><p>在查找相关资料时正好找到了暴雪官方新闻中对于太古物品与开发理念的解读，这里直接引用过来：</p><blockquote><p>太古物品主要面向基本完成了角色技能配置或赛季旅程，但还想要继续玩下去的玩家。装备很好并且将大部分时间花在升级巅峰和传奇宝石的非赛季玩家也能通过太古物品中获得乐趣。在每个部位都得到远古物品以后，我们希望延续玩家看到装备掉落、在卡达拉处消耗血岩碎片时的兴奋感。太古为专注型玩家提供了完成一整套完美配置的途径，不再需要去升级。</p></blockquote><p>可以看到官方对于太古物品的描述基本将其作为了游戏的最终阶层物品。在这样的前提下，其爆率其实也极低（据说是 1%，即 100 件传奇物品中能出一件）。越往后其实能用的新装备的获取也越来越困难，符合心理预期，但也确实令人挫败。</p><ul><li>通关更高难度秘境的困难</li></ul><p>这一点主要是通过以下几种机制实现的：1. 限时通关；2. 难度倍增；3. 死亡后复活时长延长；4. 装备损毁；</p><p><em>限时通关</em>：小秘境的通关是不限时的，玩家只需要击杀足量怪物便可通关，但大秘境的通关是限时的，这一机制其实大大增大了通关大秘境的难度。<br><em>难度倍增</em>：这个主要是通过数值调整实现的，高难度秘境每高一个等级，其怪物属性会成倍提升，玩家在游玩时会面临“你打怪物在磨血，怪物打你就一刀”的局面。<br><em>死亡后复活时长延长</em>：玩家每在秘境中死亡一次，复活时间就会延长五秒（至多三十秒）。而在限时机制下，每分每秒都显得格外珍贵。<br><em>装备损毁</em>：游戏中的装备是具备耐久度属性的，除去日常情况下的损耗，玩家每次死亡都会使得装备耐久度整体下降 10%，也就是说如果你以装备满耐久度进入秘境，但在其中死亡达到十次，装备就会损毁（不会消失，但需要回到城镇找铁匠修复后才能恢复），这样的机制也增强了通关秘境的难度。</p><ol start="3"><li>目标感<br>何为目标：即玩家游玩时对于变强的追求。<br>何以目标：游戏目标感依靠装备和巅峰等级系统塑造。</li></ol><p>玩家在游戏中的目标简言之是让自己变得更强，而实现这一目标的途径会随着角色的不断增强最终聚焦到装备属性和巅峰等级的提升。<br>如前所述，游戏中的高级装备会有颜色和词条的区分，前中期会让玩家产生一种绿色强于橙色的颜色偏见，但随着角色不断增强，也随着玩家获得了远古和太古物品的获取资格，这种颜色偏见会逐渐消失，也让玩家一直有“更强的装备”能够追求。<br>变强的另一途径是不断获取经验，提升巅峰等级，从而提升巅峰属性。不设上限的巅峰等级使得玩家永远可以变强。</p><h4 id="作为一款刷宝游戏，其重复可玩性如何保证？"><a href="#作为一款刷宝游戏，其重复可玩性如何保证？" class="headerlink" title="作为一款刷宝游戏，其重复可玩性如何保证？"></a>作为一款刷宝游戏，其重复可玩性如何保证？</h4><p>暗黑三的重复可玩性主要通过以下三方面的机制来保证：</p><ol><li>装备可提升性</li><li>难度增长非线性</li><li>等级可提升性</li></ol><ol><li>装备可提升性<br>如前所述，暗黑 3 中透明的装备阶层使得绝大部分情况下玩家总有更高等级的装备可以追求，此种情况下会促使玩家通过不断刷图来获取可能的新装备。</li><li>难度增长非线性<br>暗黑 3 中的难度提升是非线性的，越往后难度会越来越高，这意味着玩家在后期想要通关更高等级的秘境不是一件容易的事情，此种情况会促使玩家选择通关更低等级的秘境来获取可能的新装备以及增长角色等级。</li><li>等级可提升性<br>巅峰等级系统的引入使得玩家永远都有变强的机会，面对难以打过的高等级秘境，设计师为玩家保留了一丝只要不断刷图，即使无法获取心仪装备，也能变强从而通关的可能性。</li></ol><h4 id="巅峰等级系统的设计意图"><a href="#巅峰等级系统的设计意图" class="headerlink" title="巅峰等级系统的设计意图"></a>巅峰等级系统的设计意图</h4><ol><li><p>降低游戏挫败感<br>如前所述，巅峰系统的引入为玩家保留了 一条永远能够变强的道路，若是没有巅峰系统，在面对无法攻克的高等级秘境时，能做的只有刷出更好的装备这一条路，在后期心仪装备出货率极低的情况下无疑会让玩家产生挫败感。而巅峰等级系统的引入带来的另一条变强之路会让这样的挫败感减少。</p></li><li><p>保障老玩家利益的同时利于引入赛制机制<br>巅峰等级系统的出现可以使得一直游玩的老玩家始终在装备和角色属性上领先于后面进入游戏的新玩家。若是没有巅峰等级系统，那么新老角色的差距便只有装备属性，即使只有较低概率，但是新玩家很可能会在短时间内就“赶上”玩了很久的老玩家，这不利于保障老玩家的利益。但正因如此，为了让新老玩家有机会“同台竞技”，赛制机制的引入使得玩家均需“从零开始”。如此一来，巅峰等级系统的引入便实现了保障老玩家利益的同时利于引入赛制机制的双赢局面。</p></li></ol><h4 id="为什么一开始提升游戏难度时金币和经验涨幅一致，但难度越高，经验涨幅大大高于金币涨幅了？"><a href="#为什么一开始提升游戏难度时金币和经验涨幅一致，但难度越高，经验涨幅大大高于金币涨幅了？" class="headerlink" title="为什么一开始提升游戏难度时金币和经验涨幅一致，但难度越高，经验涨幅大大高于金币涨幅了？"></a>为什么一开始提升游戏难度时金币和经验涨幅一致，但难度越高，经验涨幅大大高于金币涨幅了？</h4><p>从现象出发，即越往后设计师将经验的比重视为比金币更高。从 Coreloop 中可知，经验的流向只有一个地方，即用于提高巅峰等级，属于角色增强，而金币的流向却有很多，但主要都是用于装备增强。结合前面对于巅峰等级系统的分析，从现象出发可知到后期玩家能够实现的装备增强较少，所以对金币的需求会减少，但是巅峰属性作为能够在后期增强玩家的唯二途径之一，其增长需要依靠巅峰等级的提升。该设计强化了巅峰等级系统的作用，保障了玩家不断变强的可能性。</p><h4 id="宝箱怪物，宝箱关，奶牛关的设计意图"><a href="#宝箱怪物，宝箱关，奶牛关的设计意图" class="headerlink" title="宝箱怪物，宝箱关，奶牛关的设计意图"></a>宝箱怪物，宝箱关，奶牛关的设计意图</h4><p>宝箱怪物，即游戏中的各式盗宝地精，击杀后通常会有丰厚奖励（装备/血岩碎片/宝石/金币/材料），玩家周围有宝箱怪物时可以听到其笑声的特殊音效。宝箱关，即拥有多个宝箱怪物的藏宝秘窟，可以通过在卡奈魔方中放入连环戒并直接转化来打开通往藏宝秘窟的传送门。奶牛关，是另一个特殊地图，可以通过在卡奈魔方中放入牛王戟斧并直接转化来打开通往奶牛关的传送门。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220306232750.png" style="zoom:50%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220306211538.png" style="zoom:50%;" /><p>虽然无论是击杀宝箱怪物，通关藏宝秘窟或是奶牛关中能获得较多的软货币或是材料，甚至是好的装备，但因为碰见宝箱怪物的几率较低，以及刷出这两件特殊装备的概率也不高，所以这些机制的设计其实偏向于游戏中的调节机制。</p><p>玩家在进行大量刷图后肯定会感到疲惫，而这些调节机制的引入可以在很大程度上增强游戏乐趣性以及缓解玩家疲劳。盗宝贼特殊音效的出彩设计也形成了一种操作性条件反射，即让玩家一听到盗宝贼的笑声就会兴奋地在周遭寻找它的身影。</p><h4 id="拆解系统的设计目的"><a href="#拆解系统的设计目的" class="headerlink" title="拆解系统的设计目的"></a>拆解系统的设计目的</h4><p>和大多数游戏中的拆解系统一样，其设计是为了提升无用装备的价值，让玩家即使进行到中后期不再需要这些较低级装备时也能让它们派上用场。但暗黑 3 的拆解系统有两点值得一提：1. 白装拆解材料；2. 连环戒。</p><ol><li>白装，即次级装备，在游戏中属于很早期的装备，一些游戏中虽然也设计了拆解系统，但玩家看到白装也会直接忽视。但暗黑 3  中白装能够拆解出其它品质装备无法拆解获得的<code>万用材料</code>，其他途径要获取该材料较为困难（开地图中的箱子有较小几率获得）或性价比较低（通过卡奈魔方消耗高级材料转换）。这一设计使得白装的被拾取率和价值大大提高。</li><li>连环戒，即上面分析宝箱关时的特殊装备，其特殊属性是能够召唤一只盗宝地精为你拾取普通装备，并在拾取一定件数后掉落一件稀有装备，这一特殊属性的设计很好地增添了游戏性。</li></ol><h3 id="发现的潜在问题和思考"><a href="#发现的潜在问题和思考" class="headerlink" title="发现的潜在问题和思考"></a>发现的潜在问题和思考</h3><ol><li>后期提升乏力，目标感不足</li></ol><p>虽然前面分析过，游戏的目标感是不断变强，而不断变强的手段便是追求可知的更高阶装备或是不断提升巅峰等级和属性。但我作为玩家在后期基本完成配装后，想要限时通关更高等级大秘境确实非常困难，而除获取更好装备的另一种增强途径就只有重复刷图提升巅峰等级，疲倦的同时提升也较小，这就导致在中后期会产生乏力和目标感不足的情况。</p><p>针对这种情况其实能做的不多，只能为玩家提升路上做一些锦上添花的小机制，以作为玩家不断提升的鼓励。游戏本身已经设计了类似的机制，即当玩家巅峰等级不断提升时，可以获取到更加炫酷的头像框。与之类似的，我个人认为可以为宠物也添加这样的机制，即随着玩家巅峰等级不断提升，宠物的形态也会发生进化。这样的机制设计能在不改变游戏本身的情况下作为玩家不断提升的潜在动力。</p><ol start="2"><li>部分套装可用性不高</li></ol><p>从玩家角度出发，我个人较为熟悉的是秘法师角色，而在游戏进行到中后期时发现部分套装的可用性其实并不高的这一现象。和玩了多个赛季的老玩家聊过之后了解到其实随着赛季更迭，不同套装的强度是在不断变化的。另一方面，游戏本身的天梯系统其实为这一问题也算是设计了相应的解决方案：即为穿戴不同套装（或是只穿戴散件）的玩家单独设计天梯排行，这样的设计使得每一种装备搭配都有其发挥的舞台，在某种层面上实现了“百花齐放”。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>这次的拆解分析除了 Coreloop 之外，从玩家视角和策划视角分别对玩家需求和相关设计进行了分析和反思。期间确实也加深了一些对于游戏的理解。在和友人聊天过程中还了解到了暗黑 3 中的宠物掉落机制：宠物会作为白装掉落，玩家即使爆出宠物之后也很有可能会发生忽视不捡取或是直接将其分解的情况。这样的机制虽免不了发生玩家不小心“错失”宠物的情况，但却无形之中调动了玩家的游戏参与感以及保障了游玩新鲜度，不得不说是一个出色的设计。</p><p>综上，本文借助 Teardown Analysis 方法对游戏《暗黑破坏神 3》进行了分析，而后阐述了此次分析期间发现的潜在问题和思考。</p><p>感谢您的阅读，欢迎大家批评指正！</p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul><li><a href="https://news.blz.cn/zh-cn/diablo3/17900086/%E4%BC%A0%E5%A5%87%E7%89%A9%E5%93%81%EF%BC%9A%E8%BF%9C%E5%8F%A4%E4%B8%8E%E5%A4%AA%E5%8F%A4%E6%8C%87%E5%8D%97">传奇物品：远古与太古指南</a></li><li><a href="http://games.sina.com.cn/o/z/diablo3/2015-09-01/fxhkafa9529522.shtml">看图识怪：暗黑3盗宝地精家族怪物图鉴</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Analysis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>枪火重生 Teardown Analysis</title>
      <link href="2021/12/12/teardown-analysis-gunfire-reborn/"/>
      <url>2021/12/12/teardown-analysis-gunfire-reborn/</url>
      
        <content type="html"><![CDATA[<h2 id="《枪火重生》-Teardown-Analysis"><a href="#《枪火重生》-Teardown-Analysis" class="headerlink" title="《枪火重生》 Teardown Analysis"></a>《枪火重生》 Teardown Analysis</h2><p>最近在 B 站上看 <a href="https://space.bilibili.com/618369?spm_id_from=333.788.b_765f7570696e666f.1">鱼一元 001</a> 大大的相关视频，并在 <a href="https://space.bilibili.com/618369/channel/detail?cid=96395">挺进游戏公司</a> 系列下学到了 <a href="https://www.bilibili.com/video/BV1GJ411y7fj?spm_id_from=333.999.0.0">Teardown Analysis</a> 这一游戏拆解方法，现动手实践之！</p><h3 id="Keynote-展示"><a href="#Keynote-展示" class="headerlink" title="Keynote 展示"></a>Keynote 展示</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/TeardownAnalysis-GunfireReborn.001.jpeg"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/TeardownAnalysis-GunfireReborn.002.jpeg"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/TeardownAnalysis-GunfireReborn.003.jpeg"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/TeardownAnalysis-GunfireReborn.004.jpeg"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/TeardownAnalysis-GunfireReborn.005.jpeg"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/TeardownAnalysis-GunfireReborn.006.jpeg"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/TeardownAnalysis-GunfireReborn.007.jpeg"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/TeardownAnalysis-GunfireReborn.008.jpeg"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/TeardownAnalysis-GunfireReborn.009.jpeg"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/TeardownAnalysis-GunfireReborn.010.jpeg"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/TeardownAnalysis-GunfireReborn.011.jpeg"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/TeardownAnalysis-GunfireReborn.012.jpeg"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/TeardownAnalysis-GunfireReborn.013.jpeg"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/TeardownAnalysis-GunfireReborn.014.jpeg"></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>第一次做 Teardown Analysis，全部算下来应该花了快有十二个小时左右…推翻重画了好几次，期间也有一些疑惑、反思或是延伸思考：</p><ul><li>Core Loop 按理来说应该是围绕资源进行绘制，但总会牵涉到一些无法进行资源展示的系统，如何合理引入是一个需要考虑的问题</li><li>Teardown Analysis 的目的应该是为了帮助我们更好理解游戏资源流向及设计目的，本次分析中其实在 Core Loop 之后更多是对于系统的描述以及设计概述，对设计目的的反思还不够深入</li><li>一开始直接在 PPT/Keynote 上对线框图进行绘制，后觉麻烦，改用飞书云文档中的流程图工具（我将其当做免费版的  ProcessOn）进行绘制，顺畅许多</li><li>感觉下次再分析的时候，可以将目标体验作为设计反思的重点，但届时势必会出现更加纷繁的走线，需要好好思考如何合理结合</li></ul><p>综上，本文借助 Teardown Analysis 方法对游戏《枪火重生》进行了分析，而后阐述了此次分析期间的一些疑惑、反思、延伸思考。</p><p>感谢您的阅读，欢迎大家批评指正！</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Analysis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Florence 目标体验及设计反思</title>
      <link href="2021/11/16/thinking-of-the-florence/"/>
      <url>2021/11/16/thinking-of-the-florence/</url>
      
        <content type="html"><![CDATA[<h2 id="《Florence》目标体验及设计反思"><a href="#《Florence》目标体验及设计反思" class="headerlink" title="《Florence》目标体验及设计反思"></a>《Florence》目标体验及设计反思</h2><blockquote><p>全文约 4 千字，预计需要 13 分钟阅读。配合背景音乐阅读体验更佳哦 (￣▽￣)”</p></blockquote><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=571339489&auto=1&height=66"></iframe><h3 id="游戏概述"><a href="#游戏概述" class="headerlink" title="游戏概述"></a>游戏概述</h3><p>作为一款精简的互动小说类游戏，你将在这短短的三十分钟里和主角一起经历一段平凡、起伏但也温暖的时光。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211116172206.png" style="zoom:50%;" /><h3 id="目标、路径、挑战、体验分析"><a href="#目标、路径、挑战、体验分析" class="headerlink" title="目标、路径、挑战、体验分析"></a>目标、路径、挑战、体验分析</h3><p>基于 PC 端的手柄游玩体验，以下将从目标、路径、挑战、体验四个方面对游戏进行整体概述：</p><h5 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h5><p>即游戏的结束条件：玩家需要跟随主角一起推动故事，直至结局。</p><h5 id="路径"><a href="#路径" class="headerlink" title="路径"></a>路径</h5><p>即玩家达到目标的手段：玩家需要通过点击按键、操纵遥感等方式进行交互，以推进故事。</p><p>其中涉及的元素包括但不仅限于：</p><ul><li>【按键点击】</li><li>【遥感滑动】</li></ul><table><tr> <center>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211116173140.png" alt="按键点击" style="zoom:70%; align:middle;" border=0></td>     <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211116173346.png" alt="遥感滑动" style="zoom:70%; align:middle;" border=0></td> </center></tr></table><h5 id="挑战"><a href="#挑战" class="headerlink" title="挑战"></a>挑战</h5><p>即玩家在实现目标的路径中可能碰到的障碍。</p><p>在 Florence 中，也许可以为挑战换一种说法，即任务，或事件。玩家需要在游玩过程中作为主角完成一些事情，从而推进故事的进行。</p><p>其中涉及的事件包括但不仅限于：</p><ul><li>【刷社交媒体】</li><li>【上班】</li><li>【涂色】</li></ul><table><tr> <center>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211116174206.png" alt="刷社交媒体" style="zoom:50%; align:middle;" border=0></td>     <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211116174240.png" alt="上班" style="zoom:50%; align:middle;" border=0></td>     <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211116174322.png" alt="涂色" style="zoom:50%; align:middle;" border=0></td> </center></tr></table><h5 id="体验"><a href="#体验" class="headerlink" title="体验"></a>体验</h5><p>即期望玩家在游玩时获得的情感体验。<br>在后面部分会展开描述，这里只进行列举：</p><ul><li>轻快</li><li>代入</li><li>温暖</li></ul><h3 id="目标体验反思"><a href="#目标体验反思" class="headerlink" title="目标体验反思"></a>目标体验反思</h3><h4 id="轻快"><a href="#轻快" class="headerlink" title="轻快"></a>轻快</h4><p>何为轻快：玩得没有负担，没有压力。<br>何以轻快：游戏从美学、交互机制和流程设计三方面共同构建了最终的轻快体验。</p><ul><li>美学</li></ul><p>这里提到的美学，主要指的是音乐、画面和色彩。</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=571339489&auto=1&height=66"></iframe><p><strong>音乐：</strong> 上面所提供的便是开头呈现的背景音乐，进入游戏后会自动播放。该曲明快的音调能让还未开始正式游玩的玩家一听到音乐就不由自主地放松下来。在故事不断推进的过程中，除冲突部分外，其余部分的音乐都给人一种轻松愉悦的感觉，整体呈现出的音乐营造了一种明快的氛围。</p><p><strong>画面和色彩：</strong> 【开局画面】中 Florence Yeoh（女主）以微笑姿态映入眼帘，头发不停摇曳，给人一种微风拂面的清爽感。而以色彩中代表着光明、积极和温暖的黄色作为主色，也能舒缓玩家游玩时的心绪。在游玩过程中，极简风格的画面和笔触产生了大量留白，结合【局部色彩】的使用来突出画面主体，同时也起到了视线引导的作用。最终构建了玩家没有负担，没有压力的轻快游玩体验。</p><table><tr> <center>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211116172206.png" alt="开局画面" style="zoom:40%; align:middle;" border=0></td>     <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211116185109.png" alt="局部色彩" style="zoom:60%; align:middle;" border=0></td> </center></tr></table><ul><li>交互机制</li></ul><p>这里提到的交互机制，主要指的是以手柄操作的【按钮点击】和【遥感滑动】。<br>简单的交互操作既减少了玩家对于操控方式的记忆需求，也减少了玩家需要熟练操作的需要，这些“省下来”的认知资源让玩家可以毫无负担和压力地专注到故事中。</p><table><tr> <center>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117133727.png" alt="按键点击" style="zoom:70%; align:middle;" border=0></td>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117133802.png" alt="遥感滑动" style="zoom:70%; align:middle;" border=0></td> </center></tr></table><ul><li>流程设计</li></ul><p>这里指的流程设计，主要指的是没有失败和故事简练。</p><p><strong>没有失败：</strong> 通常在进行游戏过程中，难免会遇到因操作失败等因素导致的“非理想结局”，从而产生挫败感。但在游玩 Florence 的时候，这样的挫败感几乎是不存在的，玩家唯一有可能“犯错”的点是在进行【计算】和【工作】时，即使在这样的事件中，其成功难度也是很低的，所以几乎不会出现失败的挫败感。</p><table><tr> <center>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117134509.png" alt="计算" style="zoom:70%; align:middle;" border=0></td>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117134533.png" alt="工作" style="zoom:70%; align:middle;" border=0></td> </center></tr></table><p>在除此之外的其他游玩过程中，玩家可以随意选择决策顺序，甚至可以选择【放弃决策】，任凭其自由发展。如此设计使得玩家在决策时的心理负担降到最低，从而构建玩家游玩时的轻快体验。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117134946.png" alt="放弃决策"></p><p><strong>故事简练：</strong> 这里的故事简练指的不仅是游戏总体的游玩时长较短，也体现在其分段化的叙事手法中。游戏中采用了【按事件划分章节】的方式来进行整体情节推进，如此一来，将关卡设计细化为了事件设计，一方面能够很清晰地呈现出游戏整体的起承转合的变化，另一方面也使得玩家能以很快地速度在不觉间就推进了故事的进行，从而构建游戏整体的轻快感。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117135329.png" alt="按事件划分章节" style="zoom: 67%;" /><h4 id="代入"><a href="#代入" class="headerlink" title="代入"></a>代入</h4><blockquote><p>注意：此部分存在明显剧透，请小心食用！</p></blockquote><p>何为代入：体验主角的故事时，也想到了自己。<br>何以代入：游戏主要从整体故事设计，细节设计和美学呈现的角度来构建玩家代入感。</p><ul><li>整体故事设计</li></ul><p>如前所述，Florence 采用按事件划分章节的方式来推进故事，从其章节名其实便可一窥其代入感设计的精髓。游戏中将几个连续的章节归为一幕，但没有为每一幕起名，我将在这里尝试为其命名，便于分析其代入感设计：</p><ul><li>幕一：无聊生活中的回忆之甜和乍见之欢</li><li>幕二：再见，再见，“怦然”相撞的再次相见</li><li>幕三：趁年轻，去探索，去追梦</li><li>幕四：唇齿也会打架，但我们同居啦！</li><li>幕五：生活终将归于平淡，而我们彼此可能也只能陪伴人生中的一段</li><li>幕六：收拾心情再出发，不知道明天的我又会遇见什么颜色呢</li></ul><p>从我蹩脚的文字中也可窥见，这样的故事每天都在发生，而我们自己，可能就是那个故事中的人。特别是在最后一章中，主角 Florence 成功办了画展，其间人来人往，而此时的分镜中出现了【让我无比期待的转身】这样的画面，当时在游玩的我也在不断想“那个当时鼓励我追梦的他会不会突然出现呢”。但是，他最终没有出现，设计者并没有选择呈现完美结局，难免失望，总会释然，生活如此，这样的设计极大地增强了玩家的代入感。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117143703.png" alt="让我无比期待的转身" style="zoom:67%;" /><ul><li>细节设计</li></ul><p>这里的细节设计主要指的是在游玩过程中，一些很细微的用户体验和情节细节。如【叫不醒的闹钟】，【自己不接电话就不断打来的妈妈】，【时光流逝，物是人非】等等，再辅以恰当的手柄震动，这些能够引起玩家共鸣的细节设计极大地增强了玩家的代入感。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117160811.png" alt="叫不醒的闹钟" style="zoom:67%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117160836.png" alt="自己不接电话就不断打来的妈妈" style="zoom:67%;" /><table><tr> <center>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117160928.png" alt="时光流逝" style="zoom:70%; align:middle;" border=0></td>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117161018.png" alt="物是人非" style="zoom:70%; align:middle;" border=0></td> </center></tr></table><ul><li>美学呈现</li></ul><p>这里的美学呈现主要指的是色彩和形状的呈现。</p><p><strong>色彩：</strong> 这里的色彩主要指的是游戏中对于色彩的运用：如【枯燥乏味的上班】，【多姿多彩的朋友圈】，【充满想象力的涂色】，【令人气愤的争吵】，【破碎的记忆】以及【对新生活的憧憬】等画面，都用了恰当的色彩来凸显了人物主体，也渲染了相应的氛围，从而最终增强了玩家的代入感。</p><table><tr> <center>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117150542.png" alt="枯燥乏味的上班" style="zoom:70%; align:middle;" border=0></td>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117150613.png" alt="多姿多彩的朋友圈" style="zoom:70%; align:middle;" border=0></td> </center></tr></table><table><tr> <center>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117152116.png" alt="充满想象力的涂色" style="zoom:70%; align:middle;" border=0></td>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117152202.png" alt="令人气愤的争吵" style="zoom:70%; align:middle;" border=0></td> </center></tr></table><table><tr> <center>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117152249.png" alt="破碎的记忆" style="zoom:70%; align:middle;" border=0></td>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117152408.png" alt="对新生活的憧憬" style="zoom:70%; align:middle;" border=0></td> </center></tr></table><p><strong>形状：</strong> 这里的形状主要指的是游戏中对于特定场景下的形状的运用。特别让人印象深刻的是【争吵升温】这一画面中，将二人的对话转化为了拼图，而且在升温过程中，拼图的形状由一开始的【圆滑】，变得【有棱角】，最后甚至变得【尖锐】，这一非常优秀的设计让人眼前一亮，很好地增强了玩家的代入感。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117155959.png" alt="圆滑" style="zoom:67%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117160037.png" alt="棱角" style="zoom:67%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117160144.png" alt="尖锐" style="zoom:67%;" /><h4 id="温暖"><a href="#温暖" class="headerlink" title="温暖"></a>温暖</h4><p>何为温暖：在最终游玩结束之后，会心一笑，心中微暖。<br>何以温暖：游戏主要从情节设计，交互节奏和美学呈现的角度为玩家营造温暖感。</p><ul><li>情节设计</li></ul><p>如前所述，游戏最终并没有给玩家呈现一种完美结局，主角 Florence 也并不是如超人一般，受到打击之后能立马释怀，放步前行。她也经历了任何普通如你我的人都会经历的痛苦与迷茫，通过旅行来放空自我。但她并没有停步于此，她最终走出来了，重新积攒了力量，重新拾起画笔，做自己想做的事，【在乎身边的人】，努力向前。所谓“不完美”的结局也正是生活的常态，这样的情节设计最终也予人以温暖和希望。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117161813.png" alt="在乎身边的人" style="zoom:67%;" /><ul><li>交互节奏</li></ul><p>这里的交互节奏指的是游戏中的交互方式和交互频率。玩家在游玩过程中大可以不紧不慢地轻轻点击，【慢慢滑动】，而不用担心错过什么，或做错什么，这样舒缓的交互节奏最终给玩家营造了温暖的游玩体验。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117162220.png" alt="慢慢滑动" style="zoom:67%;" /><ul><li>美学呈现</li></ul><p>这里的美学呈现主要指的是色彩和音乐。<br>除去特殊的争吵场景外，游戏整体以低对比度的【温暖色系】来进行画面着色，如此设计使得玩家在游玩过程中始终能以舒缓的心情来进行游戏。此外，再搭配游戏出色的配乐，最终予人以温暖。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117162626.png" alt="温暖色系" style="zoom:67%;" /><p>以上对游戏的目标体验及其设计进行了一些反思，下面会对其他的一些出彩设计进行分析和反思。</p><h3 id="其余出彩设计分析与反思"><a href="#其余出彩设计分析与反思" class="headerlink" title="其余出彩设计分析与反思"></a>其余出彩设计分析与反思</h3><p>以下部分的分析与反思主要设计交互机制，美学呈现等方面。</p><h4 id="交互机制"><a href="#交互机制" class="headerlink" title="交互机制"></a>交互机制</h4><ul><li>【形象有趣的聚焦方式】</li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117165710.png" alt="形象有趣的聚焦方式" style="zoom:67%;" /><p>如图所示，这里采用了可左右调整的不同的聚焦尺来模拟摔倒之后重新聚焦的这一过程，既表现了看见中意的人时因为小鹿乱撞而跌得七荤八素的狼狈，又很好地为双方交换了联系方式这一情节做了铺垫，十分形象有趣。</p><p>延伸思考：在未来，如果可能的话，在跌倒之后使双摇杆随机晃动，以模拟被摔得七荤八素的感觉，而玩家需要努力将其恢复到“平静”状态，从而模拟努力按住头来重新聚焦的过程，这样的交互方式应该也很有趣！</p><ul><li>【摇晃拍立得！】</li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117171417.png" alt="摇晃拍立得！" style="zoom:67%;" /><p>如图所示，设计者需要玩家在点开相片后通过晃动摇杆来模拟现实中人们真实的甩底片动作，确实很有意思。</p><p>延伸思考：在这里其实可以考虑引入手柄体感机制，让玩家真正地甩起来！<br>题外话：甩底片这一操作其实源自早期的老式拍立得时期，当时拍完之后需要将附有显像药剂的纸材快速与底片分离，通过甩动可以让药剂快速边干，但随着技术的发展和进步，现在的拍立得所拍出的照片其实已经可以不用甩啦，用力过猛甚至有可能会出现显像错误哦！（不过轻轻甩底片的动作也确实别有一番趣味(￣▽￣)”）</p><ul><li>【不进则退】</li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117172810.png" alt="不进则退" style="zoom:67%;" /><p>如图所示，这里需要玩家不断点击，以模拟不断向前推男主人公的动作。有趣的是如果在推了一半的时候不再继续点击，男主人公就会不断退缩回到原地，这样的设计十分真实的同时也让我们切实体会到了有人能在这时推自己一把是多么不容易而又令人温暖的事情。</p><p>延伸思考：在这里的反馈呈现其实是不变的，也就是说玩家每次按键能够推动的距离是一定的，也许可以为其引入非线性的反馈机制，即一开始的时候一次按键点击就能推动很多，但越往后越难推动，临门一脚的时候需要玩家更努力地来进行点击才能最终实现鼓励男主人公报名的目的，如果在前面鼓励的时候中途放弃了，下一次重新鼓励的时候的阻力就会更大。这样的设计也许能让玩家最终实现目标的时候有更强的获得感和成就感。</p><h4 id="美学呈现"><a href="#美学呈现" class="headerlink" title="美学呈现"></a>美学呈现</h4><ul><li>【以色彩进行画面引导】</li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117165418.png" alt="以色彩进行画面引导" style="zoom:67%;" /><p>如图所示，这里采用了显式的音符及音乐流向来引导玩家向前，十分自然。</p><p>延伸思考：这里让我想到的其实是好奇心、探索欲以及有限操作空间下的强制性选择。设计师采用了局部色彩的方式来突出了主体与可交互性，当画面出现如此抓眼的元素时玩家会不自主地想要进行探索，但凡事有例外，这里的交互空间有限，玩家能做的只有向右前进这一个选项，这里并不是想要反驳设计师对于操作空间的限制，因为有时确实需要做这样的决策以让玩家推进，只是一个题外话，如何在放开交互可能性的情况下更好地让玩家“正常推进”，特别对于线性叙事类游戏而言，这可能是一个需要关注的点。</p><ul><li>以色彩和形状反映心情</li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117175435.png" alt="组织语言" style="zoom:67%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117175404.png" alt="相谈甚欢" style="zoom:67%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117175958.png" alt="激烈争吵" style="zoom:67%;" /><p>如图所示，在前两个图中，设计师很好地用恰当的颜色和形状很好地反映了恋爱开始时仔细组织语言的小心翼翼，到相恋之时相谈甚欢的不谋而合。前面的颜色温暖而含蓄，后面的颜色温馨而幸福；前面的形状多样且需要多次拼接，后面的形状彼此相配，且拖拽一个时，另一个也会自然靠近。色彩、形状、再辅以恰当的交互，很好地体现了主角，甚至是玩家当时的心境。<br>而在最后的图中，刺眼的红色以及都不用再组织的语言让人也直观感受到了争吵之时的激烈与口不择言，不断变快的话语速度也反映了二人心中激荡的情绪。真实，而又心疼。</p><p>延伸思考：又是一个题外延伸，有没有可能，未来可以结合音频输入设备来进行交互呢？这里指的并不是真的让玩家参与到争吵当中（当然了也不失为一种选择 (￣▽￣)”），而是识别玩家声音中的情绪，从而让画面产生相应的一些变化，包括玩家发声的频次，音调等，都以另一种方式来组成了主角的语言。（甚至能延伸出“骂爽 TA”的奇怪玩法哈哈…）</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>综上，本文从目标、路径、挑战、体验的角度对游戏《Florence》进行了整体分析，而后又对游戏轻快、代入、和温暖的目标体验进行了反思，最后对游戏中其余的出彩设计进行了分析和反思。</p><p>总的而言，如概述中所言，这是一个平凡、起伏而又温暖的故事。<br>感谢您的阅读，欢迎大家批评指正！</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Analysis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Clash Heroes 目标体验思考及设计反思</title>
      <link href="2021/11/06/thinking-of-the-clash-heroes/"/>
      <url>2021/11/06/thinking-of-the-clash-heroes/</url>
      
        <content type="html"><![CDATA[<h3 id="视频展示"><a href="#视频展示" class="headerlink" title="视频展示"></a>视频展示</h3><p>不知道为何 Youtube 的视频无法在这里嵌套展示，所以在这里提供视频传送门：<a href="https://youtube.com/clip/UgkxFq-TIaDR8SPzRPFo4lYH-Tv9vCs9dWsH">点击访问视频</a></p><h3 id="Gif-展示"><a href="#Gif-展示" class="headerlink" title="Gif 展示"></a>Gif 展示</h3><table><tr> <center>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/冲撞技能与地形的交互.gif" alt="冲撞技能与地形的交互" style="zoom: 33%; text-align: center; align:middle;" border=0></td>     <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/InteractiveObject.gif" alt="可交互道具" style="zoom: 50%; text-align: center; align:middle;" border=0></td>     <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/interactiveTerrain.gif" alt="可交互地形" style="zoom:33%; align:middle;" border=0></td> </center></tr></table><table><tr> <center>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/fight.gif" alt="战斗场景" style="zoom:33%; align:middle;" border=0></td>     <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/object collection.gif" alt="物品拾取" style="zoom:33%; align:middle;" border=0></td>         <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/貌似 BOSS 战斗.gif" alt="精英怪物" style="zoom:33%; align:middle;" border=0></td> </center></tr></table><h2 id="《Clash-Heroes》目标体验思考及设计反思"><a href="#《Clash-Heroes》目标体验思考及设计反思" class="headerlink" title="《Clash Heroes》目标体验思考及设计反思"></a>《Clash Heroes》目标体验思考及设计反思</h2><h3 id="游戏概述"><a href="#游戏概述" class="headerlink" title="游戏概述"></a>游戏概述</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/cooperation.gif"></p><p>从目前放出的一些预览视频来看，《Clash Heroes》 是一款合作类的角色扮演闯关手游，玩家将以俯视角操纵英雄进行实时游玩。每个游戏角色都有独立的角色特性和技能。</p><h4 id="目标、路径、挑战、体验分析"><a href="#目标、路径、挑战、体验分析" class="headerlink" title="目标、路径、挑战、体验分析"></a>目标、路径、挑战、体验分析</h4><p>基于视频，以下将从目标、路径、挑战、体验四个方面对游戏进行整体设想：</p><h5 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h5><p>即游戏的结束条件：玩家需要带领角色冲破重重关卡，直至通关</p><h5 id="路径"><a href="#路径" class="headerlink" title="路径"></a>路径</h5><p>即玩家达到目标的手段：玩家需要通过不断杀敌，从而不断向前。<br>其中涉及的元素有：</p><ul><li><p>杀敌</p></li><li><p>收集</p><table><tr> <center>  <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/object collection.gif" alt="掉落资源收集" style="zoom:45%; align:middle;" border=0></td>   <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/fight.gif" alt="场景（右上方）宝箱收集" style="zoom:45%; align:middle;" border=0></td> </center></tr></table></li><li><p>场景道具交互</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/InteractiveObject.gif" style="zoom:60%;" /></li><li><p>地形交互</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/interactiveTerrain.gif" style="zoom:30%;" /></li></ul><h5 id="挑战"><a href="#挑战" class="headerlink" title="挑战"></a>挑战</h5><p>即玩家在实现目标的路径中可能碰到的障碍。<br>目前视频中所反映出的障碍基本有以下几种：</p><ol><li>怪物障碍：即通关过程中会不断遭遇的怪物<br>怪物类型：</li></ol><ul><li>普通怪物<img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/fight.gif" style="zoom: 30%;" /></li><li>精英怪物<img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/貌似 BOSS 战斗.gif" style="zoom:30%;" /></li><li>BOSS<img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Boss.gif" style="zoom:70%;" /></li></ul><ol start="2"><li>陷阱/建筑障碍：即会对玩家造成直接或间接伤害的地图陷阱/建筑<br>陷阱/建筑类型：</li></ol><ul><li>防御塔：如下图 Gif 中出现的会对角色进行攻击的防御塔</li><li>兵工厂：如下图 Gif 中右上角出现的会不断产生新怪物的兵工厂<table><tr> <center>  <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/characterArrow.gif" alt="防御塔" style="zoom: 80%; align:middle;" border=0></td>   <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/characterWorrior.gif" alt="兵工厂" style="zoom:80%; align:middle;" border=0></td> </center></tr></table></li></ul><ol start="3"><li>地形障碍：即通关过程中需要跨越地形<br>地形类型：沟壑 - 需要借助地形交互<img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/interactiveTerrain.gif" style="zoom:40%;" /></li></ol><h5 id="体验"><a href="#体验" class="headerlink" title="体验"></a>体验</h5><p>即期望玩家在游玩时获得的情感体验。<br>在后面部分会展开描述，这里只进行列举：</p><ul><li>爽快感</li><li>合作感</li><li>策略感</li></ul><h3 id="目标体验反思"><a href="#目标体验反思" class="headerlink" title="目标体验反思"></a>目标体验反思</h3><h4 id="爽快感"><a href="#爽快感" class="headerlink" title="爽快感"></a>爽快感</h4><p>爽快感解析：换言之我觉得也可以称之为顺畅感、割草感<br>爽快感实现方式：</p><ol><li>系统角度</li></ol><ul><li><p>操作简单：采用了市面通行的左右摇杆机制，让玩家几乎没有学习和适应成本</p></li><li><p>攻击机制简单：每个角色只有一个普攻按键和一个技能按键</p></li><li><p>怒气积累机制直观：角色每次成功攻击都能积累一档怒气（即生命条下方的紫色状态条），当怒气集满之后不同角色会有独特的状态：</p><ul><li><p>战士是会进入狂暴状态，应该是能得到攻击加成</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Boss.gif" alt="战士" style="zoom:70%;" /></li><li><p>弓箭手和炸弹师都是能在下次普攻时自动发动一次强力攻击</p><table><tr> <center>  <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/characterArrow2.gif" alt="弓箭手" style="zoom:70%; align:middle;" border=0></td>   <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/characterbomb.gif" alt="炸弹师" style="zoom:70%; align:middle;" border=0></td> </center></tr></table></li><li><p>自动选择攻击单位（参见上方炸弹师 Gif）：在进行普通攻击时，玩家不需要选择供给单位，系统会自动选择离自己最近的敌方单位进行攻击</p></li><li><p>技能方向选择简单（参见上方炸弹师 Gif）：对于需要选择攻击方向的技能，采用了以玩家自身为锚点的方式，玩家只需要根据按钮方向对攻击方向进行选择</p></li></ul></li><li><p>交互机制简单</p><ul><li>攻击即可触发道具交互<img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/InteractiveObject.gif" style="zoom: 60%;" /></li><li>移动到特殊地形即可触发地形交互<img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/interactiveTerrain.gif" style="zoom:40%;" /></li><li>移动到一定范围内即可对掉落物进行自动收集<img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/objectCollection.gif" style="zoom:40%;" /></li></ul></li></ul><ol start="2"><li>UX 角度</li></ol><ul><li>美学呈现（以视觉举例）<ul><li>卡通风格简明：卡通风格既能保证战斗体验，也不会耗费玩家太多的注意力资源</li><li>攻击飘字颜色简单：如图所示，目前的飘字一共有两种，己方造成的伤害是白色，敌方造成的伤害是红色，这样的飘字呈现方式简单直白  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/fight.gif" style="zoom:40%;" /></li><li>范围呈现明显：无论是敌方的攻击范围，还是所控制角色的技能释放范围，都有很明显的视觉辅助，从而能让玩家产生爽快的战斗体验  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Boss.gif" style="zoom:80%;" />  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/characterbomb.gif" style="zoom:80%;" /></li></ul></li><li>即时交互：即时交互机制能让玩家很容易进入全神贯注的心流状态</li></ul><h4 id="合作感"><a href="#合作感" class="headerlink" title="合作感"></a>合作感</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/coop.gif" alt="合作杀敌"></p><p>合作感解析：即需要与玩家配合杀敌通关<br>合作感实现：在所展示的 Gif 中，不同玩家操纵着不同角色在同一地图中共同作战，但从目前放出的资料来看，合作感还有待加强，本文后续部分也会再次提到这部分内容。</p><h4 id="策略感"><a href="#策略感" class="headerlink" title="策略感"></a>策略感</h4><p>策略感解析：这里的策略感指的是玩家可以以多种方式进行游玩和参与到游戏中<br>策略感实现：</p><ol><li>角色设计<br>如图所示，目前放出的视频中一共有三种角色，我称之为战士，弓箭手和炸弹师。<img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Boss.gif" alt="战士" style="zoom:80%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/characterArrow2.gif" alt="弓箭手" style="zoom:80%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/characterbomb.gif" alt="炸弹师" style="zoom:80%;" /></li></ol><p>据称还会有更多职业放出，多样化的职业为玩家提供了更多的游玩可能性<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/characters.jpg" alt="角色造型" style="zoom: 33%;" /></p><ol start="2"><li><p>可交互地形设计<br>如图所示，目前的除了有可交互的特殊区域可以帮助进行地形跨越外，还增加了令人眼前一亮的技能与地形的交互，这样的交互可能性会极大增强可玩性和策略性（但想必实现难度不低，BUG 也会很多哈哈）</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/interactiveTerrain.gif" alt="可交互地形" style="zoom:40%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/冲撞技能与地形的交互.gif" alt="技能与地形的交互" style="zoom:40%;" /></li><li><p>道具设计<br>如图所示，目前放出的视频中，地图中也有可供玩家交互的道具，这些道具的出现势必会丰富玩家的策略空间</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/InteractiveObject.gif" alt="可交互道具" style="zoom: 67%;" /></li></ol><p>以上对目前所放出的视频中的目标体验进行了一些反思，下面我会对未来可能的一些设计方向提出一些自己的思考。</p><h3 id="对未来可能的设计方向的思考"><a href="#对未来可能的设计方向的思考" class="headerlink" title="对未来可能的设计方向的思考"></a>对未来可能的设计方向的思考</h3><p>以下将从战斗、养成、社交的经典三元素出发，对未来可能的设计方向进行一些思考。</p><h4 id="战斗"><a href="#战斗" class="headerlink" title="战斗"></a>战斗</h4><ol><li>丰富战斗交互空间<br>这里的战斗交互空间主要指的是玩家的可操作空间。丰富战斗交互空间可以增强玩家【策略感】。<br>目前只为玩家提供了普通攻击、怒气攻击和一个技能，玩家可操作空间较少，所以也许可以考虑以下的几种方式丰富战斗交互空间：</li></ol><ul><li>丰富技能<ul><li>即为各个角色增加更多的技能选项</li></ul></li><li>丰富攻击方式<ul><li>其中一种丰富攻击方式的方法是引入武器系统，并且为每种武器赋予独特的攻击方式和技能系统</li></ul></li><li>丰富攻击属性<br>  从下面的图中我们可以看到目前已经拥有冰属性和雷属性的攻击，在未来也许可以考虑以下的方式来丰富攻击属性：<ul><li>武器附魔</li><li>利用不同的技能/道具状态改变攻击属性<table><tr> <center>  <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/characterArrow2.gif" alt="冰属性攻击" style="zoom:80%; align:middle;" border=0></td>   <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/cooperation.gif" alt="雷属性攻击" style="zoom:80%; align:middle;" border=0></td> </center></tr></table></li></ul></li></ul><ol start="2"><li>丰富场景道具<img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/InteractiveObject.gif" alt="可交互道具" style="zoom:67%;" />如上所示，目前已经有可供交互的道具，未来也许可以考虑以下的方式来丰富场景道具：</li></ol><ul><li>丰富道具功能<ul><li>如交互后可为角色带来不同的状态改变：<ul><li>生命恢复</li><li>攻击提升</li><li>攻击属性授予</li><li>防御提升</li><li>一段时间内不消耗怒气等</li></ul></li></ul></li><li>丰富道具属性<ul><li>图中所示的为一次性交互道具，也许可以考虑为其增加可重复使用的可携带道具，可设计为同账号不同角色间通用道具，也可为不同角色设计专属道具，如为弓箭手角色设计专属道具【翎羽】，效果为可几率触发普攻连发等。</li></ul></li></ul><ol start="3"><li>丰富视觉效果<br>这里的视觉效果主要指场景中的可见元素的效果。丰富视觉效果可以增强玩家战斗【爽快感】。</li></ol><ul><li>丰富飘字效果<ul><li>目前放出的版本中只有两种飘字，即己方伤害为白色，敌方伤害为红色，未来可丰富飘字效果，如暴击则飘字为黄色等。</li></ul></li></ul><ol start="4"><li>丰富职业/角色<br>目前已经放出的角色有三种，我称之为战士、弓箭手和炸弹师，未来可考虑对角色进行丰富。丰富角色可以增强玩家【策略感】。<br>也许可以考虑增加以下职业/角色：</li></ol><ul><li>召唤师：可召唤宝宝辅助进行战斗</li><li>陷阱师：可设置陷阱诱捕敌人/对敌人造成伤害</li><li>工程师：可建造炮塔等设施辅助进行战斗</li><li>法师：可利用强大的法术进行战斗</li><li>诅咒师：可利用诅咒辅助进行战斗，如施加负面效果或造成伤害</li><li>盗贼：如拥有隐身和背刺等技能，背后攻击会有攻击加成</li><li>狼人：可拥有变身技能，变身后提供状态加成，且攻击方式、攻击技能改变</li><li>魅惑师：可利用魅惑技能让敌方单位反为己用等</li></ul><ol start="5"><li><p>丰富地形的同时提供反悔的选项，此举可以增强玩家【爽快感】。<br>如图所示，当前版本为玩家提供了地形交互选项，我想到的是可能还得为玩家提供反悔的选择，如设置为可返回前一地形，或者添加位移技能，防止出现玩家想要返回前一地形却无计可施，从而产生挫败感的情况。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/interactiveTerrain.gif" alt="可交互地形" style="zoom: 40%;" /></li><li><p>丰富玩法<br>这里的玩法主要指的是游戏中的各种交互机制，玩法的丰富可以增加玩家的【策略感】。<br>可以考虑如下的方式来丰富玩法：</p></li></ol><ul><li>增加解密元素：目前放出的资料中基本只涉及战斗，所以可以考虑增加解谜元素以丰富玩法，同时不断给玩家带来新鲜感。</li><li>引入天气系统：目前放出的资料中并不涉及天气系统，所以可以考虑增加天气系统，并且将其与战斗系统挂钩，如雨天环境下，雷属性攻击的范围变大，且攻击力变强等。</li><li>引入时间系统：目前放出的资料中并不涉及时间系统，所以可以考虑增加时间系统，并且将其与战斗系统挂钩，如黑夜环境下，玩家视野变小，但也更不容易被敌人发现；其上所提到的狼人角色，其在黑夜状态下的变身时间会延长等。</li></ul><h4 id="养成"><a href="#养成" class="headerlink" title="养成"></a>养成</h4><p>即丰富养成空间：这里的养成空间主要指的是可让角色提升的方方面面，养成空间的丰富可以增强玩家的【策略感】。<br>目前所体现的角色变化只有怒气值的变化：<br>虽然怒气集满后可持续时间增长了，但是积累所需的攻击次数也变多了，如此使得养成系统的体现并不明显，也会降低玩家提升的动力。<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/fight.gif" alt="三档怒气" style="zoom: 40%;" /><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/characterWorrior.gif" alt="五档怒气" style="zoom: 80%;" /></p><p>目前资料中还体现了收集元素，应该也是服务于养成系统的：<br>    <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/object collection.gif" alt="掉落元素收集" style="zoom:40%;" /></p><p>可以考虑如下的方式来丰富养成空间：</p><ol><li>个人养成</li></ol><ul><li>属性养成：这里的属性养成指的是各个角色自身的属性，如可以对角色的以下属性进行提升：<ul><li>攻击力</li><li>防御力</li><li>暴击率</li><li>攻击属性</li><li>耐性：用于抵抗倒地等</li></ul></li><li>技能/熟练度养成：玩家在不断使用技能过程中，也许可以考虑为技能引入熟练度，从而对技能达到以下效果的提升：<ul><li>攻击力</li><li>攻击范围</li><li>冷却速率等</li></ul></li><li>装备养成：这里的装备指的是可以对玩家属性造成影响的装备</li><li>装饰养成：这里的装饰指的是不会对玩家属性造成影响，只会影响角色外观的装备</li></ul><ol start="2"><li>道具养成：这里的道具养成指的是对玩家在游戏中可交互道具的养成，如</li></ol><ul><li>增加道具增益状态的持续时间</li><li>增加道具效果等</li></ul><h4 id="社交"><a href="#社交" class="headerlink" title="社交"></a>社交</h4><p>即丰富社交空间：这里的社交空间指的是游戏中需要与其他玩家共同达成的事件，社交空间的丰富可以增强玩家【合作感】。<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/cooperation.gif" alt="合作作战"></p><p>如图所示，个人认为目前版本中玩家之间的合作感还不强，只是各自为战，未来也许可以考虑如下的方式来丰富社交空间：</p><ul><li>增加合作任务：可以考虑增加合作任务，并为合作任务设置奖励加成甚至是专属奖励（如只有在合作模式下才有几率掉落）</li><li>增加合击技：可以考虑为不同职业之间增加合击技，或者是为不同攻击属性之间增加交互可能性，如火属性攻击和水属性攻击会互相减弱伤害，但先施加水属性攻击后施加雷属性攻击会带来伤害加成等。</li></ul><p>以上是基于战斗、养成、社交角度对未来可能的设计方向的一些思考，但需要明确的是在未来的设计中还是要围绕目标体验出发，达到合理的取舍与平衡。</p><h2 id="《Clash-Heroes》官方网站"><a href="#《Clash-Heroes》官方网站" class="headerlink" title="《Clash Heroes》官方网站"></a>《Clash Heroes》官方网站</h2><p><a href="https://clash.com/en">Clash</a></p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Analysis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>喝酒游戏列举与思考</title>
      <link href="2021/11/02/drinking-games/"/>
      <url>2021/11/02/drinking-games/</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p><span id="jump"></span></p><p>最近在看《游戏设计、原型与开发》一书，第一章中提到了对一个牌类游戏 Bartok 进行规则更改以达到不同的游玩体验一事，于是想到了可以把平时在玩喝酒游戏时的一些“突发奇想”也记录在此，同时也算是锻炼自己的游戏设计思维，遂有此文。</p><h2 id="喝酒游戏列举（及可能的设计反思）"><a href="#喝酒游戏列举（及可能的设计反思）" class="headerlink" title="喝酒游戏列举（及可能的设计反思）"></a>喝酒游戏列举（及可能的设计反思）</h2><p>虽然说是喝酒游戏，但其实也可以用于平时打发时间，以下会列举一些我所知的此类游戏，也会从更改目标游戏体验的角度出发，对部分游戏提出一些设计反思。</p><h3 id="1-Bartok"><a href="#1-Bartok" class="headerlink" title="1. Bartok"></a>1. Bartok</h3><p>这便是在【背景】中所提到的牌类游戏。</p><h4 id="1-1-规则列举"><a href="#1-1-规则列举" class="headerlink" title="1.1 规则列举"></a>1.1 规则列举</h4><ul><li>游戏目标<ul><li>第一个出完手牌的玩家获胜</li></ul></li><li>游戏规则<ul><li>一副标准扑克牌，去掉大小王，剩余 52 张</li><li>洗牌后向每个玩家发牌 7 张</li><li>其余牌反扣作为抽牌堆</li><li>从抽牌堆顶上抽牌，明牌，作为弃牌堆</li><li>玩家顺时针参与游戏，如果可以出牌，必须出一张牌到弃牌堆，若不能出，必须从抽牌堆抽取一张牌加入手牌</li><li>出牌规则：玩家的手牌若与当前明牌满足如下关系，则可以出一张牌：<ul><li>花色一致</li><li>数字一致</li></ul></li><li>第一个出完手牌的获胜</li></ul></li></ul><h4 id="1-2-Demo-体验"><a href="#1-2-Demo-体验" class="headerlink" title="1.2 Demo 体验"></a>1.2 Demo 体验</h4><p>该 Demo 来自 <a href="https://book.prototools.net/">Introduction to Game Design, Prototyping, and Development</a> 一书的官方网站，点击<a href="https://book.prototools.net/BartokWebBuild/BartokWebBuild.html">跳转进行体验</a>。</p><h3 id="2-21-点半买牌"><a href="#2-21-点半买牌" class="headerlink" title="2. 21 点半买牌"></a>2. 21 点半买牌</h3><h4 id="2-1-原始规则列举"><a href="#2-1-原始规则列举" class="headerlink" title="2.1 原始规则列举"></a>2.1 原始规则列举</h4><ul><li>游戏目标<ul><li>第一个将手牌凑齐 21 点半的玩家胜出</li></ul></li><li>游戏规则<ul><li>一副标准扑克牌，共 54 张牌<ul><li>其中 A<del>10 分别代表数字 1</del>10，共 40 张</li><li>J，Q，K，以及大小王都代表数字 0.5，共 14 张</li></ul></li><li>洗牌后将所有牌都作为抽牌堆</li><li>从抽牌堆顶上抽牌进行明牌公示，每次抽一张</li><li>以拍卖形式对当前明牌进行拍卖，玩家以任意顺序参与喊价，筹码自定（如酒）<ul><li>价高者支付筹码（如喝掉喊出量的酒），并获得当前明牌</li></ul></li><li>第一个凑齐 21 点半的玩家胜出，其余玩家都需要支付一定筹码</li></ul></li></ul><h4 id="2-2-规则反思与迭代-增加未知性"><a href="#2-2-规则反思与迭代-增加未知性" class="headerlink" title="2.2 规则反思与迭代 - 增加未知性"></a>2.2 规则反思与迭代 - 增加未知性</h4><p>在原始规则条件下，所有玩家的当前点数都是公示的，导致游戏缺少了未知性与刺激性，玩家能直接知道其余玩家还需多少点数才能胜利。</p><p>基于此，添加一条新的规则：<br>为每位玩家都添加一张其余人不可见的初始手牌</p><p>引入此规则后，参与者只能看到其余玩家场上的明牌点数，但并不能直接知道玩家还需多少点数才能胜利，从而增加了未知性和可玩性。</p><p>当前完整规则如下：</p><ul><li>一副标准扑克牌，共 54 张牌<ul><li>其中 A-10 分别代表数字 1-10，共 40 张</li><li>J，Q，K，以及大小王都代表数字 0.5，共 14 张</li></ul></li><li>洗牌后向每位玩家发牌 1 张</li><li>将其余牌都作为抽牌堆</li><li>从抽牌堆顶上抽牌进行明牌公示，每次抽一张</li><li>以拍卖形式对当前明牌进行拍卖，玩家以任意顺序参与喊价，筹码自定（如酒）<ul><li>价高者支付筹码（如喝掉喊出量的酒），并获得当前明牌</li></ul></li><li>第一个凑齐 21 点半的玩家胜出，其余玩家都需要支付一定筹码</li></ul><h4 id="2-3-规则反思与迭代-增加随机性与不可控性"><a href="#2-3-规则反思与迭代-增加随机性与不可控性" class="headerlink" title="2.3 规则反思与迭代 - 增加随机性与不可控性"></a>2.3 规则反思与迭代 - 增加随机性与不可控性</h4><p>在【2.2】版本的基础上，是否还可以增加一些随机性与不可控性呢？<br>基于此，添加一条新的规则：</p><ul><li>为参与者分配号数，在当前轮次拍卖结束后，从抽牌堆中抽出 1 张牌，若颜色为红色，则拍卖者成功获取当前拍卖牌，若颜色为黑色，则从包含参与者号数中的号数牌堆中抽出一张，将当前拍卖牌给予相应号数的玩家</li></ul><p>此规则的引入增加了游戏的随机性与不可控性，若是想要获取当前明牌就需要参与拍卖，但即使价格最高，支付了筹码，最终也有可能无法获取当前明牌，而为他人作嫁衣裳，或是为其他玩家制造“飞来横祸”，从而输掉游戏。</p><hr><h2 id="Roadmap"><a href="#Roadmap" class="headerlink" title="Roadmap"></a>Roadmap</h2><ul><li>待列举游戏<ul><li>青蛙跳水</li><li>瞄炮</li><li>柳树</li><li>十五的月亮十六圆</li><li>捞腌菜</li><li>牛肉面刀削面直升机</li><li>金字塔</li><li>游戏牌</li><li>七上八下</li><li>梦幻 3P</li><li>干瞪眼</li><li>斗牛</li><li>抢数字</li></ul></li><li>未来计划<ul><li>也许以后可以把这篇帖子的内容汇总成为一个喝酒游戏推荐软件，根据用户所需的游戏性、参与度、运气所占比例等指标为其推荐合适的喝酒游戏，谁知道呢 (￣▽￣)”</li></ul></li></ul><h2 id="Credit"><a href="#Credit" class="headerlink" title="Credit"></a>Credit</h2><p>封面图片由 <a href="https://unsplash.com/@no_noe?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Noémie Cauchon</a> 拍摄，取自 <a href="https://unsplash.com/">Unsplash</a></p>]]></content>
      
      
      <categories>
          
          <category> Thinking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Thinking </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>For Love Demo 展示及分析</title>
      <link href="2021/10/26/for-love-demo-showcase-and-analysis/"/>
      <url>2021/10/26/for-love-demo-showcase-and-analysis/</url>
      
        <content type="html"><![CDATA[<h2 id="《For-Love》Demo-展示"><a href="#《For-Love》Demo-展示" class="headerlink" title="《For Love》Demo 展示"></a>《For Love》Demo 展示</h2><h3 id="视频展示"><a href="#视频展示" class="headerlink" title="视频展示"></a>视频展示</h3><video width="480" height="270" controls>  <source src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/ForLoveCompression.mp4" type="video/mp4"></video><h3 id="截图展示"><a href="#截图展示" class="headerlink" title="截图展示"></a>截图展示</h3><table><tr> <center>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211026223000.png" alt="开始画面" style="zoom: 33%; text-align: center; align:middle;" border=0></td>     <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211026223154.png" alt="蓄力" style="zoom:33%; align:middle;" border=0></td>     <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211026223222.png" alt="发射" style="zoom:33%; align:middle;" border=0></td> </center></tr></table><table><tr> <center>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211026223248.png" alt="通过点击进行避障" style="zoom:33%; align:middle;" border=0></td>     <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211026223333.png" alt="通关" style="zoom:33%; align:middle;" border=0></td> </center></tr></table><h2 id="《For-Love》Demo-设计思路分析"><a href="#《For-Love》Demo-设计思路分析" class="headerlink" title="《For Love》Demo 设计思路分析"></a>《For Love》Demo 设计思路分析</h2><h3 id="灵感来源"><a href="#灵感来源" class="headerlink" title="灵感来源"></a>灵感来源</h3><p>此次 Gamejam 的关键词为 Transmission，头脑风暴后后最终将立意确定为【生命的传递】，基于此将游戏故事定为了对<strong>受孕过程的模拟</strong>，最终其实也希望玩家能在游玩之后体会到生命诞生的不易与伟大。</p><h3 id="游戏整体说明"><a href="#游戏整体说明" class="headerlink" title="游戏整体说明"></a>游戏整体说明</h3><p>以下将从目标、路径、挑战、体验四个方面对游戏进行整体说明：</p><ul><li>目标<ul><li>即游戏的结束条件</li><li>玩家需要通过操作，操纵尽可能多的生命体规避障碍，到达终点</li></ul></li><li>路径<ul><li>即玩家达到目标的手段</li><li>玩家需要通过不断点击屏幕产生反向推力，从而推动生命体不断向前</li></ul></li><li>挑战<ul><li>即玩家在实现目标的路径中可能碰到的障碍</li><li>游戏中设计的障碍结合受孕生理背景共有以下几种：<ul><li>屏幕滚动<ul><li>说明<ul><li>即屏幕会自动向上滚动，超出屏幕范围内的生命体便会消失</li></ul></li><li>寓意<ul><li>想要孕育新的生命需要不断向上，停滞便会被淘汰</li></ul></li></ul></li><li>边界<ul><li>说明<ul><li>生命体碰到边界便会消失</li></ul></li><li>寓意<ul><li>模仿子宫壁，若是生命体在不恰当的位置停留，便会被淘汰<img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211027132838.png" alt="子宫壁" style="zoom:67%;" /></li></ul></li></ul></li><li>隔断<ul><li>说明<ul><li>即路径中可能出现的粉色阻隔，生命体碰到便会消失</li></ul></li><li>寓意<ul><li>用绒毛的形象代替受孕生理过程中的阻碍，生命体若碰到便会消失<img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211027131926.png" alt="地图中随机生成的绒毛" style="zoom:80%;" /></li></ul></li></ul></li><li>掉落物<ul><li>说明<ul><li>即路径中可能掉落的白色球状物，生命体碰到便会消失</li></ul></li><li>寓意<ul><li>模仿白细胞，若是生命体碰到便会消失<img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211027132940.png" alt="随机掉落的白细胞" style="zoom:80%;" /></li></ul></li></ul></li></ul></li></ul></li><li>体验<ul><li>即期望玩家在游玩时获得的情感体验</li><li>在后面部分会展开描述，这里只进行列举<ul><li>生命诞生的不易</li><li>生命诞生的伟大</li><li>恍然大悟</li></ul></li></ul></li></ul><h3 id="目标体验分析"><a href="#目标体验分析" class="headerlink" title="目标体验分析"></a>目标体验分析</h3><p>前面提到了期望玩家能在游玩时获得的目标体验为生命诞生的不易和生命诞生的伟大，以下将对两种目标体验及实现手段进行分析。</p><ul><li>生命诞生的不易<ul><li>理解<ul><li>若想让玩家体会生命诞生的不易，便需要让其<strong>难以轻易通关</strong>，换言之便是会为玩家设计较高的游戏难度</li></ul></li><li>实现手段<ul><li>关卡难度<ul><li>地图设计<ul><li>整体的地图设计虽然简易，但也体现了<strong>先宽后窄</strong>的设计思想，目的是为了让玩家越往后的操作难度越大</li><li>而通过地图中最后的最窄部分也是玩家非线性体验的最高点  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211027150313.png" alt="最难通过的部分" style="zoom:80%;" /></li></ul></li><li>障碍设计<ul><li>不管是在地图中随机生成的阻挡物（绒毛），还是在行进过程中随机掉落的白色球状物（白细胞），其目的都是为了增加玩家通关难度</li></ul></li></ul></li><li>操作难度<ul><li>生命机制<ul><li>最开始有很多生命，但只有一次发射机会，之后只能通过不断操作来操控生命体不断向前，一旦生命体被全部淘汰，整局游戏便结束。</li></ul></li><li>操作机制<ul><li>游戏采取的是反作用力机制<ul><li>即以玩家点击点为中心，会向周围施加反向推力</li></ul></li><li>单次点击所能施加的力很小<ul><li>单次点击所能施加的力很小，这就要求玩家需要高频次地点击屏幕，相对的，也对玩家的<em>微操</em>能力提出了更高的要求</li></ul></li></ul></li><li>这样的生命和操作机制使得想要操控的生命体越多，操作难度便越大。</li></ul></li></ul></li></ul></li><li>生命诞生的伟大<ul><li>理解<ul><li>若想让玩家体会生命诞生的伟大，考虑从量方面入手，一为<strong>增强生命诞生的不易感</strong>，二为<strong>增强通关的获得感和成就感</strong></li></ul></li><li>实现手段<ul><li>增强生命诞生的不易感<ul><li>这一点可以参考上一部分【生命诞生的不易】中的内容</li></ul></li><li>增强通关的获得感和成就感<ul><li>分别从视觉和听觉层面来强化该体验<ul><li>视觉层面<ul><li>即用数字明显标识最终通关的生命体的数量</li></ul></li><li>听觉层面<ul><li>在通关视觉信息呈现的同时，也呈现<strong>婴儿哭声</strong>作为听觉刺激，从而强化通关的获得感和成就感，目的也是为了让玩家体会“自己真的带来了新生命”的感觉<img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211027135400.png" alt="通关" style="zoom: 50%;" /></li></ul></li></ul></li></ul></li></ul></li></ul></li><li>恍然大悟<ul><li>解释<ul><li>玩家在开始游玩时其实并不知道整个游戏过程是对于受孕过程的模拟，只有最后通关后看到通关文字以及听到婴儿哭声后才反应过来，从而产生恍然大悟的感觉</li></ul></li><li>实现手段<ul><li>恍然前<ul><li>即揭晓游戏本身的背景是受孕模拟前，需要以尽可能隐喻的方式对游戏元素进行呈现</li></ul></li><li>恍然<ul><li>即揭晓游戏本身是对受孕过程的模拟，这需要强有力的刺激才能让玩家感受到恍然大悟，所以以视觉（文字）+听觉（婴儿哭声）刺激的形式共同呈现</li></ul></li></ul></li></ul></li></ul><h3 id="其他设计细节"><a href="#其他设计细节" class="headerlink" title="其他设计细节"></a>其他设计细节</h3><h4 id="反作用力机制"><a href="#反作用力机制" class="headerlink" title="反作用力机制"></a>反作用力机制</h4><ul><li>设计背景<ul><li>目标平台是手机，所以玩家的可选操作空间较少</li></ul></li><li>设计思考<ul><li>反作用力机制带来的操作不习惯<ul><li>和传统的“指哪儿打哪儿”的操作不同，反作用力机制下，玩家的操作会带来反作用力，一开始可能需要一些时间适应</li></ul></li><li>Fat Fingers Problem（胖手指问题）<ul><li>解释<ul><li>即人们在使用移动设备时因为设备和视觉的限制，导致人们无法直接看到自己所点击的位置，从而出现的误触（想点击的位置和真实被点击的位置不一致）问题</li></ul></li><li>解决<ul><li>视觉呈现<ul><li>通过为玩家点击位置添加【波纹】，来帮助玩家确定所点击的位置，此举同时也可以视作力的一种具象化<img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211027142958.png" alt="通过呈现波纹来缓解 Fat Fingers Problem" style="zoom:80%;" /></li></ul></li><li>全局机制<ul><li>玩家通过点击所造成的影响是全局的，即在屏幕中任意位置都可以对生命体施加反作用力，其中会涉及的两个变量是力的源头和力的大小<ul><li>力的源头<ul><li>以点击点为圆心，向周围方向施加反作用力</li></ul></li><li>力的大小<ul><li>为反作用力设计了衰减机制，距离生命体越远，则生命体最终受到的力便越小</li></ul></li></ul></li></ul></li></ul></li></ul></li><li>反作用力的大小思考<ul><li>背景<ul><li>因为游戏是对着床这一生理现象的模拟，所以需要尽可能还原其自然选择和自由游动的状态</li></ul></li><li>反作用力大小的对比<ul><li>如果反作用力过大，那么会带来以下问题<ul><li>对自由游动这一状态的人为干预过大，对自然状态的还原度下降</li><li>反作用力过大会导致玩家操作难度极大上升，难以实现对生命体的微操</li><li>如果反作用力过大，那么即使是在有波纹的视觉辅助缓解了 Fat Fingers Problem，但是反而会产生的问题是玩家点击位置和最终的反馈点距离过远，即增大了玩家理解其操作所造成影响（系统反馈）的难度，导致玩家的操控感降低，这就是所谓的 Gulf of Evaluation 问题</li></ul></li><li>反之，反作用力小所带来的好处有<ul><li>更好地还原了“需要不断努力向前游动”这一生理过程</li><li>结合波纹，可以更好地感受到反馈</li><li>可以更好地进行微操</li></ul></li></ul></li></ul></li></ul></li></ul><h2 id="可能的扩展思路"><a href="#可能的扩展思路" class="headerlink" title="可能的扩展思路"></a>可能的扩展思路</h2><ul><li>关卡优化<ul><li>操作手感调整<ul><li>对力的大小进行调整，越往后的力越小，以凸显“力竭”的状态</li></ul></li><li>障碍物调整<ul><li>随着关卡的不断推进，可以在后期逐渐增多障碍物和掉落物，以增大通关游戏难度</li></ul></li><li>关卡拓展<ul><li>如为最后通关前增加【破壁】环节，以模拟进入卵巢的过程</li></ul></li></ul></li><li>增加社交元素<ul><li>如增加排行榜，以对比玩家表现</li></ul></li></ul><h2 id="可能的商业化思路"><a href="#可能的商业化思路" class="headerlink" title="可能的商业化思路"></a>可能的商业化思路</h2><p>如前所说，该游戏的目标平台是手机，所以最终预期成品的商业化思路是一次性买断制游戏。</p><h2 id="Gamejam-作品官方外链"><a href="#Gamejam-作品官方外链" class="headerlink" title="Gamejam 作品官方外链"></a>Gamejam 作品官方外链</h2><p><a href="https://v3.globalgamejam.org/2018/games/love-0">For Love</a></p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Demo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Portfolio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英雄联盟与王者荣耀玩家分段分析</title>
      <link href="2021/07/26/analysis-of-league-of-legends-and-glory-of-kings-players-segmented/"/>
      <url>2021/07/26/analysis-of-league-of-legends-and-glory-of-kings-players-segmented/</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>据统计：</p><ul><li>《王者荣耀》玩家段位分布<ul><li>青铜 5.22% </li><li>白银 1.97% </li><li>黄金 10.37% </li><li>铂金 17.48%</li><li>钻石 20.24% </li><li>星耀 28.67%</li><li>最强王者 12.16%</li><li>荣耀王者 3.89% </li></ul></li><li>《英雄联盟》玩家段位分布<ul><li>黑铁 3.3% </li><li>青铜 19.0% </li><li>白银 32.0% </li><li>黄金 29.0% </li><li>铂金 11.0%</li><li>钻石 2.4% </li><li>钻石以上 3.3%</li></ul></li></ul><p>本文希望从该现象出发，分析其出现原因及各自优劣。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/%E5%88%86%E6%AE%B5%E6%8A%98%E7%BA%BF%E5%9B%BE.png"></p><p>首先以折线图形式看一下二者的分段分布情况，可以看到二者基本呈现正态分布，差异点主要在于英雄联盟玩家的段位分布高峰主要在白银（超过 42.86% 的段位），位居中游；而王者荣耀玩家的段位分布高峰主要在星耀（超过 75 % 的段位），接近最高段位。基于此观察回答进行如下分析：</p><h2 id="为什么存在段位分布上的差异"><a href="#为什么存在段位分布上的差异" class="headerlink" title="为什么存在段位分布上的差异"></a>为什么存在段位分布上的差异</h2><p>首先需要明确的是分段差异出现的原因是因为设计者的设计，个人认为产生分段差异的原因有以下几点：</p><ol><li><p>游玩门槛导致的玩家基数不同</p><ul><li>英雄联盟作为一款 PC 端游，其游玩需要特定的环境与设备支持，存在游玩门槛。</li><li>王者荣耀作为一款手游，与英雄联盟相比，其游玩的门槛大大降低。</li><li>由此导致的结果是王者荣耀的玩家数量远超英雄联盟。设计师需要为大多数玩家带来良好的游戏体验，而在大玩家基数的基础之上，设计师需要为更多不同背景的玩家设计契合的玩法机制。</li></ul></li><li><p>想要打造的游戏体验不同</p><ul><li>英雄联盟想要打造的游戏体验是竞技感<ul><li>作为一款成功的 MOBA 类端游，每一局游戏的胜利都需要玩家投入时间与精力到每一个小细节上，玩家所期待的就是辛苦经营之后的酣畅胜利。整体强调的是有来有回的竞技感、博弈感。所以玩家对于越往后，受到的阻力越大，升段就越难是有心理准备的。</li></ul></li><li>王者荣耀则更加注重娱乐性和满足感<ul><li>作为一款希望玩家能够随时随地掏出手机就能玩的大众手游，玩家所追求的就是时间短、频率高的爽快体验。从玩家角度而言，在爽快娱乐的心理预期下若是花费了时间与精力却总是受挫是不可接受的。设计师需要保障绝大部分玩家都呈现一个段位整体上升的趋势。虽然玩家对于升段有难度一事有心理准备，但要尽可能避免因为玩家产生“本来玩的时间也不多，过了这么久了还总是在原地踏步”这样的挫败感而带来的留存率下降问题。</li></ul></li></ul></li></ol><h2 id="什么系统设计导致了这样的差距"><a href="#什么系统设计导致了这样的差距" class="headerlink" title="什么系统设计导致了这样的差距"></a>什么系统设计导致了这样的差距</h2><p>从策划角度考虑该问题，即设计师为了达到目标体验而设计的不同路径与挑战。</p><ol><li><p>排位机制的不同</p><ul><li>英雄联盟中存在隐藏分机制，隐藏分机制的设置是为了让玩家的段位尽可能地体现出其真实水平，所以存在胜负之后的加减分波动很大的情况。这一点也和目标游戏体验有关，英雄联盟的目标游戏体验就是竞技感，而这一机制的设定也是为了体现竞技场上强者为尊的思想，所以在隐藏分和显示段位接近情况下，基本不可能出现低段位战胜高段位的情况。</li><li>王者荣耀中存在段位保护机制，并且不存在隐藏分机制，玩家的升降段直接由胜负场决定，并且可以显式看到。还是可以从目标游戏体验分析，王者荣耀的目标游戏体验是娱乐性和爽快感，在这过程中应该尽量减少玩家的挫败感，所以王者荣耀甚至为首次到达钻石/星耀的玩家提供了排位保护卡，目的也是为了能够让持续游玩的玩家的段位达到稳定上升的目的。</li></ul></li><li><p>操作复杂度的不同导致的操作上限</p><ul><li>英雄联盟作为 PC 端游，其操作依托键鼠，通常而言左手涉及十六个按键（QWER、ASDF、1234、Tab、Ctrl、Alt、空格），右手需要操控鼠标。</li><li>而王者荣耀作为手游，其操作依托屏幕，通常涉及几个手指。</li><li>由此带来了操作熟练度的上限，对于操作而言，英雄联盟中更高的段位通常意味着对于操作的更高要求，段位越高的玩家通常也越是能“突破极限”。而王者荣耀中由于操作复杂度被简化，更高段位的玩家的操作可能与段位稍低的玩家的操作之间不会有天壤之别，由此减小了玩家之间的差距，从而增加了王者荣耀玩家的升段可能性。</li></ul></li><li><p>其余细节设计</p><ul><li>以下几种机制都加速了王者荣耀的整体游戏进度，使得玩家所控英雄能在更短时间内成型，从而推进游戏进程，使得单位时间内玩家的游戏局数增加，从而增加了王者荣耀玩家的升段可能性。<ul><li>等级机制<ul><li>英雄联盟中满级为 18 级，升到满级基本需要 30 分钟。</li><li>王者荣耀中满级为 15 级，升到满级基本只需要 10 分钟。</li><li>王者荣耀中快速的升级机制使得整体游戏进度加快。</li></ul></li><li>补刀机制<ul><li>英雄联盟中存在补刀机制，即玩家需要对目标进行最后一击达成击杀，如此才可以获取经验和经济。否则只能获取到经验（需在一定范围内）。</li><li>王者荣耀中不存在补刀机制，只要玩家在死亡单位的一定范围内就可以获取经验和经济。</li><li>如此设计同样可以从目标游戏体验出发，结合上面提到的操作复杂度，此设计使得王者荣耀的操作要求变低，玩家更容易获得满足感。这也对英雄联盟玩家的对线操作及专注度提出了更高的要求。</li></ul></li><li>补给机制<ul><li>英雄联盟中，玩家所控制英雄只能通过泉水回复效果、辅助技能效果、物品效果（补给品或者装备特效）三种途径进行回复。</li><li>王者荣耀中，除以上途径外，还有塔后补给包机制以供玩家回复。</li><li>从王者荣耀的目标游戏体验出发，该设计增长了玩家的“作战”时间，从而减少由于“无聊”的回城时间带来的阻滞感。</li></ul></li><li>装备购买机制<ul><li>英雄联盟中，玩家只能在泉水一定范围内进行装备购买。</li><li>王者荣耀中，玩家可在任意位置购买装备。</li><li>从王者荣耀目标游戏体验出发，和补给机制一样，增加了玩家的“作战”时间，降低操作复杂度，目的也是为了降低操作门槛与阻滞感。</li></ul></li><li>地图设计的不同导致战斗爆发频率高<ul><li>英雄联盟中的地图很大，除使用冷却时间很长的传送技能（并且需要在单局游戏开始前选择携带）外只能选择步行，如果爆发战斗的地点太远，很难及时进行支援，这对玩家意识就有了更高的要求，同时也增加了战斗的策略性。</li><li>王者荣耀中的地图较小，这意味着只要进行短时间的周旋就能等到队友的支援。</li><li>如此设计使得王者荣耀中战斗爆发频率更高，从而加快了游戏进程。</li></ul></li></ul></li></ul></li></ol><h2 id="各自的优缺点"><a href="#各自的优缺点" class="headerlink" title="各自的优缺点"></a>各自的优缺点</h2><p>作为各自领域的成功之作，二者的优缺点都是在服务于目标游戏人群及其体验情况下的取舍。</p><ul><li>英雄联盟在玩家分段设计方面的优点<ul><li>很好地服务于竞技感这一目标游戏体验</li><li>能力至上，强者为尊</li></ul></li><li>英雄联盟在玩家分段设计方面的缺点<ul><li>对于普通玩家而言，由于各方面能力差距导致的失败很容易产生挫败感</li></ul></li><li>王者荣耀在玩家分段设计方面的优点<ul><li>很好地服务于娱乐性与满足感的目标游戏体验</li><li>尽可能地满足了更多玩家群体的游戏需要</li></ul></li><li>王者荣耀在玩家分段设计方面的缺点<ul><li>在连胜场数过高情况下出现的胜率制裁等机制，可能使得玩家体验受到影响</li></ul></li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>综上，英雄联盟与王者荣耀的玩家分段不同主要是由于不同的玩家基数与目标游戏体验不同，导致设计师针对目标玩家群体及其游戏体验设计了包括排位、补刀、补给、装备购买、地图设计等不同机制，目的都是为了给玩家们带来更好的游戏体验。</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Analysis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Portfolio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>神将三国游戏体验报告</title>
      <link href="2021/07/26/shen-jiang-san-guo-game-experience-report/"/>
      <url>2021/07/26/shen-jiang-san-guo-game-experience-report/</url>
      
        <content type="html"><![CDATA[<h1 id="神将三国游戏体验报告"><a href="#神将三国游戏体验报告" class="headerlink" title="神将三国游戏体验报告"></a>神将三国游戏体验报告</h1><h2 id="1-报告基础信息"><a href="#1-报告基础信息" class="headerlink" title="1. 报告基础信息"></a>1. 报告基础信息</h2><h3 id="1-1-游戏名称：神将三国"><a href="#1-1-游戏名称：神将三国" class="headerlink" title="1.1 游戏名称：神将三国"></a>1.1 游戏名称：神将三国</h3><h3 id="1-2-游戏版本：1-17-1"><a href="#1-2-游戏版本：1-17-1" class="headerlink" title="1.2 游戏版本：1.17.1"></a>1.2 游戏版本：1.17.1</h3><h3 id="1-3-体验设备：iPhone-SE2"><a href="#1-3-体验设备：iPhone-SE2" class="headerlink" title="1.3 体验设备：iPhone SE2"></a>1.3 体验设备：iPhone SE2</h3><h3 id="1-4-系统版本：iOS-14-6"><a href="#1-4-系统版本：iOS-14-6" class="headerlink" title="1.4 系统版本：iOS 14.6"></a>1.4 系统版本：iOS 14.6</h3><h3 id="1-5-体验时间：2021-7-19-2021-7-25"><a href="#1-5-体验时间：2021-7-19-2021-7-25" class="headerlink" title="1.5 体验时间：2021.7.19 - 2021.7.25"></a>1.5 体验时间：2021.7.19 - 2021.7.25</h3><h2 id="2-报告目的"><a href="#2-报告目的" class="headerlink" title="2. 报告目的"></a>2. 报告目的</h2><p>体验下载-注册-游玩的全流程，对游戏进行整体体验，分析其游戏定位、整体目标感、核心玩法定位，发掘其设计闪光点及可优化点。</p><h2 id="3-游戏进程及游戏整体分析"><a href="#3-游戏进程及游戏整体分析" class="headerlink" title="3. 游戏进程及游戏整体分析"></a>3. 游戏进程及游戏整体分析</h2><h3 id="3-1-游戏进程"><a href="#3-1-游戏进程" class="headerlink" title="3.1 游戏进程"></a>3.1 游戏进程</h3><p>截止完成报告时，主线任务推进到第七章，势力值达到 354。</p><p>阵营中盟主【贞德】的贡献为 132733，战功为 572，势力值为 21172。</p><ul><li>阵营贡献<ul><li>  主公通过攻占资源地、击败敌对阵营主攻部队、击杀城池守军、攻打城池、捐献资源和预备兵可获得贡献；近侍官职还可通过建设军旗、拒马、箭塔获得贡献</li><li>  每个途径可获得贡献有上限，达到上限后该途径不再获得贡献，每个纪年（8 天）重置一次上限</li></ul></li><li>官职晋升条件<ul><li>  阵营贡献达到官职要求时，可申请晋升官职</li><li>  六阶以上官职将分为武将、文丞、近侍三类，每一类有独立的晋升通道和官职特权</li><li>  同一级不同类的官职可进行调任，调任后一纪年内不可再次调任</li></ul></li><li>服务器中不同官阶玩家贡献及势力值一览<style type="text/css">.tg  {border-collapse:collapse;border-spacing:0;}.tg td{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;overflow:hidden;padding:10px 5px;word-break:normal;}.tg th{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}.tg .tg-1wig{font-weight:bold;text-align:left;vertical-align:top}.tg .tg-baqh{text-align:center;vertical-align:top}.tg .tg-fymr{border-color:inherit;font-weight:bold;text-align:left;vertical-align:top}.tg .tg-0lax{text-align:left;vertical-align:top}</style><table class="tg"><thead><tr>  <th class="tg-fymr">描述 </th>  <th class="tg-1wig">主线进度 </th>  <th class="tg-1wig">官阶 </th>  <th class="tg-0lax"> 贡献需求 </th>  <th class="tg-1wig"> 本年贡献 </th>  <th class="tg-1wig">势力值 </th></tr></thead><tbody><tr>  <td class="tg-0lax">个人进展 </td>  <td class="tg-0lax">第七章 </td>  <td class="tg-0lax">布衣 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">0 </td>  <td class="tg-0lax">354 </td></tr><tr>  <td class="tg-0lax">布衣中贡献最高 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">布衣 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">62913 </td>  <td class="tg-0lax">15322 </td></tr><tr>  <td class="tg-0lax">伍长中贡献最低 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">九阶-伍长 </td>  <td class="tg-baqh" rowspan="2">2000 </td>  <td class="tg-0lax">3595 </td>  <td class="tg-0lax">1257 </td></tr><tr>  <td class="tg-0lax">伍长中贡献最高 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">九阶-伍长 </td>  <td class="tg-0lax">8032 </td>  <td class="tg-0lax">3322 </td></tr><tr>  <td class="tg-0lax">什长中贡献最低 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">八阶-什长 </td>  <td class="tg-baqh" rowspan="2">5000 </td>  <td class="tg-0lax">7076 </td>  <td class="tg-0lax">5227 </td></tr><tr>  <td class="tg-0lax">什长中贡献最高 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">八阶-什长 </td>  <td class="tg-0lax">17050 </td>  <td class="tg-0lax">5077 </td></tr><tr>  <td class="tg-0lax">百人将中贡献最低 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">七阶-百人将 </td>  <td class="tg-baqh" rowspan="2">10000 </td>  <td class="tg-0lax">13259 </td>  <td class="tg-0lax">4644 </td></tr><tr>  <td class="tg-0lax">百人将中贡献最高 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">七阶-百人将 </td>  <td class="tg-0lax">20990 </td>  <td class="tg-0lax">5090 </td></tr><tr>  <td class="tg-0lax">六阶官职中贡献最低 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">六阶-牙门将 </td>  <td class="tg-baqh" rowspan="2">20000 <br> </td>  <td class="tg-0lax">35290 </td>  <td class="tg-0lax">8920 </td></tr><tr>  <td class="tg-0lax">六阶官职中贡献最高 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">六阶-牙门将 </td>  <td class="tg-0lax">49699 </td>  <td class="tg-0lax">14095 </td></tr><tr>  <td class="tg-0lax">五阶官职中贡献最低 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">五阶-虎卫 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">50209 </td>  <td class="tg-0lax">21227 </td></tr><tr>  <td class="tg-0lax">五阶官职中贡献最高 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">五阶-虎卫 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">90978 </td>  <td class="tg-0lax">25773 </td></tr><tr>  <td class="tg-0lax">四阶官职中贡献最低 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">四阶-虎贲骁骑 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">142638 </td>  <td class="tg-0lax">25123 </td></tr><tr>  <td class="tg-0lax">四阶官职中贡献最高 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">四阶- 先登骁骑 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">102613 </td>  <td class="tg-0lax">18063 </td></tr><tr>  <td class="tg-0lax">三阶官职中贡献最低 </td>  <td class="tg-0lax" colspan="5" rowspan="8">空缺 <br> <br> </td></tr><tr>  <td class="tg-0lax">三阶官职中贡献最高 </td></tr><tr>  <td class="tg-0lax">二阶官职中贡献最低 </td></tr><tr>  <td class="tg-0lax">二阶官职中贡献最高 </td></tr><tr>  <td class="tg-0lax">从一阶官职中贡献最低 </td></tr><tr>  <td class="tg-0lax">从一阶官职中贡献最高 </td></tr><tr>  <td class="tg-0lax">一阶官职中贡献最低 </td></tr><tr>  <td class="tg-0lax">一阶官职中贡献最高 </td></tr><tr>  <td class="tg-0lax">盟主 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">盟主 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">132733 </td>  <td class="tg-0lax">21172 </td></tr></tbody></table></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210726143343.png"></p><h3 id="3-2-玩家目标分析"><a href="#3-2-玩家目标分析" class="headerlink" title="3.2 玩家目标分析"></a>3.2 玩家目标分析</h3><p>从上表中可以看出，整体而言，官阶越高，则贡献/势力值越高。玩家目标可从以下两方面进行划分：</p><ul><li>战斗+养成目标<ul><li>  势力值不断提高</li></ul></li><li>社交目标<ul><li>  贡献值不断提高</li><li>  官阶不断提高</li></ul></li></ul><h3 id="3-3-差距点设计"><a href="#3-3-差距点设计" class="headerlink" title="3.3 差距点设计"></a>3.3 差距点设计</h3><p>从图中可以看出，整体而言，随着官阶提升，相应贡献有显著提升，但是势力值上涨趋于平缓。</p><ul><li><p>设计者希望玩家拉开差距的地方 - 贡献</p><ul><li><p>原因</p><ul><li><p>贡献可看作玩家在社交+养成系统的投入，如此设计是为了</p><ol><li> 调动玩家社交积极性，鼓励玩家持续游戏</li><li> 调动玩家自豪感+阵营归属感，鼓励阵营内部合作竞争</li></ol></li></ul></li></ul></li><li><p>设计者不希望玩家拉开差距的地方 - 势力</p><ul><li><p>原因</p><ul><li><p>势力可看作玩家战力值的体现，如此设计是为了</p><ol><li> 让玩家的战力最终趋同，使不同阵营间的高等战力有相较之力</li><li> 防止头部玩家对其他玩家形成不可控的碾压局势</li></ol></li></ul></li></ul></li></ul><h3 id="3-4-游戏时长-amp-进度分布"><a href="#3-4-游戏时长-amp-进度分布" class="headerlink" title="3.4 游戏时长 &amp; 进度分布"></a>3.4 游戏时长 &amp; 进度分布</h3><p>以我个人为例，我的有效游戏时间接近 2 小时，物理时间为 7 天，势力值为 354，花费金额为 6 元。以最简单的线性函数来算要达到四阶官阶的时间：</p><ul><li>计算过程<ul><li>  取四阶官阶的势力值均值 = 21593</li><li>计算单位有效时间<ul><li>  2 小时 / 7 天 = 0.2857 小时/天</li></ul></li><li>计算单位有效时间的势力值增长<ul><li>  354 / 单位有效时间 = 1239 势力值 / 小时</li></ul></li><li>计算达到四阶官阶所需的有效时间<ul><li>  21593 / 单位有效时间的势力值增长 = 17.42776 小时</li></ul></li><li>计算物理天数<ul><li>  有效时间 / 单位有效时间 = 60.997 天</li></ul></li></ul></li><li>  也就是以最简单的线性函数估计玩家若是需要到达一个服务器的第一梯队约需要两个月的时间，而根据版本更新记录可知一个赛季时长约为 3-4 个月，计算与实际相符，即玩家在达到第一梯队后还有很长一段时间可以深度参与阵营间的合作竞争。</li></ul><h3 id="3-5-游戏未来设计趋势"><a href="#3-5-游戏未来设计趋势" class="headerlink" title="3.5 游戏未来设计趋势"></a>3.5 游戏未来设计趋势</h3><ul><li>游戏未来设计趋势为<ul><li>加强服务器间竞争<ul><li>  未来服务器合并后，同服务器玩家需要共同对抗外服务器玩家</li></ul></li><li>丰富已有机制<ul><li>  地图</li><li>  资源类型</li><li>  建筑类型</li><li>  兵种</li><li>  副本</li><li>  战役</li></ul></li></ul></li><li>推测依据<ul><li>  更多-天下大势-天下大势-阵营合作+竞争</li><li>  更多-天下大势-赛季说明-阵营竞争</li><li>  版本更新记录</li></ul></li></ul><h2 id="4-详细体验流程"><a href="#4-详细体验流程" class="headerlink" title="4. 详细体验流程"></a>4. 详细体验流程</h2><h3 id="4-1-下载"><a href="#4-1-下载" class="headerlink" title="4.1 下载"></a>4.1 下载</h3><h4 id="搜索情况"><a href="#搜索情况" class="headerlink" title="搜索情况"></a>搜索情况</h4><ul><li>  在 App Store 中搜索神将三国，第一个便是目标游戏。</li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210726143444.png" style="zoom:25%;" /><h4 id="游戏定位"><a href="#游戏定位" class="headerlink" title="游戏定位"></a>游戏定位</h4><ul><li>  搜索后可看到其名称中已经标注了游戏定位：<code>国战策略 slg 攻城手游</code>。</li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210726143507.png" style="zoom:25%;" /><h4 id="评分情况"><a href="#评分情况" class="headerlink" title="评分情况"></a>评分情况</h4><ul><li><p>  可以看到其拥有 4301 个评分，总评分高达 4.4/5，在模拟类排行榜中排行 83，是不错的成绩。</p></li><li><p>从截取的最有帮助的和差评中可以提取出以下负面评价关键词，可以为版本迭代提供一些思路</p><ul><li><p>  bug</p></li><li><p>闪退</p></li><li><p>卡顿</p></li><li><p>平衡性太差</p></li><li><p>  工作室太多</p></li></ul></li></ul><blockquote><p>玩家的评价是版本迭代的重要参考之一，既会影响潜在玩家的游玩可能性，也可以提示策划们可以对玩家哪方面的游戏体验进行优化</p></blockquote><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/%E8%AF%84%E5%88%86%E5%8F%8A%E8%AF%84%E8%AE%BA.jpg" style="zoom:25%;" /><h4 id="版本历史记录"><a href="#版本历史记录" class="headerlink" title="版本历史记录"></a>版本历史记录</h4><ul><li><p>  可以看到最早的版本 1.0.0 发布于六个月之前，之后的一个月进行了四次更新，之后的更新频率约为一个月一次，最近一次更新在一周前。</p></li><li><p>  整体更新频率较高，说明项目组活跃程度较高</p></li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210726143934.png" style="zoom:25%;" /><h4 id="语言"><a href="#语言" class="headerlink" title="语言"></a>语言</h4><ul><li>  该游戏共提供了俄文、日文、泰文、简体中文、繁体中文、英文、越南文、韩文共 8 种语言，可见其在海外市场也有布局。</li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210726143955.png" style="zoom:25%;" /><h4 id="游戏大小"><a href="#游戏大小" class="headerlink" title="游戏大小"></a>游戏大小</h4><ul><li><p>  542.5 MB</p></li><li><p>  比起动辄 10G+的手游，该大小让用户不需要太久地等待便可开始游玩。</p></li></ul><h3 id="4-2-注册"><a href="#4-2-注册" class="headerlink" title="4.2 注册"></a>4.2 注册</h3><h4 id="一键试玩"><a href="#一键试玩" class="headerlink" title="一键试玩"></a>一键试玩</h4><ul><li>  可以看到游戏中提供了一键试玩机制，可以让玩家直接进行体验，别有新意</li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210726144014.png" style="zoom:25%;" /><h4 id="登录方式"><a href="#登录方式" class="headerlink" title="登录方式"></a>登录方式</h4><ul><li>  登录方式为手机短信验证，输入验证码后还需设置密码，并且此处设置密码时的默认状态是可见的</li></ul><blockquote><p>迭代建议：将此处密码输入时设置为默认不可见模式，以保护用户隐私。</p></blockquote><h4 id="登录界面"><a href="#登录界面" class="headerlink" title="登录界面"></a>登录界面</h4><ul><li><p>  画面精美，且有火焰纷飞动效，但不知道为何左上角适龄提示为 12+，在下载页面的适龄提示却是 9+</p></li><li><p>服务器信息</p><ul><li>  会自动进行选择，免去了玩家手动选择的繁琐操作</li></ul></li><li><p>用户服务协议和隐私保护协议</p><ul><li>  需要用户手动勾选，强化用户知情权</li></ul></li><li><p>点击效果</p><ul><li>  有波纹特效，方便用户获知点击位置</li></ul></li></ul><blockquote><p>迭代建议：建议统一 App Store 中与登录界面中的适龄提示信息</p></blockquote><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210726144033.png" style="zoom:25%;" /><h4 id="意外情况"><a href="#意外情况" class="headerlink" title="意外情况"></a>意外情况</h4><ul><li><p>  点击开始游戏后提示登录失败</p></li><li><p>  有可能是因为在登录界面停留时间过长导致的</p></li></ul><h3 id="4-3-游玩"><a href="#4-3-游玩" class="headerlink" title="4.3 游玩"></a>4.3 游玩</h3><h4 id="4-3-1-角色创建"><a href="#4-3-1-角色创建" class="headerlink" title="4.3.1 角色创建"></a>4.3.1 角色创建</h4><ul><li>角色选择<ul><li>性别选择<ul><li>进入游戏后首先是性别选择，并且在切换时伴有角色声效，增强玩家代入感<ul><li>男：大丈夫生于乱世，当带三尺之剑，立无世之功</li><li>  女：当窗理红妆，对镜贴花黄，也无碍小女子驰骋沙场</li></ul></li></ul></li><li><code>请留下大名</code><ul><li>  会有随机生成的名称，且都具有几分古韵，增强了玩家代入感</li></ul></li></ul></li></ul><h4 id="4-3-2-新手教程-此时注意到是竖版游戏"><a href="#4-3-2-新手教程-此时注意到是竖版游戏" class="headerlink" title="4.3.2 新手教程 - 此时注意到是竖版游戏"></a>4.3.2 新手教程 - 此时注意到是竖版游戏</h4><ul><li>涉及系统<ul><li>战斗<ul><li>队伍配置（上阵）</li><li>征兵（分配兵力）</li><li>下阵</li><li>招募武将（单次可无限重复）</li><li>强调兵种克制机制</li><li>引入战斗资源<ul><li>  消耗体力</li></ul></li><li>到达士气</li><li>行军时间</li><li>行军路线</li><li>路线选择</li><li>  上阵部队</li></ul></li></ul></li><li>社交<ul><li>阵营选择<ul><li>魏国曹操<ul><li>骑兵加伤害 <code>2%</code></li><li>铁矿产量加 <code>300</code></li></ul></li><li>蜀国刘备<ul><li><p>  枪兵加伤害 <code>2%</code></p></li><li><p>  粮草产量加 <code>300</code></p></li></ul></li><li>东吴孙权<ul><li>  弓兵加伤害 <code>2%</code></li><li>  木材产量加 <code>300</code></li><li>  水战伤害提升 <code>15%</code></li></ul></li></ul></li></ul></li><li>养成<ul><li>引入不同资源类型<ul><li>铜币</li><li>木材</li><li>铁矿</li><li>粮草</li></ul></li><li>攻占资源点及领土相关规则介绍</li><li>引入内政升级机制</li><li>引入任务机制</li></ul></li><li>评价<ul><li>  总体而言若中间不停顿，新手教程整体流程在五分钟左右，节奏较快，其中基本涵盖了前期所需所有操作，便于玩家上手。</li></ul></li></ul><h4 id="4-3-3-部分游戏系统体验"><a href="#4-3-3-部分游戏系统体验" class="headerlink" title="4.3.3 部分游戏系统体验"></a>4.3.3 部分游戏系统体验</h4><h5 id="4-3-3-1-阵营重置及深夜保护"><a href="#4-3-3-1-阵营重置及深夜保护" class="headerlink" title="4.3.3.1 阵营重置及深夜保护"></a>4.3.3.1 阵营重置及深夜保护</h5><ul><li><p>情况说明</p><ul><li><p>  第一天下午因为有事出去了没有继续，等晚上重新登录游戏的时候进度回退到了阵营选择阶段，并且此时选择阵营时的推荐阵营奖励已经消失了，这次选择东吴阵营继续。</p></li><li><p>中间有两天没有登录，此时再登录游戏发现又可以重选阵营，为玩家提供了多次阵营选择的设计很人性化。</p></li></ul></li><li><p>深夜保护</p><ul><li><p>  北京时间凌晨 2 点 - 6 点会有深夜保护机制，此时体力消耗翻倍（引出了体力机制）</p></li><li><p>  因为我本人在欧洲时区，所以会稍微受到一点影响</p></li></ul></li></ul><blockquote><p>深夜保护机制还是挺人性化的，防止玩家过度沉迷。</p></blockquote><blockquote><p>但既然游戏语言中有多国语言，说明应该有海外版本，海外版本中应该考虑和当地时区同步的问题</p></blockquote><h5 id="4-3-3-2-签到系统"><a href="#4-3-3-2-签到系统" class="headerlink" title="4.3.3.2 签到系统"></a>4.3.3.2 签到系统</h5><ul><li><p>签到奖励出现时机</p><ul><li>  在完成议政殿任务之后，自动弹出了今日签到奖励，并提示<code>再签到 1 天可获得：孙策（橙）</code></li></ul></li><li><p>目的</p><ul><li>  提高玩家留存率</li></ul></li></ul><h5 id="4-3-3-3-离线收益"><a href="#4-3-3-3-离线收益" class="headerlink" title="4.3.3.3 离线收益"></a>4.3.3.3 离线收益</h5><ul><li>上线后会有离线收益的汇总<ul><li>  让玩家感觉非游戏时间也有所收获</li></ul></li></ul><h5 id="4-3-3-4-任务系统（部分）"><a href="#4-3-3-4-任务系统（部分）" class="headerlink" title="4.3.3.4 任务系统（部分）"></a>4.3.3.4 任务系统（部分）</h5><h6 id="4-3-3-4-1-第一章-展土开疆"><a href="#4-3-3-4-1-第一章-展土开疆" class="headerlink" title="4.3.3.4.1 第一章 展土开疆"></a>4.3.3.4.1 第一章 展土开疆</h6><h6 id="武将招募"><a href="#武将招募" class="headerlink" title="武将招募"></a>武将招募</h6><ul><li><p>任务描述</p><ul><li><p>  这是新手教程后的首个任务，点开后可以发现此时处在第一章 展土开疆</p></li><li><p>并且有三种任务类型</p><ul><li><p>  主线任务</p></li><li><p>支线任务</p></li><li><p>阵营任务</p></li></ul></li><li><p>  此处选择完成主线任务中的招募一名新武将</p></li></ul></li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210726144133.png" style="zoom:25%;" /><ul><li>武将招募<ul><li>招募类型<ul><li>可以发现一共有四类招募<ul><li>忠诚名将<ul><li>可招募类型<ul><li>可招募名将（紫色）、良将（蓝色）、偏将（绿色）</li></ul></li><li>招募方式<ul><li><p>  300 铜币招募一次</p></li><li><p>  可连续招募（10 次起底）</p></li></ul></li></ul></li><li>神将群集（默认进入）<ul><li>可招募类型<ul><li>招募 5 次必得<strong>神将（橙）</strong>或<strong>名将（紫）</strong></li></ul></li><li>招募方式<ul><li><p>  首次招募免费（免费机会用掉 11 小时 30 分钟之后会再次有免费机会）</p></li><li><p>  768 金币招募五次（新手教程到此共有 530 金币）</p></li></ul></li></ul></li><li>王佐之才<ul><li>可招募类型<ul><li>招募 5 次必得<strong>神将（橙）</strong>或<strong>名将（紫）</strong></li></ul></li><li>招募方式<ul><li><p>  158 金币招募一次（但是左上角有倒计时显示，预计是倒计时之后会有免费招募一次的机会）</p></li><li><p>  768 金币招募五次（新手教程到此共有 530 金币）</p></li></ul></li></ul></li><li>混世魔王<ul><li>可招募类型<ul><li>招募 5 次必得<strong>神将（橙）</strong>或<strong>名将（紫）</strong></li></ul></li><li>招募方式<ul><li><p>  158 金币招募一次（但是左上角有倒计时显示，预计是倒计时之后会有免费招募一次的机会）</p></li><li><p>  768 金币招募五次（新手教程到此共有 530 金币）</p></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210726144151.png" style="zoom:25%;" /><ul><li><p>充值元素</p><ul><li><p>  这里首次明显出现了充值诱导元素，即再招募 5 次必得<strong>神将（橙）</strong>或<strong>名将（紫）</strong>，并且第一次注意到了金币和铜币的区别</p></li><li><p>这里选择使用一次免费的招募机会</p></li><li><p>  招募过程与前面的一致</p></li></ul></li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210726144209.png" style="zoom:25%;" /><ul><li>  获得了四星名将（紫）王朗</li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210726144328.png" style="zoom:25%;" /><ul><li><p>  返回发现任务已经完成</p></li><li><p>  领取任务奖励</p></li></ul><h6 id="内政系统"><a href="#内政系统" class="headerlink" title="内政系统"></a>内政系统</h6><p>升级内政【议政殿】</p><ul><li><p>任务描述</p><ul><li>  这是第一章 展土开疆中最后一个未完成的主线任务</li></ul></li><li><p>任务流程</p><ul><li>  点击【前往】按钮后会回到主页面</li></ul></li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210726144352.png" style="zoom:25%;" /><ul><li><p>此时主城有高亮提示</p><ul><li><p>  但是任务部分也有箭头提示</p></li><li><p>  会让玩家产生不知道该点哪个的错觉</p></li></ul></li></ul><blockquote><p>迭代建议：将此处任务部分的提示箭头去除</p></blockquote><ul><li><p>任务流程（接上）</p><ul><li><p>  点击主城</p></li><li><p>点击入城</p></li><li><p>点击内政</p></li><li><p>选择议政殿</p></li><li><p>点击【研究】按钮</p></li><li><p>  共需要 10 秒完成</p></li></ul></li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210726144409.png" style="zoom:25%;" /><ul><li><p>充值引导</p><ul><li>  此处发现可以通过使用金币来立即完成研究</li></ul></li><li><p>任务流程（接上）</p><ul><li><p>  升级之后发现二级议政殿下级有了<code>仓库</code>和<code>粮草</code>的可升级选项</p></li><li><p>此时返回主界面发现议政殿任务已完成</p></li><li><p>点击相应任务领取奖励</p></li><li><p>完成之前的步骤之后，此时箭头已经提示可以领取展土开疆任务以完成第一章节所有任务</p></li><li><p>  点击领取之后可直接完成</p></li></ul></li></ul><h6 id="4-3-3-4-2-第二章-大兴土木"><a href="#4-3-3-4-2-第二章-大兴土木" class="headerlink" title="4.3.3.4.2 第二章 大兴土木"></a>4.3.3.4.2 第二章 大兴土木</h6><ul><li><p>蔡文姬任务引导</p><ul><li>  蔡文姬发言引出当前阶段应以<strong>内政</strong>发展为重，而<strong>议政殿</strong>又为提升其他内政建筑的基础，应先行修缮。并且修缮需要资源，拓土可以增收，修筑内政建筑可以增收资源</li></ul></li><li><p>完成主线任务</p><ul><li>任务<ul><li>升级粮草</li><li>升级仓库</li><li>升级议政殿</li><li>攻占 2 个一级或更高级资源点<ul><li><p>提示</p><ul><li><p>  主公实力充沛，挑战低级资源点收益不高，浪费体力！</p></li><li><p>更多攻略请前往好友系统——百晓生</p><ul><li>  引出官方问答机制百晓生</li></ul></li><li><p>  胜利之后还需要时间进行占领</p></li></ul></li></ul></li></ul></li></ul></li></ul><blockquote><p>为什么要引入占领机制？</p></blockquote><blockquote><p>从目标游戏体验分析，原因有以下几点：</p><ol><li>增加真实感</li><li>增加节制感，由下方游戏整体目标感分析可知，此举使得玩家只需要间歇性游玩就可以不断实现实力上涨，另一方面也使得持续在线变得没有必要，从而增加了游戏节制感</li></ol></blockquote><h6 id="4-3-3-4-3-第三章-裹粮策马"><a href="#4-3-3-4-3-第三章-裹粮策马" class="headerlink" title="4.3.3.4.3 第三章 裹粮策马"></a>4.3.3.4.3 第三章 裹粮策马</h6><ul><li>主线任务类型<ul><li>外敌<ul><li>攻占敌营时引入了战场场景，存在阶段性胜利</li></ul></li><li>问答</li><li>内政</li><li>占领</li><li>  征兵</li></ul></li></ul><h6 id="4-3-3-4-4-第四章-仓箱可期"><a href="#4-3-3-4-4-第四章-仓箱可期" class="headerlink" title="4.3.3.4.4 第四章 仓箱可期"></a>4.3.3.4.4 第四章 仓箱可期</h6><ul><li>主线任务类型<ul><li>  引入了势力任务</li></ul></li></ul><h6 id="4-3-3-4-6-第六章-青出于蓝"><a href="#4-3-3-4-6-第六章-青出于蓝" class="headerlink" title="4.3.3.4.6 第六章 青出于蓝"></a>4.3.3.4.6 第六章 青出于蓝</h6><ul><li>主线任务类型<ul><li>  引入武技系统</li></ul></li></ul><h6 id="4-3-3-4-6-第七章-休养生息"><a href="#4-3-3-4-6-第七章-休养生息" class="headerlink" title="4.3.3.4.6 第七章 休养生息"></a>4.3.3.4.6 第七章 休养生息</h6><ul><li><p>主线任务类型</p><ul><li><p>  引入战役机制</p></li><li><p>  引入阵营任务</p></li></ul></li></ul><h2 id="5-游戏部分机制-系统拆解"><a href="#5-游戏部分机制-系统拆解" class="headerlink" title="5. 游戏部分机制/系统拆解"></a>5. 游戏部分机制/系统拆解</h2><h3 id="5-1-新手指引系统拆解"><a href="#5-1-新手指引系统拆解" class="headerlink" title="5.1 新手指引系统拆解"></a>5.1 新手指引系统拆解</h3><h4 id="5-1-1-玩法拆解"><a href="#5-1-1-玩法拆解" class="headerlink" title="5.1.1 玩法拆解"></a>5.1.1 玩法拆解</h4><ul><li><p>玩法规则：角色，能力+限制</p><ul><li>角色<ul><li>玩家自己</li><li>单人参与</li></ul></li><li>能力<ul><li>  跟随系统进行指定区域的点击</li></ul></li><li>限制<ul><li><p>  只能点击限定位置</p></li><li><p>只有一次新手指引教程</p></li></ul></li><li>玩法目标：终点+量化指标<ul><li>终点<ul><li>  完成新手指引相关任务</li></ul></li></ul></li></ul><h4 id="5-1-2-设计拆解"><a href="#5-1-2-设计拆解" class="headerlink" title="5.1.2 设计拆解"></a>5.1.2 设计拆解</h4></li><li><p>期望体验</p><ul><li><p>掌控感</p><ul><li>新手指引的目的就是为了让玩家尽可能快速地熟悉游戏基本系统，要让玩家有一种 <em><strong>这个我熟，以后我也知道怎么做了</strong></em> 的掌控感</li></ul></li><li><p>新鲜感和差异感</p><ul><li>  作为玩家游玩的第一部分，新手教程需要让玩家迅速体会到与同类游戏的差异点与新鲜点，从而吸引玩家继续游戏</li></ul></li><li><p>快速</p><ul><li>  新手指引系统需要玩家能尽可能快地完成，因为该过程中玩家可做操作有限，需要防止因为新手流程过长，玩家感到无聊而造成的玩家流失</li></ul></li></ul></li><li><p>目标</p><ul><li><p>  让玩家尽可能短的时间内熟悉游戏基本玩法机制</p></li><li><p>  吸引玩家继续游戏</p></li></ul></li><li><p>路径/挑战</p><ul><li>路径<ul><li>跟随系统进行特定位置的点击</li></ul></li><li>挑战<ul><li>  玩家很容易感到无聊</li></ul></li></ul></li></ul><h3 id="5-2-阵营机制拆解"><a href="#5-2-阵营机制拆解" class="headerlink" title="5.2 阵营机制拆解"></a>5.2 阵营机制拆解</h3><h4 id="5-2-1-玩法拆解"><a href="#5-2-1-玩法拆解" class="headerlink" title="5.2.1 玩法拆解"></a>5.2.1 玩法拆解</h4><ul><li>玩法规则：角色，能力+限制<ul><li>角色<ul><li>同服务器玩家</li><li>多人参与</li></ul></li><li>能力<ul><li><p>  同阵营玩家达成的成就自己也能享受相应奖励</p></li><li><p>与非己方阵营玩家进行作战</p></li></ul></li><li>限制<ul><li><p>  不能与同阵营玩家进行作战</p></li><li><p>作战失败会有资源损失</p></li></ul></li><li>玩法目标：终点+量化指标<ul><li>终点<ul><li>  完成赛季最终阵营任务</li></ul></li></ul></li></ul></li></ul><h4 id="5-2-2-设计拆解"><a href="#5-2-2-设计拆解" class="headerlink" title="5.2.2 设计拆解"></a>5.2.2 设计拆解</h4><ul><li><p>期望体验</p><ul><li>合作感<ul><li>阵营机制设计的期望之一就是让同阵营玩家能够荣辱与共，同阵营玩家达成成就后玩家自己也可以领取相应奖励，如此能够增强玩家的合作感</li></ul></li><li>竞争感<ul><li>  阵营机制设计的另一个期望就是让不同阵营玩家间互相竞争，此举不但能吸引玩家保持游戏积极性，并且也能促进玩家消费</li></ul></li></ul></li><li><p>目标</p><ul><li><p>  让同阵营玩家不断合作，荣辱与共</p></li><li><p>让非己方阵营玩家互相竞争，促进玩家游戏活跃度，刺激玩家消费欲望</p></li></ul></li><li><p>路径/挑战</p><ul><li>路径<ul><li>攻城略池</li></ul></li><li>挑战<ul><li>  失败后玩家可能会产生挫败感</li></ul></li></ul></li></ul><h3 id="5-3-问答系统拆解"><a href="#5-3-问答系统拆解" class="headerlink" title="5.3 问答系统拆解"></a>5.3 问答系统拆解</h3><h4 id="5-3-1-玩法拆解"><a href="#5-3-1-玩法拆解" class="headerlink" title="5.3.1 玩法拆解"></a>5.3.1 玩法拆解</h4><ul><li><p>玩法规则：角色，能力+限制</p><ul><li>角色<ul><li>玩家自己</li><li>  单人参与</li></ul></li></ul></li><li><p>能力</p><ul><li>  可以从备选答案中挑选答案</li></ul></li><li><p>限制</p><ul><li>只能做一次选择<ul><li>  答错了不能再次回答</li></ul></li></ul></li><li><p>玩法目标：终点+量化指标</p><ul><li>终点<ul><li>选择备选答案后无论答案正确与否都会结束</li></ul></li><li>量化指标<ul><li>  答案的正确性</li></ul></li></ul></li></ul><h4 id="5-3-2-设计拆解"><a href="#5-3-2-设计拆解" class="headerlink" title="5.3.2 设计拆解"></a>5.3.2 设计拆解</h4><ul><li><p>期望体验</p><ul><li>不紧张地答题<ul><li>不是设计为紧张的、有排名的、竞争性强的答题</li><li>设计为答对了很好，答错了也不会有什么严重后果的方式<ul><li><p>  减轻玩家答题负担</p></li><li><p>  增加玩家参与度</p></li></ul></li></ul></li><li>意犹未尽<ul><li>  答题机会是随机出现的，并且只有一次错误机会，题量通常小于 5 道，玩家基本能很快答完，无论是答对了还是答错了，都让人有一种意犹未尽的感觉，让玩家有种意犹未尽的感觉，增加玩家对下次答题的期待</li></ul></li><li>收获<ul><li><p>  既能收获游戏内的资源奖励</p></li><li><p>  又能丰富游戏内的玩法知识，从而增进玩家对于游戏的了解，丰富玩法路径</p></li></ul></li></ul></li><li><p>目标</p><ul><li>  通过正确回答问题获取资源</li></ul></li><li><p>路径/挑战</p><ul><li>路径<ul><li>从备选答案中做出选择</li></ul></li><li>挑战<ul><li>  存在错误答案</li></ul></li></ul></li></ul><h2 id="6-报告总结"><a href="#6-报告总结" class="headerlink" title="6. 报告总结"></a>6. 报告总结</h2><h3 id="6-1-游戏定位"><a href="#6-1-游戏定位" class="headerlink" title="6.1 游戏定位"></a>6.1 游戏定位</h3><ul><li>  <code>国战策略 slg 攻城手游</code></li></ul><h3 id="6-2-游戏整体目标感分析"><a href="#6-2-游戏整体目标感分析" class="headerlink" title="6.2 游戏整体目标感分析"></a>6.2 游戏整体目标感分析</h3><p>作为一款三国题材的 SLG 国战手游，游戏的整体目标感可归结为以下几点：</p><ul><li>掌控感<ul><li>调兵遣将<ul><li>  玩家需要作为一方首领来参与到游戏当中，无论是将领的配置还是兵种的选择都让玩家有一种_<strong>自己说了算</strong>_ 的爽快掌控感</li></ul></li><li>攻城略池<ul><li>  作为一方诸侯，玩家需要攻城略池以进行资源补给以及势力/贡献提升，此间对于目标地点的选择也增强了掌控感</li></ul></li></ul></li><li>策略感<ul><li>合纵连横<ul><li>  玩家需要作为阵营中的势力之一来共同影响天下大势，无论是对己方势力的驰援还是对敌对势力的攻占都是阵营内外合作竞争的重要抉择</li></ul></li></ul></li><li>节制感<ul><li>以下几种机制的引入使得玩家只需要间歇性游玩就可以不断实现实力上涨，另一方面也使得持续在线变得没有必要，从而增加了游戏节制感<ul><li>  占领时间</li><li>  研发种类上限</li><li>  深夜保护</li><li>  体力上限</li></ul></li></ul></li></ul><h3 id="6-3-核心玩法定位"><a href="#6-3-核心玩法定位" class="headerlink" title="6.3 核心玩法定位"></a>6.3 核心玩法定位</h3><h4 id="6-3-1-三元素分析"><a href="#6-3-1-三元素分析" class="headerlink" title="6.3.1 三元素分析"></a>6.3.1 三元素分析</h4><ul><li>  从战斗、养成、社交三元素进行分析，本游戏前期偏重战斗与养成，从其游戏定位看后期会偏重养成与社交</li></ul><h5 id="6-3-1-1-战斗"><a href="#6-3-1-1-战斗" class="headerlink" title="6.3.1.1 战斗"></a>6.3.1.1 战斗</h5><ul><li>偏重<ul><li>指令类型<ul><li>去哪儿<ul><li>选择要攻占的地方<ul><li>  涉及体力消耗及胜负</li></ul></li></ul></li><li>怎么打<ul><li><p>  武将的选择</p></li><li><p>兵种的选择</p><ul><li>  涉及兵种克制</li></ul></li></ul></li></ul></li></ul></li></ul><h5 id="6-3-1-2-养成"><a href="#6-3-1-2-养成" class="headerlink" title="6.3.1.2 养成"></a>6.3.1.2 养成</h5><ul><li>主要涉及<ul><li>武将的获取和培养<ul><li>升星<ul><li>抽到同一卡牌之后才能融合升星</li><li>最高为五星</li></ul></li><li>进阶</li><li>装备</li><li>缘分</li><li>武将技能</li></ul></li><li>科技（内政）的升级<ul><li>  快速升级需要消耗金币</li></ul></li><li>资源的获取和消耗<ul><li>  木材</li><li>  铁矿</li><li>  石料</li><li>  粮草</li></ul></li></ul></li></ul><h5 id="6-3-1-3-社交"><a href="#6-3-1-3-社交" class="headerlink" title="6.3.1.3 社交"></a>6.3.1.3 社交</h5><ul><li><p>主要涉及</p><ul><li><p>  势力值的提升</p></li><li><p>贡献度的提升</p></li></ul></li><li><p>  游玩过程中该元素还未较多体现</p></li><li><p>  但从其游戏定位中的<code>国战</code>属性中可知最终肯定会涉及到对抗型 PVP、GVG 元素</p></li></ul><h4 id="6-3-2-围绕核心玩法做了什么"><a href="#6-3-2-围绕核心玩法做了什么" class="headerlink" title="6.3.2 围绕核心玩法做了什么"></a>6.3.2 围绕核心玩法做了什么</h4><ul><li><p>新手引导</p><ul><li>  涵盖武将招募/选择，兵力分配，资源点攻占，兵种克制，土地开拓，任务机制，用户可快速上手</li></ul></li><li><p>主线剧情</p><ul><li>主线剧情的推进使得玩家渐渐熟悉游戏中的各类事务和系统<ul><li>战斗<ul><li>英雄及兵种选择</li></ul></li><li>养成<ul><li>资源获取<ul><li>攻城略池</li></ul></li><li>以战养战<ul><li>  内政升级</li></ul></li></ul></li><li>社交<ul><li><p>  阵营任务</p></li><li><p>  势力提升任务</p></li></ul></li></ul></li></ul></li></ul><h4 id="6-3-3-主要哪些系统为核心玩法服务"><a href="#6-3-3-主要哪些系统为核心玩法服务" class="headerlink" title="6.3.3 主要哪些系统为核心玩法服务"></a>6.3.3 主要哪些系统为核心玩法服务</h4><ul><li><p>战斗相关</p><ol><li><p>武将系统</p><ul><li>  通过抽卡获取（前期盈利点之一）</li></ul></li><li><p> 征兵系统</p></li><li><p> 武技系统</p></li></ol></li><li><p>养成相关</p><ol><li><p>内政系统</p><ul><li>  快速完成需要金币（消费点之一）</li></ul></li><li><p>资源系统</p><ul><li>思路<ul><li>  拓土-获取资源-提升实力</li></ul></li></ul></li><li><p>战役（副本）系统</p><ul><li>  用于获取材料/资源</li></ul></li></ol></li><li><p>社交相关</p><ol><li><p> 贡献系统</p></li><li><p> 势力系统</p></li><li><p>聊天系统</p><ul><li><p>分类</p><ul><li><p>阵营</p><ul><li>  辅助攻略型 PVE 的展开</li></ul></li><li><p>世界</p><ul><li>  辅助攻略型 PVE 、对抗型 PVP 的展开</li></ul></li><li><p>系统</p><ul><li>  了解世界玩家的高光时刻，以对游戏系统有更深地了解</li></ul></li></ul></li></ul></li></ol></li></ul><h4 id="6-3-4-基于核心玩法的设计细节进行拆分"><a href="#6-3-4-基于核心玩法的设计细节进行拆分" class="headerlink" title="6.3.4 基于核心玩法的设计细节进行拆分"></a>6.3.4 基于核心玩法的设计细节进行拆分</h4><ul><li><p>战斗前的战力分析</p><ul><li>  会有文字提示敌我差距，方便玩家进行判断</li></ul></li><li><p>战场场景的引入</p><ul><li>  在进行较大规模战斗（如攻占营地）时会有战场场景的引入，引入阶段性胜利，营造战斗氛围，增强玩家心流及代入感</li></ul></li></ul><h3 id="6-4-分析好不好玩"><a href="#6-4-分析好不好玩" class="headerlink" title="6.4 分析好不好玩"></a>6.4 分析好不好玩</h3><h4 id="6-4-1-上手难易度"><a href="#6-4-1-上手难易度" class="headerlink" title="6.4.1 上手难易度"></a>6.4.1 上手难易度</h4><ul><li><p>从操作分析</p><ul><li><p>  新手引导友好</p></li><li><p>  自动战斗省心</p></li></ul></li><li><p>从表现分析</p><ul><li><p>表现</p><ul><li><p>动作特效</p><ul><li>  形象帅气</li></ul></li><li><p>打击节奏</p><ul><li><p>  自动战斗</p></li><li><p>  频率固定</p></li></ul></li><li><p>打击反馈</p><ul><li>  飘字直观</li></ul></li><li><p>音效</p><ul><li><p>  较为真实</p></li><li><p>  战斗时定期播放</p></li></ul></li></ul></li></ul></li><li><p>从策略分析</p><ul><li><p>广度</p><ul><li><p>  所有武将共有 500 名</p></li><li><p>  所有兵种共有 7 种</p></li></ul></li><li><p>  深度</p></li><li><p>  容错</p></li></ul></li></ul><h4 id="6-4-2-耐玩程度"><a href="#6-4-2-耐玩程度" class="headerlink" title="6.4.2 耐玩程度"></a>6.4.2 耐玩程度</h4><ul><li><p>以下机制的引入使得策略要素大大加强，需要玩家选择_更高性价比_的操作方案</p><ul><li><p>  体力机制</p></li><li><p>  兵种克制</p></li></ul></li><li><p>此外还存在很多机制，玩家拥有很高的定制自由度</p><ul><li><p>城池</p><ul><li><p>内政</p><ul><li><p>  内务</p></li><li><p>  军务</p></li><li><p>  战略</p></li></ul></li><li><p>  马厩</p></li><li><p>  锻造</p></li><li><p>任命</p><ul><li><p>  主政官</p></li><li><p>  巡察使</p></li><li><p>  驯马使</p></li><li><p>  税收官</p></li><li><p>  木材官</p></li><li><p>  冶铁官</p></li><li><p>  …</p></li></ul></li><li><p>  鉴宝</p></li><li><p>  巡查</p></li></ul></li></ul></li></ul><h4 id="6-4-3-额外机制"><a href="#6-4-3-额外机制" class="headerlink" title="6.4.3 额外机制"></a>6.4.3 额外机制</h4><ol><li><p>问答机制</p><ul><li><p>触发</p><ul><li>  随机</li></ul></li><li><p>机制</p><ul><li>  回答问题，答对有奖励</li></ul></li><li><p>引入目的</p><ul><li>  增加额外获取资源的手段，并且可以在玩家没有体力时依然有事可做，从而增加玩家游戏时长</li></ul></li></ul></li><li><p>离线收益机制</p><ul><li><p>触发</p><ul><li>  离线</li></ul></li><li><p>机制</p><ul><li>  离线仍可自动运营，上线后可获取离线时间内自动运营得到的资源</li></ul></li><li><p>引入目的</p><ul><li><p>  使游戏整体呈现碎片化游玩趋势，增强目标游戏体验的节制感</p></li><li><p>  便于玩家安排时间，让玩家在非游戏时间也有参与感</p></li></ul></li></ul></li><li><p>体力机制</p><ul><li>触发<ul><li>  攻城略池时需要驱动部队前往</li></ul></li><li>机制<ul><li>  驱动部队前往城外地点时，根据距离会对体力进行相应扣减</li></ul></li><li>引入目的<ul><li>  控制玩家在线时长，突出目标游戏体验中的节制感</li><li>  要求玩家谨慎操作，增加策略性和真实感</li></ul></li></ul></li><li><p>资源过量机制</p><ul><li>触发<ul><li>  已有资源超出可负载资源上限</li></ul></li><li>机制<ul><li>  即使资源过量，但系统仍会保留该部分资源</li></ul></li><li>引入目的<ul><li>  减轻玩家因未能及时上线而导致过量资源损耗的挫败感</li><li>  强化目标游戏体验中的节制感</li></ul></li></ul></li></ol><h3 id="6-5-优点"><a href="#6-5-优点" class="headerlink" title="6.5 优点"></a>6.5 优点</h3><ul><li><p>表现层</p><ul><li><p>画面</p><ul><li>  精美，且伴有动效</li></ul></li><li><p>音效</p><ul><li>  与画面和文案相契合，较为贴切</li></ul></li><li><p>文案</p><ul><li>  古风古韵，较为贴切</li></ul></li></ul></li><li><p>操作</p><ul><li><p>竖屏显示</p><ul><li>  降低玩家操作负累感</li></ul></li><li><p>自动战斗</p><ul><li>  可让玩家把精力都放在排兵布阵以及攻城略池的策略安排中</li></ul></li></ul></li><li><p>系统设计</p><ul><li><p>深夜保护机制</p><ul><li>  人性化，防沉迷</li></ul></li><li><p>阵营重置机制</p><ul><li>  人性化</li></ul></li><li><p>离线收益</p><ul><li>  可以让玩家充分利用碎片化时间进行游戏，并且不玩游戏时也有参与感</li></ul></li></ul></li></ul><h3 id="6-6-可迭代点"><a href="#6-6-可迭代点" class="headerlink" title="6.6 可迭代点"></a>6.6 可迭代点</h3><ul><li><p>  游戏评价中所提及的问题</p></li><li><p>当前进度示意</p><ul><li>  主线任务中只有当前所在章节，如果能有总的章节提示，将帮助玩家更好地了解目前游戏进度</li></ul></li><li><p>  注册时的密码输入</p></li></ul><blockquote><p>迭代建议：将此处密码输入时设置为默认不可见模式，以保护用户隐私。</p></blockquote><ul><li>  登录界面信息</li></ul><blockquote><p>迭代建议：建议统一 App Store 中与登录界面中的适龄提示信息</p></blockquote><ul><li>  新手引导中升级内政议政殿的提示</li></ul><blockquote><p>迭代建议：将此处任务部分的提示箭头去除</p></blockquote><h3 id="6-7-结语"><a href="#6-7-结语" class="headerlink" title="6.7 结语"></a>6.7 结语</h3><p>总的而言，游戏上手容易，前期玩法较为直观，引导充足，不会让玩家产生_不知道该干什么_的想法，新手教程过度自然，但是由于缺少当前进度与总体进度的对比示意，会让玩家产生_不知道进行到什么程度_，<em>还有多久才算正式脱离新手教程</em> 的感觉。</p><p>整体画面贴图精度不是非常高，放大后还是会有些许模糊的感觉，但动态特效及自然声效的引入使得玩家未操作时也能有良好的观感。</p><p>除主界面中闪光的_首充_标志外，其余付费元素并没有在游戏中进行特别强调，需要玩家自己进行发掘。</p><p>但游戏中的占领机制、体力机制和离线收益等机制使得玩家能够更好地利用碎片化时间进行游玩。竖屏显示也降低了玩家的操作负累感。同一阵营内只要有玩家达成高等级成就则同阵营玩家皆可获利增强了阵营归属感以及荣辱感，并且无论己方阵营处于三大阵营中任意位置都有相应赛季结局，减轻了玩家的挫败感。游戏定位中的国战、SLG、攻城元素都得到了很好地体现，目标游戏体验的掌控感，策略感和节制感也实现得较好。</p><p>以上便是本体验报告的全部内容。</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-ExperienceReport </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Portfolio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>神将三国首充策划案</title>
      <link href="2021/07/26/shen-jiang-san-guo-first-recharge-plan/"/>
      <url>2021/07/26/shen-jiang-san-guo-first-recharge-plan/</url>
      
        <content type="html"><![CDATA[<h1 id="神将三国首充策划案"><a href="#神将三国首充策划案" class="headerlink" title="神将三国首充策划案"></a>神将三国首充策划案</h1><h2 id="版本更新记录"><a href="#版本更新记录" class="headerlink" title="版本更新记录"></a>版本更新记录</h2><table><thead><tr><th>日期</th><th>版本</th><th>说明</th></tr></thead><tbody><tr><td>20210725</td><td>1.0</td><td>初版策划案</td></tr></tbody></table><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>通过让玩家完成首充，体会到充值带来的能力提升，从而培养玩家付费习惯。</p><h2 id="需求定位"><a href="#需求定位" class="headerlink" title="需求定位"></a>需求定位</h2><ul><li>需要达成的目标<ul><li>  使玩家付费</li><li>  让首充玩家体会到充值带来的提升/拉开与非付费玩家的差距</li><li>  培养玩家付费习惯</li></ul></li><li>需要考虑的因素<ul><li>  如何让玩家发现并愿意花钱</li><li>奖励设定<ul><li>  高性价比</li></ul></li><li>  如何培养玩家付费习惯</li></ul></li></ul><h2 id="功能需求"><a href="#功能需求" class="headerlink" title="功能需求"></a>功能需求</h2><h3 id="规则"><a href="#规则" class="headerlink" title="规则"></a>规则</h3><ul><li>  玩家需要从未进行过充值。</li><li>  在游戏主界面中显示【首充】按钮，点击后将进入【首充】系统页面，点击【首充】页面中的【前往充值】按钮后进入【充值】系统页面。</li><li>  完成首充后获取相应充值奖励。</li><li>  完成首充后根据条件可获取首充奖励。</li><li>  完成首充后根据限制条件（如只能购买一次）对相应系统状态进行更新。</li></ul><h3 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210726123351.png" style="zoom: 67%;" /><h3 id="配置表"><a href="#配置表" class="headerlink" title="配置表"></a>配置表</h3><style type="text/css">.tg  {border-collapse:collapse;border-spacing:0;}.tg td{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;  overflow:hidden;padding:10px 5px;word-break:normal;}.tg th{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;  font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}.tg .tg-1wig{font-weight:bold;text-align:left;vertical-align:top}.tg .tg-baqh{text-align:center;vertical-align:top}.tg .tg-fymr{border-color:inherit;font-weight:bold;text-align:left;vertical-align:top}.tg .tg-0lax{text-align:left;vertical-align:top}</style><table class="tg"><thead>  <tr>    <th class="tg-fymr">涉及页面 </th>    <th class="tg-1wig">元素名称 </th>    <th class="tg-1wig">元素命名 </th>    <th class="tg-1wig">属性名称 </th>    <th class="tg-1wig">属性命名举例 </th>    <th class="tg-1wig">值举例（对应 ICON 的美术字） </th>  </tr></thead><tbody>  <tr>    <td class="tg-0lax" rowspan="2">游戏主界面 </td>    <td class="tg-0lax" rowspan="2">【首充】按钮 </td>    <td class="tg-baqh" rowspan="2">butt_firstRecharge </td>    <td class="tg-0lax">名称 </td>    <td class="tg-0lax">text_firstRecharge </td>    <td class="tg-0lax">首充 </td>  </tr>  <tr>    <td class="tg-0lax">图标 </td>    <td class="tg-0lax">icon_firstRecharge </td>    <td class="tg-0lax"> </td>  </tr>  <tr>    <td class="tg-0lax" rowspan="2">【首充】页面 </td>    <td class="tg-0lax">【X】按钮 </td>    <td class="tg-0lax">butt_FRreturn </td>    <td class="tg-0lax">图标 </td>    <td class="tg-0lax">icon_FRreturn </td>    <td class="tg-0lax"> </td>  </tr>  <tr>    <td class="tg-0lax">【前往充值】按钮 </td>    <td class="tg-0lax">butt_ FRrecharge </td>    <td class="tg-0lax">名称 </td>    <td class="tg-0lax">text_FRrecharge </td>    <td class="tg-0lax">前往充值 </td>  </tr>  <tr>    <td class="tg-0lax" rowspan="9">【充值页面-新手特惠】页面 </td>    <td class="tg-0lax">【X】按钮 </td>    <td class="tg-0lax">butt_rechargeReturn </td>    <td class="tg-0lax">图标 </td>    <td class="tg-0lax">icon_rechargeReturn </td>    <td class="tg-0lax"> </td>  </tr>  <tr>    <td class="tg-0lax" rowspan="3">对应奖励 </td>    <td class="tg-0lax" rowspan="3">elem_rechargeRewards </td>    <td class="tg-0lax">名称 </td>    <td class="tg-0lax">text_rechargeRewards </td>    <td class="tg-0lax">铜币 </td>  </tr>  <tr>    <td class="tg-0lax">图标 </td>    <td class="tg-0lax">icon_rechargeRewards </td>    <td class="tg-0lax">- </td>  </tr>  <tr>    <td class="tg-0lax">数量 </td>    <td class="tg-0lax">num_rechargeRewards </td>    <td class="tg-0lax">10000 </td>  </tr>  <tr>    <td class="tg-0lax">价格按钮 </td>    <td class="tg-0lax">butt_price </td>    <td class="tg-0lax">价格 <br> </td>    <td class="tg-0lax">text_price </td>    <td class="tg-0lax">免费 <br>￥6 </td>  </tr>  <tr>    <td class="tg-0lax" rowspan="2">限制条件 </td>    <td class="tg-0lax" rowspan="2">elem_restrictions </td>    <td class="tg-0lax">名称 </td>    <td class="tg-0lax">text_restrictions </td>    <td class="tg-0lax">限购 1 次 </td>  </tr>  <tr>    <td class="tg-0lax">图标 </td>    <td class="tg-0lax">icon_restrictions </td>    <td class="tg-0lax"> </td>  </tr>  <tr>    <td class="tg-0lax" rowspan="2">已有充值点 </td>    <td class="tg-0lax" rowspan="2">elem_rechargePoints </td>    <td class="tg-0lax">图标 </td>    <td class="tg-0lax">icon_gold </td>    <td class="tg-0lax">- </td>  </tr>  <tr>    <td class="tg-0lax">数额 </td>    <td class="tg-0lax">num_gold </td>    <td class="tg-0lax">200 </td>  </tr>  <tr>    <td class="tg-0lax">【付款失败】页面 </td>    <td class="tg-0lax">充值失败弹窗 </td>    <td class="tg-0lax">notice_chargeFail </td>    <td class="tg-0lax">提示内容 </td>    <td class="tg-0lax">text_chargeFail </td>    <td class="tg-0lax">充值失败 购买失败 </td>  </tr>  <tr>    <td class="tg-0lax" rowspan="2">【首充完成 - 第一天奖励待领取】页面 </td>    <td class="tg-0lax">【X】按钮 </td>    <td class="tg-0lax">butt_FRreturn </td>    <td class="tg-0lax">图标 </td>    <td class="tg-0lax">icon_FRreturn </td>    <td class="tg-0lax"> </td>  </tr>  <tr>    <td class="tg-0lax">【领取】按钮 </td>    <td class="tg-0lax">butt_FRreceive </td>    <td class="tg-0lax"> 名称 </td>    <td class="tg-0lax">text_FRreceive </td>    <td class="tg-0lax"> 领取 </td>  </tr>  <tr>    <td class="tg-0lax" rowspan="2">【首充完成 - 第一天奖励已领取】页面 </td>    <td class="tg-0lax">【X】按钮 </td>    <td class="tg-0lax">butt_FRreturn </td>    <td class="tg-0lax">图标 </td>    <td class="tg-0lax">icon_FRreturn </td>    <td class="tg-0lax"> </td>  </tr>  <tr>    <td class="tg-0lax">【明日再来】按钮 </td>    <td class="tg-0lax">butt_FRtomorrow </td>    <td class="tg-0lax"> 名称 </td>    <td class="tg-0lax">text_FRtomorrow </td>    <td class="tg-0lax"> 明日再来 </td>  </tr></tbody></table><h3 id="界面交互功能"><a href="#界面交互功能" class="headerlink" title="界面交互功能"></a>界面交互功能</h3><style type="text/css">.tg  {border-collapse:collapse;border-spacing:0;}.tg td{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;  overflow:hidden;padding:10px 5px;word-break:normal;}.tg th{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;  font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}.tg .tg-1wig{font-weight:bold;text-align:left;vertical-align:top}.tg .tg-fymr{border-color:inherit;font-weight:bold;text-align:left;vertical-align:top}.tg .tg-0lax{text-align:left;vertical-align:top}</style><table class="tg"><thead>  <tr>    <th class="tg-fymr">涉及页面 </th>    <th class="tg-1wig">点击位置 </th>    <th class="tg-1wig">元素名称 </th>    <th class="tg-1wig">点击效果 </th>  </tr></thead><tbody>  <tr>    <td class="tg-0lax">游戏主界面 </td>    <td class="tg-0lax">【首充】按钮 </td>    <td class="tg-0lax">首充 </td>    <td class="tg-0lax">前往【首充】页面 </td>  </tr>  <tr>    <td class="tg-0lax" rowspan="3">【首充】页面 </td>    <td class="tg-0lax">【X】 </td>    <td class="tg-0lax">返回 </td>    <td class="tg-0lax">返回【游戏主界面】 </td>  </tr>  <tr>    <td class="tg-0lax">【前往充值】按钮 </td>    <td class="tg-0lax">前往充值 </td>    <td class="tg-0lax">前往【充值】页面 </td>  </tr>  <tr>    <td class="tg-0lax">对应充值奖励 </td>    <td class="tg-0lax">- </td>    <td class="tg-0lax">显示该奖励的物品信息 </td>  </tr>  <tr>    <td class="tg-0lax">【首充页面-物品信息】 </td>    <td class="tg-0lax">除物品信息栏外的部分或者【→】 </td>    <td class="tg-0lax">- <br> </td>    <td class="tg-0lax">返回【首充】页面 </td>  </tr>  <tr>    <td class="tg-0lax" rowspan="3">【充值页面-新手特惠】 </td>    <td class="tg-0lax">【→】 </td>    <td class="tg-0lax">返回 </td>    <td class="tg-0lax">返回【首充】页面 </td>  </tr>  <tr>    <td class="tg-0lax">对应充值奖励 </td>    <td class="tg-0lax">- </td>    <td class="tg-0lax">显示该奖励的物品信息 </td>  </tr>  <tr>    <td class="tg-0lax">充值方案对应金额 </td>    <td class="tg-0lax">价格 </td>    <td class="tg-0lax">调用付款系统 </td>  </tr>  <tr>    <td class="tg-0lax" rowspan="2">【充值奖励领取】 </td>    <td class="tg-0lax">对应充值奖励 </td>    <td class="tg-0lax">- </td>    <td class="tg-0lax">显示该奖励的物品信息 </td>  </tr>  <tr>    <td class="tg-0lax">除物品信息栏外的部分 </td>    <td class="tg-0lax">- </td>    <td class="tg-0lax">返回【充值】页面 </td>  </tr>  <tr>    <td class="tg-0lax" rowspan="3">【首充完成 - 第一天奖励待领取】 </td>    <td class="tg-0lax">【X】 </td>    <td class="tg-0lax">返回 </td>    <td class="tg-0lax">返回【游戏主界面】 </td>  </tr>  <tr>    <td class="tg-0lax">【领取】按钮 </td>    <td class="tg-0lax">领取 </td>    <td class="tg-0lax">显示领取的奖励 </td>  </tr>  <tr>    <td class="tg-0lax">对应充值奖励 </td>    <td class="tg-0lax">- </td>    <td class="tg-0lax">显示该奖励的物品信息 </td>  </tr>  <tr>    <td class="tg-0lax" rowspan="2">【首充完成 - 第一天奖励已领取】 </td>    <td class="tg-0lax">【X】 </td>    <td class="tg-0lax">返回 <br> </td>    <td class="tg-0lax">返回【游戏主界面】 </td>  </tr>  <tr>    <td class="tg-0lax">对应充值奖励 </td>    <td class="tg-0lax">- </td>    <td class="tg-0lax">显示该奖励的物品信息 </td>  </tr></tbody></table><h2 id="数值需求"><a href="#数值需求" class="headerlink" title="数值需求"></a>数值需求</h2><ul><li>整体目标<ul><li>  需要让首充玩家体会到很高的性价比</li><li>  需要让首充玩家感觉与没充值时有了提升</li></ul></li></ul><h2 id="美术需求"><a href="#美术需求" class="headerlink" title="美术需求"></a>美术需求</h2><h3 id="涉及页面原型"><a href="#涉及页面原型" class="headerlink" title="涉及页面原型"></a>涉及页面原型</h3><h4 id="游戏主界面"><a href="#游戏主界面" class="headerlink" title="游戏主界面"></a>游戏主界面</h4><img src="https://4399.feishu.cn/space/api/box/stream/download/asynccode/?code=ZGE1ZjBiZTAwMzhlNDNmZDVlNTQzNTY0MTc0MzcyNzdfcm50S21hR0VEMktkancyckd3bzlRcWY2Y3V3VEF4R2hfVG9rZW46Ym94Y25iUlczaTV6VjRLVmNvb1lzdW9jOVJiXzE2MjcyOTU0MzU6MTYyNzI5OTAzNV9WNA" style="zoom: 33%;" /><h4 id="【首充】页面"><a href="#【首充】页面" class="headerlink" title="【首充】页面"></a>【首充】页面</h4><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/10291627172769_.pic_hd.jpg" style="zoom: 33%;" /><h4 id="【充值】页面"><a href="#【充值】页面" class="headerlink" title="【充值】页面"></a>【充值】页面</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/10301627172771_.pic_hd.jpg" style="zoom:30%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/10311627172772_.pic_hd.jpg" style="zoom: 25%;" /></p><h4 id="【付款】页面"><a href="#【付款】页面" class="headerlink" title="【付款】页面"></a>【付款】页面</h4><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210726142456.png" style="zoom: 33%;" /><h4 id="【付款失败】页面"><a href="#【付款失败】页面" class="headerlink" title="【付款失败】页面"></a>【付款失败】页面</h4><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/10351627172776_.pic_hd.jpg" style="zoom: 33%;" /><h4 id="【付款成功】页面"><a href="#【付款成功】页面" class="headerlink" title="【付款成功】页面"></a>【付款成功】页面</h4><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/10351627172776_.pic_hd.jpg" style="zoom: 33%;" /><h4 id="【充值奖励获取】页面"><a href="#【充值奖励获取】页面" class="headerlink" title="【充值奖励获取】页面"></a>【充值奖励获取】页面</h4><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/10361627172781_.pic_hd.jpg" style="zoom: 33%;" /><h4 id="【首充完成-第一天奖励待领取】页面"><a href="#【首充完成-第一天奖励待领取】页面" class="headerlink" title="【首充完成 - 第一天奖励待领取】页面"></a>【首充完成 - 第一天奖励待领取】页面</h4><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/10371627172783_.pic_hd.jpg" style="zoom: 33%;" /><h4 id="【首充完成-第一天奖励已领取】页面"><a href="#【首充完成-第一天奖励已领取】页面" class="headerlink" title="【首充完成 - 第一天奖励已领取】页面"></a>【首充完成 - 第一天奖励已领取】页面</h4><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/10391627173172_.pic_hd.jpg" style="zoom: 33%;" /><h3 id="图标-amp-UI-amp-特效需求-ICON-位置-式样-特效"><a href="#图标-amp-UI-amp-特效需求-ICON-位置-式样-特效" class="headerlink" title="图标 &amp; UI &amp; 特效需求 - ICON/位置/式样/特效"></a>图标 &amp; UI &amp; 特效需求 - ICON/位置/式样/特效</h3><style type="text/css">.tg  {border-collapse:collapse;border-spacing:0;}.tg td{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;  overflow:hidden;padding:10px 5px;word-break:normal;}.tg th{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;  font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}.tg .tg-c3ow{border-color:inherit;text-align:center;vertical-align:top}.tg .tg-fymr{border-color:inherit;font-weight:bold;text-align:left;vertical-align:top}.tg .tg-0pky{border-color:inherit;text-align:left;vertical-align:top}</style><table class="tg"><thead>  <tr>    <th class="tg-fymr">涉及页面 </th>    <th class="tg-fymr">目标元素 </th>    <th class="tg-fymr"> ICON </th>    <th class="tg-fymr">位置 </th>    <th class="tg-fymr">式样 </th>    <th class="tg-fymr">特效 </th>    <th class="tg-fymr">对应原型 </th>  </tr></thead><tbody>  <tr>    <td class="tg-0pky">游戏主界面 </td>    <td class="tg-0pky">【首充】按钮 </td>    <td class="tg-0pky">首充能获得的奖励 </td>    <td class="tg-0pky">需与主界面中其他 ICON 放置在一起 </td>    <td class="tg-0pky">需要突出显示，能与别的图标区分开 </td>    <td class="tg-0pky">按钮边缘高亮，需要能吸引玩家注意力 </td>    <td class="tg-0pky"><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/10381627172812_.pic_hd.jpg"> </td>  </tr>  <tr>    <td class="tg-c3ow" rowspan="4">【首充】页面 </td>    <td class="tg-0pky">【X】 </td>    <td class="tg-0pky">叉.jpg </td>    <td class="tg-0pky">屏幕右上方 </td>    <td class="tg-0pky">符合整体美术风格 </td>    <td class="tg-0pky">- </td>    <td class="tg-c3ow" rowspan="4"> <br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/10291627172769_.pic_hd.jpg"> </td>  </tr>  <tr>    <td class="tg-0pky">首充奖励中最好的奖励 </td>    <td class="tg-0pky">奖励的图片 </td>    <td class="tg-0pky">画面主体 </td>    <td class="tg-0pky">立绘 </td>    <td class="tg-0pky">动态显示 </td>  </tr>  <tr>    <td class="tg-0pky">对应充值奖励 </td>    <td class="tg-0pky">对应奖励的图标 </td>    <td class="tg-0pky">主体奖励下方 </td>    <td class="tg-0pky">分天显示 <br>每个奖励用框体框柱 <br>每个奖励根据其物品等级用不同颜色框体及颜色显示 </td>    <td class="tg-0pky">- </td>  </tr>  <tr>    <td class="tg-0pky">【前往充值】按钮 </td>    <td class="tg-0pky">前往充值美术字 </td>    <td class="tg-0pky">首充奖励下方 </td>    <td class="tg-0pky">显示在框体中 </td>    <td class="tg-0pky">- </td>  </tr>  <tr>    <td class="tg-c3ow" rowspan="6">【充值页面-新手特惠】 </td>    <td class="tg-0pky">充值方案的分类 </td>    <td class="tg-0pky">宝箱 </td>    <td class="tg-0pky">每个充值方案的左方 </td>    <td class="tg-0pky">符合整体美术风格 </td>    <td class="tg-0pky">- </td>    <td class="tg-c3ow" rowspan="6"> <br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/10311627172772_.pic_hd.jpg"> </td>  </tr>  <tr>    <td class="tg-0pky">对应充值奖励 </td>    <td class="tg-0pky">对应奖励的图标 </td>    <td class="tg-0pky">每个充值方案的主体 </td>    <td class="tg-0pky">每个奖励用框体框柱 <br>每个奖励根据其物品等级用不同颜色框体及颜色显示 </td>    <td class="tg-0pky">- </td>  </tr>  <tr>    <td class="tg-0pky">充值方案的特殊说明 </td>    <td class="tg-0pky">对应说明的美术字 </td>    <td class="tg-0pky">每个充值方案的右方 </td>    <td class="tg-0pky">挂坠 </td>    <td class="tg-0pky">- </td>  </tr>  <tr>    <td class="tg-0pky">充值方案的价格 </td>    <td class="tg-0pky">对应价格的美术字 </td>    <td class="tg-0pky">每个充值方案的下方 </td>    <td class="tg-0pky">用框体框柱 <br>高对比度 </td>    <td class="tg-0pky">- </td>  </tr>  <tr>    <td class="tg-0pky">当前所有玉帛 </td>    <td class="tg-0pky">玉帛.jpg </td>    <td class="tg-0pky">页面左下方 </td>    <td class="tg-0pky">见原型 </td>    <td class="tg-0pky">- </td>  </tr>  <tr>    <td class="tg-0pky">当前所有金币 </td>    <td class="tg-0pky">金币.jpg </td>    <td class="tg-0pky">玉帛右方 </td>    <td class="tg-0pky">见原型 </td>    <td class="tg-0pky">- </td>  </tr>  <tr>    <td class="tg-0pky">【付款失败】 </td>    <td class="tg-0pky">付款失败提醒 </td>    <td class="tg-0pky">- </td>    <td class="tg-0pky">屏幕中部 </td>    <td class="tg-0pky">弹窗 </td>    <td class="tg-0pky">- </td>    <td class="tg-0pky"><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/10351627172776_.pic_hd.jpg"> </td>  </tr>  <tr>    <td class="tg-0pky">【充值奖励领取】 </td>    <td class="tg-0pky">对应充值奖励 </td>    <td class="tg-0pky">对应奖励的图标 </td>    <td class="tg-0pky">主体奖励下方 </td>    <td class="tg-0pky">每个奖励用框体框柱 <br>每个奖励根据其物品等级用不同颜色框体及颜色显示 </td>    <td class="tg-0pky">- </td>    <td class="tg-0pky"><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/10361627172781_.pic_hd.jpg"> </td>  </tr>  <tr>    <td class="tg-c3ow" rowspan="4">【首充完成 - 第一天奖励待领取】 </td>    <td class="tg-0pky">【X】 </td>    <td class="tg-0pky">叉.jpg </td>    <td class="tg-0pky">屏幕右上方 </td>    <td class="tg-0pky">符合整体美术风格 </td>    <td class="tg-0pky">- </td>    <td class="tg-c3ow" rowspan="4"> <br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/10371627172783_.pic_hd.jpg"> </td>  </tr>  <tr>    <td class="tg-0pky">首充奖励中最好的奖励 </td>    <td class="tg-0pky">奖励的图片 </td>    <td class="tg-0pky">画面主体 </td>    <td class="tg-0pky">立绘 </td>    <td class="tg-0pky">动态显示 </td>  </tr>  <tr>    <td class="tg-0pky">对应充值奖励 </td>    <td class="tg-0pky">对应奖励的图标 </td>    <td class="tg-0pky">主体奖励下方 </td>    <td class="tg-0pky">分天显示 <br>每个奖励用框体框柱 <br>每个奖励根据其物品等级用不同颜色框体及颜色显示 </td>    <td class="tg-0pky">- </td>  </tr>  <tr>    <td class="tg-0pky">【领取】按钮 </td>    <td class="tg-0pky">领取美术字 </td>    <td class="tg-0pky">首充奖励下方 </td>    <td class="tg-0pky">显示在框体中 <br>高对比度 </td>    <td class="tg-0pky">- </td>  </tr>  <tr>    <td class="tg-c3ow" rowspan="5">【首充完成 - 第一天奖励已领取】 </td>    <td class="tg-0pky">【X】 </td>    <td class="tg-0pky">叉.jpg </td>    <td class="tg-0pky">屏幕右上方 </td>    <td class="tg-0pky">符合整体美术风格 </td>    <td class="tg-0pky">- </td>    <td class="tg-c3ow" rowspan="5"> <br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/10391627173172_.pic_hd.jpg"> </td>  </tr>  <tr>    <td class="tg-0pky">首充奖励中最好的奖励 </td>    <td class="tg-0pky">奖励的图片 </td>    <td class="tg-0pky">画面主体 </td>    <td class="tg-0pky">立绘 </td>    <td class="tg-0pky">动态显示 </td>  </tr>  <tr>    <td class="tg-0pky">对应充值奖励 <br> </td>    <td class="tg-0pky">对应奖励的图标 </td>    <td class="tg-0pky">主体奖励下方 </td>    <td class="tg-0pky">分天显示 <br>每个奖励用框体框柱 <br>每个奖励根据其物品等级用不同颜色框体及颜色显示 </td>    <td class="tg-0pky">- </td>  </tr>  <tr>    <td class="tg-0pky">【已领取】提示 </td>    <td class="tg-0pky">已领取.jpg </td>    <td class="tg-0pky">显示在已领取的奖励前面 </td>    <td class="tg-0pky">半透明 <br>将已领取的奖励置为已领取状态 </td>    <td class="tg-0pky">- </td>  </tr>  <tr>    <td class="tg-0pky">【明日再来】按钮 </td>    <td class="tg-0pky">明日再来美术字 </td>    <td class="tg-0pky">首充奖励下方 </td>    <td class="tg-0pky">显示在框体中 </td>    <td class="tg-0pky">- </td>  </tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Proposal </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Portfolio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GAMES101-8 20200306/20210708 Shading 2 (Shading, Pipeline and Texture Mapping)</title>
      <link href="2021/07/16/games101-8-20200306-20210708-shading-2-shading-pipeline-and-texture-mapping/"/>
      <url>2021/07/16/games101-8-20200306-20210708-shading-2-shading-pipeline-and-texture-mapping/</url>
      
        <content type="html"><![CDATA[<h1 id="8-20200306-20210708-Shading-2-Shading-Pipeline-and-Texture-Mapping"><a href="#8-20200306-20210708-Shading-2-Shading-Pipeline-and-Texture-Mapping" class="headerlink" title="8 20200306/20210708 Shading 2 (Shading, Pipeline and Texture Mapping)"></a>8 20200306/20210708 Shading 2 (Shading, Pipeline and Texture Mapping)</h1><h2 id="A-Simple-Shading-Model-Blinn-Phong-Reflectance-Model"><a href="#A-Simple-Shading-Model-Blinn-Phong-Reflectance-Model" class="headerlink" title="A Simple Shading Model (Blinn-Phong Reflectance Model)"></a>A Simple Shading Model (Blinn-Phong Reflectance Model)</h2><h3 id="Diffuse-Term-last-time"><a href="#Diffuse-Term-last-time" class="headerlink" title="Diffuse Term (last time)"></a>Diffuse Term (last time)</h3><h3 id="Specular-Term-Blinn-Phong"><a href="#Specular-Term-Blinn-Phong" class="headerlink" title="Specular Term (Blinn-Phong)"></a>Specular Term (Blinn-Phong)</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709111209.png" alt="Specular Term (Blinn-Phong)" style="zoom: 25%;" /><ul><li><p>高光项是因为观察方向和镜面反射方向足够接近（$\bf{v,R}$ 足够接近）</p></li><li><p>相当于法线方向 $\vec n$ 和半程向量 $\vec h$（即 $\bf{I,v}$ 向量加和后归一的方向）很接近</p></li><li><p>diffuse<br>$L_d = k_d (I/r^2)\max(0,\bf{n · l})$</p></li><li><p>specular<br>$L_s = k_s (I/r^2)\max(0,\cos \alpha)^p\<br>= k_s (I/r^2)\max(0,\bf{n · h})^p$</p><ul><li><p>这里按理也要考虑能量吸收 $\max(0,\bf{n · l})$<br>但因为 blinn-phong 是经验模型 所以简化掉了</p></li><li><p>$p$ 指数为高光修正 用于控制高光可见范围  为保证只有小范围能看到高光 可能值为 100-200</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709112445.png" alt="Cosine Power Plots" style="zoom:33%;" />  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709112607.png" alt="Specular Term (Blinn-Phong)" style="zoom:33%;" /></li></ul></li></ul><h3 id="Ambient-Term-Blinn-Phong"><a href="#Ambient-Term-Blinn-Phong" class="headerlink" title="Ambient Term (Blinn-Phong)"></a>Ambient Term (Blinn-Phong)</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709112712.png" alt="Ambient Term (Blinn-Phong)" style="zoom:33%;" /><ul><li>$L_a = k_a I_a$<ul><li>环境光不管从哪里进来 和 v 无关</li><li>假设在哪里看都一样    和 w 无关</li><li>环境光是常数 作用是保证没有地方是完全黑的</li><li>精确计算需要环境光照</li></ul></li></ul><h3 id="Sum-Blinn-Phong-Reflection-Model"><a href="#Sum-Blinn-Phong-Reflection-Model" class="headerlink" title="Sum: Blinn-Phong Reflection Model"></a>Sum: Blinn-Phong Reflection Model</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709112858.png" alt="Sum: Blinn-Phong Reflection Model" style="zoom:33%;" /><ul><li>$L = L_a + L_d + L_s$</li></ul><h1 id="Shading-Frequencies-着色频率"><a href="#Shading-Frequencies-着色频率" class="headerlink" title="Shading Frequencies 着色频率"></a>Shading Frequencies 着色频率</h1><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709113253.png" alt="Shading Frequencies" style="zoom:33%;" /><ul><li><p>着色频率：（着色粒度）着色应用在哪些点</p><ul><li>分别表示着色在平面/顶点/像素上</li></ul></li><li><p>每个平面着色 (flat shading)</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709113347.png" alt="flat shading" style="zoom:33%;" /></li><li><p>每个顶点着色 (Gouraud shading)</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210713181855.png" alt="Gouraud shading" style="zoom:33%;" /><ul><li>内部插值</li></ul></li><li><p>每个像素着色 (Phong shading)</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210716125759.png" alt="Phong shading" style="zoom:33%;" /><ul><li>not the blinn-phong reflectance model (model 是着色模型，phong shading 是着色频率)</li></ul></li><li><p>计算量开销不一定谁大</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709113559.png" alt="计算量开销不一定谁大" style="zoom:33%;" /></li></ul><h2 id="Defining-Per-Vertex-Normal-Vectors-算逐顶点法线"><a href="#Defining-Per-Vertex-Normal-Vectors-算逐顶点法线" class="headerlink" title="Defining Per-Vertex Normal Vectors 算逐顶点法线"></a>Defining Per-Vertex Normal Vectors 算逐顶点法线</h2><ul><li><p>做顶点所关联的面的法线做加权平均</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709113816.png" alt="Defining Per-Vertex Normal Vectors" style="zoom:33%;" /></li></ul><h2 id="Defining-Per-Pixel-Normal-Vectors-算逐像素法线"><a href="#Defining-Per-Pixel-Normal-Vectors-算逐像素法线" class="headerlink" title="Defining Per-Pixel Normal Vectors 算逐像素法线"></a>Defining Per-Pixel Normal Vectors 算逐像素法线</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709113854.png" alt="Defining Per-Pixel Normal Vectors" style="zoom:33%;" /><ul><li>需要用重心坐标</li></ul><hr><blockquote><p>把以上内容合起来</p></blockquote><h1 id="Graphics-Real-time-Rendering-Pipeline"><a href="#Graphics-Real-time-Rendering-Pipeline" class="headerlink" title="Graphics (Real-time Rendering) Pipeline"></a>Graphics (Real-time Rendering) Pipeline</h1><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709114026.png" alt="Graphics (Real-time Rendering) Pipeline" style="zoom:33%;" /><ul><li><p>Graphics Pipeline</p><ul><li><p>vertex processing 输入一堆点</p></li><li><p>MVP 投影到屏幕上</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709114447.png" alt="Graphics Pipeline - MVP" style="zoom:33%;" /></li><li><p>Triangle Processing 形成三角形</p></li><li><p>Rasterization 光栅化离散成 fragments  （fragment 类比于像素）</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709114533.png" alt="Graphics Pipeline - Rasterization" style="zoom:33%;" /></li><li><p>Fragment Processing 着色 shading</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709114644.png" alt="Graphics Pipeline - Fragment Processing - Z-Buffer" style="zoom:33%;" />  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709114724.png" alt="Graphics Pipeline - Fragment Processing - Shading" style="zoom:33%;" /><ul><li>需要看到底是顶点着色还是像素着色</li><li>控制顶点/像素着色的着色器：shader</li><li>texture mapping 纹理映射</li></ul></li><li><p>显示 output</p></li></ul></li></ul><h1 id="Shader-Programs"><a href="#Shader-Programs" class="headerlink" title="Shader Programs"></a>Shader Programs</h1><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709114910.png" alt="Shader Programs" style="zoom:33%;" /><ul><li><p>每个顶点/fragment会执行一次 所以只考虑一个顶点/像素的操作</p></li><li><p>写的是通用程序</p><ul><li>如果写的是顶点操作 - vertex shader</li><li>如果写的是fragment - fragment shader</li></ul><p>  <a href="http://shadertoy.com/">Shadertoy BETA</a></p>  <img src="https://p88.tr2.n0.cdn.getcloudapp.com/items/eDuxj2Rd/Image+2020-03-06+at+10.49.08.png?v=2373a38c9d045c08edbe031686411c97.png" alt="Snail Shader Program" style="zoom: 50%;" /></li><li><p>Inigo Quilez</p><ul><li>Procedurally modeled, 800 line shader.</li><li><a href="http://shadertoy.com/view/ld3Gz2">http://shadertoy.com/view/ld3Gz2</a></li></ul></li></ul><hr><blockquote><p>线代图形学发展</p></blockquote><h1 id="Goal-Highly-Complex-3D-Scenes-in-Realtime"><a href="#Goal-Highly-Complex-3D-Scenes-in-Realtime" class="headerlink" title="Goal: Highly Complex 3D Scenes in Realtime"></a>Goal: Highly Complex 3D Scenes in Realtime</h1><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709115545.png" alt="Goal: Highly Complex 3D Scenes in Realtime" style="zoom:33%;" /><h1 id="Graphics-Pipeline-Implementation-GPUs"><a href="#Graphics-Pipeline-Implementation-GPUs" class="headerlink" title="Graphics Pipeline Implementation: GPUs"></a>Graphics Pipeline Implementation: GPUs</h1><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709115704.png" alt="Graphics Pipeline Implementation: GPUs" style="zoom:33%;" /><ul><li><p>实现</p></li><li><p>三角形怎么光栅化</p></li><li><p>如何投影</p></li><li><p>…</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709115812.png" alt="GPU" style="zoom:33%;" /><ul><li>GPU：可以理解为高度并行化的处理器</li></ul></li></ul><blockquote><p>以上为图形管线</p></blockquote><hr><h1 id="Texture-Mapping-纹理映射"><a href="#Texture-Mapping-纹理映射" class="headerlink" title="Texture Mapping 纹理映射"></a>Texture Mapping 纹理映射</h1><ul><li><p>Different Colors at different places</p>  <img src="https://p88.tr2.n0.cdn.getcloudapp.com/items/YEuARGkY/Image+2020-03-06+at+10.55.37.png?v=bcc81dcc9d56d81285227e584eea545d.png" alt="Different Colors at different places" style="zoom: 50%;" /></li><li><p>引入纹理映射的原因：在物体不同位置引入不同属性</p><ul><li>如漫反射属性</li></ul></li><li><p>纹理和着色的区别：</p><ul><li>纹理：定义着色的时候各个不同点的属性 不希望每个点都以相同方式进行着色</li></ul></li><li><p>Surfaces are 2D</p>  <img src="https://p88.tr2.n0.cdn.getcloudapp.com/items/Z4u5olD6/Image+2020-03-06+at+10.57.18.png?v=4af3e8b64feaa103359e7f0bbbef350a.png" alt="Surfaces are 2D" style="zoom: 50%;" /><ul><li>每个三维物体的表面都是二维</li><li>纹理：就是一张图 有一一对应关系</li></ul></li><li><p>Texture Applied to Surface</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709120336.png" alt="Texture Applied to Surface" style="zoom:33%;" /></li><li><p>如何把空间中的三角形映射到纹理上？</p><ul><li>美工/程序人工映射</li><li>自动映射 parameterazation 参数化 很难</li></ul></li><li><p>Visualization of Texutre Coordinates</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709120613.png" alt="Visualization of Texutre Coordinates" style="zoom:33%;" /></li><li><p>uv 纹理坐标系</p><ul><li>范围 0-1</li></ul></li><li><p>可重复使用</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709120714.png" alt="Texture Applied to Surface" style="zoom:33%;" /></li><li><p>Textures can be used multiple times</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709120757.png" alt="Textures can be used multiple times" style="zoom:33%;" /><ul><li>纹理设计得好就可以无缝衔接</li><li>tileable texture</li><li>Wang tiling</li></ul></li></ul><hr><ul><li>next：知道三角形三个顶点 uv<br>如何知道三角形内部 uv - 插值</li></ul><hr>]]></content>
      
      
      <categories>
          
          <category> Study-CS-CG </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ComputerGraphics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GAMES101-7 20200303 20210708 Shading 1 (Illumination, Shading and Graphics Pipeline)</title>
      <link href="2021/07/16/games101-7-20200303-20210708-shading-1-illumination-shading-and-graphics-pipeline/"/>
      <url>2021/07/16/games101-7-20200303-20210708-shading-1-illumination-shading-and-graphics-pipeline/</url>
      
        <content type="html"><![CDATA[<h1 id="7-20200303-20210708-Shading-1-Illumination-Shading-and-Graphics-Pipeline"><a href="#7-20200303-20210708-Shading-1-Illumination-Shading-and-Graphics-Pipeline" class="headerlink" title="7 20200303 / 20210708 Shading 1 (Illumination, Shading and Graphics Pipeline)"></a>7 20200303 / 20210708 Shading 1 (Illumination, Shading and Graphics Pipeline)</h1><h1 id="深度缓存：解决可见性-遮挡问题"><a href="#深度缓存：解决可见性-遮挡问题" class="headerlink" title="深度缓存：解决可见性/遮挡问题"></a>深度缓存：解决可见性/遮挡问题</h1><h2 id="Painter’s-Algorithm"><a href="#Painter’s-Algorithm" class="headerlink" title="Painter’s Algorithm"></a>Painter’s Algorithm</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708125836.png" alt="Painter's Algorithm" style="zoom: 50%;" /><ul><li>从后向前绘制，<strong>overwrite</strong> in the frame buffer</li><li>需要考虑绘制顺序</li><li>Requires sorting in depth (O(n log n) for n triangles) Can have unresolvable depth order<ul><li>但会出现无法定义深度关系的情况</li></ul></li></ul><h3 id="Z-Buffer-深度缓存"><a href="#Z-Buffer-深度缓存" class="headerlink" title="Z-Buffer 深度缓存"></a>Z-Buffer 深度缓存</h3><ul><li><p>This is the algorithm that eventually won.</p></li><li><p>Idea:</p><ul><li>Store current min. z-value for each sample (pixel) 记录像素最浅深度</li><li>Needs an additional buffer for depth values</li><li>frame buffer stores color values (color buffer)</li><li>depth buffer (z-buffer) stores depth (depth buffer)</li></ul></li><li><p>IMPORTANT: For simplicity we suppose</p><ul><li><p>z is always positive<br>(smaller z -&gt; closer, larger z -&gt; further)</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708130237.png" alt="Z-Buffer examples" style="zoom: 33%;" /></li></ul></li><li><p>Algorighm</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708130440.png" alt="Z-Buffer Algorithm" style="zoom: 33%;" />  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708130621.png" alt="Z-Buffer Algorithm cont." style="zoom: 33%;" /><ul><li>初始深度无限远</li><li>把三角形做光栅化为像素</li><li>找到像素后找到其深度</li><li>z 值小就更新</li></ul></li><li><p>z-buffer Complexity</p></li><li><p>O(n) for n triangles (assuming constant coverage)</p></li><li><p>How is it possible to sort n triangles in linear time?</p><ul><li>并没有排序 只是进行了比较 找最小值</li></ul></li><li><p>绘制顺序不同不影响结果</p><ul><li>两个浮点数基本不可能完全相等</li></ul></li><li><p>Most important visibility algorithm</p><ul><li>Implemented in hardware for all GPUs</li></ul></li><li><p>z-buffer 处理不了透明物体</p></li></ul><h1 id="What-we’ve-covered-so-far"><a href="#What-we’ve-covered-so-far" class="headerlink" title="What we’ve covered so far"></a>What we’ve covered so far</h1><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708131319.png" alt="What we've covered so far" style="zoom: 33%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708131557.png" alt="Rotating Cubes" style="zoom:33%;" /><h1 id="Shading-着色"><a href="#Shading-着色" class="headerlink" title="Shading 着色"></a>Shading 着色</h1><h2 id="Definition"><a href="#Definition" class="headerlink" title="Definition"></a>Definition</h2><ul><li>In Merriam-Webster Dictionary<ul><li>shading,  noun<br>The darkening or coloring of an illustration or diagram with parallel lines or a block of color.</li><li>In this course<ul><li>The process of applying a material to an object.</li></ul></li></ul></li></ul><h2 id="A-Simple-Shading-Model-Blinn-Phong-Reflectance-Model"><a href="#A-Simple-Shading-Model-Blinn-Phong-Reflectance-Model" class="headerlink" title="A Simple Shading Model (Blinn-Phong Reflectance Model)"></a>A Simple Shading Model (Blinn-Phong Reflectance Model)</h2><ul><li><p>Perceptual Observations</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708132803.png" alt="Perceptual Observations" style="zoom:33%;" /><ul><li>高光 specular highlights</li><li>漫反射 diffuse reflection</li><li>环境光 ambient lighting</li></ul></li><li><p>Shading is Local - 着色局部性只看自己 不考虑其他任何物体的存在 所以没有阴影 (shading ≠ shadow)</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708133217.png" alt="Shading is Local" style="zoom:33%;" /></li></ul><h3 id="Diffuse-Reflection"><a href="#Diffuse-Reflection" class="headerlink" title="Diffuse Reflection"></a>Diffuse Reflection</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708133534.png" alt="Diffuse Reflection" style="zoom:33%;" /><ul><li><p>把光看作能量 （Lambert）<br>看着色点周围单位面积能够接收到多少能量<br>直射接收到的能量 &gt; 折射接收到的能量</p></li><li><p>Light Falloff</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708133918.png" alt="Light Falloff" style="zoom:33%;" /><ul><li>能量守恒 - 单位点的能量越来越小 （不同球体表面积所含能量相同）</li></ul></li><li><p>Lambertian (Diffuse) Shading</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708134228.png" alt="Lambertian (Diffuse) Shading" style="zoom:33%;" /></li><li><p>$L_d = k_d (I/r^2)\max(0,\bf{n · l})$</p><ul><li>$k_d$: 着色点对于光的吸收率<ul><li>如果 $k_d = 1$<ul><li>表示该点完全不吸收能量 - 最亮</li></ul></li><li>如果 $k_d = 0$<ul><li>表示该点完全吸收能量没有能量反射出去 - 最暗</li></ul></li><li>如果定义为三通道的 rgb 分别有 01<ul><li>那么就可以定义颜色值</li></ul></li></ul></li><li>$I/r^2$：传播到着色点的强度（结合能量球来看 总面积为 $4\pi r^2$ 距离为 r，那么单位强度就是 $\frac{I}{4\pi r^2}$，为平方反比关系）<ul><li>I: 点光源在单位距离上的强度</li><li>r: 点光源和着色点的距离</li></ul></li><li>$max(0, \bf{n · l})$<ul><li>为什么有 0<ul><li>如果是负数代表从反面照射没有意义</li></ul></li><li>$\bf{n · l}$ 为余弦角</li><li>整体表示被着色点能接收到的能量的比例</li></ul></li><li>漫反射与V无关 - 和观测点无关</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-CS-CG </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ComputerGraphics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GAMES101-6 20200228 20210708 Rasterization 2 anti - aliasing and Z - buffering</title>
      <link href="2021/07/16/games101-6-20200228-20210708-rasterization-2-anti-aliasing-and-z-buffering/"/>
      <url>2021/07/16/games101-6-20200228-20210708-rasterization-2-anti-aliasing-and-z-buffering/</url>
      
        <content type="html"><![CDATA[<h1 id="6-20200228-20210708-Rasterization-2-anti-aliasing-and-Z-buffering"><a href="#6-20200228-20210708-Rasterization-2-anti-aliasing-and-Z-buffering" class="headerlink" title="6 20200228/20210708 Rasterization 2 anti-aliasing and Z-buffering"></a>6 20200228/20210708 Rasterization 2 anti-aliasing and Z-buffering</h1><h2 id="Sampling-Artifacts-Errors-Mistakes-Inaccuracies-in-Computer-Graphics"><a href="#Sampling-Artifacts-Errors-Mistakes-Inaccuracies-in-Computer-Graphics" class="headerlink" title="Sampling Artifacts (Errors / Mistakes / Inaccuracies) in Computer Graphics"></a>Sampling Artifacts (Errors / Mistakes / Inaccuracies) in Computer Graphics</h2><ul><li><p>采样的例子</p><ul><li>rasterization = sample 2d positions</li><li>photograph = sample image sensor plane</li></ul></li><li><p>video = sample time</p></li><li><p>采样瑕疵的例子 sampling artifacts</p><ul><li><p>Jaggies (staircase pattern)</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708105306.png" alt="Jaggies (staircase pattern)" style="zoom: 25%;" /></li><li><p>Moiré Patterns in Imaging</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708105327.png" alt="Moiré Patterns in Imaging" style="zoom: 25%;" /></li><li><p>Wagon Wheel Illusion (False Motion)</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708105353.png" alt="Wagon Wheel Illusion (False Motion)" style="zoom: 25%;" /><ul><li>原因：人眼在时间上的采样跟不上运动速度</li></ul></li></ul></li><li><p>采样瑕疵的本质</p><ul><li>Signals are changing too fast (high frequency), but sampled too slowly</li></ul></li></ul><h1 id="Antialiasing-Idea-Blurring-Pre-Filtering-Before-Sampling"><a href="#Antialiasing-Idea-Blurring-Pre-Filtering-Before-Sampling" class="headerlink" title="Antialiasing Idea: Blurring (Pre-Filtering) Before Sampling"></a>Antialiasing Idea: Blurring (Pre-Filtering) Before Sampling</h1><ul><li><p>先模糊滤波再采样</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708105614.png" alt="Rasterization: Point Sampling in Space" style="zoom:25%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708105628.png" alt="Rasterization: Antialiased Sampling" style="zoom:25%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708105754.png" alt="效果对比" style="zoom:25%;" /></li></ul><h1 id="But-why"><a href="#But-why" class="headerlink" title="But why?"></a>But why?</h1><ol><li>Why undersampling introduces aliasing?</li><li>Why pre-filtering then sampling can do antialiasing?</li></ol><ul><li><p>Let’s dig into fundamental reasons</p><p>And look at how to implement antialiased rasterization</p></li><li><p>为什么先采样再模糊不行</p><ul><li>先采样后 频谱已经发生了混叠</li><li>此时再模糊 得到的结果还是混叠的频谱</li></ul></li></ul><h1 id="Frequency-domain-频域"><a href="#Frequency-domain-频域" class="headerlink" title="Frequency domain 频域"></a>Frequency domain 频域</h1><ul><li><p>Frequencies</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708105917.png" alt="Frequencies" style="zoom:25%;" /></li></ul><h2 id="Fourier-Transform"><a href="#Fourier-Transform" class="headerlink" title="Fourier Transform"></a>Fourier Transform</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708110031.png" alt="Fourier Transform" style="zoom:25%;" /><ul><li><p>傅里叶级数展开：任何一个周期函数都可以写成一系列正弦余弦函数线性组合以及一个常数项</p><ul><li>任何一个函数都可分解为不同频率</li></ul></li><li><p>fourier Transform Decomposes A Signal into Frequencies 傅里叶变换（把一个函数变为另一个，或者反过来）把函数分解为不同频率的段并分别显示出来</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708110225.png" alt="fourier Transform Decomposes A Signal into Frequencies" style="zoom:25%;" /></li><li><p>Higher Frequencies Need Faster Sampling</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708110352.png" alt="Higher Frequencies Need Faster Sampling" style="zoom:25%;" /></li><li><p>Undersampling Creates Frequency Aliases 欠采样导致了频率瑕疵以频率定义走样：假如蓝色和黑色分别是两个不同的函数 二者采样方法相同 但本身频率不同 导致了采样结果相同</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708110544.png" alt="Undersampling Creates Frequency Aliases" style="zoom:25%;" /></li></ul><h2 id="Filtering-Getting-rid-of-certain-frequency-contents"><a href="#Filtering-Getting-rid-of-certain-frequency-contents" class="headerlink" title="Filtering = Getting rid of certain frequency contents"></a>Filtering = Getting rid of certain frequency contents</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708110721.png" alt="Viasualizing Image Frequency Content" style="zoom:25%;" /><ul><li><p>傅里叶变换把图像从时域变成了频域</p></li><li><p>中心是最低频 周围是高频</p></li><li><p>多数信息集中在低频（中心）</p></li><li><p>水平和竖直亮线</p><ul><li>分析信号时会假设信号周期性重复（即假设图片水平重叠放置 AAAA）</li><li>但实际上并不重复</li><li>那么在左右边界部分会产生剧烈信号变化 - 产生高频</li><li>则产生白线</li><li>若分析单幅内容 可忽略</li></ul></li><li><p>高通滤波（抹掉低频信号）可得到图像内容轮廓边界 - 和周围内容相差巨大 - 信号变化非常大 - 高频信号</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708111303.png" alt="高通滤波" style="zoom:25%;" /></li><li><p>低通滤波（只有低频信号通过，抹掉高频信息）</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708112533.png" alt="低通滤波" style="zoom:25%;" /><ul><li>边界被抹去</li><li>水波纹</li></ul></li><li><p>去掉了高和低频率信息</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708112640.png" alt="同时过滤高低频信息" style="zoom:25%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708112659.png" alt="同时过滤高低频信息 cont." style="zoom:25%;" /><ul><li>提取到了不太明显的轮廓特征</li><li>数字图像处理</li></ul></li></ul><h1 id="Filtering-Convolution-卷积-Averaging-加权平均"><a href="#Filtering-Convolution-卷积-Averaging-加权平均" class="headerlink" title="Filtering = Convolution 卷积 (= Averaging) 加权平均"></a>Filtering = Convolution 卷积 (= Averaging) 加权平均</h1><ul><li><p>Convolution 卷积</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708113238.png" alt="Convolution" style="zoom:25%;" /></li><li><p>图形学中的简化定义</p><ul><li>卷积：通过窗口来进行点乘获取中心值（相当于加权平均）</li></ul></li><li><p>Convolution Theorem（卷积定理）</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708113517.png" alt="Convolution Theorem" style="zoom:25%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708113559.png" alt="Convolution Theorem cont." style="zoom:25%;" /><ul><li>Convolution in the spatial domain is equal to multiplication in the frequency domain, and vice versa - 在时域上想对信号进行卷积相当于在频域上进行乘积，反之亦然</li><li>Option 1:<ul><li>Filter by convolution in the spatial domain</li></ul></li><li>Option 2:<ul><li>Transform to frequency domain (Fourier transform)</li><li>Multiply by Fourier transform of convolution kernel</li><li>Transform back to spatial domain (inverse Fourier)</li></ul></li></ul></li></ul><h2 id="Box-Filter-低通滤波器"><a href="#Box-Filter-低通滤波器" class="headerlink" title="Box Filter 低通滤波器"></a>Box Filter 低通滤波器</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708114556.png" alt="Box Filter" style="zoom:25%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708114539.png" alt="Box Filter - Works as “Low Pass” Filter" style="zoom:25%;" /><ul><li>box 越大结果越模糊（留下的频率越低）<ul><li>相当于画笔变大</li></ul></li><li>考虑极端情况<ul><li>box 超级大 - 只有最中间有采样信息</li><li>box 超级小 - 全部频率都被留下来</li></ul></li></ul><h1 id="Sampling-Repeating-Frequency-Contents"><a href="#Sampling-Repeating-Frequency-Contents" class="headerlink" title="Sampling = Repeating Frequency Contents"></a>Sampling = Repeating Frequency Contents</h1><ul><li><p>冲激函数（某些位置有值有些没有，为0）</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708114726.png" alt="冲激函数" style="zoom:25%;" /><ul><li>采样：给定函数与冲激函数相乘得到采样结果</li><li>采样（从频域角度理解）：就是在重复原始信号的频谱</li></ul></li></ul><p>$$时域的乘积 = 频域的卷积$$</p><ul><li><p>为什么会走样</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708115306.png" alt="为什么会走样" style="zoom:25%;" /><ul><li>采样率不足（不够快），导致原始信号复制粘贴距离不够大，频率的频谱发生了混叠，即走样</li><li>相当于采样低 = 稀疏采样</li></ul></li></ul><h1 id="Anti-Aliasing"><a href="#Anti-Aliasing" class="headerlink" title="Anti-Aliasing"></a>Anti-Aliasing</h1><ul><li>How Can We Reduce Aliasing Error?</li><li>Option 1: Increase sampling rate<ul><li>Essentially increasing the distance between replicas in the<br>Fourier domain</li><li>Higher resolution displays, sensors, framebuffers…</li><li>But: costly &amp; may need very high resolution</li></ul></li><li>Option 2: Antialiasing<ul><li>Making Fourier contents “narrower” before repeating</li><li>i.e. Filtering out high frequencies before sampling</li></ul></li><li>步骤<ul><li>先卷积</li><li>再采样</li></ul></li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708115851.png" alt="如何反走样" style="zoom:25%;" /><ul><li><p>模糊之后的频谱覆盖范围小</p></li><li><p>所以采样堆叠几率小</p></li><li><p>如何模糊</p><ul><li><p>用一定大小的低通滤波器来处理图像</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708120101.png" alt="A Practical Pre-Filter" style="zoom:25%;" /></li></ul></li></ul><h2 id="Antialiasing-by-averaging-values-in-pixel-area"><a href="#Antialiasing-by-averaging-values-in-pixel-area" class="headerlink" title="Antialiasing by averaging values in pixel area"></a>Antialiasing by averaging values in pixel area</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708120227.png" alt="Antialiasing by averaging values in pixel area" style="zoom:25%;" /><ul><li><p>Solution:</p><ul><li>Convolve f(x,y) by a 1-pixel box-blur<ul><li>convolving = filtering = averaging</li></ul></li><li>Then sample at every pixel’s center</li></ul></li><li><p>怎么把三角形在像素内覆盖的区域算出来：</p></li></ul><h2 id="Antialiasing-By-Supersampling-MSAA"><a href="#Antialiasing-By-Supersampling-MSAA" class="headerlink" title="Antialiasing By Supersampling (MSAA)"></a>Antialiasing By Supersampling (MSAA)</h2><blockquote><p> 解决的是对信号的模糊操作 不是靠提升分辨率解决问题 只是为了解决三角形覆盖问题</p></blockquote><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708120523.png" alt="Supersampling" style="zoom:25%;" /><ul><li>给像素内部加采样点 看像素覆盖率</li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708122814.png" alt="Supersampling cont." style="zoom:25%;" /><h2 id="Antialiasing-Today"><a href="#Antialiasing-Today" class="headerlink" title="Antialiasing Today"></a>Antialiasing Today</h2><ul><li>No free lunch!What’s the cost of MSAA?<ul><li>增加了计算量</li></ul></li><li>Milestones (personal idea)<ul><li>FXAA (Fast Approximate AA)<ul><li>和采样无关 相当于后期处理</li><li>得到一幅图 有锯齿 找到边界 将有锯齿的边界换成没有锯齿的边界</li></ul></li><li>TAA (Temporal AA)<ul><li>复用上一帧信息 在当前帧不引入新信息</li></ul></li></ul></li><li>Super resolution / super sampling 超分辨率<ul><li>From low resolution to high resolution</li><li>Essentially still “not enough samples“ problem</li><li>DLSS (Deep Learning Super Sampling)<ul><li>一切猜测 深度学习都适合</li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-CS-CG </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ComputerGraphics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GAMES101-5 20200225 20210706 07 Rasterization 1 (Triangles)</title>
      <link href="2021/07/16/games101-5-20200225-20210706-07-rasterization-1-triangles/"/>
      <url>2021/07/16/games101-5-20200225-20210706-07-rasterization-1-triangles/</url>
      
        <content type="html"><![CDATA[<h1 id="5-20200225-20210706-07-Rasterization-1-Triangles"><a href="#5-20200225-20210706-07-Rasterization-1-Triangles" class="headerlink" title="5 20200225 / 20210706/07 Rasterization 1 (Triangles)"></a>5 20200225 / 20210706/07 Rasterization 1 (Triangles)</h1><h3 id="Perspective-Projection"><a href="#Perspective-Projection" class="headerlink" title="Perspective Projection"></a>Perspective Projection</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210706094119.png" alt="Perspective Projection" style="zoom:50%;" /><ul><li><p>红线夹角（field-of-view, FOY）：垂直可视角度</p></li><li><p>How to convert from fovY and aspect to l,r,b,t?</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210706094725.png" alt="How to convert from fovY and aspect to l,r,b,t?" style="zoom:50%;" /></li></ul><h3 id="What’s-after-MVP"><a href="#What’s-after-MVP" class="headerlink" title="What’s after MVP?"></a>What’s after MVP?</h3><ul><li>Model transformation (placing objects)</li><li>View transformation (placing camera)</li><li>Projection transformation<ul><li>Orthographic projection (cuboid to “canonical” cube $[-1, 1]^3$)</li><li>Perspective projection (frustum to “canonical” cube)</li></ul></li><li>Canonical Cube to Screen （画在屏幕上）</li></ul><h3 id="Canonical-Cube-to-Screen"><a href="#Canonical-Cube-to-Screen" class="headerlink" title="Canonical Cube to Screen"></a>Canonical Cube to Screen</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707113705.png" alt="Canonical Cube to Screen" style="zoom:50%;" /><ul><li><p>What is a screen?</p><ul><li>An array of pixels</li><li>Size of the array: resolution</li><li>A typical kind of raster display</li></ul></li><li><p>Raster (光栅) == screen in German</p><ul><li>Rasterize == drawing onto the screen</li></ul></li><li><p>Pixel (FYl short for “picture element”)</p><ul><li>For now: A pixel is a little square with uniform color</li><li>Color is a mixture of (red, green, blue)</li></ul></li><li><p>Defining the screen space</p><ul><li><p>Slightly different from the “tiger book”</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707113221.png" alt="Canonical Cube to Screen - Defining the screen space" style="zoom:50%;" /></li><li><p>像素覆盖屏幕空间（宽 * 高）</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707113531.png" alt="Canonical Cube to Screen - Transform in xy plane" style="zoom:50%;" /></li></ul></li><li><p>Irrelevant to z</p></li><li><p>Transform in xy plane: $[-1: 1]^2$ to [o, width] x [o, height]</p></li><li><p>Viewport transform matrix: 视口变换</p><ul><li>先把 $[-1, 1]^2$ 映射到 $[0,width] x [0, height]$</li><li>再把屏幕中心左下角定义到原点 所以有平移变换</li><li>忽略 z 轴</li></ul></li></ul><h1 id="Rasterizing-Triangles-into-Pixels-光栅化"><a href="#Rasterizing-Triangles-into-Pixels-光栅化" class="headerlink" title="Rasterizing Triangles into Pixels 光栅化"></a>Rasterizing Triangles into Pixels 光栅化</h1><ul><li><p>Drawing machine</p><ul><li>CNC Sharpie Drawing Machine</li></ul>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210713171942.png" alt="CNC Sharpie Drawing Machine" style="zoom: 33%;" /><ul><li>Laser Cutters</li></ul>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210713170022.png" alt="Laser Cutters" style="zoom: 33%;" /></li></ul><h2 id="Different-Raster-Displays"><a href="#Different-Raster-Displays" class="headerlink" title="Different Raster Displays"></a>Different Raster Displays</h2><ul><li><p>Oscilloscope 示波器</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210713170200.png" alt="Oscilloscope" style="zoom: 33%;" /></li></ul><h3 id="示波器成像原理-Cathode-Ray-Tube-CRT-阴极射线管"><a href="#示波器成像原理-Cathode-Ray-Tube-CRT-阴极射线管" class="headerlink" title="示波器成像原理 - Cathode Ray Tube (CRT) 阴极射线管"></a>示波器成像原理 - Cathode Ray Tube (CRT) 阴极射线管</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707114713.png" alt="Cathode Ray Tube (CRT) 阴极射线管" style="zoom: 33%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210713170311.png" alt="Cathode Ray Tube (CRT) - Television" style="zoom: 25%;" /><ul><li>隔行扫描 （利用视觉暂留效应）高速运动画面会造成严重画面撕裂</li></ul><h3 id="Frame-Buffer-Memory-for-a-Raster-Display"><a href="#Frame-Buffer-Memory-for-a-Raster-Display" class="headerlink" title="Frame Buffer: Memory for a Raster Display"></a>Frame Buffer: Memory for a Raster Display</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707120919.png" alt="Frame Buffer: Memory for a Raster Display" style="zoom:50%;" /><h3 id="Flat-Panel-Displays"><a href="#Flat-Panel-Displays" class="headerlink" title="Flat Panel Displays"></a>Flat Panel Displays</h3><ul><li><p>LCD (liquid Crystal Display) Pixel</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707121123.png" alt="LCD (liquid Crystal Display) Pixel" style="zoom:50%;" /><ul><li>Principle: block or transmit light by twisting polarization</li><li>Illumination from backlight (e.g. fluorescent or LED)</li><li>Intermediate intensity levels by partial twist</li></ul></li><li><p>OLED</p></li><li><p>LED Array Display 发光二极管</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707121229.png" alt="LED Array Display 发光二极管" style="zoom:50%;" /></li><li><p>Electrophoretic (Electronic Ink) Display</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707121242.png" alt="Electrophoretic (Electronic Ink) Display" style="zoom:50%;" /><ul><li>问题<ul><li>刷新率比较低（肉眼可见）</li></ul></li></ul></li></ul><h1 id="Rasterization-Drawing-to-Raster-Displays"><a href="#Rasterization-Drawing-to-Raster-Displays" class="headerlink" title="Rasterization: Drawing to Raster Displays"></a>Rasterization: Drawing to Raster Displays</h1><h2 id="Triangles-Fundamental-Shape-Primitives"><a href="#Triangles-Fundamental-Shape-Primitives" class="headerlink" title="Triangles - Fundamental Shape Primitives"></a>Triangles - Fundamental Shape Primitives</h2><ul><li><p>Why triangles?</p><ul><li>Most basic polygon</li><li>Break up other polygons 其他多边形可被拆为三角形</li></ul></li><li><p>Unique properties</p><ul><li>Guaranteed to be planar 三角形内部一定在同一平面</li><li>Well-defined interior 内外定义清晰</li><li>Well-defined method for interpolating values at vertices over triangle (barycentric interpolation) 定义三个顶点属性后 可以根据位置方便地插值</li></ul></li><li><p>What Pixel Values Approximate a Triangle</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707121757.png" alt="What Pixel Values Approximate a Triangle" style="zoom:50%;" /></li></ul><h1 id="A-simple-approach-sampling"><a href="#A-simple-approach-sampling" class="headerlink" title="A simple approach - sampling"></a>A simple approach - sampling</h1><h2 id="Sampling-a-Function"><a href="#Sampling-a-Function" class="headerlink" title="Sampling a Function"></a>Sampling a Function</h2><ul><li>definition<ul><li>Evaluating a function at a point is sampling.<br>We can discretize a function by sampling.<br>采样就是把函数离散化的过程</li></ul></li></ul><pre class="line-numbers language-none"><code class="language-none">for (int x &#x3D; 0; x &lt; xmax; ++x;output [x] &#x3D; f(x);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>Sampling is a core idea in graphics.<br>We sample time (1D), area (2D), direction (2D), volume (3D) …</li></ul><h2 id="看给定点像素中心是否在三角形内"><a href="#看给定点像素中心是否在三角形内" class="headerlink" title="看给定点像素中心是否在三角形内"></a>看给定点像素中心是否在三角形内</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707122155.png" alt="Rasterization As 2D Sampling" style="zoom: 33%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707122204.png" alt="Sample if Each Pixel Center Is Inside Triangle" style="zoom: 33%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707122216.png" alt="Sample if Each Pixel Center Is Inside Triangle cont." style="zoom: 33%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707122225.png" alt="Define Binary Function" style="zoom: 33%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707122234.png" alt="Rasterization = Sampling A 2D Indicator Function" style="zoom: 33%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707122337.png" alt="Recall: Sample Location" style="zoom: 33%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707122357.png" alt="Evaluating inside" style="zoom: 33%;" /><ul><li><p>方法：叉乘</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707122408.png" alt="方法：叉乘" style="zoom: 33%;" /></li></ul><h2 id="Edge-Cases"><a href="#Edge-Cases" class="headerlink" title="Edge Cases"></a>Edge Cases</h2><ul><li><p>不作处理</p></li><li><p>都做特殊处理</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707122603.png" alt="Edge Cases" style="zoom: 33%;" /></li></ul><h2 id="Cheking-all-pixels-on-the-screen"><a href="#Cheking-all-pixels-on-the-screen" class="headerlink" title="Cheking all pixels on the screen"></a>Cheking all pixels on the screen</h2><ul><li><p>包围盒 Axis-aligned bounding box AABB</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707122729.png" alt="Cheking all pixels on the screen" style="zoom: 33%;" /></li><li><p>Incremental Triangle Traversal</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707122833.png" alt="Incremental Triangle Traversal" style="zoom: 33%;" /><ul><li>适用于细长型三角形（像素少，但 bounding box 大）</li></ul></li></ul><h1 id="实际案例"><a href="#实际案例" class="headerlink" title="实际案例"></a>实际案例</h1><ul><li><p>Real LCD Screen Pixel (Closeup)</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707122958.png" alt="Real LCD Screen Pixel (Closeup)" style="zoom: 33%;" /></li><li><p>Bayer pattern（右方）</p><ul><li>绿色的点比其他的多（红蓝几乎相等）</li><li>因为人眼对绿色更敏感</li></ul></li><li><p>Aside: What about other display methods</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707123414.png" alt="Aside: What about other display methods" style="zoom: 33%;" /></li><li><p>Assume display pixels emit square of light</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707123721.png" alt="Assume display pixels emit square of light" style="zoom: 33%;" />  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707123823.png" alt="The Display Physically Emits This Signal" style="zoom: 33%;" />  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707123843.png" alt="Compare: The Continous Triangle Function" style="zoom: 33%;" /></li><li><p>question</p><ul><li>锯齿<ul><li>原因：采样率不够高</li><li>解决：next</li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-CS-CG </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ComputerGraphics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GAMES101-4 20200221 20210705 Transformation Cont</title>
      <link href="2021/07/16/games101-4-20200221-20210705-transformation-cont/"/>
      <url>2021/07/16/games101-4-20200221-20210705-transformation-cont/</url>
      
        <content type="html"><![CDATA[<h1 id="4-20200221-20210705-Transformation-Cont"><a href="#4-20200221-20210705-Transformation-Cont" class="headerlink" title="4 20200221 / 20210705 Transformation Cont."></a>4 20200221 / 20210705 Transformation Cont.</h1><ul><li><p>旋转的逆就是旋转的转置（正交）</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705215358.png" alt="旋转的逆就是旋转的转置"></p></li><li><p>3D transformations</p></li><li><p>Viewing (观测) transformation</p><ul><li>View (视图) / Camera transformation</li><li>Projection (投影) transformation<ul><li>Orthographic (正交) projection</li><li>Perspectve (透视) projection</li></ul></li></ul></li></ul><h3 id="3D-transformations"><a href="#3D-transformations" class="headerlink" title="3D transformations"></a>3D transformations</h3><ul><li><p>Use homogeneous coordinates again:</p><ul><li>3D point = (x, y, z, 1]</li><li>3D vector = (x, y, z, 0)</li></ul></li><li><p>In general, (x, y, z, w) (w != 0) is the 3D point:<br>(x/w, y/w, z/w)</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705215936.png" alt="3D transformations" style="zoom:50%;" /></li><li><p>Rotation</p><ul><li>循环对称使得y的矩阵和xz不同，因为是 z 叉乘 x 而不是 x 叉乘 z，所以符号反</li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705215949.png" alt="3D transformations - Rotation" style="zoom:50%;" /></li><li><p>3D Rotations</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705220226.png" alt="3D transformations - 3D Rotations" style="zoom:50%;" /><ul><li><p>把任意旋转拆解为 x/y/z 旋转</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705221000.png" alt="3D transformations - 3D Rotations cont." style="zoom:50%;" /></li></ul></li><li><p>Rodrigues’ Rotation Formula</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705221044.png" alt="Rodrigues’ Rotation Formula" style="zoom:50%;" /><ul><li>默认轴过原点，方向为 $n$</li><li>若要沿着任意轴旋转<ul><li>先把旋转的起点平移到原点</li><li>旋转后再平移回来（逆操作）</li></ul></li><li><strong>四元数</strong> （）的引入是为了旋转的差值应用<ul><li>转 10°和转 30°的均值并不是转 20°</li></ul></li></ul></li></ul><h1 id="Viewing-transformation"><a href="#Viewing-transformation" class="headerlink" title="Viewing transformation"></a>Viewing transformation</h1><h2 id="View-Camera-transformation-视图-相机变换"><a href="#View-Camera-transformation-视图-相机变换" class="headerlink" title="View/ Camera transformation (视图/相机变换)"></a>View/ Camera transformation (视图/相机变换)</h2><ul><li><p>what is view transformation （MVP）</p><ul><li>Think about how to take a photo (MVP)<ul><li>Find a good place and arrange people (model transformation) 找物体位置 - 模型变换</li><li>Find a good “angle” to put the camera (view transformation) 找相机位置 - 视图变换</li><li>Cheese! (projection transformation) - 投影变换</li></ul></li></ul></li><li><p>How to perform view transformation</p><ul><li>Define the camera first<ul><li>Position $\vec e$</li><li>Look-at / gaze direction</li><li>Up direction $\hat t$</li></ul></li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705221707.png" alt="View/ Camera transformation" style="zoom:50%;" /></li><li><p>Key observation</p><ul><li><p>如果相机和所有物体一起移动，那么成像一致</p></li><li><p>所以把相机位置固定到原点沿着-z方向看（所有物体的位置也做变换）</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705221756.png" alt="View/ Camera transformation - Key observation" style="zoom:50%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705221950.png" alt="View/ Camera transformation - Transform the camera" style="zoom:50%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705222442.png" alt="View/ Camera transformation - $M_{view}$ in math" style="zoom:50%;" /></li></ul></li><li><p>先平移再旋转</p><ul><li>先把中心移动到原点（平移）</li><li>将所看方向旋转至 -z 方向</li><li>将 up 方向旋转到 y 方向</li><li>$g \times t$ 旋转到 x 方向</li></ul></li><li><p>正着写难写<br>$g \rightarrow -Z, t \rightarrow Y, (g · t \rightarrow X)$<br>反过来写好写<br>$X \rightarrow (g · t), Y \rightarrow t, Z \rightarrow -g$<br>（先求逆矩阵再求原矩阵-对逆矩阵求转置矩阵）</p><ul><li>因为是正交矩阵</li><li>所以对视图矩阵求逆就是求其转置</li></ul></li><li><p>summary</p></li><li><p>Transform objects together with the camera</p></li><li><p>Until camera’s at the origin, up at Y, look at -Z</p></li><li><p>Also known as ModelView Transformation 模型视图变换</p></li></ul><h2 id="Projection-transformation"><a href="#Projection-transformation" class="headerlink" title="Projection transformation"></a>Projection transformation</h2><ul><li>正交投影（平行光 平截头体）<ul><li>平行的线永远平行</li></ul></li><li>透视投影（点光源 锥形体）<ul><li>平行的线会相交</li><li>近大远小</li></ul></li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705223855.png" alt="Projection transformation" style="zoom:50%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705223921.png" alt="Projection transformation - Comparasion" style="zoom:50%;" /><h3 id="Orthographic-projection-正交投影"><a href="#Orthographic-projection-正交投影" class="headerlink" title="Orthographic projection 正交投影"></a>Orthographic projection 正交投影</h3><ul><li><p>A simple way of understanding</p><ul><li>Camera located at origin, looking at -Z, up at Y (looks familiar?)</li><li>Drop Z coordinate</li><li>Translate and scale the resulting rectangle to $[-1, 1]^2$</li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705224348.png" alt="Orthographic projection - A simple way of understanding" style="zoom:50%;" /></li><li><p>In general</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705224415.png" alt="Orthographic projection - In general" style="zoom:50%;" /><ul><li><p>We want to map a cuboid [I, r] x [b, t] x [f, n] to<br>the “canonical ( 正 则 、 规 范 、 标 准 )“ cube $[-1, 1]^3$</p></li><li><p>Slightly different orders (to the “simple way”)</p><ul><li><p>Center cuboid by translating</p></li><li><p>Scale into “canonical” cube</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705224642.png" alt="Orthographic projection - Slightly different orders" style="zoom:50%;" /></li><li><p>Transformation matrix<br>先将各方向的中心平移到原点</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705224716.png" alt="Orthographic projection - Transformation matrix" style="zoom:50%;" /></li></ul></li></ul></li><li><p>Caveat</p><ul><li>Looking at / along -Z is making near and far not intuitive (n &gt; f)</li><li>FYI: that’s why OpenGL (a Graphics API) uses left hand coords. （观测方向为 z 方向：n 为正的 f 为负的 n &gt; f， -z 方向：n 为负的 far 为正的 n &lt; f）</li></ul></li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705224856.png" alt="Orthographic projection - Caveat" style="zoom:50%;" /><h3 id="Perspective-projection-透视投影-近大远小"><a href="#Perspective-projection-透视投影-近大远小" class="headerlink" title="Perspective projection 透视投影 近大远小"></a>Perspective projection 透视投影 近大远小</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705225239.png" alt="Perspective projection" style="zoom:50%;" /><ul><li><p>Most common in Computer Graphics, art, visual system</p></li><li><p>Further objects are smaller 近大远小</p></li><li><p>Parallel lines not parallel; converge to single point</p></li><li><p>Euclid</p><ul><li>平行线永不相交</li><li>但透视投影中会相交</li></ul></li><li><p>Before we move on</p></li><li><p>Recall: property of homogeneous coordinates</p><ul><li>(x,y,z,1), (kx, ky, kz, k != 0), (xz, yz, $z^2$, z != 0) all represent the same point (x, y, z) in 3D<ul><li>e.g. (1, 0, 0, 1) and (2, 0, 0, 2) both represent (1, 0, 0)</li></ul></li></ul></li><li><p>Simple, but useful</p></li><li><p>How to do perspective projection</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705225521.png" alt="How to do perspective projection" style="zoom:50%;" /><ul><li>把透视投影分解为两步骤<ul><li>1.挤压成长方体</li><li>2.进行正交投影</li></ul></li><li>如何挤压<ul><li>原则<ul><li>近平面永远不变</li><li>挤了之后各自平面z不变</li><li>远平面中心点挤后不变</li></ul></li><li>任何一个点变换前后z不变</li><li>中间一个点经过挤压后如何变化</li></ul></li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705230045.png" alt="Perspective Projection" style="zoom:50%;" /><ul><li>相似三角形</li><li>y’ 和 y 的关系 $y’ = \frac{n}{z}y$</li><li>x’ 和 x 的关系 $x’ = \frac{n}{z}x$ (与 y 同理)</li></ul></li><li><p>齐次坐标下乘以一个非零数 k 依然为原来那个点（都乘 z）</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705230359.png" alt="Perspective Projection" style="zoom:50%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705230537.png" alt="Perspective Projection cont." style="zoom:50%;" /></li><li><p>如何求剩余矩阵</p><ul><li><p>两个观察</p><ul><li><p>1.近平面上任意点都不会变</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705230936.png" alt="近平面上任意点都不会变" style="zoom:50%;" /><ul><li><p>$n^2$和 x y 无关</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705231317.png" alt="$n^2$和 x y 无关" style="zoom:50%;" /></li></ul></li><li><p>2.远平面上任意点的 z 不会变</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705231150.png" alt="Perspective Projection" style="zoom:50%;" /><ul><li><p>取远平面中心点</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705231329.png" alt="远平面上任意点的 z 不会变" style="zoom:50%;" /></li></ul></li></ul></li><li><p>求解方程之后可知 AB，则 $M_{persp \rightarrow ortho}$ 得解</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705231401.png" alt="求解方程" style="zoom: 67%;" /></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-CS-CG </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ComputerGraphics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GAMES101-3 20200218 20210704 Transformation</title>
      <link href="2021/07/16/games101-3-20200218-20210704-transformation/"/>
      <url>2021/07/16/games101-3-20200218-20210704-transformation/</url>
      
        <content type="html"><![CDATA[<h1 id="3-20200218-20210704-Transformation"><a href="#3-20200218-20210704-Transformation" class="headerlink" title="3 20200218 / 20210704 Transformation"></a>3 20200218 / 20210704 Transformation</h1><h1 id="Why-study-transformation"><a href="#Why-study-transformation" class="headerlink" title="Why study transformation"></a>Why study transformation</h1><ul><li>type<ul><li>Modeling 模型变换<ul><li>摄像机移动</li><li>rotation</li><li>scaling 皮克斯动画</li></ul></li><li>Viewing 视图变换 （3D to 2D projection）<ul><li>光栅化</li><li>投影</li></ul></li></ul></li><li>2D transformations</li><li>Homogeneous coordinates</li></ul><h1 id="2D-transformations"><a href="#2D-transformations" class="headerlink" title="2D transformations"></a>2D transformations</h1><h2 id="Scale"><a href="#Scale" class="headerlink" title="Scale"></a>Scale</h2><ul><li><p>uniform ($S_{0.5}$)</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704011357.png" alt="Scale Transform" style="zoom: 67%;" /><ul><li><p>scale matrix</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704011424.png" alt="Scale Matrix" style="zoom:67%;" /></li></ul></li><li><p>non-uniform</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704011507.png" alt="Scale (Non-Uniform)" style="zoom:67%;" /></li></ul><h2 id="Reflection-Matrix"><a href="#Reflection-Matrix" class="headerlink" title="Reflection Matrix"></a>Reflection Matrix</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704011606.png" alt="Reflection Matrix" style="zoom: 50%;" /><h2 id="Shear-Matrix-错切"><a href="#Shear-Matrix-错切" class="headerlink" title="Shear Matrix 错切"></a>Shear Matrix 错切</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704011632.png" alt="Shear Matrix" style="zoom: 50%;" /><h2 id="Rotate-围绕-0-0-逆时针"><a href="#Rotate-围绕-0-0-逆时针" class="headerlink" title="Rotate 围绕(0,0)逆时针"></a>Rotate 围绕(0,0)逆时针</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704011945.png" alt="Rotate 围绕(0,0)逆时针" style="zoom: 50%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704012002.png" alt="Rotation Matrix" style="zoom: 50%;" /><h2 id="Linear-Transforms-Matrices"><a href="#Linear-Transforms-Matrices" class="headerlink" title="Linear Transforms = Matrices"></a>Linear Transforms = Matrices</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704012456.png" alt="Linear Transforms = Matrices" style="zoom:67%;" /><h1 id="Homogeneous-coordinates"><a href="#Homogeneous-coordinates" class="headerlink" title="Homogeneous coordinates"></a>Homogeneous coordinates</h1><ul><li>why</li></ul><blockquote><p>低一维的加法可以用高一维的乘法替换，所以有了齐次坐标目的：用齐次坐标统一所有变换 trade-off</p></blockquote><h2 id="平移变换"><a href="#平移变换" class="headerlink" title="平移变换"></a>平移变换</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704012724.png" alt="Translation" style="zoom:50%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704012803.png" alt="Why Homogeneous Coordinates" style="zoom:50%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704013029.png" alt="Solution: Homogenous Coordinates" style="zoom:50%;" /><blockquote><p>向量具有平移不变性</p></blockquote><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704013352.png" alt="Homogenous Coordinates" style="zoom:50%;" /><blockquote><p>point + point = 两点中点</p></blockquote><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704013517.png" alt="Affine Transformations" style="zoom:50%;" /><h2 id="Affine-Transformations-仿射变换-（线性变换（左上角矩阵）-平移变换（最后一列））"><a href="#Affine-Transformations-仿射变换-（线性变换（左上角矩阵）-平移变换（最后一列））" class="headerlink" title="Affine Transformations 仿射变换 （线性变换（左上角矩阵）+平移变换（最后一列））"></a>Affine Transformations 仿射变换 （线性变换（左上角矩阵）+平移变换（最后一列））</h2><ul><li><p>先线性变换再平移</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704013617.png" alt="Affine Transformations"  /></li></ul><h2 id="2D-Transformations"><a href="#2D-Transformations" class="headerlink" title="2D Transformations"></a>2D Transformations</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705213256.png" alt="2D Transformations" style="zoom:67%;" /><blockquote><p>只有二维情况下仿射变换最后一行才是 001</p></blockquote><h2 id="Inverse-Transform-逆变换"><a href="#Inverse-Transform-逆变换" class="headerlink" title="Inverse Transform 逆变换"></a>Inverse Transform 逆变换</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705213700.png" alt="Inverse Transform" style="zoom:67%;" /><h2 id="Composing-Transform-组合变换"><a href="#Composing-Transform-组合变换" class="headerlink" title="Composing Transform 组合变换"></a>Composing Transform 组合变换</h2><ul><li><p>复杂变换可通过简单变换得到</p></li><li><p>变换的顺序很重要（矩阵乘法不满足交换律）</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705213946.png" alt="Transform Odering Matters!" style="zoom:50%;" /></li><li><p>矩阵放左边*向量</p></li><li><p>矩阵变换<strong>从右至左</strong>应用</p></li><li><p>矩阵没交换律但有结合律</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705214134.png" alt="Composing Transforms" style="zoom:50%;" /></li><li><p>可用一个矩阵表述非常复杂的变换</p></li></ul><h2 id="Decomposing-Complex-Transfroms-分解复杂矩阵"><a href="#Decomposing-Complex-Transfroms-分解复杂矩阵" class="headerlink" title="Decomposing Complex Transfroms 分解复杂矩阵"></a>Decomposing Complex Transfroms 分解复杂矩阵</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705214331.png" alt="Decomposing Complex Transfroms" style="zoom:50%;" /><ul><li>想要以某点为中心进行旋转<ul><li>先将该点移动到原点 - T(-c)</li><li>进行旋转 - R (a)</li><li>然后再逆操作移动到原位置 - T(c)</li><li>$T(c) · R(\alpha) · T(-c)$</li></ul></li></ul><h1 id="3D-Transforms"><a href="#3D-Transforms" class="headerlink" title="3D Transforms"></a>3D Transforms</h1><blockquote><p>和 2D 做类比</p></blockquote><ul><li>用四个数表示<ul><li>点则末尾加 1</li><li>向量则末尾加 0</li></ul></li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705214740.png" alt="3D Transformations" style="zoom:50%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705214749.png" alt="3D Transformations 2" style="zoom:50%;" /><blockquote><p>仿射变换 = 线性变换 + 平移变换<br>先线性变换（缩放/旋转） 再平移变换</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Study-CS-CG </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ComputerGraphics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GAMES101-2 20200214 20210704 A Swift and Brutal Introduction to Linear Algebra</title>
      <link href="2021/07/16/games101-2-20200214-20210704-a-swift-and-brutal-introduction-to-linear-algebra/"/>
      <url>2021/07/16/games101-2-20200214-20210704-a-swift-and-brutal-introduction-to-linear-algebra/</url>
      
        <content type="html"><![CDATA[<h1 id="2-20200214-20210704-A-Swift-and-Brutal-Introduction-to-Linear-Algebra"><a href="#2-20200214-20210704-A-Swift-and-Brutal-Introduction-to-Linear-Algebra" class="headerlink" title="2 20200214 / 20210704 A Swift and Brutal Introduction to Linear Algebra!"></a>2 20200214 / 20210704 A Swift and Brutal Introduction to Linear Algebra!</h1><p>(in fact it’s relatively easy…)</p><ul><li>Graphics’ Dependencies<ul><li>Basic mathematics<ul><li>Linear algebra, calculus, statistics</li></ul></li><li>Basic physics<ul><li>Optics, Mechanics</li></ul></li><li>Misc<ul><li>Signal processing, Numerical analysis</li></ul></li><li>And a bit of aesthetics</li></ul></li></ul><h2 id="This-Course"><a href="#This-Course" class="headerlink" title="This Course"></a>This Course</h2><ul><li>More dependent on Linear Algebra<ul><li>Vectors (dot products, cross products, …)</li><li>Matrices (matrix-matrix, matrix-vector mult., …)</li></ul></li><li>For example,<ul><li>Apoint is a vector (?)</li><li>An operation like translating or rotating objects<br>can be matrix-vector multiplication</li></ul></li></ul><h2 id="Vectors"><a href="#Vectors" class="headerlink" title="Vectors"></a>Vectors</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704003508.png" alt="Vectors" style="zoom:33%;" /><ul><li>Usually written as $\vec a$  or in bold $\bf{a}$</li><li>Or using start and end points $\vec{AB}=B-A$</li><li>Direction and length</li><li>No absolute starting position</li></ul><h3 id="Vector-Normalization"><a href="#Vector-Normalization" class="headerlink" title="Vector Normalization"></a>Vector Normalization</h3><ul><li>Magnitude (length) of a vector written as $||\vec a||$</li><li>Unit vector .<ul><li>Avector with magnitude of 1</li><li>Finding the unit vector of a vector (normalization): $\hat a = \vec a / ||\vec a||$</li><li>Used to represent directions</li></ul></li></ul><h3 id="Vector-Addition"><a href="#Vector-Addition" class="headerlink" title="Vector Addition"></a>Vector Addition</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704003523.png" alt="Vector Addition" style="zoom:33%;" /><ul><li>Geometrically: Parallelogram law &amp; Triangle law</li><li>Algebraically: Simply add coordinates</li></ul><h3 id="Cartesian-Coordinates"><a href="#Cartesian-Coordinates" class="headerlink" title="Cartesian Coordinates"></a>Cartesian Coordinates</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704003535.png" alt="Cartesian Coordinates" style="zoom:33%;" /><ul><li>X and Y can be any (usually orthogonal unit) vectors<ul><li>$A =<br>\left{<br>\begin{matrix}<br>x\<br>y<br>\end{matrix}<br>\right}$</li><li>$A =  |  A^T = (x,y) |$</li><li>$||A|| = \sqrt{x^2 + y^2}$</li></ul></li></ul><h3 id="Vector-Multiplication"><a href="#Vector-Multiplication" class="headerlink" title="Vector Multiplication"></a>Vector Multiplication</h3><ul><li>Dot product</li><li>Cross product</li><li>Orthonormal bases and coordinate frames</li></ul><h3 id="Dos-scalar-Product-点乘"><a href="#Dos-scalar-Product-点乘" class="headerlink" title="Dos (scalar) Product 点乘"></a>Dos (scalar) Product 点乘</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704003555.png" alt="Dos (scalar) Product" style="zoom:33%;" /><ul><li><p>Properties</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704003606.png" alt="Properties of Dot (scalar) Product" style="zoom:33%;" /></li><li><p>Dot Product in Cartesian Coordinates</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704003623.png" alt="Dot Product in Cartesian Coordinates" style="zoom: 33%;" /></li><li><p>Dot Product in Graphics</p><ul><li>Find angle between two vectors<br>(e.g. cosine of angle between light source and surface) 找夹角</li><li>Finding projection of one vector on another 找投影</li></ul></li><li><p>Dot Product for Projection</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704004106.png" alt="Dot Product for Projection" style="zoom: 33%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704004125.png" alt="Dot Product for Projection 2" style="zoom: 33%;" /><ul><li><p>Measure how close two directions are （两个向量方向上接近就是1 垂直就0 相反就-1）</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704003958.png" alt="Dot Product in Graphics" style="zoom:50%;" /></li><li><p>Decompose a vector</p></li><li><p>Determine forward / backward</p><ul><li>应用：镜面反射 入射光 高光</li></ul></li></ul></li></ul><h3 id="Cross-product"><a href="#Cross-product" class="headerlink" title="Cross product"></a>Cross product</h3><ul><li><p>Cross (vector) Product</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704004440.png" alt="Cross (vector) Product" style="zoom:50%;" /><ul><li>Cross product is orthogonal to two initial vectors</li><li>Direction determined by right-hand rule 不满足交换律</li><li>Useful in constructing coordinate systems (later)</li></ul></li><li><p>Properties</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704004642.png" alt="Properties of Cross Product" style="zoom:50%;" /><ul><li>向量叉乘得到的还是向量</li></ul></li><li><p>Cartesian Formula</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704004949.png" alt="Cartesian Formula" style="zoom:50%;" /></li><li><p>Cross Product in Graphics 应用</p><ul><li><p>Determine left / right 左侧-叉乘结果为正</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704005045.png" alt="Cross Product in Graphics" style="zoom:50%;" /></li><li><p>Determine inside / outside</p><blockquote><p>ab x ap<br>bc x bp<br>ca x cp<br>如果三个结果符号相同 那么就在内部 若结果为0则为Cornercase 可内可外</p></blockquote></li><li><p>应用 - 光栅化</p></li></ul></li></ul><h3 id="Orthonormal-Bases-Coordinate-Frames"><a href="#Orthonormal-Bases-Coordinate-Frames" class="headerlink" title="Orthonormal Bases / Coordinate Frames"></a>Orthonormal Bases / Coordinate Frames</h3><ul><li><p>Important for representing points, positions, locations</p></li><li><p>Often, many sets of coordinate systems</p></li><li><p>Global, local, world, model, parts of model (head, hands, …)</p></li><li><p>Critical issue is transforming between these systems/ bases</p></li><li><p>A topic for next week</p></li><li><p>Orthonormal Coordinate Frames 坐标系</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704005439.png" alt="Orthonormal Coordinate Frames" style="zoom:50%;" /></li></ul><hr><h3 id="Matrices"><a href="#Matrices" class="headerlink" title="Matrices"></a>Matrices</h3><ul><li><p>Magical 2D arrays that haunt in every CS course</p></li><li><p>In Graphics, pervasively used to represent transformations</p><ul><li>Translation, rotation, shear, scale (more details in the next lecture)</li></ul></li><li><p>What is a matrix</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704005611.png" alt="What is a matrix" style="zoom:50%;" /></li><li><p>Matrix-Matrix Multiplication</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704005701.png" alt="Matrix-Matrix Multiplication" style="zoom: 50%;" /></li><li><p>Properties</p><ul><li><p><strong>Non-commutative</strong><br>(AB and BA are different in general)</p></li><li><p>Associative and distributive</p><ul><li>(AB)C=A(BC)</li><li>A(B+C) = AB+AC</li><li>(A+B)C = AC + BC</li></ul></li><li><p>Matrix-Vector Multiplication</p><ul><li><p>Treat vector as a column matrix (mx1)</p></li><li><p>Key for transforming points (next lecture)</p></li><li><p>Official spoiler: 2D reflection about y-axis</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704005923.png" alt="Matrix-Vector Multiplication" style="zoom:50%;" /></li></ul></li><li><p>Transpose of a Matrix</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704010001.png" alt="Transpose of a Matrix" style="zoom: 50%;" /></li><li><p>Identity Matrix and Inverses</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704010020.png" alt="Identity Matrix and Inverses" style="zoom:33%;" /></li><li><p>Vector multiplication in matrix form</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704010030.png" alt="Vector multiplication in matrix form" style="zoom:33%;" /></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-CS-CG </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ComputerGraphics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GAMES101-1 20200211 20210703 Overview of CG</title>
      <link href="2021/07/16/games101-1-20200211-20210703-overview-of-cg/"/>
      <url>2021/07/16/games101-1-20200211-20210703-overview-of-cg/</url>
      
        <content type="html"><![CDATA[<h1 id="1-20200211-20210703-Overview-of-CG"><a href="#1-20200211-20210703-Overview-of-CG" class="headerlink" title="1 20200211 / 20210703 Overview of CG"></a>1 20200211 / 20210703 Overview of CG</h1><ul><li>Topics</li></ul><h2 id="What-is-CG"><a href="#What-is-CG" class="headerlink" title="What is CG"></a>What is CG</h2><blockquote><p>The use of computers to <strong>synthesize</strong> and <strong>manipulate</strong> visual information.</p></blockquote><h2 id="Why-study"><a href="#Why-study" class="headerlink" title="Why study"></a>Why study</h2><h3 id="Application"><a href="#Application" class="headerlink" title="Application"></a>Application</h3><ul><li>Video Games<ul><li>什么是好的画面 - 看画面是否足够亮 - 全局光照做得好不好<ul><li>只狼</li><li>无主之地3</li></ul></li></ul></li><li>Movies<ul><li>The Matrix<ul><li>Special Effects</li><li>特效是图形学中最简单的一类 - 平常见不到 - 做得不对也不会觉得意外</li><li>最困难的是最常见的</li></ul></li></ul></li><li>Avatar<ul><li>引入了面部/动作捕捉</li></ul></li><li>Animations<ul><li>Zootopia - 疯狂动物城</li><li>Frozen 2 - 冰雪奇缘 2</li></ul></li><li>Design<ul><li>Autodesk Gallary</li><li>CAD<ul><li>环境模拟</li><li>碰撞检测</li></ul></li><li>Ikea</li></ul></li><li>Visualization<ul><li>Science</li><li>Engineering</li><li>Medicine</li><li>Journalism</li></ul></li><li>Virtual Reality<ul><li>Augmented Reality</li><li>Digital Illustration<ul><li>PS</li></ul></li></ul></li><li>Simulation<ul><li>The Dust Bowl phenomena</li><li>Black hole from Interstellar</li></ul></li><li>Graphical User Interfaces - GUI</li><li>Typography - 字体<ul><li>The Quick Brown Fox Jumps Over The Lazy Dog - 字体测试中的常见句</li><li>矢量图</li></ul></li></ul><h3 id="Fundamental-Intellectual-Challenges"><a href="#Fundamental-Intellectual-Challenges" class="headerlink" title="Fundamental Intellectual Challenges"></a>Fundamental Intellectual Challenges</h3><ul><li>Creates and interacts with realistic virtual world</li><li>Requires understanding of all aspects of physical world</li><li>New computing methods, displays, technologies</li></ul><h3 id="Technical-Challenges"><a href="#Technical-Challenges" class="headerlink" title="Technical Challenges"></a>Technical Challenges</h3><ul><li>Math of (perspective) projections, curves, surfaces</li><li>Physics of lighting and shading</li><li>Representing / operating shapes in 3D</li><li>Animation / simulation</li><li><del>3D graphics software programming and hardware</del></li></ul><h2 id="WHY-CG-is-AWESOME"><a href="#WHY-CG-is-AWESOME" class="headerlink" title="WHY - CG is AWESOME"></a>WHY - CG is AWESOME</h2><h3 id="Course-Topics-mainly-4-parts"><a href="#Course-Topics-mainly-4-parts" class="headerlink" title="Course Topics (mainly 4 parts)"></a>Course Topics (mainly 4 parts)</h3><ul><li>Rasterization<ul><li>Project geometry primitives (3D triangles / polygons) onto the screen</li><li>Break projected primitives into fragments (pixels)</li><li>Gold standard in Video Games (<strong>Real-time</strong> (30fps) Applications)</li></ul></li><li>Curves and Meshes<ul><li>How to represent geometry in Computer Graphics</li></ul></li><li>Ray Tracing<ul><li>Shoot rays from the camera though each pixel</li><li>Calculate <strong>intersection</strong> and <strong>shading</strong></li><li><strong>Continue to bounce</strong> the rays till they hit light sources</li><li>Gold standard in Animations / Movies (Offline Applications)</li><li>trad off - 慢但效果好</li><li>两个都要 - 实时光线追踪</li></ul></li><li>Animation / Simulation<ul><li>Key frame Animation</li><li>Mass-spring System</li></ul></li></ul><h3 id="GAMES101-is-NOT-about"><a href="#GAMES101-is-NOT-about" class="headerlink" title="GAMES101 is NOT about"></a>GAMES101 is NOT about</h3><ul><li>Using OpenGL / DirectX / Vulcan</li><li>The syntax of Shaders</li><li>3D modeling using Maya / 3DS MAX / Blender, or VR / game development using Unity / Unreal Engine (where can I learn them?)</li><li>Computer Vision / Deep Learning topics, e.g. XYZ-GAN (where can I learn them?)</li><li>CV - 一切需要猜测的内容</li><li>We learn Graphics, not Graphics APIs!</li><li>After this course, you’ll be able to learn these by yourself (I promise)</li></ul><h3 id="CG-V-S-CV"><a href="#CG-V-S-CV" class="headerlink" title="CG V.S. CV"></a>CG V.S. CV</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704003415.png" alt="Differences of CG and CV" style="zoom: 33%;" /><h2 id="Course-Logic"><a href="#Course-Logic" class="headerlink" title="Course Logic"></a>Course Logic</h2><h3 id="General-Information"><a href="#General-Information" class="headerlink" title="General Information"></a>General Information</h3><ul><li>Modern Course<ul><li>Comprehensive but<br>without hardware programming!</li><li>Pace/ contents subject to change</li></ul></li><li>Course Website<ul><li><a href="http://www.cs.ucsb.edu/~lingqi/teaching/games101.html">http://www.cs.ucsb.edu/~lingqi/teaching/games101.html</a></li><li>Has all the needed information</li><li>Syllabus, slides, reading materials, etc.</li></ul></li><li>Course slides and (pre)-reading materials</li><li>No Required Textbooks<ul><li>Reading materials (if any) will available online before lectures</li><li>Lecture slides will be available after class</li></ul></li><li>Most recommended reference<ul><li>Steve Marschner and Peter Shirley, “Fundamentals of Computer Graphics”, 3rd or later edition.</li><li>Sign up on our BBS for discussion<br>(<a href="http://games-cn.org/forums/forum/games-online-course-forum/">http://games-cn.org/forums/forum/games-online-course-forum/</a>)</li></ul></li></ul><h3 id="Assignments"><a href="#Assignments" class="headerlink" title="Assignments"></a>Assignments</h3><ul><li>Mostly programming tasks with provided code skeletons and virtual machine image</li><li>Weekly (usually no more than 20 lines of code per week)</li><li>Language: C++</li></ul><h3 id="Submission"><a href="#Submission" class="headerlink" title="Submission"></a>Submission</h3><ul><li>Submit your project by 11:59PM on/before the due dates (strictly enforced)</li><li>Feedback will be provided in a week</li><li>Assignment Submission Website<br>(<a href="http://www.smartchair.org/GAMES2020Course-YLQ/">http://www.smartchair.org/GAMES2020Course-YLQ/</a>)</li><li>No Exams</li><li>Course Project / Final Project<ul><li>Starting midway of this course</li><li>References will be provided, but you decide the topic</li><li>Best work will be posted online for showing off</li></ul></li></ul><h3 id="Use-An-IDE"><a href="#Use-An-IDE" class="headerlink" title="Use An IDE!"></a>Use An IDE!</h3><ul><li>IDE: Integrated Development Environment</li><li>Helps you parse a entire project<ul><li>And gives hints on syntax / usages of member functions, etc.</li></ul></li><li>Recommended IDEs<ul><li>Visual Studio (Windows only) / Visual Studio Code (cross platform)</li><li>Qt Creator (personal)</li></ul></li><li>Not Recommended IDEs (for C++ programming)<ul><li>CLion (慢), Eclipse (代码分析不好)</li><li>Sublime Text, Vi / Vim, Emacs (not even IDEs)</li></ul></li><li>Work alone for regular assignments<ul><li>no copy-pasting from any other sources</li></ul></li><li>Do not publish your code (on Github, etc.) for assignments using our skeleton code</li><li>Do not post your solution online<ul><li>Discussion / explanation is welcomed</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-CS-CG </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ComputerGraphics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GAMES101-Introduction To Mordern Computer Graphics</title>
      <link href="2021/07/16/games101-introduction-to-mordern-computer-graphics/"/>
      <url>2021/07/16/games101-introduction-to-mordern-computer-graphics/</url>
      
        <content type="html"><![CDATA[<h1 id="GAMES101——现代计算机图形学入门笔记"><a href="#GAMES101——现代计算机图形学入门笔记" class="headerlink" title="GAMES101——现代计算机图形学入门笔记"></a>GAMES101——现代计算机图形学入门笔记</h1><h2 id="Why-Note"><a href="#Why-Note" class="headerlink" title="Why Note"></a>Why Note</h2><p>为投递腾讯的技术研究-计算机图形学岗位，其中要求熟练掌握计算机图形学基本理论和算法，遂学习之，特此记录。</p><h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><ul><li>以下基本信息引用自<a href="http://games-cn.org/intro-graphics/">课程官网</a>：<ul><li><strong>课程简介</strong><ul><li>本课程将全面而系统地介绍现代计算机图形学的四大组成部分：（1）光栅化成像，（2）几何表示，（3）光的传播理论，以及（4）动画与模拟。每个方面都会从基础原理出发讲解到实际应用，并介绍前沿的理论研究。通过本课程，你可以学习到计算机图形学背后的数学和物理知识，并锻炼实际的编程能力。</li><li>顾名思义，作为入门，本课程会尽可能的覆盖图形学的方方面面，把每一部分的基本概念都尽可能说清楚，让大家对计算机图形学有一个完整的、自上而下的全局把握。全局的理解很重要，学完本课程后，你会了解到图形学不等于OpenGL，不等于光线追踪，而是一套生成整个虚拟世界的方法。从本课程的标题，大家还可以看到“现代”二字，也就是说，这门课所要给大家介绍的都是现代化的知识，也都是现代图形学工业界需要的图形学基础。</li><li>本课程与其它图形学教程还有一个重要的区别，那就是本课程不会讲授OpenGL，甚至不会提及这个概念。本课程所讲授的内容是图形学背后的原理，而不是如何使用一个特定的图形学API。在学习完这门课的时候，你一定有能力自己使用OpenGL写实时渲染的程序。另外，本课程并不涉及计算机视觉、图像视频处理、深度学习，也不会介绍游戏引擎与三维建模软件的使用。</li><li>具体课程内容请参见课程大纲:<a href="http://games-cn.org/intro-graphics%E3%80%82">http://games-cn.org/intro-graphics。</a></li></ul></li><li><strong>教师简介</strong><ul><li>闫令琪，博士，加州大学圣芭芭拉分校（UCSB）助理教授。闫令琪教授于2013年在清华大学获得学士学位，并于2018年在加州大学伯克利分校（UCB）获得博士学位。他的主要研究方向是真实感图形渲染（旧称绘制），具体请参考学术主页：<a href="https://sites.cs.ucsb.edu/~lingqi/%E3%80%82%E7%AE%80%E8%80%8C%E8%A8%80%E4%B9%8B%EF%BC%8C%E9%97%AB%E4%BB%A4%E7%90%AA%E6%95%99%E6%8E%88%E7%9B%AE%E5%89%8D%E6%9C%89%E4%B8%89%E4%B8%AA%E6%88%90%E5%B0%B1%EF%BC%9A%EF%BC%881%EF%BC%89%E5%9C%A8%E5%9B%BE%E5%BD%A2%E6%B8%B2%E6%9F%93%E9%A2%86%E5%9F%9F%EF%BC%8C%E4%BB%96%E4%BF%9D%E6%8C%81%E7%9D%80%E5%8D%9A%E5%A3%AB%E6%9C%9F%E9%97%B4%EF%BC%885%E5%B9%B4%EF%BC%89%E4%BB%A5%E7%AC%AC%E4%B8%80%E4%BD%9C%E8%80%85%E8%BA%AB%E4%BB%BD%E5%8F%91%E8%A1%A87%E7%AF%87SIGGRAPH%E7%B3%BB%E5%88%97%E8%AE%BA%E6%96%87%E7%9A%84%E6%9C%80%E9%AB%98%E7%BA%AA%E5%BD%95%EF%BC%88SIGGRAPH%EF%BC%8CSIGGRAPH">https://sites.cs.ucsb.edu/~lingqi/。简而言之，闫令琪教授目前有三个成就：（1）在图形渲染领域，他保持着博士期间（5年）以第一作者身份发表7篇SIGGRAPH系列论文的最高纪录（SIGGRAPH，SIGGRAPH</a> Asia，Transaction on Graphics）；（2）他的博士论文于2019年获得SIGGRAPH最佳博士论文奖，并得到官方盛赞“每章都可以作为一篇独立的博士论文”；（3）他的科研成果被直接应用于工业界，如影片《猩球崛起3：终极之战》与《狮子王2019》，以及与 NVIDIA 合作推动了实时光线追踪技术的产生；（4）在本课程的第一节课上，大家会了解到第四点也是最重要的一点：）</li></ul></li><li><strong>直播方式</strong><ul><li><a href="http://games虎牙直播间webinar.games-cn.org/">GAMES虎牙直播间webinar.games-cn.org</a></li></ul></li><li><strong>课程主页：</strong><ul><li><a href="https://sites.cs.ucsb.edu/~lingqi/teaching/games101.html">https://sites.cs.ucsb.edu/~lingqi/teaching/games101.html</a></li></ul></li><li><strong>课程BBS：</strong><ul><li><a href="http://games-cn.org/forums/forum/graphics-intro/">http://games-cn.org/forums/forum/graphics-intro/</a></li></ul></li><li><strong>课程PPT和视频：</strong><ul><li><a href="http://games-cn.org/graphics-intro-ppt-video/">http://games-cn.org/graphics-intro-ppt-video/</a></li></ul></li><li><strong>课程需求：</strong><ul><li>【必须】：高等数学（微积分、线性代数）、算法、数据结构</li><li>【非必须】：信号处理、数值分析、大学物理（光学）</li></ul></li><li><strong>课程安排：</strong><ul><li>【课时】：共安排20节课，每节一小时，每周两节，安排在北京时间周二和周五上午10:00-11:00，2020年2月11日开始</li><li>【作业（非必须）】：共7次小作业，1次大作业，全部是编程任务，会提供代码框架。作业不作强制要求，自愿完成</li><li>【考试】：无考试安排</li><li>【其它】：中文授课，英文课件，采用直播互动形式，以轻松愉快为主，每课结束当天会放出录像</li></ul></li><li><strong>教材：</strong><ul><li>【非必须】：Steve Marschner and Peter Shirley, “Fundamentals of Computer Graphics”, 第三版或更新版本。很遗憾中文版应该只有第二版，大家也可以对照着看。不过英文版写得非常好，浅显易懂，所以应该并无太大问题</li></ul></li></ul></li></ul><h2 id="Content"><a href="#Content" class="headerlink" title="Content"></a>Content</h2><ol><li><p><a href="https://medill-east.github.io/2021/07/16/games101-1-20200211-20210703-overview-of-cg/">GAMES101-1 20200211 20210703 Overview of CG</a></p></li><li><p><a href="https://medill-east.github.io/2021/07/16/games101-2-20200214-20210704-a-swift-and-brutal-introduction-to-linear-algebra/">GAMES101-2 20200214 20210704 A Swift and Brutal Introduction to Linear Algebra</a></p></li><li><p><a href="https://medill-east.github.io/2021/07/16/games101-3-20200218-20210704-transformation/">GAMES101-3 20200218 20210704 Transformation</a></p></li><li><p><a href="https://medill-east.github.io/2021/07/16/games101-4-20200221-20210705-transformation-cont/">GAMES101-4 20200221 20210705 Transformation Cont</a></p></li><li><p><a href="https://medill-east.github.io/2021/07/16/games101-5-20200225-20210706-07-rasterization-1-triangles/">GAMES101-5 20200225 20210706 07 Rasterization 1 (Triangles)</a></p></li><li><p><a href="https://medill-east.github.io/2021/07/16/games101-6-20200228-20210708-rasterization-2-anti-aliasing-and-z-buffering/">GAMES101-6 20200228 20210708 Rasterization 2 anti - aliasing and Z - buffering</a></p></li><li><p><a href="https://medill-east.github.io/2021/07/16/games101-7-20200303-20210708-shading-1-illumination-shading-and-graphics-pipeline/">GAMES101-7 20200303 20210708 Shading 1 (Illumination, Shading and Graphics Pipeline)</a></p></li><li><p><a href="https://medill-east.github.io/2021/07/16/games101-8-20200306-20210708-shading-2-shading-pipeline-and-texture-mapping/">GAMES101-8 20200306/20210708 Shading 2 (Shading, Pipeline and Texture Mapping)</a></p></li><li></li></ol>]]></content>
      
      
      <categories>
          
          <category> Study-CS-CG </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ComputerGraphics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo + Github 搭建 Blog (MacOS)</title>
      <link href="2021/05/24/my-first-post/"/>
      <url>2021/05/24/my-first-post/</url>
      
        <content type="html"><![CDATA[<h2 id="20210524-Start-to-build"><a href="#20210524-Start-to-build" class="headerlink" title="20210524 Start to build"></a>20210524 Start to build</h2><h3 id="Why"><a href="#Why" class="headerlink" title="Why"></a>Why</h3><p>最近在学产品经理的课，有了呈现作品集的需求，遂在网上寻找教程搭建 Blog，最终选定了<a href="https://zhuanlan.zhihu.com/p/35668237">这篇</a>详细的教程，在此记录搭建过程。</p><h3 id="What"><a href="#What" class="headerlink" title="What"></a>What</h3><h4 id="Node-js-安装"><a href="#Node-js-安装" class="headerlink" title="Node.js 安装"></a>Node.js 安装</h4><p>去到官网下载<a href="https://nodejs.org/zh-cn/download/">Node.js 安装包</a>，按提示安装就好啦。</p><p>之后打开命令行输入以下指令，若出现版本号则证明安装成功：</p><pre class="line-numbers language-none"><code class="language-none">node -v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="Git-安装"><a href="#Git-安装" class="headerlink" title="Git 安装"></a>Git 安装</h4><p><a href="https://git-scm.com/downloads">Git 下载页面</a></p><blockquote><p>因为很久之前已经安装过 Git，所以详细步骤先按下不表</p></blockquote><h4 id="Github-注册及仓库新建"><a href="#Github-注册及仓库新建" class="headerlink" title="Github 注册及仓库新建"></a>Github 注册及仓库新建</h4><h5 id="Github-注册"><a href="#Github-注册" class="headerlink" title="Github 注册"></a>Github 注册</h5><p>移步 <a href="https://github.com/">Github 官网</a> 完成注册。</p><blockquote><p>详细过程这里也按下不表，理由同上</p></blockquote><h5 id="仓库搭建"><a href="#仓库搭建" class="headerlink" title="仓库搭建"></a>仓库搭建</h5><p>注册完账号后回到自己的页面，然后选择新建仓库：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210524114739.png"></p><p>这里对项目名字进行更改，其中名字需要有 <code>github.io</code> 后缀，<code>这里的名字一定要和自己的 github name 相同！</code>，然后记得选中 <code>Add a README file</code>：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210524114910.png"></p><p>然后找到该 repository 之后，点击 <code>settings</code>：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210524115240.png"></p><p>直接往下滑之后会看到 <code>Github Pages</code>：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210524115314.png"></p><p>点进去之后 <code>Choose a theme</code> 可以先随机挑选一个主题，之后回到 <code>GitHub Pages</code>，可以看到下面的界面：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210524115755.png"></p><p>点进去之后就能看到自己的网页啦。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210524121147.png"></p><h4 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h4><p><a href="https://zhuanlan.zhihu.com/p/35668237">教程</a>中这里是在本地找了一个位置新建了一个文件夹来存放博客文件，暂时没搞懂和直接放 <code>github</code> 上的区别… </p><p>这里我先用 <a href="https://desktop.github.com/">Github Desktop</a> 把之前新建的仓库下载到本地：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210524121018.png"></p><p>所以我就先也在 之前新建的仓库文件夹下创建新的 <code>blog</code> 文件夹。</p><p>用命令行进入到该路径下，输入如下指令安装 Hexo，此处若有报错可无视：</p><pre class="line-numbers language-none"><code class="language-none">sudo npm i hexo-cli -g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装后输入如下指令验证安装结果：</p><pre class="line-numbers language-none"><code class="language-none">hexo -v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>之后输入如下指令初始化网站：</p><pre class="line-numbers language-none"><code class="language-none">hexo init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>输入如下指令安装必备组件：</p><pre class="line-numbers language-none"><code class="language-none">npm install<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>以上完成了本地的网站配置，然后是如下几个有用的指令：</p><ul><li><p>生成静态网页</p><pre class="line-numbers language-none"><code class="language-none">hexo g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>打开本地服务器</p></li></ul><pre class="line-numbers language-none"><code class="language-none">hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>之后在浏览器键入<a href="http://localhost:4000/">http://localhost:4000/</a>就可以打开查看啦。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210524121816.png"></p><p>然后按 <code>ctrl + c</code> 关闭本地服务器。</p><h4 id="连接-Github-与本地"><a href="#连接-Github-与本地" class="headerlink" title="连接 Github 与本地"></a>连接 Github 与本地</h4><p>打开命令行后输入如下指令，记得将相应用户名和邮箱改成自己的：</p><pre class="line-numbers language-none"><code class="language-none">git config --global user.name &quot;YourGitName&quot;git config --global user.email &quot;YourEmail&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>之后生成密钥：</p><pre class="line-numbers language-none"><code class="language-none">ssh-keygen -t rsa -C &quot;haodong.liao@gmail.com&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这里会提示你键入保存密钥的地址，只需要不断回车即可：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210524122153.png"></p><p>打开自己的 <a href="https://github.com/">github</a>，点击头像之后点击 <code>settings</code>，然后选择 <code>SSH and GPG keys</code>，新建一个 SSH，名字我起名为 <code>blog</code>，然后在命令行中输入以下指令：</p><pre class="line-numbers language-none"><code class="language-none">cat ~&#x2F;.ssh&#x2F;id_rsa.pub<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>将输出的内容保存到密钥的内容框中，点击保存。</p><p>之后在命令行中键入如下内容，若出现用户名则成功：</p><pre class="line-numbers language-none"><code class="language-none">ssh -T git@github.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210524122557.png"></p><p>打开博客根目录下的 <code>_config.yml</code> 文件，即博客的配置文件，修改以下配置为你自己的配置：</p><pre class="line-numbers language-none"><code class="language-none">deploy:  type: git  repository: git@github.com:Medill-East&#x2F;haodong.github.io.git  branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>注意 <code>repository</code> 的地址可以从仓库的这里获取：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210524122756.png"></p><h4 id="写文章-发布文章"><a href="#写文章-发布文章" class="headerlink" title="写文章 发布文章"></a>写文章 发布文章</h4><p>在博客根目录下输入以下指令安装扩展：</p><pre class="line-numbers language-none"><code class="language-none">npm i hexo-deployer-git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>输入以下指令以新建文章：</p><pre class="line-numbers language-none"><code class="language-none">hexo new post &quot;my first post&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后在路径 <code>.\blog\source\_posts</code> 目录下就可以看到多出了 <code>my-first-post.md</code> 文件，这就是文章文件啦。</p><p>对 md 文件进行相应编辑后，在根目录下键入以下指令以生成静态网页和进行本地预览：</p><ul><li><p>生成静态网页</p><pre class="line-numbers language-none"><code class="language-none">hexo g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>打开本地服务器</p></li></ul><pre class="line-numbers language-none"><code class="language-none">hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>上传到 github</li></ul><pre class="line-numbers language-none"><code class="language-none">hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>注意需要确保 <code>Github Pages</code> <code>settings</code> 下的 <code>Source</code> 下的 <code>Branch</code> 为 <code>master</code></p></blockquote><blockquote><p>然后如果本地做过一些改动的话需要同步到 github 上</p></blockquote><hr><h2 id="20210526-解决-CSS-样式不加载的问题"><a href="#20210526-解决-CSS-样式不加载的问题" class="headerlink" title="20210526 解决 CSS 样式不加载的问题"></a>20210526 解决 CSS 样式不加载的问题</h2><p>按照如上步骤配置之后出现了一个问题：在本地预览能够看到的效果部署到网页之后没了 CSS 的效果，所以这里先对这个问题进行一下解决。</p><p>尝试了多篇帖子的办法，最终以如下途径成功加载上了 CSS：</p><ol><li><p>把仓库名改为了<br><code>your github name.github.io</code><br>比如我的 github name 为 <code>Medill-East</code><br>那么仓库名就需要为 <code>medill-east.github.io</code></p></li><li><p>更改根目录下的 _config.yml 配置文件的开头部分 <code>URL</code> 和 <code>root</code> 配置：</p></li></ol><pre class="line-numbers language-none"><code class="language-none"># URLurl: https:&#x2F;&#x2F;medill-east.github.io&#x2F; # 这里记得改成自己的 url 哦root: &#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>感谢这篇帖子：<a href="https://github.com/hexojs/hexo/issues/1121">生成路径的问题，导致css，js无法加载 #1121</a></p><hr><h2 id="20210527-更换主题"><a href="#20210527-更换主题" class="headerlink" title="20210527 更换主题"></a>20210527 更换主题</h2><p>这里和 <a href="https://zhuanlan.zhihu.com/p/35668237">超详细Hexo+Github博客搭建小白教程</a> 中一样，采用的是 <a href="https://blinkfox.github.io/">blinkfox</a> 的 <a href="http://blinkfox.com/2018/09/28/qian-duan/hexo-bo-ke-zhu-ti-zhi-hexo-theme-matery-de-jie-shao/">Hexo博客主题之hexo-theme-matery的介绍</a> 该主题。</p><p>以下为过程记录。</p><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>进入根目录的 <code>themes</code> 文件夹下，用命令行下载：</p><pre class="line-numbers language-none"><code class="language-none">git clone https:&#x2F;&#x2F;github.com&#x2F;blinkfox&#x2F;hexo-theme-matery.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h4 id="切换主题"><a href="#切换主题" class="headerlink" title="切换主题"></a>切换主题</h4><p>修改根目录下 <code>_config.yml</code> 的 <code>theme</code> 的值：</p><pre class="line-numbers language-none"><code class="language-none">theme: hexo-theme-matery<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>建议修改</li><li> 两个 <code>per_page</code> 的分页条数设为 <code>6</code> 的倍数，以优化显示</li><li> 若是中文用户可以修改 <code>language</code> 的值为 <code>zh-CN</code></li></ul><h4 id="新建分类-categories-页"><a href="#新建分类-categories-页" class="headerlink" title="新建分类 categories 页"></a>新建分类 categories 页</h4><p><code>categories</code> 用于展示所有分类， 若是 <code>source</code> 目录下还没有 <code>categories/index.md</code> 文件，就需要新建一个，回到博客根目录(<code>blog</code>文件夹)之后运行以下代码：</p><pre class="line-numbers language-none"><code class="language-none">hexo new page &quot;categories&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑刚新建的页面文件 <code>/source/categories/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-none"><code class="language-none">---title: categoriesdate: 2021-05-27 11:44:43type: &quot;categories&quot;layout: &quot;categories&quot;---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="新建标签-tags-页"><a href="#新建标签-tags-页" class="headerlink" title="新建标签 tags 页"></a>新建标签 tags 页</h4><p><code>tags</code>页用于展示所有标签，若是 <code>source</code> 目录下还没有 <code>tags/index.md</code> 文件，就需要新建一个，回到博客根目录(<code>blog</code>文件夹)之后运行以下代码：</p><pre class="line-numbers language-none"><code class="language-none">hexo new page &quot;tags&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑刚新建的页面文件 <code>/source/tags/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-none"><code class="language-none">---title: tagsdate: 2021-05-27 11:44:43type: &quot;tags&quot;layout: &quot;tags&quot;---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="新建关于我-about-页"><a href="#新建关于我-about-页" class="headerlink" title="新建关于我 about 页"></a>新建关于我 about 页</h4><p><code>about</code> 页用于展示关于我和我的博客的信息，若是 <code>source</code> 目录下还没有 <code>about/index.md</code> 文件，就需要新建一个，回到博客根目录(<code>blog</code>文件夹)之后运行以下代码：</p><pre class="line-numbers language-none"><code class="language-none">hexo new page &quot;about&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑刚新建的页面文件 <code>/source/about/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-none"><code class="language-none">---title: aboutdate: 2021-05-27 11:49:31type: &quot;about&quot;layout: &quot;about&quot;---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="新建友链-friends-页（可选）"><a href="#新建友链-friends-页（可选）" class="headerlink" title="新建友链 friends 页（可选）"></a>新建友链 friends 页（可选）</h4><p><code>friends</code> 页用于展示友情链接，若是 <code>source</code> 目录下还没有 <code>friends/index.md</code> 文件，就需要新建一个，回到博客根目录(<code>blog</code>文件夹)之后运行以下代码：</p><pre class="line-numbers language-none"><code class="language-none">hexo new page &quot;friends&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑刚新建的页面文件 <code>/source/about/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-none"><code class="language-none">---title: friendsdate: 2021-05-27 11:51:08type: &quot;friends&quot;layout: &quot;friends&quot;---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>同时在博客 <code>source</code> 目录下新建 <code>_data</code> 目录，在 <code>_data</code> 目录中新建 <code>friends.json</code> 文件，内容如下：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json">[&#123;    &quot;avatar&quot;: &quot;http:&#x2F;&#x2F;image.luokangyuan.com&#x2F;1_qq_27922023.jpg&quot;,    &quot;name&quot;: &quot;码酱&quot;,    &quot;introduction&quot;: &quot;我不是大佬，只是在追寻大佬的脚步&quot;,    &quot;url&quot;: &quot;http:&#x2F;&#x2F;luokangyuan.com&#x2F;&quot;,    &quot;title&quot;: &quot;前去学习&quot;&#125;, &#123;    &quot;avatar&quot;: &quot;http:&#x2F;&#x2F;image.luokangyuan.com&#x2F;4027734.jpeg&quot;,    &quot;name&quot;: &quot;闪烁之狐&quot;,    &quot;introduction&quot;: &quot;编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬&quot;,    &quot;url&quot;: &quot;https:&#x2F;&#x2F;blinkfox.github.io&#x2F;&quot;,    &quot;title&quot;: &quot;前去学习&quot;&#125;, &#123;    &quot;avatar&quot;: &quot;http:&#x2F;&#x2F;image.luokangyuan.com&#x2F;avatar.jpg&quot;,    &quot;name&quot;: &quot;ja_rome&quot;,    &quot;introduction&quot;: &quot;平凡的脚步也可以走出伟大的行程&quot;,    &quot;url&quot;: &quot;ttps:&#x2F;&#x2F;me.csdn.net&#x2F;jlh912008548&quot;,    &quot;title&quot;: &quot;前去学习&quot;&#125;]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h4><p>使用了 <a href="https://github.com/ele828/hexo-prism-plugin">hexo-prism-plugin</a> 的 Hexo 插件做代码高亮。返回根目录 <code>blog</code> 之后运行如下代码：</p><pre class="line-numbers language-none"><code class="language-none">npm i -S hexo-prism-plugin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后修改根目录下 <code>_config.yml</code> 文件中的 <code>higlight.enable</code> 值为 <code>false</code>，并新增 <code>prism</code> 插件相关配置：</p><pre class="line-numbers language-none"><code class="language-none">highlight:  enable: falseprism_plugin:  mode: &#39;preprocess&#39;    # realtime&#x2F;preprocess  theme: &#39;tomorrow&#39;  line_number: false    # default false  custom_css:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="20210530"><a href="#20210530" class="headerlink" title="20210530"></a>20210530</h2><h4 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h4><p>主题中使用了 <a href="https://github.com/wzpan/hexo-generator-search">hexo-generator-search</a> 的 Hexo 插件来做内容搜索，先回到根目录后，命令如下：</p><pre class="line-numbers language-none"><code class="language-none">npm install hexo-generator-search --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在根目录下的 <code>_config.yml</code> 文件中新增以下配置：</p><pre class="line-numbers language-none"><code class="language-none">search:  path: search.xml  field: post<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="中文链接转拼音（可选）"><a href="#中文链接转拼音（可选）" class="headerlink" title="中文链接转拼音（可选）"></a>中文链接转拼音（可选）</h4><p>Hexo 默认会使得名称为中文的文章的永久链接中也有中文，这样会降低兼容性，而且 <code>gitment</code> 评论对中文链接也不支持，这里和教程中一样，使用 <a href="https://github.com/viko16/hexo-permalink-pinyin">hexo-permalink-pinyin </a> Hexo 插件在生成文章时生成中文拼音的永久链接：</p><pre class="line-numbers language-none"><code class="language-none">npm i hexo-permalink-pinyin --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在根目录下的 <code>_config.yml</code> 文件中新增以下配置：</p><pre class="line-numbers language-none"><code class="language-none">permalink_pinyin:  enable: true  separator: &#39;-&#39; # default: &#39;-&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="文章字数统计（可选）"><a href="#文章字数统计（可选）" class="headerlink" title="文章字数统计（可选）"></a>文章字数统计（可选）</h4><p>这里和教程中一样，使用 <a href="https://github.com/willin/hexo-wordcount">hexo-wordcount </a> Hexo 插件统计文章字数、阅读时长信息：</p><pre class="line-numbers language-none"><code class="language-none">npm i --save hexo-wordcount<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在根目录下的 <code>_config.yml</code> 文件中新增以下配置：</p><pre class="line-numbers language-none"><code class="language-none">wordCount:  enable: true  postWordCount: true  min2read: true  totalCount: true<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="添加-RSS-订阅支持（可选）"><a href="#添加-RSS-订阅支持（可选）" class="headerlink" title="添加 RSS 订阅支持（可选）"></a>添加 RSS 订阅支持（可选）</h4><p>这里和教程中一样，使用 <a href="https://github.com/hexojs/hexo-generator-feed">hexo-generator-feed </a> Hexo 插件提供 RSS 订阅功能：</p><pre class="line-numbers language-none"><code class="language-none">npm install hexo-generator-feed --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在根目录下的 <code>_config.yml</code> 文件中新增以下配置：</p><pre class="line-numbers language-none"><code class="language-none">feed:  type: atom  path: atom.xml  limit: 20  hub:  content:  content_limit: 140  content_limit_delim: &#39; &#39;  order_by: -date<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行<br><code>hexo clean &amp;&amp; hexo g</code></p><p>重新生成博客文件，然后在 <code>public</code> 文件夹中即可看到 <code>atom.xml</code> 文件，说明你已经安装成功了。</p><h4 id="修改页脚"><a href="#修改页脚" class="headerlink" title="修改页脚"></a>修改页脚</h4><p>页脚修改的配置文件在主题文件(即<code>themes/hexo-theme-matery</code>文件夹)的<br><code>/layout/_partial/footer.ejs</code>，包括站点、使用的主题、访问量等。</p><p>这里我对作者信息进行了一下修改，需要到 <code>_config.yml</code> 文件中找到 <code>author:</code> 然后改成自己的信息。之后别忘了</p><pre class="line-numbers language-none"><code class="language-none">hexo clean &amp;&amp; hexo g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>还有同步 <code>github</code> 哦</p><h4 id="修改社交链接"><a href="#修改社交链接" class="headerlink" title="修改社交链接"></a>修改社交链接</h4><p>在主题 <code>_config.yml</code> 文件中，默认支持 <code>QQ</code>/<code>Github</code>和邮箱的配置，可以在主题文件的 <code>/layout/_partial/social-link.ejs</code> 文件中，新增、修改你需要的社交链接地址，增加链接可参考如下代码：</p><pre class="line-numbers language-none"><code class="language-none">&lt;a href&#x3D;&quot;https:&#x2F;&#x2F;github.com&#x2F;blinkfox&quot; class&#x3D;&quot;tooltipped&quot; target&#x3D;&quot;_blank&quot; data-tooltip&#x3D;&quot;访问我的GitHub&quot; data-position&#x3D;&quot;top&quot; data-delay&#x3D;&quot;50&quot;&gt;    &lt;i class&#x3D;&quot;fa fa-github&quot;&gt;&lt;&#x2F;i&gt;&lt;&#x2F;a&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>其中，社交图标（如：fa-github）你可以在 <a href="https://fontawesome.com/v5.15/icons">Font Awesome</a> 中搜索找到。以下是常用社交图标的标识，供参考：</p><ul><li>Facebook: fa-facebook</li><li>Twitter: fa-twitter</li><li>Google-plus: fa-google-plus</li><li>Linkedin: fa-linkedin</li><li>Tumblr: fa-tumblr</li><li>Medium: fa-medium</li><li>Slack: fa-slack</li><li>新浪微博: fa-weibo</li><li>微信: fa-wechat</li><li>QQ: fa-qq</li></ul><h4 id="修改打赏的二维码图片"><a href="#修改打赏的二维码图片" class="headerlink" title="修改打赏的二维码图片"></a>修改打赏的二维码图片</h4><p>在主题文件的 <code>source/medias/reward</code> 文件中，你可以替换成你的的微信和支付宝的打赏二维码图片。</p><h4 id="配置音乐播放器（可选）"><a href="#配置音乐播放器（可选）" class="headerlink" title="配置音乐播放器（可选）"></a>配置音乐播放器（可选）</h4><p>要支持音乐播放，就必须开启音乐的播放配置和音乐数据的文件。</p><p>首先，在你的博客 <code>source</code> 目录下的 <code>_data</code> 目录（没有的话就新建一个）中新建 <code>musics.json</code> 文件，文件内容如下所示：</p><pre class="line-numbers language-none"><code class="language-none">[&#123;    &quot;name&quot;: &quot;五月雨变奏电音&quot;,    &quot;artist&quot;: &quot;AnimeVibe&quot;,    &quot;url&quot;: &quot;http:&#x2F;&#x2F;xxx.com&#x2F;music1.mp3&quot;,    &quot;cover&quot;: &quot;http:&#x2F;&#x2F;xxx.com&#x2F;music-cover1.png&quot;&#125;, &#123;    &quot;name&quot;: &quot;Take me hand&quot;,    &quot;artist&quot;: &quot;DAISHI DANCE,Cecile Corbel&quot;,    &quot;url&quot;: &quot;&#x2F;medias&#x2F;music&#x2F;music2.mp3&quot;,    &quot;cover&quot;: &quot;&#x2F;medias&#x2F;music&#x2F;cover2.png&quot;&#125;, &#123;    &quot;name&quot;: &quot;Shape of You&quot;,    &quot;artist&quot;: &quot;J.Fla&quot;,    &quot;url&quot;: &quot;http:&#x2F;&#x2F;xxx.com&#x2F;music3.mp3&quot;,    &quot;cover&quot;: &quot;http:&#x2F;&#x2F;xxx.com&#x2F;music-cover3.png&quot;&#125;]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注：以上 JSON 中的属性：name、artist、url、cover 分别表示音乐的名称、作者、音乐文件地址、音乐封面。</p></blockquote><p>然后，在主题的 <code>_config.yml</code> 配置文件中激活配置即可：</p><pre class="line-numbers language-none"><code class="language-none"># 是否在首页显示音乐.music:  enable: true  showTitle: false  title: 听听音乐  fixed: false # 是否开启吸底模式  autoplay: false # 是否自动播放  theme: &#39;#42b983&#39;  loop: &#39;all&#39; # 音频循环播放, 可选值: &#39;all&#39;, &#39;one&#39;, &#39;none&#39;  order: &#39;list&#39; # 音频循环顺序, 可选值: &#39;list&#39;, &#39;random&#39;  preload: &#39;auto&#39; # 预加载，可选值: &#39;none&#39;, &#39;metadata&#39;, &#39;auto&#39;  volume: 0.7 # 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效  listFolded: false # 列表默认折叠  listMaxHeight: # 列表最大高度<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="文章-Front-matter-介绍"><a href="#文章-Front-matter-介绍" class="headerlink" title="文章 Front-matter 介绍"></a>文章 Front-matter 介绍</h3><h4 id="Front-matter-选项详解"><a href="#Front-matter-选项详解" class="headerlink" title="Front-matter 选项详解"></a>Front-matter 选项详解</h4><p><code>Front-matter</code> 选项中的所有内容均为非必填的。但教程的作者仍然建议至少填写 <code>title</code> 和 <code>date</code> 的值。</p><table><thead><tr><th>配置选项</th><th align="right">默认值</th><th align="center">描述</th></tr></thead><tbody><tr><td>title</td><td align="right">Markdown 的文件标题</td><td align="center">文章标题，<strong>强烈建议填写此选项</strong></td></tr><tr><td>date</td><td align="right">文件创建时的日期时间</td><td align="center">发布时间，<strong>强烈建议填写此选</strong>项，且最好保证<strong>全局唯一</strong></td></tr><tr><td>author</td><td align="right">根 <code>_config.yml</code> 中的 <code>author</code></td><td align="center">文章作者</td></tr><tr><td>img</td><td align="right">featureImages 中的某个值</td><td align="center">文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等，我自己使用的是 picgo + github )来做图片的路径. 如: <a href="http://xxx.com/xxx.jpg">http://xxx.com/xxx.jpg</a></td></tr><tr><td>top</td><td align="right">true</td><td align="center">推荐文章（文章是否置顶），如果 top 值为 true，则会作为首页推荐文章</td></tr><tr><td>cover</td><td align="right">false</td><td align="center">v1.0.2版本新增，表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td>coverImg</td><td align="right">无</td><td align="center">v1.0.2版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td>password</td><td align="right">无</td><td align="center">文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 password 的值，该值必须是用 SHA256 加密后的密码，防止被他人识破。前提是在主题的 config.yml 中激活了 verifyPassword 选项</td></tr><tr><td>toc</td><td align="right">true</td><td align="center">是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 config.yml 中激活了 toc 选项</td></tr><tr><td>mathjax</td><td align="right">false</td><td align="center">是否开启数学公式支持 ，本文章是否开启 mathjax，且需要在主题的 _config.yml 文件中也需要开启才行</td></tr><tr><td>summary</td><td align="right">无</td><td align="center">文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td>categories</td><td align="right">无</td><td align="center">文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td>tags</td><td align="right">无</td><td align="center">文章标签，一篇文章可以多个标签</td></tr></tbody></table><blockquote><p>注意:</p></blockquote><blockquote><p>如果 <code>img</code> 属性不填写的话，文章特色图会根据文章标题的 <code>hashcode</code> 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章都的特色图各有特色。<br><code>date</code> 的值尽量保证每篇文章是唯一的，因为本主题中 <code>Gitalk</code> 和 <code>Gitment</code> 识别 id 是通过 date 的值来作为唯一标识的。<br>如果要对文章设置阅读验证密码的功能，不仅要在 <code>Front-matter</code> 中设置采用了 SHA256 加密的 <code>password</code> 的值，还需要在主题的 <code>_config.yml</code> 中激活了配置。有些在线的 SHA256 加密的地址，可供使用：<a href="https://tool.oschina.net/encrypt?type=2">开源中国在线工具</a>、<a href="http://encode.chahuo.com/">chahuo</a>、<a href="http://tool.chinaz.com/tools/hash.aspx">站长工具</a>。</p></blockquote><p>以下为教程作者给出的示例：</p><h4 id="最简示例"><a href="#最简示例" class="headerlink" title="最简示例"></a>最简示例</h4><pre class="line-numbers language-none"><code class="language-none">---title: typora-vue-theme主题介绍date: 2018-09-07 09:25:00---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="最全示例"><a href="#最全示例" class="headerlink" title="最全示例"></a>最全示例</h4><pre class="line-numbers language-none"><code class="language-none">---title: typora-vue-theme主题介绍date: 2018-09-07 09:25:00author: 赵奇img: &#x2F;source&#x2F;images&#x2F;xxx.jpgtop: truecover: truecoverImg: &#x2F;images&#x2F;1.jpgpassword: 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92toc: falsemathjax: falsesummary: 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要categories: Markdowntags:  - Typora  - Markdown---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="自动添加文章头"><a href="#自动添加文章头" class="headerlink" title="自动添加文章头"></a>自动添加文章头</h4><p>这里参考 <a href="https://zhuanlan.zhihu.com/p/35668237">超详细Hexo+Github博客搭建小白教程</a> 中所写，把 <code>/scaffolds/post.md</code> 修改为如下代码，这样创建新 <code>post</code> 的时候就不用手动填充，只需要修改对应信息了：</p><pre class="line-numbers language-none"><code class="language-none">---title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;top: falsecover: falsepassword:toc: truemathjax: truesummary:tags:categories:---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="20210605"><a href="#20210605" class="headerlink" title="20210605"></a>20210605</h2><h3 id="自定制修改"><a href="#自定制修改" class="headerlink" title="自定制修改"></a>自定制修改</h3><p>在本主题的 <code>_config.yml</code> 中可以修改部分自定义信息，有以下几个部分：</p><ul><li>菜单</li><li>我的梦想</li><li>首页的音乐播放器和视频播放器配置</li><li>是否显示推荐文章名称和按钮配置</li><li>favicon 和 Logo</li><li>个人信息</li><li>TOC 目录</li><li>文章打赏信息</li><li>复制文章内容时追加版权信息</li><li>MathJax</li><li>文章字数统计、阅读时长</li><li>点击页面的’爱心’效果</li><li>我的项目</li><li>我的技能</li><li>我的相册</li><li>Gitalk、Gitment、Valine 和 disqus 评论配置</li><li>不蒜子统计和谷歌分析（Google Analytics）</li><li>默认特色图的集合。当文章没有设置特色图时，本主题会根据文章标题的 hashcode 值取余，来选择展示对应的特色图</li></ul><h3 id="更多修改可能性"><a href="#更多修改可能性" class="headerlink" title="更多修改可能性"></a>更多修改可能性</h3><h4 id="修改主题颜色"><a href="#修改主题颜色" class="headerlink" title="修改主题颜色"></a>修改主题颜色</h4><p>在主题文件的 <code>/source/css/matery.css</code> 文件中，搜索 <code>.bg-color</code> 来修改背景颜色：</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;* 整体背景颜色，包括导航、移动端的导航、页尾、标签页等的背景颜色. *&#x2F;.bg-color &#123;    background-image: linear-gradient(to right, #373B44 0%, #4286f4 100%);&#125;@-webkit-keyframes rainbow &#123;   &#x2F;* 动态切换背景颜色. *&#x2F;&#125;@keyframes rainbow &#123;    &#x2F;* 动态切换背景颜色. *&#x2F;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="修改-banner-图和文章特色图"><a href="#修改-banner-图和文章特色图" class="headerlink" title="修改 banner 图和文章特色图"></a>修改 banner 图和文章特色图</h4><p>可以直接在 <code>/source/medias/banner</code> 文件夹中更换喜欢的 <code>banner</code> 图片，原教程中主题代码中是每天动态切换一张，只需 7 张即可。<br>这里我从自己照的照片找了 26 张出来，所以稍微做了一些更改：<br>找到 <code>banner</code> 切换的  <code>JavaScript</code> 代码位置 <code>/layout/_partial/bg-cover-content.ejs</code> 文件的 <code>&lt;script&gt;&lt;/script&gt;</code> 代码中：</p><pre class="line-numbers language-none"><code class="language-none">var num &#x3D; new Date().getSeconds() % 26;$(&#39;.bg-cover&#39;).css(&#39;background-image&#39;, &#39;url(&#x2F;medias&#x2F;banner&#x2F;&#39; + num + &#39;.jpg)&#39;);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><code>/source/medias/featureimages</code> 文件夹中默认有 24 张图片，我也将其改为了 26 张图片，并在主题文件夹下的 <code>_config.yml</code> 的 <code>featureImages</code> 部分做同步修改。</p><h4 id="修改了主页的打字效果相关文字"><a href="#修改了主页的打字效果相关文字" class="headerlink" title="修改了主页的打字效果相关文字"></a>修改了主页的打字效果相关文字</h4><p>主题文件夹下的 <code>_config.yml</code> 中找到 <code>sutitle</code> 部分的 <code>sub</code> 部分可以对文字进行相应修改</p><h4 id="更改了-myGallery"><a href="#更改了-myGallery" class="headerlink" title="更改了 myGallery"></a>更改了 myGallery</h4><p><code>关于</code> 页面的 <code>我的相册</code> 部分可以展示图片，这里我也是把所有的图片都摆上来了：</p><pre class="line-numbers language-none"><code class="language-none">myGallery:  enable: true  data:    - &#x2F;medias&#x2F;featureimages&#x2F;0.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;1.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;2.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;3.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;4.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;5.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;6.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;7.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;8.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;9.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;10.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;11.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;12.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;13.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;14.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;15.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;16.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;17.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;18.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;19.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;20.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;21.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;22.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;23.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;24.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;25.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;26.jpg<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="其余更改"><a href="#其余更改" class="headerlink" title="其余更改"></a>其余更改</h4><ul><li>更改 favicon</li><li>更改 logo</li><li>更改 githubLink 为 false</li><li>更新 profile</li><li>把 my projects 和 my skills 暂时留空</li><li>更改了 根目录 <code>_config.yml</code> 文件中的 <code>description</code></li><li>因为出现了 <code>can not get /</code> 问题，所以暂时删掉了 contact 页面</li></ul><hr><h2 id="20211116-添加评论功能"><a href="#20211116-添加评论功能" class="headerlink" title="20211116 添加评论功能"></a>20211116 添加评论功能</h2><p>和教程中一样，这里也使用了畅言评论插件。</p><ol><li>首先<a href="http://changyan.kuaizhan.com/">在这里</a>注册一个畅言账号。</li><li>打开<code>进入工作台-安装畅言-通用代码安装</code>页面，复制页面中的代码：</li></ol><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211116142114.png"></p><ol start="3"><li>打开 <code>.../blog/themes/hexo-theme-matery/layout/post.ejs</code></li><li>将上面的代码复制到最底部就可以啦！</li></ol><p>效果如下：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211116142429.png"></p><h2 id="Todo：域名问题"><a href="#Todo：域名问题" class="headerlink" title="Todo：域名问题"></a>Todo：域名问题</h2><p>暂时先凑合用，后面再琢磨域名问题(￣▽￣)”</p><hr><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul><li><a href="https://zhuanlan.zhihu.com/p/35668237">超详细Hexo+Github博客搭建小白教程</a></li><li><a href="http://blinkfox.com/2018/09/28/qian-duan/hexo-bo-ke-zhu-ti-zhi-hexo-theme-matery-de-jie-shao/">Hexo博客主题之hexo-theme-matery的介绍</a></li><li><a href="https://github.com/hexojs/hexo/issues/1121">生成路径的问题，导致css，js无法加载 #1121</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog-building </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
