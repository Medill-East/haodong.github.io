<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>游戏设计艺术 第十三章 游戏机制必须平衡</title>
      <link href="2022/07/11/20220711-theartofgamedesign-chap13/"/>
      <url>2022/07/11/20220711-theartofgamedesign-chap13/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="第十三章-游戏机制必须平衡"><a href="#第十三章-游戏机制必须平衡" class="headerlink" title="第十三章 游戏机制必须平衡"></a>第十三章 游戏机制必须平衡</h2><blockquote><p>诡诈的天平为耶和华所憎恶。 —— 《箴言 11：:1》</p></blockquote><p>平衡一个游戏，不过是调整游戏的各种元素，直到它们传达了你想要的体验。</p><h3 id="十二种最常见的游戏平衡"><a href="#十二种最常见的游戏平衡" class="headerlink" title="十二种最常见的游戏平衡"></a>十二种最常见的游戏平衡</h3><h4 id="平衡类型-1：公平"><a href="#平衡类型-1：公平" class="headerlink" title="平衡类型 1：公平"></a>平衡类型 1：公平</h4><blockquote><p>不对等的战斗毫无乐趣可言。 —— 卡武尔太太（出自电影《妈妈市场》）</p></blockquote><h5 id="对称游戏"><a href="#对称游戏" class="headerlink" title="对称游戏"></a>对称游戏</h5><p>给予所有玩家同等资源和能力。</p><p>如果想要玩家们互相直接竞争，并预期他们的技巧水平差不多，对称游戏是不错的选择。这种系统特别适合确定哪个玩家最强。</p><p>完美对称也不容易实现，会存在“先/后手优势”等问题，一般用抛硬币或投骰子等随机方式解决。<br>有时会把优势给劣势方可以弥补不对称，如“让年龄最小的玩家先来”。</p><h5 id="不对称游戏"><a href="#不对称游戏" class="headerlink" title="不对称游戏"></a>不对称游戏</h5><p>创造非对称游戏的可能原因：</p><ol><li><p>为了模拟真实世界情况</p></li><li><p>为了给玩家另一种方式来探索游戏空间<br>如格斗游戏中，用不同角色意味着不同玩法。</p></li><li><p>个性化<br>可以让玩家自由选择游戏方式</p></li><li><p>为了场上情况均衡<br>特别是当双方实力相差悬殊时，或有电脑对手在场<br>是否引入该方法，取决于游戏目的。是要对玩家技巧设立标准，还是为所有玩家提供挑战。</p></li><li><p>为了创建有趣情况<br>让多股不对称力量相互斗争很有趣，且能引发玩家深刻思考<br>游戏制胜策略往往不能一眼看出，玩家会思考哪方占优，游戏是否真正公平<br>例子：尼泊尔虎棋。一方控制五只老虎，另一方控制二十只山羊。老虎方吃五只山羊就胜利，山羊方移动山羊，使得所有老虎不能移动而取胜。有经验的玩家一般承认游戏公平，但新手玩家会花大量时间讨论是否公平，并反复游玩以确认。</p></li></ol><p>不对称游戏的平衡通常通过量化资源/能力，确保双方总值相等。</p><h5 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h5><h6 id="双翼飞机大战"><a href="#双翼飞机大战" class="headerlink" title="双翼飞机大战"></a>双翼飞机大战</h6><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220711004949.png"></p><p>此时不好判断平衡性，但若是将低中高分别量化为 123，那么可以得到</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220711005039.png"></p><p>好像复仇者优势明显。经过测试后，发现食人鱼和复仇者势均力敌，但骆驼总是输，所以推测火力比其他属性更有价值，同时将骆驼火力调高，从而得到新的表：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220711005225.png"></p><p>如果此时几方势均力敌，则说明模型正确，否则可能需要继续调整模型。</p><p>调整平衡和开发指导平衡的模型需要共同推进。<br>只有游戏可玩了，才能真正开始调整平衡。<br>经验之谈：一半的开发时间应该用来平衡游戏。</p><h6 id="石头、剪子、布"><a href="#石头、剪子、布" class="headerlink" title="石头、剪子、布"></a>石头、剪子、布</h6><p>还有一种平衡方式——克制关系。</p><h4 id="37-号透镜：公平"><a href="#37-号透镜：公平" class="headerlink" title="37 号透镜：公平"></a>37 号透镜：公平</h4><p>要使用公平透镜，从玩家视角思考游戏。考虑玩家技巧水平，找到方法让每个玩家都有机会获胜，且各自都认为公平。</p><ul><li>游戏应该对称吗，为什么</li><li>游戏应该不对称吗，为什么</li><li>哪点更重要？<ul><li>游戏应能有效衡量谁的技巧水平最高</li><li>游戏应该为所有玩家都带来有趣挑战</li></ul></li><li>如果想让不同水平玩家一起玩，会用什么手段，令游戏对所有人都具有趣味性和挑战性</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220711005807.png"></p><h3 id="平衡类型-2：挑战与成功"><a href="#平衡类型-2：挑战与成功" class="headerlink" title="平衡类型 2：挑战与成功"></a>平衡类型 2：挑战与成功</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220711010326.png"></p><p>让玩家能持续体验心流，意味着平衡挑战与成功两种体验。由于玩家技巧水平不一，找到平衡很难。以下是找到平衡的一些常用方法：</p><ul><li>随着每次成功增加难度。<ul><li>一方面不断增强关卡难度</li><li>一方面也不要忘记“张弛有度”</li></ul></li><li>让玩家快速打通容易部分<ul><li>可以让熟练玩家快速遇到有意思的挑战</li><li>让技巧不那么熟练的玩家慢慢挑战之前的关卡</li><li>可以让每种类型玩家都快速进入游戏中能给自己带来挑战的部分</li></ul></li><li>创建“层层挑战”<ul><li>即结尾评分，如评分太差，就需要重玩</li><li>新手玩家一开始只要能拿 C，就能沉浸在过关喜悦中，但随着技术水平提高，他们也会对自己有更高评分要求</li></ul></li><li>让玩家自选难度<ul><li>一种是预设难度 —— 游戏开始前就定好了会遇到什么样的困难</li><li>一种是动态难度 —— 在游戏过程中根据玩家表现调整难度<ul><li>优点：可以让玩家找到相匹配的挑战难度</li><li>缺点：<ul><li>需要创建多个难度版本（这个是对应以前的游戏，随着人工智能的发展，动态难度这一问题相信会真正被攻克）</li><li>会削弱游戏“真实感”（书中说玩家会争论哪个版本才是“真的”，译者注里面写，作者解释说，这里的“真实”指的是令玩家认真对待幻想世界的真实感，因为如果有多个平行幻想世界，就提醒了玩家这些都是虚构的。有些幻想世界比别的感觉更真实。）</li></ul></li></ul></li><li>请各种玩家试玩<ul><li>让具有各种技巧水平的玩家都来试玩，确保游戏开头好玩，稍后好玩，后面依然好玩</li></ul></li><li>让失败者休息一下<ul><li>《马里奥赛车》中的道具机制是排名靠前的玩家拿到的道具就弱，排名靠后的玩家拿到的道具就强。这是很棒的设计。</li></ul></li></ul></li></ul><p>决定游戏难度怎样随时间增加，是调整游戏平衡的一大挑战。<br>作为设计师，应当问自己，“我想要百分之多少的玩家能打通游戏？”，然后朝这个目标去设计</p><p>不要忘记，学着玩一个游戏，本身也是挑战！因此，游戏前一两关通常非常简单。因为玩家需要理解“控制和目标”。在前期，一点点成功可以帮助玩家建立自信，自信的玩家是不会轻易放弃一款游戏的。</p><h4 id="38-号透镜：挑战"><a href="#38-号透镜：挑战" class="headerlink" title="38 号透镜：挑战"></a>38 号透镜：挑战</h4><p>挑战几乎是所有游戏玩法的核心。甚至可以说，游戏由其目标和挑战所定义。检查游戏中的挑战，问自己：</p><ul><li>游戏中的挑战是什么</li><li>太容易？太难？刚刚好？</li><li>这些挑战能否容纳各种技巧水平</li><li>随着玩家不断成功，挑战难度如何增长</li><li>挑战种类是否足够多样</li><li>游戏中最高水平挑战是什么</li></ul><hr>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220703 - Tools of Life</title>
      <link href="2022/07/03/20220703-toolsoflife/"/>
      <url>2022/07/03/20220703-toolsoflife/</url>
      
        <content type="html"><![CDATA[<h1 id="人生工具"><a href="#人生工具" class="headerlink" title="人生工具"></a>人生工具</h1><h2 id="原文链接"><a href="#原文链接" class="headerlink" title="原文链接"></a>原文链接</h2><ul><li><a href="https://mp.weixin.qq.com/s/kKSk07ulNEXCt4SV1j4xGw">做出3亿用户的游戏，公司被腾讯收购，他感慨人生艰难，如何过得好一点？</a></li></ul><h2 id="本文的思维导图"><a href="#本文的思维导图" class="headerlink" title="本文的思维导图"></a>本文的思维导图</h2><ul><li><a href="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/202207032052toolsoflife.html">思维导图</a><ul><li>需要将该文件下载到本地后然后用浏览器（Chrome 是可以的）打开就能看到可交互的思维导图了！</li></ul></li></ul><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="一，前言"><a href="#一，前言" class="headerlink" title="一，前言"></a>一，前言</h3><blockquote><p>“智者的目标不是追求幸福，而是远离痛苦。”——亚里士多德，《尼各马可伦理学》，公元前 330</p></blockquote><h3 id="二，工具箱"><a href="#二，工具箱" class="headerlink" title="二，工具箱"></a>二，工具箱</h3><blockquote><p>“ 我相信，通过适当的努力，很多不快乐的人是可以变得幸福、快乐的。” ——罗素，《幸福之路》，1930</p></blockquote><h4 id="工具箱由来"><a href="#工具箱由来" class="headerlink" title="工具箱由来"></a>工具箱由来</h4><ul><li>为了让人在外部功利世界和内部精神世界都能过得好一点<h4 id="工具箱功能"><a href="#工具箱功能" class="headerlink" title="工具箱功能"></a>工具箱功能</h4></li><li>让自己更好地做事获取成就</li><li>处理各种关系，包括社会关系与亲密关系</li><li>让自己感觉好过一些，并抵抗挫折<h4 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h4></li><li>工具箱不包括专业技能，但能告诉你如何快速提高各类技能</li></ul><h3 id="三，工具概述"><a href="#三，工具概述" class="headerlink" title="三，工具概述"></a>三，工具概述</h3><blockquote><p>“ ‘人生的智慧’，也就是如何安排我们的生活，然后享受最大程度的快乐和成功。你也可以说它是幸福论，因为它将教我们如何幸福地度过这一生。”——叔本华，《人生的智慧》，1850</p></blockquote><h4 id="六类工具概览（前两类是后四类基础）"><a href="#六类工具概览（前两类是后四类基础）" class="headerlink" title="六类工具概览（前两类是后四类基础）"></a>六类工具概览（前两类是后四类基础）</h4><ul><li><p>第1类，人性与社会的知识与经验。  </p></li><li><p>第2类，想事情的方法。会提高学习和专业技能速度，以及提高思考水平，提高生命效率。  </p></li><li><p>第3类，目标规划和执行 。实现目标的办法  </p></li><li><p>第4类 工作生活中做抉择的方法 ，包括了解和洞悉他人的办法  </p></li><li><p>第5类，处理关系的方法。包括亲密关系和功利关系。  </p></li><li><p>第6类，抵抗挫折，照顾自己心灵的办法。</p></li><li><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220702173841.png" alt="工具层次图"></p></li></ul><h3 id="四，第1类工具：社会和人的知识经验"><a href="#四，第1类工具：社会和人的知识经验" class="headerlink" title="四，第1类工具：社会和人的知识经验"></a>四，第1类工具：社会和人的知识经验</h3><blockquote><p>“真正高明的人，就是能够借助别人的智慧，来使自己不受蒙蔽的人。” —— 苏格拉底</p></blockquote><blockquote><p>“世界上最重要的事情就是要理解现实如何运行，以及如何应对现实。” ——瑞·达里奥，《原则 - 工作与生活》</p></blockquote><ul><li><p>推荐阅读</p><ul><li>《原则 - 工作和生活》，瑞·达里奥</li></ul></li><li><p>信息本身就是重要工具</p><ul><li>生活工作重大决策质量，取决于对社会和人性经验多寡</li><li>经验的积累途径<ul><li>处理过重大经济利益</li><li>处理过权力博弈</li><li>经历过复杂男女关系</li><li>向有以上三种经验的前辈学习间接经验 - 高人指点</li><li>多读书</li></ul></li></ul></li></ul><h4 id="需要理解四类概念"><a href="#需要理解四类概念" class="headerlink" title="需要理解四类概念"></a>需要理解四类概念</h4><ul><li>功利</li><li>社会脉络</li><li>人性</li><li>人格</li></ul><h5 id="4-1-功利"><a href="#4-1-功利" class="headerlink" title="4-1 功利"></a>4-1 功利</h5><ul><li>定义<ul><li>功名利禄。</li><li>物质利益，权利，地位，名望。</li><li>现实成就</li></ul></li><li>“为了挣到一块钱”也是功利目标，无关目标大小。</li><li>这里的功利不完全是贬义，只是代表现实生存必需获取的资源和成就目标</li></ul><h5 id="4-2-社会脉络"><a href="#4-2-社会脉络" class="headerlink" title="4-2 社会脉络"></a>4-2 社会脉络</h5><ul><li>定义<ul><li>当代人类社会围绕包括身体生存，权利，财富，繁衍（男女关系）等脉络在运转和博弈</li><li>靠近脉络的事情，往往功利回报丰厚<ul><li>（指的应该是拥有脉络资源？）<h6 id="4-2-1-身体导致的时间不平衡"><a href="#4-2-1-身体导致的时间不平衡" class="headerlink" title="4-2-1 身体导致的时间不平衡"></a>4-2-1 身体导致的时间不平衡</h6></li></ul></li></ul></li><li>“在《论人类不平等的起源》中，卢梭认为人类中间存在两种不平等，一种是生理上的不平等，包括在年龄、健康状况、体制强弱和智力或者心智上的各种差异；另一种是制度形成的统治特权阶层。” 这里关注第一种</li><li>有效时间——清醒时完成功利目标或者精神追求的时间<ul><li>时间对每个人都是不平等的，有些人的有效时间就是比另一些人多</li></ul></li><li>时间不平等的基础要素<ul><li>精力是否旺盛<ul><li>效率相同情况下，更有精力意味着能投入更多时间，自然能更快达成目标</li></ul></li><li>健康时间是否久<ul><li>体弱多病的比健康的人，能够正常工作和思考时间就更短</li></ul></li></ul></li><li>智力与天赋的重要程度比不上精力旺盛度和健康度。对人生最有影响的是智慧，智力与天赋的差别并不会影响大家得到相同的智慧</li><li>增加有效时间的办法<ul><li>增加精力 - 靠健身和饮食起居</li><li>提高效率 - 靠提升思维能力（第二类工具）<h6 id="4-2-2-权力"><a href="#4-2-2-权力" class="headerlink" title="4-2-2 权力"></a>4-2-2 权力</h6></li></ul></li><li>人类社会发展必然性<ul><li>能者居之</li><li>世界是少数人掌控的</li></ul></li><li>权力可以分配资源与控制他人，这不是本文关注的重点</li><li>对我们重要的是，在现代商业社会中的博弈过程中，将人对权力的追求放入预判因素中<h6 id="4-2-3-财富"><a href="#4-2-3-财富" class="headerlink" title="4-2-3 财富"></a>4-2-3 财富</h6></li><li>三种程度的财富<ul><li>必要的财富<ul><li>作用<ul><li>对抗现实复杂人生和世态炎凉的压力</li></ul></li></ul></li><li>介于上者和下者之间的财富水平<ul><li>也存在广阔人生体验</li><li>财富使用得当，也能帮助更多人<ul><li>对于有利他追求的人很重要</li></ul></li></ul></li><li>更大数量级的财富<ul><li>不意味着更大的幸福和快乐</li><li>意味着<ul><li>更多选择权</li><li>更多体验</li><li>“更长的命”</li></ul></li></ul></li></ul></li><li>对财富的三种态度<ul><li>对金钱的喜爱 - 成果的积累</li><li>对挣钱的喜爱 - 获得的过程</li><li>对花钱的喜爱 - 成果的展现</li></ul></li><li>了解自己对财富的态度可以帮助自己更好地进行决策，也能获得更多快乐</li><li>叔本华对于财富的论述<ul><li>“人类天生就是热爱金钱，这种热爱是不可避免的”；</li><li>“财富就像海水，越多喝越渴 ……我们之所以不满，就是因为我们的欲求越来越多，期望越来越高，却总也无法企及，永远不能满足”；  </li><li>“只有金钱才有绝对意义上的‘好’，它并不只是满足某一特定的具象的需求，金钱甚至可以满足一切抽象的需求”。<h6 id="4-2-4-男女"><a href="#4-2-4-男女" class="headerlink" title="4-2-4 男女"></a>4-2-4 男女</h6></li></ul></li><li>背后<ul><li>基本上是生理驱动心理过程</li></ul></li><li>带来幸福满足感的家庭基础<ul><li>深厚感情</li><li>和谐性爱</li><li>足够物质条件</li></ul></li><li>婚姻与养育后代是消耗性过程<ul><li>没有足够感情基础和物质条件，经不起消耗</li></ul></li><li>了解以下方面有助于预判一个男性在追求功利过程中的心理活动与行为<ul><li>对异性的渴望程度</li><li>在性吸引下的自控成都</li><li>在道德层面的看法</li></ul></li><li>男女和功利追求几乎同源同类，但男人追求功利的博弈更隐蔽，追求男女时没法那么隐蔽，所以相对容易看出这个人的特质</li><li>英雄难过美人关，过关都靠降睾酮</li></ul><h5 id="4-3-人性"><a href="#4-3-人性" class="headerlink" title="4-3 人性"></a>4-3 人性</h5><ul><li>引言<ul><li>“人是政治的动物。“ —— 亚里士多德，《政治学》，公元前四世纪</li><li>“人是处于神与野兽之间，时而倾向一类，时而倾向另一类“。—— 普罗提诺，公元3世纪</li><li>关于人性的判断，在我们日常生活的决策中至关重要，因为我们的日常互动能否成功，就取决于它。——霍华德·卡亨，《生活中的逻辑学》，1971</li></ul></li><li>定义<ul><li>人性是人类本性，人类本质心理活动属性。大致可以理解为人类共有的心理活动特征<ul><li>如善恶，感觉，道德等</li></ul></li></ul></li><li>意义<ul><li>若能了解别人心理活动，基本能推断这个人行为的大致情况<ul><li>有人抉择依赖感性直觉</li><li>有人抉择依赖理性思考</li></ul></li><li>若能某种程度预判他人行为与想法，在功利相关活动中，可以部分做到得心应手</li><li>若能某种程度给他人灌输自己想法，结合预判，大概率可以做到庖丁解牛</li></ul></li><li>精于此道的人<ul><li>商人</li><li>官员/管理者</li><li>绿茶/花心男</li></ul></li><li>以上三类人与现实生活中财富、权力、男女之事相关。即处理现实生活需要洞悉人性。方法是熟悉人类在处理金钱、权力，男女之事的普遍心理活动</li></ul><h5 id="4-4-人格"><a href="#4-4-人格" class="headerlink" title="4-4 人格"></a>4-4 人格</h5><ul><li>定义<ul><li>人格是一个人一贯的行为方式和内部心理过程</li></ul></li><li>了解自己和他人人格的意义<ul><li>对日子能过好一些有重要意义，《人格心理学》中会提到<ul><li>如何科学应对焦虑</li><li>为什么社恐</li><li>人的性格分类</li><li>判断自己与他人性格类别</li><li>提高获取成就可能性的心理偏好</li><li>容易抑郁的消极认知风格和抑郁化信息加工方式</li><li>可以帮你解决“我是什么样”这个问题</li></ul></li><li>对自己越了解，越能友善与适当地对待自己<ul><li>这不是一个自然就具备的能力</li></ul></li><li>有助于预测不同性格的人在遇到某些情况下的反应<ul><li>尤其适用于职场对合适雇员的筛选</li></ul></li></ul></li><li>心理学流派的特质流派中，人格维度的分类：“大七”<ul><li>精神质</li><li>外向性</li><li>求新性</li><li>亲和性</li><li>尽责性</li><li>独特性</li><li>不道德性</li></ul></li><li>对市面上常见的人格心理测试的结果应持保留态度，其作用有限<ul><li>九型人格</li><li>MBTI</li></ul></li></ul><h3 id="五，第2类工具：思考工具。会提高学习和专业技能速度"><a href="#五，第2类工具：思考工具。会提高学习和专业技能速度" class="headerlink" title="五，第2类工具：思考工具。会提高学习和专业技能速度"></a>五，第2类工具：思考工具。会提高学习和专业技能速度</h3><blockquote><p>“批判性思维不是任凭各种诱惑的摆布，不是轻易受情感，贪欲，无关考虑，愚蠢偏见等的干扰。批判性思维的目标在于作出明智的决定，得出正确的结论。“ —— Brook Noel Moore, 《批判性思维》第10版，2012</p></blockquote><ul><li><p>评价一个人“水平很厉害”所涉及的能力</p><ul><li>思维能力 - 办事的基础<ul><li>思考，表达，学习，说服，判断与抉择的水平</li></ul></li><li>办实际的事情和结果很厉害</li></ul></li><li><p>任何决策都会涉及思维能力，所以思维能力的提升可以提高思维质量，“水平变厉害”</p></li><li><p>人的思维过程</p><ul><li>产生想法 - 创造性思维<ul><li>得到想法探索新问题</li><li>及时发现已存在问题</li><li>创造新方法解决问题</li><li>做出判断 形成结论 作出决定</li></ul></li><li>对想法进行判断 - 批判性思维<ul><li>检视和评价前一步得到的想法</li><li>想法的论证</li></ul></li><li>诀窍<ul><li>无论什么想法，都用通用办法来提升想法质量，从而提升决策水平和学习效率</li></ul></li></ul></li></ul><h4 id="创造性思维与批判性思维"><a href="#创造性思维与批判性思维" class="headerlink" title="创造性思维与批判性思维"></a>创造性思维与批判性思维</h4><h5 id="创造性思维"><a href="#创造性思维" class="headerlink" title="创造性思维"></a>创造性思维</h5><ul><li>定义<ul><li>不仅涉及创造全新的想法和东西</li><li>也涉及日常生活方方面面<ul><li>对于同样的工作，如何更高效地完成也是创造性思维的应用</li></ul></li></ul></li><li>如何得到新想法 - 《批判性思维》<ul><li>采用新思路</li><li>设计或修改程序制度</li><li>发明新产品与功能</li><li>现有事物找到新用途</li><li>改进现有事物</li><li>创造或重新定义概念</li></ul></li><li>创造步骤<ul><li>寻找挑战</li><li>表述问题/争议</li><li>调查问题/争议</li><li>产生想法<h5 id="批判性思维"><a href="#批判性思维" class="headerlink" title="批判性思维"></a>批判性思维</h5></li></ul></li><li>溯源<ul><li>检视人类想法的做法，最早能上溯到苏格拉底<ul><li>这种思维被苏格拉底的学生们，包括柏拉图，亚里士多德所传承</li></ul></li></ul></li><li>在各时代产生的成果<ul><li>国富论</li><li>资本论</li><li>进化论</li><li>独立宣言</li></ul></li><li>检验思维会用到逻辑的方法<ul><li>三段论演绎推理 - 2500 年前亚里士多德开始研究</li></ul></li><li>《思考的艺术》中改进问题解决方案的步骤<ul><li>落实细节</li><li>找出瑕疵<ul><li>书中列出了包括明确性、安全性、便利性、效率性、经济性在内的多种瑕疵</li></ul></li><li>做出改进</li></ul></li></ul><h4 id="有效推理"><a href="#有效推理" class="headerlink" title="有效推理"></a>有效推理</h4><ul><li>对于本节开头“诀窍”的完整论证<ul><li> “因为推理是解决问题的主要手段，而生活中处处充满了要解决的问题，所以生活中处处需要推理。如果生活中能够更多的解决问题，就提高了生活质量，而提高生活质量是我们都追求的。所以就有必要提高推理的水平”。</li></ul></li><li>没有掌握逻辑思维容易“被人牵着鼻子走”</li><li>《生活中的逻辑学》第十一章《新闻的运作》中提到的常见的新闻歪曲事实的方法<ul><li>故事可以渲染，也可以淡化</li><li>采用误导，耸人听闻或是导向性的标题</li><li>通过形象让新闻倾斜</li><li>后续报道可以被忽略，或者淡化</li><li>观点可以通过卡通或连环画传递</li></ul></li></ul><h4 id="甄别谬误"><a href="#甄别谬误" class="headerlink" title="甄别谬误"></a>甄别谬误</h4><blockquote><p>同谬误作斗争就是在于一切相信真理的人联合 。—— 卡莱尔，《论英雄、英雄崇拜和历史上的英雄事迹》，1841</p></blockquote><ul><li>迅速识别和你说话的人有没有基础逻辑思维能力。如果没有，干脆就不要争论。因为对方很可能出现非形式逻辑谬误。</li><li>例子<ul><li>妻子：你该打扫车库了</li><li>丈夫：什么？又打扫？难道我就应该天天打扫车库吗？<ul><li>歪曲对方意思</li><li>扩大所指范围</li></ul></li></ul></li></ul><h4 id="维度思考法（格局）"><a href="#维度思考法（格局）" class="headerlink" title="维度思考法（格局）"></a>维度思考法（格局）</h4><h5 id="高度-涉及相同事物结果的更大规模"><a href="#高度-涉及相同事物结果的更大规模" class="headerlink" title="高度 - 涉及相同事物结果的更大规模"></a>高度 - 涉及相同事物结果的更大规模</h5><ul><li>例子<ul><li>俗语，站在领导的位置思考</li><li>一个方法能够驱动的事情规模更大，更重要，惠及更多人，影响更深远</li></ul></li></ul><h5 id="广度-涉及相关事物的丰富度"><a href="#广度-涉及相关事物的丰富度" class="headerlink" title="广度 - 涉及相关事物的丰富度"></a>广度 - 涉及相关事物的丰富度</h5><ul><li>定义<ul><li>指视野宽度和事物有关元素的广度</li></ul></li><li>例子<ul><li>专家往往比局外人掌握更多信息，视野更广</li><li>医院会诊制度</li></ul></li></ul><h5 id="深度-涉及事物因果"><a href="#深度-涉及事物因果" class="headerlink" title="深度 - 涉及事物因果"></a>深度 - 涉及事物因果</h5><ul><li>例子<ul><li>bug 出现后要溯源，思考问题出现原因，尽量从源头解决</li></ul></li><li>思考诀窍<ul><li>多问为什么</li></ul></li></ul><h5 id="远度-涉及事物发展脉络"><a href="#远度-涉及事物发展脉络" class="headerlink" title="远度 - 涉及事物发展脉络"></a>远度 - 涉及事物发展脉络</h5><ul><li>即时间轴<ul><li>把近期，中期，远期三个时间点加入考量，问题就会更清晰</li></ul></li><li>例子<ul><li>君子报仇，十年不晚<ul><li>想到了棉花糖实验</li></ul></li></ul></li></ul><h5 id="灵活度-即多换位多迭代，使得结果鲁棒性高"><a href="#灵活度-即多换位多迭代，使得结果鲁棒性高" class="headerlink" title="灵活度 - 即多换位多迭代，使得结果鲁棒性高"></a>灵活度 - 即多换位多迭代，使得结果鲁棒性高</h5><ul><li><p>常用方法</p><ul><li>换位思考</li><li>不断在各种高度，宽度，远度来回跳跃思考</li></ul></li><li><p>评价标准</p></li><li><p>方案/想法的鲁棒性，适用性</p></li></ul><h3 id="六，第3类工具：目标规划和执行-。定目标和实现目标的办法"><a href="#六，第3类工具：目标规划和执行-。定目标和实现目标的办法" class="headerlink" title="六，第3类工具：目标规划和执行 。定目标和实现目标的办法"></a>六，第3类工具：目标规划和执行 。定目标和实现目标的办法</h3><blockquote><p>“理想与现实之间，动机与行为之间，总有一道阴影。” —— T·S·艾略特</p></blockquote><blockquote><p>“有了这些知识，最终你将用 &lt;哈利波特&gt;大结局那几个字来形容你的生活 —— ‘一切都好’(All is well ) “ —— 《动机心理学》，Edward Burkley，2018</p></blockquote><h4 id="6-1-目标设定"><a href="#6-1-目标设定" class="headerlink" title="6-1 目标设定"></a>6-1 目标设定</h4><ul><li><p>目标设定的作用</p><ul><li>确立正确的目标作为行动目的<ul><li>没有绝对的“正确”，不要想着一次就能达成全局最优解，充分发挥敏捷开发的思想，小步迭代——及时根据需要和情况调整目标</li></ul></li><li>靠规划出目标让人生有效率前行<ul><li>有些目标动机在潜意识中，自己没有发现，涉及自动动机（应该指的是内在动机？）</li><li>当自动动机并不是对实现功利目标最有效时，生活工作的结果也就不会令人满意</li></ul></li></ul></li><li><p>要设定好目标并达成，需要目标设定本身具备的几个特征</p><ul><li>1 行为 = 期望x价值。<ul><li>我们需要制定价值高一些，让人非常有期许的目标。</li><li>求其上者得其中</li></ul></li><li>2 目标的难度要设定适度，不能太容易，也不能太难。<ul><li>过去公司培训我经常用“时刻在离你能力之外一点点的距离挑战你的极限“。这是提升能力的最佳办法。《心流》中对最佳体验的描述也符合这个规律。</li></ul></li><li>3 大目标的实现要拆分成多个具体的小目标，最好有层次。<ul><li>和 top-down 的开发思想如出一辙，层层规划</li><li>比如减肥，可拆分为增加消耗和减少摄入2个子目标。增加消耗又可以分为每天步行10分钟和一周2次健身房。减少摄入是每周轻食3天和不喝含糖饮料。</li></ul></li><li>4 目标要足够具体，有衡量的量化标准</li><li>5 目标分为短期，中期和长期目标。循序渐进。</li><li>6 为实现目标想出多个办法和路径。</li><li>7 经常同时去想一下：目标实现后的好处。以及当前要实现目标需要的行动元素。靠心理比较来推动</li><li>8 最后，先让自己动起来。这是最重要的一步。</li></ul></li></ul><h4 id="6-2-目标执行实现"><a href="#6-2-目标执行实现" class="headerlink" title="6-2 目标执行实现"></a>6-2 目标执行实现</h4><ul><li><p>《动机心理学》“自我奋斗”一章中提到的帮助我们坚持朝目标前进的办法</p><ul><li>1）设立标准<ul><li>能够让我们感受当前进展和目标的差距。</li><li>这是一种无形的激励。</li><li>减肥者每周拍图，对比瘦下来的一点点痕迹，也是很大的动力。</li></ul></li><li>2）监控行为<ul><li>是建立一种机制，不断去监控我们完成目标的行动，是不是出现偏差。</li><li>比如测量每日步行的app。在每天提醒当天走路步数是不是达到了标准。</li></ul></li><li>3）自制力量<ul><li>延迟满足感，是牺牲短期回报，获取长期回报。</li><li>在完成减肥目标的过程里，都需要主动牺牲掉一时的口腹之欲。换取长期的形体健美身体健康。</li><li>棉花糖实验</li></ul></li></ul></li><li><p>自我损耗理论揭示了人的自控力每天只有固定一管</p><ul><li>除完全被动的睡觉休闲娱乐外，大部分需要自主完成的事情都消耗自控力，这样剩下用于完成目标的自控力就不多了</li><li>心理学家建议，当今天有完成目标的计划时<ul><li>尝试减少一部分自控力消耗</li><li>或多喝糖水（据说补充脑子，当然糖水漱口据说也可能管用）</li></ul></li></ul></li><li><p>最后还有提高自控的办法</p><ul><li>尽量与有共同目标的人在一起<ul><li>结伴减肥</li><li>让已付费的私教喊你</li></ul></li></ul></li></ul><h3 id="七，第4类工具：工作生活中做抉择、了解和洞悉他人的办法"><a href="#七，第4类工具：工作生活中做抉择、了解和洞悉他人的办法" class="headerlink" title="七，第4类工具：工作生活中做抉择、了解和洞悉他人的办法"></a>七，第4类工具：工作生活中做抉择、了解和洞悉他人的办法</h3><blockquote><p>“人们面临权衡取舍。”——曼昆，《经济学原理》第7版，2015</p></blockquote><blockquote><p>“就决策结果而言，乐观的偏见可以说是认知偏见中最显著的一个。因为乐观偏见可以是福气，也可以是冒险，假如你是个乐观的人，你应该即快乐又担心。” ——— 丹尼尔·卡纳曼，《快思慢想》，2011</p></blockquote><blockquote><p>“我们在日常生活中所做的99%的事情，是‘洗烫衣服类决策’。指必须完成，并没机会比别人完成得更好且没什么太大价值的事。而那些给生活带来巨大改变的事，比如决定结婚，生子，工作，或者投资一只价值翻了20倍的股票。也就是说，我们的生活是被为数不多的事情所掌握的。” ——拉夫·瓦格纳</p></blockquote><h4 id="7-1-决策流程方法"><a href="#7-1-决策流程方法" class="headerlink" title="7-1 决策流程方法"></a>7-1 决策流程方法</h4><ul><li>《决策的艺术》中关联决策的方法示意图<ul><li>关联决策往往是现实中最复杂的决策之一，意思是一系列决策结果会成为今后几年，后续决策的前提</li><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220703191234.png" alt="关联决策"></li></ul></li><li>《思考快与慢》<ul><li>主要说人的思考具有很大一部分非理性。</li><li>人有两套思维体系<ul><li>直觉快速的判断<ul><li>快速但容易被情境因素误导</li></ul></li><li>理性认真慢速思考</li><li>思维体系冲突的例子——长得不像但其实一样长的横线<ul><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220703191510.png" alt="思维体系冲突的例子"></li></ul></li></ul></li></ul></li></ul><h4 id="7-2-决策依据的质量"><a href="#7-2-决策依据的质量" class="headerlink" title="7-2 决策依据的质量"></a>7-2 决策依据的质量</h4><ul><li>决策依据越充足准确，就越能做出优良决定，想出更好办法</li><li>在相对熟练的决策技能下，错误决策往往因为决策依据出了意想不到的问题</li><li>一件与自己切身利益与发展有关的事，需要<ul><li><ol><li>非常清晰事情到底是怎么样的。</li></ol><ul><li>也就是了解事情本质。</li><li>需要第二类工具</li></ul></li><li><ol start="2"><li>对事情所处人群的环境有深刻的理解。</li></ol><ul><li>比如同事或股东间，部门内，部门间，下属与领导，单位之间等</li><li>需要第一类工具</li></ul></li><li><ol start="3"><li>对相关人的想法，有比较靠谱的判断。</li></ol><ul><li>博弈论与想法洞察</li></ul></li></ul></li></ul><h4 id="7-3-理解与洞悉"><a href="#7-3-理解与洞悉" class="headerlink" title="7-3 理解与洞悉"></a>7-3 理解与洞悉</h4><ul><li>竞争社会中，人与人的能量等级分类<ul><li>专业技能</li><li>思维与实践能力</li><li>理解与洞悉他人想法能力</li></ul></li><li>大概有几个角度可以帮助我们提高理解与洞悉他人想法能力<ul><li>1， 掌握社会与人的知识。具备逻辑思维能力。</li><li>2， 对人普遍的社会行为心理机制熟悉，对决策心理熟悉。</li><li>3， 亲密关系中他人想法的预判，要熟悉一般人在两性关系中的心理活动。</li><li>4， 权力相关的，必须深入理解中国社会运转的规则，中国小农经济的差序格局，权力组成结构，官僚体系，社会治理核心逻辑等。</li><li>如果身边有个精于此道老谋深算的人可以学习。这个过程会更快。</li></ul></li></ul><h4 id="7-4-理解与洞悉方法建议"><a href="#7-4-理解与洞悉方法建议" class="headerlink" title="7-4 理解与洞悉方法建议"></a>7-4 理解与洞悉方法建议</h4><ul><li>建议每个人找到适合自己的方法论<ul><li>正面 —— 降低合作与交易成本</li><li>反面 —— 采取对自己最优的博弈策略（避免吃亏）</li></ul></li><li>给到的建议<ul><li>1， 明确对方在这件事中的角色和利害关系，以及人际关系</li><li>2， 尽量获取个人信息。<ul><li>从家庭背景，成长经历，教育背景，工作经验，个人爱好特长，喜好，三观，习惯等。越多越好。</li></ul></li><li>3， 分析出人格属性和社会心理属性。全面了解其个性与习性。</li><li>4， 透彻了解对方诉求。<ul><li>无非几种诉求的混合。利益诉求，权力诉求，功能诉求或者感情诉求。</li></ul></li><li>5， 用第一类和第二类工具分析以上信息，作为决策依据。再使用决策方法进行决策，进行利害取舍。</li></ul></li></ul><h3 id="八，第5类工具：处理关系的方法。包括亲密关系和功利关系"><a href="#八，第5类工具：处理关系的方法。包括亲密关系和功利关系" class="headerlink" title="八，第5类工具：处理关系的方法。包括亲密关系和功利关系"></a>八，第5类工具：处理关系的方法。包括亲密关系和功利关系</h3><blockquote><p>“齐景公问政于孔子。孔子对日:“君君，臣臣，父父，子子”， 《论语·颜渊》，孔子，春秋战国</p></blockquote><blockquote><p>“这就是你的爱情策略。享受激情，但不要把它们作为维持爱情关系的基础。培养与爱人之间的友谊。努力保持新鲜感；把握每一个与配偶共同进行新奇探索的机会…“ — Rowland S. Miller, 《亲密关系》第6版，2015</p></blockquote><h4 id="1-亲密关系"><a href="#1-亲密关系" class="headerlink" title="1 亲密关系"></a>1 亲密关系</h4><ul><li>大多数人对亲密关系的理解源自家庭</li><li>亲密关系可以从心理学途径学习，也需要练习维护</li><li>找到合适的对象，经营好恋爱关系与婚姻关系，是重要的人生工程，也是人生里最难的事之一</li></ul><h5 id="以爱之名"><a href="#以爱之名" class="headerlink" title="以爱之名"></a>以爱之名</h5><ul><li><p>《亲密关系》</p><ul><li>爱情三角论，爱情由以下三部分构成，三条边的长短组成了不同的爱情形态<ul><li>亲密</li><li>激情</li><li>承诺</li></ul></li><li>并对爱情能否持久给出了自己的答案。</li><li>书中对嫉妒，谎言与背叛都有详尽分析和体贴的应对建议。</li><li>对亲密关系间如何沟通，冲突的应对，权力和暴力，克服亲密关系解体，关系维持和修复，都有大量详细的论述。</li><li>书中还完美的回答了为什么存在痛苦而又依赖的关系。<ul><li>一个人对关系的依赖同时取决于对关系的满意度和可替代度。如果自己不满意，但没有更好的替代，打破依赖很难承受，于是就出现了痛苦但又依赖的关系。</li></ul></li><li>如果大家现实中存在自己依赖的亲密关系，但是又带来困扰和伤害，那么这一章能够彻底解决你的困惑。</li></ul></li><li><p>《进化心理学》</p><ul><li>使用进化论和生物进化解释大量跨文化的人类心理喜好倾向<ul><li>男女长期择偶心理机制和规律</li><li>为什么男性大多喜欢腰臀比小的女性</li><li>某社群中大众觉得好看的脸具备的特征</li></ul></li><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220703193210.png" alt="女性长期择偶策略"></li></ul></li><li><p>《少有人走的路》(第一卷）分析了成熟心智的重要性，以及对“爱”的不同角度解读。</p></li><li><p>《家庭婚姻社会学》分析人类谈恋爱，结婚，离婚，再婚，家暴，老年婚姻等各个环节。</p></li><li><p>《性学入门》从生理和心理各方面解释了性爱。</p><ul><li>《亲密关系》中虽然有专门章节介绍，但李银河作为中国知名女性问题，婚姻问题专家，她的书更接我们国内文化的地气。</li></ul></li></ul><h5 id="原生家庭"><a href="#原生家庭" class="headerlink" title="原生家庭"></a>原生家庭</h5><ul><li>原生家庭影响着一个人的生活习惯，饮食习惯，性格的养成，价值观的形成，以及对婚姻观的态度等。</li><li>可以关注一些心理学公众号<ul><li>武志红</li><li>壹心理</li><li>徐慢慢心里话</li></ul></li></ul><h4 id="2-功利关系"><a href="#2-功利关系" class="headerlink" title="2 功利关系"></a>2 功利关系</h4><ul><li><p>工作的几种选择，都要和别人建立功利关系</p><ul><li>进单位 - 上下级</li><li>自由职业 - 甲乙方</li><li>创业 - 合伙人/客户/政府或其他组织的权力与利益相关人</li></ul></li><li><p>核心是信任基础上的利益权力资源交换</p></li><li><p>中国关系社会从过去宗族社会演变至今的格局</p><ul><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220703194540.png" alt="功利关系格局"></li><li>每个人都以自身为中心，向外围绕几个圈层<ul><li>每个圈层的法则秩序不同</li></ul></li></ul></li><li><p>如何不让关系成为自己发展的阻碍</p><ul><li>例子<ul><li>很多青年人都会有这么一个想法：“领导是傻x”。这里把领导换成“同事”或者“公司”也都行。毕竟我们学校毕业后唯一接触的社会环境就是单位职场。发生关系的也就是同事领导。这些人都是陌生人，你与他们是纯粹的功利关系。</li></ul></li><li>应对方法论<ul><li>从权力角度分析<ul><li>你所在组织是政府/国企/事业/体制内，还是私人企业/外企。组织内部特征是什么？<ul><li>比如是国企/体制内，这种组织运转规则是权力博弈。<ul><li>国企以政治权力和国家暴力机器做基础，来进行生产与经济活动。</li><li>组织内部规则肯定是政治权力主导。</li><li>员工要有一定工作专业能力，更重要能够在官僚/管理权力体系中审时度势站好山头，拉裙带关系，获取政治资源。</li><li>因为员工最终的发展是政治发展。</li><li>专业人员是工具人。</li><li>分配权力与利益的人是政治领导。虽然和领导一起干活难度因人而异。</li><li>但总得让领导把自己当“自己人“才有可能更好发展。</li><li>开拓和处理关系能力是关键。</li></ul></li></ul></li></ul></li><li>从金钱角度分析<ul><li>私企相对更简单一些。<ul><li>公司唯一目的是赚钱。</li><li>自由市场私人企业要活着发展，要看收入业绩，对专业人才依赖性很强。</li><li>专业能力为主，政治能力为辅。</li><li>领导是傻x，也许你专业上就是个傻x不自知。</li><li>或者他专业傻x，你比他给公司创造价值的能力确实强。</li><li>在专业为主政治为辅的环境下，专业够强，假以时日你取有出头之日可能性较大。</li><li>在哪个公司获取利益不重要。总能找到。</li><li>注意是给公司创造价值的能力强。不是某个技能强。</li><li>区分这两点很重要。</li><li>专业与管理技能的提升是关键。人际关系不绊脚就行。</li></ul></li></ul></li><li>从人性角度分析<ul><li>体制内领导的目标也是更高的权力。<ul><li>他需要政绩。</li></ul></li><li>私企领导要业绩。<ul><li>这样才能晋升和更多奖金。他们貌似傻x（其实不一定）的所有行径，目标都很明确。</li></ul></li></ul></li><li>所以领导是傻x，因为你没有被纳入领导获取自身利益博弈的棋子库。甚至成了绊脚石。就这么简单。<ul><li>他本人傻x与否并不关键。要让自己成为他工具（合伙）一起获取权力或利益。</li></ul></li><li>如果做不到。赶紧换环境。<ul><li>因为如果他确实傻x，没法带你升迁又过度压榨你，只能换领导。</li><li>如果他不傻x，你是绊脚石，也赶紧走。</li><li>如果迫于形式没法走，那就为下一步做准备。尽量降低领导傻x对你发展的影响。<ul><li>比如过去我的很多同事受不了另外一个部门的头，很不愉快，成批的离职。很多人后来做了自由职业者，或者自己创业。在工作和生活上都好了起来。</li></ul></li></ul></li></ul></li><li>从前述权钱人性角度分析，你和那种不做具体业务专门管人的领导，就是羊与牧羊犬的关系。<ul><li>专业做事的员工看管理者很容易特别傻x。<ul><li>类似要被割毛的羊看牧养狗，肯定不顺眼。</li><li>但狗才是主人最宠幸的好伴侣。</li><li>羊不好好吃草少割两斤毛，损失金钱是百十来块。</li><li>狗不好好干活一丢就是丢好几只羊。损失好几万块。</li><li>而且狗还会舔主人脚。</li></ul></li><li>大私企里也会存在很强的政治斗争氛围。但最终权力的基础是股东会，这不像体制内。<ul><li>能够给公司创造价值的能力是底层能力。<ul><li>前者要关注自由市场经济原理。</li></ul></li><li>类似能够给领导博取政绩的能力是体制内底层能力一样。<ul><li>后者要关注中国儒家权力意识形态传统。</li></ul></li></ul></li></ul></li></ul></li><li><p>至于功利社会关系里的男女关系。</p><ul><li>本质是一种资源兑换。</li></ul></li><li><p>唯一需要注意的是不要因为没有发现领导/同事在单位的亲密关系而误触雷区…… </p><ul><li>遇到这种道德瑕疵巨大的人，一定要小心。</li></ul></li></ul><h3 id="九，第6类工具：抵抗挫折，照顾自己心灵"><a href="#九，第6类工具：抵抗挫折，照顾自己心灵" class="headerlink" title="九，第6类工具：抵抗挫折，照顾自己心灵."></a>九，第6类工具：抵抗挫折，照顾自己心灵.</h3><blockquote><p>“人有悲欢离合，月有阴晴圆缺，此事古难全。但愿人长久，千里共婵娟。” —— 苏轼，《水调歌头·明月几时有》，1076</p></blockquote><h4 id="1-研究自己"><a href="#1-研究自己" class="headerlink" title="1 研究自己"></a>1 研究自己</h4><blockquote><p>人生最困难的事情是认识自己。——泰勒斯，科学与哲学之父，公元前6世纪</p></blockquote><blockquote><p>认识自己，方能认识人生。——苏格拉底，公元前4世纪</p></blockquote><ul><li><p>意义</p><ul><li>最终我们活得怎么样，只有我们自己感知得最清晰。所有好和不好的，也主要由自己承担。</li><li>对自己认识的越明白，越有可能在困境时帮助自己找到办法，保护心智和情绪。</li><li>另一个巨大作用是，把自己研究得明白一些，容易找到自我。</li></ul></li><li><p>社会心理学研究表明，人往往了解他人比了解自己要容易</p></li><li><p>认识自己最大的用处，可能并不是针对外界。而是对自己的关怀与安抚。</p></li><li><p>一些借助研究自己，灌溉心灵的方法</p><ul><li>1）毫不犹豫地接纳自己<ul><li>搞清自己的性格，特性，心理习惯</li><li>肯定自己的所有性格与特性</li><li>性格与心理特征没有好坏</li><li>性格与人格很难改变，有时候没必要试图改变自己<ul><li>关注行为的缺陷和具体事情的错误，或者道德缺陷即可</li><li>不要关注个性和人格</li></ul></li><li>鉴定自我认知，可以帮你抵御侵略性的强势权力控制和 PUA</li><li>别等到抑郁的时候再去研究自己</li><li>社会上的商业化人格测试只能起到小部分参考作用</li></ul></li><li>2）从道德观，价值观，和人生观研究自己<ul><li>经常考虑一些挂念和标准的问题，有助于我们在社会生存得舒适些<ul><li>自己的自私自利程度？</li><li>对同一件事情的看法为何与别人有分歧？</li><li>对一件事，自己的决策为何与别人不同，优劣如何？</li><li>决策取舍的标准是什么？</li><li>自己觉得最舒适的度过人生的状态？</li><li>一直这么过也会舒适吗？</li><li>我能一直保持现在满意的状态吗？</li></ul></li><li>对欲望的自制力也非常重要</li><li>修养，得撞墙</li></ul></li><li>3）原生家庭<ul><li>很多思维习惯和性格形成自原生家庭</li><li>根据儿时记忆，慢慢寻找家庭铸就你心灵的某些拼图</li></ul></li></ul></li></ul><h4 id="2-自信"><a href="#2-自信" class="headerlink" title="2 自信"></a>2 自信</h4><blockquote><p>“男人为什么明明看起来都那么普通，却还那么自信。” ——杨笠，脱口秀演员</p></blockquote><ul><li><p>社会心理学对“自我”的研究，表明健康心理的人， 对自我评价都在平均值之上。</p><ul><li>也就是大部分人都认为自己好过大部分人。</li><li>只有抑郁状态的人才会比心理健康的人更客观评价自己。</li><li>也有心理学研究表明女性自我评价比男性普遍要低，底层是进化心理学机制</li></ul></li><li><p>自信的概念</p><ul><li>在几乎没有具体根据的基础上，对自己的一种相信，需要勇气</li><li>能力已经被结果证明后，这个时候的“信心”只能说是一种对事实的认知。这种“信心”的精神力不足。</li><li>只有在尝试未知事情的时候，依然相信自己能够达成理想结果。才是真正的自信。<ul><li>“自己相信自己”，和“已经被结果证明的能力” ，这是两个概念。</li><li>后者可以逐步培养起前者。</li><li>但更多的人来自于原生家庭对自信培养的潜移默化。</li><li>所以在主流中国家庭的负面教育环境下，多数人很难有真正的自信。</li></ul></li><li>自信是从孩童时代，由父母灌注的。<ul><li>天生获得的优势（颜值，身高，IQ，出身）也会起到作用。</li><li>如果在负面教育环境成长，性格很容易在自卑和自负之间来回打转。</li><li>而只有天生的优势没有后天能力的依托，也很容易栽入低自尊境地。</li></ul></li></ul></li><li><p>成年人培养自信，只能从两个方面。</p><ul><li>一个是不断增长且被证明的能力。</li><li>一个是变得勇敢一点。</li><li>归根结底，还是靠不断证明的能力。<ul><li>这个过程很难很漫长。而且这种自信基础很弱。</li><li>基础不牢，稍微碰到能力比自己强的，又会回到过去那个低自尊无自信的自己。</li><li>这也是现在中国原生家庭心理解说如此盛行的原因之一。只批评少表扬的教育方式毁掉一代又一代孩子的自信。</li></ul></li></ul></li><li><p>为什么会这样，和中国讲究谦虚的集体主义传统文化有关。</p><ul><li>为什么有这种文化，又可以追溯到农耕经济和宗族文化，儒家文化，地缘与经济政治历史方面。</li><li>有兴趣的，费孝通，秦晖的书可以找来看看。</li></ul><h4 id="3-情绪自我安抚"><a href="#3-情绪自我安抚" class="headerlink" title="3 情绪自我安抚"></a>3 情绪自我安抚</h4></li><li><p>你的情绪都是正当的！</p></li><li><p>反观/分析/消解情绪的几种办法</p><ul><li>情绪正当性</li><li>抽离第三者旁观法</li><li>转换注意力法</li><li>理性逻辑思辨方法</li><li>运动</li></ul></li><li><p>一种应对负面情绪的简单办法</p><ul><li>1， 负面情绪突如其来的时候，先顺其自然。<ul><li>赶紧找个别人听不见看不到的地方，或者不影响他人的情况下，想骂就骂，想哭就哭。</li><li>注意不要当着其他人，尤其是相关人面前辱骂哭泣丧失控制。</li></ul></li><li>2， 如果有能力，一边宣泄情绪，一边想着一个自己的分身。站在旁边看着自己。<ul><li>只用看着就行。</li><li>如果还有能力，可以想想这些情绪是从哪里来的。</li></ul></li><li>3， 平静一点后，尽量先不去想具体事。尤其是导致负面情绪的事。<ul><li>想办法去吃点好吃的。</li><li>或者先去找个平时喜欢的运动，活动若干小时。</li><li>反正找点轻松喜欢做的事。</li><li>如果条件不允许，也可以带薪上厕所看会手机。</li><li>别让自己闲着。</li></ul></li><li>4， 过半天，最好一天，再去思考。<ul><li>如果事情紧急，则立刻投入具体事情中。</li><li>不管怎样，从情绪到思考，中间一定要给自己几个小时时间，做点别的。</li></ul></li><li>5， 使用前第一和第二类工具，从各个角度分析事情。<ul><li>注意分析的时候要尽量摆脱情绪。</li><li>实在摆脱不了，就可以先放放。</li></ul></li><li>6， 有情绪，冲动的时候，千万不要做任何决定。也不要和当事人说任何话！<ul><li>如果前 5条都做不到，做到第6条就好。</li></ul></li><li>7， 靠谱的心理咨询和心理治疗是非常管用的。<ul><li>但是找到很职业的心理咨询师很难。</li><li>中国对抑郁症和心理健康开始重视。大学都配备心理咨询服务。</li><li>发现自己不对劲，一定要想办法找到靠谱心理辅导与帮助。</li></ul></li></ul></li></ul><h4 id="4-应对焦虑与压力的具体方法"><a href="#4-应对焦虑与压力的具体方法" class="headerlink" title="4 应对焦虑与压力的具体方法"></a>4 应对焦虑与压力的具体方法</h4><ul><li><p>《人格心理学》中应对焦虑的方法</p><ul><li>主动的问題中心策略：  <ul><li>我尽可能多地获取到相关情况的信息。  </li><li>我制订了一个行动计划。  </li><li>我考虑了各种可供选择的办法，并权衡了利弊。  </li><li>我与一些有类似经历的人商量，  </li><li>我努力让事情好转。  </li><li>我向一些知道得比我多的人寻求帮助。  </li><li>我留出时间来解决这个问题。</li></ul></li><li>主动的情绪中心策咯：  <ul><li>我和朋友们讨论自己的情绪。  </li><li>我思考怎样从经验中吸取教训。  </li><li>我接受所发生的一切，并继续生活。  </li><li>我努力正确地看待事情。  </li><li>我努力寻求一线希望。  </li><li>我从宗教中寻求安慰。  </li><li>我向专业咨询师倾诉我的情感。</li></ul></li><li>回避策略：  <ul><li>我努力不去想这个问题。  </li><li>我假装问题并不存在。  </li><li>我喝酒或者服麻醉药使自己感觉好些，  </li><li>我努力把自己的注意力转移到其他活动上  </li><li>我回避那些让我想起烦恼的人和场景。  </li><li>我睡得比平时多。  </li><li>我拒绝承认问题的发生。</li></ul></li></ul></li><li><p>一般而言采用主动策略想对更好一点。</p><ul><li>回避策略虽然也有用，就是时效较短，有时候负面作用会更大。</li></ul></li><li><p>主动的问题中心策略和情绪中心策略，要针对不同性格和不同问题。</p><ul><li>一种没用就换一种</li></ul></li></ul><h4 id="5-通过目标给生活带来意义"><a href="#5-通过目标给生活带来意义" class="headerlink" title="5 通过目标给生活带来意义"></a>5 通过目标给生活带来意义</h4><ul><li><p>人生关键时刻，帮助你撑下来的是平时积累的精神能力</p><ul><li>增加精神能力的最大方法，是给自己的生活设立一些目标<ul><li>任何目标都可以</li></ul></li><li>如果暂时找不到目标，就把寻找目标作为目标</li></ul></li><li><p>目标最好是内部动机驱动的理论（SDT 自决理论）</p><ul><li>即不靠外界奖励元素推动的目标</li></ul></li><li><p>一个人若只有外部动机目标，人生会很痛苦</p></li><li><p>使用第三类工具的目标规划，让自己人生充实起来。</p><ul><li>不要在意别人的价值评判。</li><li>你只要有目标，它就是好的。</li><li>这里的关键在于，并不是目标本身有意义。而是目标制定和执行过程带来意义。</li></ul></li><li><p>值得一看</p><ul><li>《心流》</li><li>《少有人走的路》</li></ul></li></ul><h4 id="6-找到业余爱好"><a href="#6-找到业余爱好" class="headerlink" title="6 找到业余爱好"></a>6 找到业余爱好</h4><ul><li>业余爱好就是人生润滑剂</li><li>对于爱好的建议<ul><li>好的爱好追求的是心流<ul><li>持续挑战</li><li>能力与挑战动态匹配</li><li>全神贯注知行合一</li><li>忘我</li><li>时间流逝加速感</li></ul></li></ul></li><li>爱好分类<ul><li>主动爱好<ul><li>参与创造</li></ul></li><li>被动爱好<ul><li>作为观众，欣赏</li></ul></li></ul></li><li>找到能长久的爱好是重要的事，最好当成人生计划里不可缺少的目标来执行</li></ul><h4 id="7-规避习得性无助，了解抑郁的认知习惯"><a href="#7-规避习得性无助，了解抑郁的认知习惯" class="headerlink" title="7 规避习得性无助，了解抑郁的认知习惯"></a>7 规避习得性无助，了解抑郁的认知习惯</h4><h5 id="1）习得性无助"><a href="#1）习得性无助" class="headerlink" title="1）习得性无助"></a>1）习得性无助</h5><ul><li><p>定义</p><ul><li>人生某阶段，因相同原因反复碰到类似挫折，进而发展到对整个生活，工作和自我的否定</li><li>是生活打击让我们学习到的一种无助（丧失控制感）</li></ul></li><li><p>面对</p><ul><li>首先这是因为骂你的人傻x。但这个不重要。因为这类傻x到处都是。你无法规避。</li><li>其次是我们要积极采取措施。这个是最重要的。<ul><li>这个措施就是及时发现这种状态。</li><li>面对任何一个特定的打击后，要提醒自己这只是生活中一个局部。</li><li>这个傻x，和这件事，都无法否定你的全部。<ul><li>大不了走人不干了。或者及时补救。</li></ul></li></ul></li><li>如果无法补救，不能控制这件具体的事。就往前看。<ul><li>及时寻找到一件自己完全可控，会取得成就的事上。</li><li>哪怕是很小的事也可以。</li><li>用其他一件事的成就，来抵消这件事的负面影响。不要陷入对一切都完全无助的感觉。</li></ul></li></ul></li></ul><h5 id="2）抑郁的认知习惯"><a href="#2）抑郁的认知习惯" class="headerlink" title="2）抑郁的认知习惯"></a>2）抑郁的认知习惯</h5><ul><li>抑郁者心理的三种特征<ul><li>对自己的消极思维</li><li>对未来的悲观态度</li><li>以消极方式解释当前经历</li></ul></li><li>发现了端倪，及时找心理咨询师</li></ul><h4 id="8-利用前两类工具规避焦虑与抑郁状态"><a href="#8-利用前两类工具规避焦虑与抑郁状态" class="headerlink" title="8 利用前两类工具规避焦虑与抑郁状态"></a>8 利用前两类工具规避焦虑与抑郁状态</h4><ul><li>工作和生活中很多不如意之事，如果利用正确的逻辑思维，进行分析推理和判断。理解了内在逻辑，反倒心情容易看开。</li><li>理性情绪疗法的理论认为，错误的推理会导致不必要的焦虑。类似一个基于现实条件前提的无效三段论论证。而如果能够打破无效推理，则可以打破一些心结。</li></ul><h4 id="9-锻炼意识，锻炼身体"><a href="#9-锻炼意识，锻炼身体" class="headerlink" title="9 锻炼意识，锻炼身体"></a>9 锻炼意识，锻炼身体</h4><ul><li>最好的是：身、心一起锻炼。</li></ul><h3 id="十，工具使用的建议"><a href="#十，工具使用的建议" class="headerlink" title="十，工具使用的建议"></a>十，工具使用的建议</h3><ul><li><p>无论你当前处于什么时期，碰到什么挫折和困难。建议按照一定的次序去使用工具。</p></li><li><p>1， 使用目标规划的工具。</p><ul><li>明确长期目标，分解为短期目标。形成目标结构。</li></ul></li><li><p>2， 尽快能够打牢基础，学会逻辑思维。</p><ul><li>了解对功利，人性，与社会的必要认知。</li></ul></li><li><p>3， 使用决策工具，确定时间和精力的投入。</p><ul><li>找到可选项，做工作与生活必要的抉择。</li></ul></li><li><p>4， 进入目标实现阶段，利用“目标”，“监控”与自我约束力量来尽量达到近期，中期以及远期目标。</p><ul><li>并且在某个阶段，利用批判性思维手段，及时分析和调整明显发生问题的目标。</li></ul></li><li><p>5， 任何时候，如果你需要处理亲密关系，在学习《亲密关系》，《婚姻心理学》的基础上，尽快成熟心智，尝试调整自己沟通亲密关系的方式。</p></li><li><p>6， 当有了一定闲余精力，开始深入研究自己。</p><ul><li>以便为下一阶段提升生活，和抵抗挫折做准备。</li></ul></li></ul><h3 id="文中推荐阅读的书籍"><a href="#文中推荐阅读的书籍" class="headerlink" title="文中推荐阅读的书籍"></a>文中推荐阅读的书籍</h3><ul><li><p>四，第1类：社会和人的知识经验</p><ul><li>《原则 - 工作与生活》，瑞·达里奥</li><li>4-2 社会脉络<ul><li>4-2-2 权利<ul><li>《兴盛与危机》，金观涛<ul><li>讲述中国长程社会结构，权术是功利核心追求，从两千多年前秦延续至今</li></ul></li><li>《政治学》</li><li>《政治心理学》</li></ul></li><li>4-2-3 财富<ul><li>《经济学原理》</li><li>《行为经济学》</li></ul></li><li>4-2-4 男女<ul><li>《进化心理学》</li><li>《亲密关系》</li><li>《社会心理学》</li><li>《情爱关系中的选择》</li><li>《社会学》</li><li>《婚姻心理学》</li></ul></li></ul></li><li>4-3 人性<ul><li>《社会心理学》</li><li>《社会学》</li></ul></li><li>4-4 人格<ul><li>《人格心理学》</li></ul></li></ul></li><li><p>五，第2类：提升思维质量的工具</p><ul><li>《批判性思维》，Brook Noel Moore</li><li>创造性思维与批判性思维<ul><li>《思考的艺术》</li></ul></li><li>有效推理<ul><li>《生活中的逻辑学》</li><li>《批判性思维工具》</li></ul></li><li>甄别谬误<ul><li>《逻辑模型》</li><li>《金字塔原型》一书的总结</li></ul></li></ul></li><li><p>六，第3类：目标规划</p><ul><li>6-1 目标设定<ul><li>《心流》</li></ul></li><li>6-2 目标执行实现<ul><li>《动机心理学》</li></ul></li></ul></li><li><p>七，第4类：决策的方法</p><ul><li>7-1 决策流程方法<ul><li>《决策的艺术》</li><li>《思考，快与慢》</li></ul></li></ul></li><li><p>八，第5类：处理关系</p><ul><li>1 亲密关系<ul><li>《社会心理学》</li><li>以爱为名<ul><li>《亲密关系》，罗兰米勒<ul><li>彻底分析了人之间所有亲密关系的规律和维护的建议</li></ul></li><li>《进化心理学》<ul><li>使用进化论和生物进化解释了大量跨文化的人类心理细好倾向</li></ul></li><li>《少有人走的路》(第一卷）<ul><li>分析了成熟心智的重要性，以及对“爱”的不同角度解读。</li></ul></li><li>《家庭婚姻社会学》<ul><li>分析人类谈恋爱，结婚，离婚，再婚，家暴，老年婚姻等各个环节。</li></ul></li><li>《性学入门》<ul><li>从生理和心理各方面解释了性爱。《亲密关系》中虽然有专门章节介绍，但李银河作为中国知名女性问题，婚姻问题专家，她的书更接我们国内文化的地气。</li></ul></li></ul></li></ul></li><li>2 功利关系<ul><li>《乡土中国》，费孝通<ul><li>可以对中国特色的关系社会有快速全面的认知</li><li>但有两篇台湾清华大学社会学教授罗家德的论述，可能更加通俗易懂。</li></ul></li><li>《中国人的心理》，杨国枢</li><li>《人情与面子 ——中国人的权利游戏》，黄光国<ul><li>台湾是做本土心理学研究比较早的。另外提一句黄光国也是《自卑与超越》的译者。</li></ul></li><li>中国社会与权利形态的参考<ul><li>《潜规则》</li><li>《血酬定律》</li><li>《兴盛与危机》</li><li>《开放中的变迁》</li><li>《乡土中国》</li><li>《中国近代史》（台，徐中约,未删节）</li><li>《中国近代思想史》（李泽厚）</li><li>《中国现代思想史》</li></ul></li></ul></li></ul></li><li><p>九，第6类：抵抗挫折和照顾自己心灵</p><ul><li>1 研究自己<ul><li>1）毫不犹豫地接纳自己<ul><li>《自我》<ul><li>社会学精品译丛系列</li></ul></li></ul></li></ul></li><li>3 情绪自我安抚<ul><li>《情商》</li></ul></li><li>4 应对焦虑与压力的具体方法<ul><li>《人格心理学》</li></ul></li><li>5 通过目标给生活带来意义<ul><li>《心流》</li><li>《少有人走的路》</li></ul></li><li>8 利用前两类工具规避焦虑与抑郁状态<ul><li>《人格心理学》</li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Learning Notes </tag>
            
            <tag> Life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220622 - Building Narrative Games with Yarn Spinner</title>
      <link href="2022/06/22/20220622-gdc-yarnspinner/"/>
      <url>2022/06/22/20220622-gdc-yarnspinner/</url>
      
        <content type="html"><![CDATA[<h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><ul><li>Youtube 链接<br><a href="https://www.youtube.com/watch?v=549J0eHE88k&list=PL2e4mYbwSTbbjN6TTMo6toJfByWpKvEDH&index=10">Building Narrative Games with Yarn Spinner</a></li></ul><h2 id="工具介绍"><a href="#工具介绍" class="headerlink" title="工具介绍"></a>工具介绍</h2><p> ### DIALOGUE TOOLS<br> - Twine<br> - Ink<br> - Fungus<br> - Yarn Spinner<br> - Others/DIY</p><h3 id="Comparison-of-tools"><a href="#Comparison-of-tools" class="headerlink" title="Comparison of tools"></a>Comparison of tools</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220618131901.png"></p><ul><li>Twine<ul><li>很容易上手</li><li>但不容易扩展（只适用于小文本/轻叙事）</li></ul></li><li>Yarn Spinner<ul><li>介于二者之间</li><li>也易于上手</li><li>也具有较好扩展性</li></ul></li><li>Ink<ul><li>难于上手</li><li>高扩展性、多特性</li></ul></li></ul><h3 id="why-yarn-spinner"><a href="#why-yarn-spinner" class="headerlink" title="why yarn spinner"></a>why yarn spinner</h3><ul><li>用于对话的脚本语言</li><li>就像写剧本一样，有场景和演员提示</li><li>容易写多分支剧情线</li><li>一开始是为《林中之夜》（Night in the Woods）构建的</li><li>被用于多个游戏</li></ul><h2 id="how-to-use"><a href="#how-to-use" class="headerlink" title="how to use"></a>how to use</h2><h3 id="make-a-visual-novel"><a href="#make-a-visual-novel" class="headerlink" title="make a visual novel"></a>make a visual novel</h3><ul><li><p>什么是 visual novel</p><ul><li>常用于动画游戏、约会模拟、类 RPG 游戏</li><li>用于主要机制是基于对话/选择的游戏类型</li><li>十分适合用 yarn spinner 构建</li></ul></li><li><p>特点</p><ul><li>管理资源</li><li>构建场景</li><li>没有物理或移动</li></ul></li></ul><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><h3 id="前置介绍"><a href="#前置介绍" class="headerlink" title="前置介绍"></a>前置介绍</h3><h4 id="goals"><a href="#goals" class="headerlink" title="goals"></a>goals</h4><ul><li>做一个小型 sci-fi 游戏</li><li>在 unity 配合使用 Yarn Spinner</li><li>在 vs code 里面编辑</li></ul><h4 id="已有素材"><a href="#已有素材" class="headerlink" title="已有素材"></a>已有素材</h4><ul><li><p>简单场景</p></li><li><p>3 个人物模型</p></li><li><p>一些纹理和动画</p></li><li><p>素材来源</p><ul><li>kenney.nl</li><li>github.com/thesecretlab/SpaceJourney</li></ul></li></ul><h4 id="任务清单"><a href="#任务清单" class="headerlink" title="任务清单"></a>任务清单</h4><ul><li>下载安装 yarn spinner</li><li>创建基本的 yarn 脚本并 hook it up</li><li>构建故事结构和逻辑</li><li>设置场景中的多个角色和地点</li><li>润色</li><li>用最终的故事来替代对话框里的内容</li></ul><h4 id="主要会涉及到的内容"><a href="#主要会涉及到的内容" class="headerlink" title="主要会涉及到的内容"></a>主要会涉及到的内容</h4><ul><li>分支对话</li><li>基于变量的选项</li><li>相机、角色和转场的自定义需求</li></ul><h3 id="开始动手"><a href="#开始动手" class="headerlink" title="开始动手"></a>开始动手</h3><h4 id="下载安装-yarn-spinner"><a href="#下载安装-yarn-spinner" class="headerlink" title="下载安装 yarn spinner"></a>下载安装 yarn spinner</h4><ul><li>到 <a href="https://github.com/YarnSpinnerTool/ExampleProjects">github 链接</a> 中跟随说明<ul><li>创建 unity 项目</li><li>加入 yarn spinner 包</li><li>导入素材的 unity package</li></ul></li><li>到 vscode 中安装相应插件 - Yarn Spinner</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220618140610.png"></p><h4 id="创建基本的-yarn-脚本并-hook-it-up"><a href="#创建基本的-yarn-脚本并-hook-it-up" class="headerlink" title="创建基本的 yarn 脚本并 hook it up"></a>创建基本的 yarn 脚本并 hook it up</h4><h5 id="导入素材"><a href="#导入素材" class="headerlink" title="导入素材"></a>导入素材</h5><p>前面已经导入了 space journey 的 unity 包</p><h5 id="创建并链接脚本"><a href="#创建并链接脚本" class="headerlink" title="创建并链接脚本"></a>创建并链接脚本</h5><p>打开 scene 文件夹下的 start point</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220620213039.png"></p><p>来到 <code>Dialogue</code> 文件夹下，右键 <code>Create - Yarn Spinner - Yarn Script</code> 并命名为 <code>Space Journey</code></p><p>同一文件夹下，右键 <code>Create - Yarn Spinner - Yarn Project</code> 并命名为 <code>Space Journey Project</code></p><blockquote><p>在构建更大型的项目时，会用到多个 yarn script，建议使用多个脚本而不是只使用一个脚本来进行更大规模故事的构建</p></blockquote><p>将刚刚创建的 script 加入到 刚创建的 project 中并点击右下角的  <code>Apply</code></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220620213742.png"></p><h5 id="添加对话系统"><a href="#添加对话系统" class="headerlink" title="添加对话系统"></a>添加对话系统</h5><p>找到 <code>Packages/Yarn Spinner/Prefabs/Dialogue System</code> 将其加入场景中</p><p>将之前的 project 赋值给 <code>Dialogue System</code> 的相应位置</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220620214055.png"></p><h4 id="构建故事结构和逻辑"><a href="#构建故事结构和逻辑" class="headerlink" title="构建故事结构和逻辑"></a>构建故事结构和逻辑</h4><h5 id="故事背景"><a href="#故事背景" class="headerlink" title="故事背景"></a>故事背景</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220620212334.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220620212837.png"></p><ul><li>在飞船上，可以和三人中的一个对话<ul><li>工程师 - 会抱怨</li><li>船员 - 谈论配给</li><li>队长 - 谈到应对危机的准备情况<ul><li>可以说服他你准备好了</li><li>或者没能说服</li></ul></li></ul></li><li>警报声 - 飞船遇袭<ul><li>要是前面说服队长你准备好了 - 就会派你去</li><li>否则会派船员去</li></ul></li></ul><blockquote><blockquote><p>前面这小部分在视频中被放到 <code>创建基本的 yarn 脚本并 hook it up</code> 前面了，但我觉得应该放这里比较合适</p></blockquote></blockquote><h5 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h5><p>用 vscode 打开脚本文件后开写！<br>注意设置 title 为 <code>Start</code><br>yarn 每次会读取一行</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220620214722.png"></p><ul><li>预览<ul><li>回到 unity 中，deactive 场景中的 <code>UI</code> 和 <code>Title Canvas</code></li></ul></li><li>run!</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220620215038.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220620215100.png"></p><h5 id="构建脚本"><a href="#构建脚本" class="headerlink" title="构建脚本"></a>构建脚本</h5><p><code>-&gt;</code> 在 yarn 脚本中意味着不同的选项分支</p><pre class="line-numbers language-YarnScript" data-language="YarnScript"><code class="language-YarnScript">title: Starttags:---Player: Another day in Space Fleet. Might go have a chat...&#x2F;&#x2F; pick a person to speak to-&gt; Go see the Engineer as per orders  Engineer: Hello! I am the Engineer.-&gt; Meet up with your friend  Crewmate: Hello! I am your Cremate.-&gt; Go and talk to the Captain  Captain: Hello! I am the Captain.&#x3D;&#x3D;&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220620215914.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220620215931.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220620215950.png" alt="选择第二项"></p><h5 id="采用-node-跳转"><a href="#采用-node-跳转" class="headerlink" title="采用 node 跳转"></a>采用 node 跳转</h5><blockquote><blockquote><p>个人感觉类似函数吧，可以让结构更加紧凑，调用更加方便</p></blockquote></blockquote><pre class="line-numbers language-YarnScript" data-language="YarnScript"><code class="language-YarnScript">title: Starttags:---Player: Another day in Space Fleet. Might go have a chat...&#x2F;&#x2F; pick a person to speak to-&gt; Go see the Engineer as per orders  &lt;&lt;jump TalkToEngineer&gt;&gt;-&gt; Meet up with your friend  &lt;&lt;jump TalkToCremate&gt;&gt;-&gt; Go and talk to the Captain  &lt;&lt;jump TalkToCaptain&gt;&gt;&#x3D;&#x3D;&#x3D;title: TalkToEngineer---Engineer: Hello! I am the Engineer.&#x3D;&#x3D;&#x3D;title: TalkToCremate---Crewmate: Hello! I am your Cremate.&#x3D;&#x3D;&#x3D;title: TalkToCaptain---Captain: Hello! I am the Captain.&#x3D;&#x3D;&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="添加谈话后的跳转-敌袭！"><a href="#添加谈话后的跳转-敌袭！" class="headerlink" title="添加谈话后的跳转 - 敌袭！"></a>添加谈话后的跳转 - 敌袭！</h5><p>添加新的 node <code>BridgeEnding</code> 然后在之前的每个谈话分支后面加上 <code>&lt;&lt;jump BridgeEnding&gt;&gt;</code></p><pre class="line-numbers language-YarnScript" data-language="YarnScript"><code class="language-YarnScript">title: Starttags:---Player: Another day in Space Fleet. Might go have a chat...&#x2F;&#x2F; pick a person to speak to-&gt; Go see the Engineer as per orders  &lt;&lt;jump TalkToEngineer&gt;&gt;-&gt; Meet up with your friend  &lt;&lt;jump TalkToCremate&gt;&gt;-&gt; Go and talk to the Captain  &lt;&lt;jump TalkToCaptain&gt;&gt;&#x3D;&#x3D;&#x3D;title: TalkToEngineer---Engineer: Hello! I am the Engineer.&lt;&lt;jump BridgeEnding&gt;&gt;&#x3D;&#x3D;&#x3D;title: TalkToCremate---Crewmate: Hello! I am your Cremate.&lt;&lt;jump BridgeEnding&gt;&gt;&#x3D;&#x3D;&#x3D;title: TalkToCaptain---Captain: Hello! I am the Captain.&lt;&lt;jump BridgeEnding&gt;&gt;&#x3D;&#x3D;&#x3D;title: BridgeEnding---&#x2F;&#x2F; everyone reports to the bridgeCaptain: Pirates!Player: Oh no!Captain: Cremate, go deal with those pirates!Cremate: Yes, Captain.&#x3D;&#x3D;&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220620220910.png" alt="谈话结束后跳转到敌袭部分的文本"></p><h5 id="添加不同分支结局"><a href="#添加不同分支结局" class="headerlink" title="添加不同分支结局"></a>添加不同分支结局</h5><ul><li>若是选择和队长交谈 需要说服他你准备好了</li><li>这里引入了变量的用法 <code>$away_mission_readiness</code><ul><li>变量以 <code>$</code> 开头</li><li>数值变量初始值为 0 </li></ul></li><li>为节省篇幅，后面只展现有改动的部分</li></ul><pre class="line-numbers language-YarnScript" data-language="YarnScript"><code class="language-YarnScript">&#x3D;&#x3D;&#x3D;title: TalkToCaptain---Captain: Hello! I am the Captain.Player: I want to talk to go on more missions.Captain: Do you think you are ready?-&gt; Yes    &lt;&lt;set $away_mission_readiness +&#x3D; 1&gt;&gt;  &#x2F;&#x2F; if so, ask again  Captain: Really?  -&gt; ..yes?    &lt;&lt;set $away_mission_readiness +&#x3D; 1&gt;&gt;  -&gt; Actually, no.-&gt; No&#x2F;&#x2F; now go to the ending&lt;&lt;jump BridgeEnding&gt;&gt;&#x3D;&#x3D;&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>设置不同结局<ul><li>只有选择和船长谈话，并说服他你准备好了（变量值为 2）的情况下才会跳转到新结局</li></ul></li></ul><pre class="line-numbers language-none"><code class="language-none">&#x3D;&#x3D;&#x3D;title: BridgeEnding---&#x2F;&#x2F; everyone reports to the bridgeCaptain: Pirates!Player: Oh no!&#x2F;&#x2F; now change who goes depending on player actions&lt;&lt;if $away_mission_readiness &lt; 2&gt;&gt;Captain: Cremate, go deal with those pirates!Cremate: Yes, Captain.&lt;&lt;else&gt;&gt;  Captain: Player, you were just telling me how ready for this you are. Go deal with those pirates!  Player: Hooray!&lt;&lt;endif&gt;&gt;&#x3D;&#x3D;&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="设置场景中的多个角色和地点"><a href="#设置场景中的多个角色和地点" class="headerlink" title="设置场景中的多个角色和地点"></a>设置场景中的多个角色和地点</h4><h5 id="设置摄像机"><a href="#设置摄像机" class="headerlink" title="设置摄像机"></a>设置摄像机</h5><p>利用 yarn spinner 的 <code>command</code> 特性来安排摄像机</p><ul><li>在场景中创建新的 gameobject 并命名为 <code>VisualNovel</code></li><li>找到 <code>Scripts/VisualNovel</code> 并添加到刚创建的 obj 上</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220620223309.png"></p><ul><li>打开 <code>VisualNovel.cs</code> 取消第二步处的注释即可定义 command</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220622104806.png"></p><ul><li>到 <code>Space Journey.yarn</code> 中添加切换摄像机的代码</li></ul><p>场景摄像机最开始的位置应该在 Corridor 处，所以添加代码</p><pre class="line-numbers language-none"><code class="language-none">&lt;&lt;camera Corridor&gt;&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220622105302.png"></p><p>场景摄像机最后会在 Bridge 处，所以添加代码</p><pre class="line-numbers language-none"><code class="language-none">&lt;&lt;camera Bridge&gt;&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220622110028.png"></p><h5 id="设置角色"><a href="#设置角色" class="headerlink" title="设置角色"></a>设置角色</h5><p>可以看到 <code>VisualNovel.cs</code> 中有关于放置角色的代码，这部分代码可以帮助我们在场景中创建角色 并放置到预设的位置：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220622110324.png"></p><p>然后需要在 <code>VisualNovel.cs</code> 的 <code>Awake</code> 部分中定义相关的 command，第一个 string 是你想要移动的角色模型，第二个 string 是想将其移动到的地点</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220622110623.png"></p><p>之后在各场景中放置角色模型</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220622111124.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220622111148.png"></p><p>在使用之前 还需要为 Visual Novel 指定 Character List</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220622111244.png"></p><h5 id="让角色在不同情境呈现不同状态（表情）"><a href="#让角色在不同情境呈现不同状态（表情）" class="headerlink" title="让角色在不同情境呈现不同状态（表情）"></a>让角色在不同情境呈现不同状态（表情）</h5><p>这样细粒度的操作需要从角色上的脚本着手，<code>Character.cs</code> 中包含了设置位置和表情的函数</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220622121127.png"></p><p>这里对比了 yarn command 和 command handler 的区别<br>简言之就是 Yarn command 可以处理更细粒度的行为<br>command handler 更适用于处理更粗粒度 如场景中的整体变化</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220622121154.png"></p><p>所以在相应函数之前加上 yarn commend 的定义语句</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220622121438.png"></p><p>之后就可以在 yarn 脚本中调用了</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220622122554.png"></p><h4 id="润色"><a href="#润色" class="headerlink" title="润色"></a>润色</h4><h5 id="用淡入淡出方式来切换场景"><a href="#用淡入淡出方式来切换场景" class="headerlink" title="用淡入淡出方式来切换场景"></a>用淡入淡出方式来切换场景</h5><p>因为 fadein fadeout 是全局行为，所以将其添加为 command handler</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220622122833.png"></p><p>他们调用的是下面定义的相关函数</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220622122854.png"></p><p>然后在 yarn 脚本中相应位置来调用 fade 函数</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Xnip-2022-06-22-12-32-45.jpg"></p><p>记得把场景中之前 deactive 的 UI object 重新勾选出来</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220622123607.png"></p><h5 id="加入标题"><a href="#加入标题" class="headerlink" title="加入标题"></a>加入标题</h5><p>在 yarn 脚本最开始部分引入 展示标题部分的代码</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220622124015.png"></p><p><code>wait</code> 函数是 yarn 自带的函数，功能如其名，等待，其参数单位为秒</p><p>记得把之前 deactive 的 title 重新勾选</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220622124138.png"></p><p>然后 play 时就可以看见帅气标题了</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220622124218.png"></p><h4 id="用最终的故事来替代对话框里的内容"><a href="#用最终的故事来替代对话框里的内容" class="headerlink" title="用最终的故事来替代对话框里的内容"></a>用最终的故事来替代对话框里的内容</h4><p>前面的都是机制教学 理解了前面的内容 就可以直接用他们构建好的故事来替代整个故事</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220622124539.png"></p><p>直接运行会有报错，对比了一下两个 yarn 文件 发现他们给的这个最终版本最前面少了一行 tags，加上之后就可以正常运行了：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220622132740.png"></p><h3 id="where-to-next"><a href="#where-to-next" class="headerlink" title="where to next"></a>where to next</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220622132829.png"></p><h3 id="find-yarn-spinner"><a href="#find-yarn-spinner" class="headerlink" title="find yarn spinner"></a>find yarn spinner</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220622132917.png"></p><h3 id="thanks"><a href="#thanks" class="headerlink" title="thanks!"></a>thanks!</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220622132955.png"></p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> GDC </tag>
            
            <tag> Learning Notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220619 - Making one of the Best Levels of It Takes Two</title>
      <link href="2022/06/19/20220619-gmtk-ittakestwo/"/>
      <url>2022/06/19/20220619-gmtk-ittakestwo/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>看了 GMTK 关于双人成行的一期视频后的笔记！</p><h2 id="视频链接"><a href="#视频链接" class="headerlink" title="视频链接"></a>视频链接</h2><p><a href="https://www.youtube.com/watch?v=QbMF1nCiIkQ&list=PLc38fcMFcV_sJ6-plRfKCHxIalXVotgHu&index=2">Making It Takes Two’s Best Level</a></p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h3 id="合作的三种类型"><a href="#合作的三种类型" class="headerlink" title="合作的三种类型"></a>合作的三种类型</h3><ul><li>parallel coop<ul><li>各自独立完成</li></ul></li><li>step-by-step coop<ul><li>依赖关系，后一步行为需要在前一步完成后才能进行</li></ul></li><li>simultaneous coop<ul><li>同时行动</li></ul></li></ul><h3 id="可能问题和相应解决方案"><a href="#可能问题和相应解决方案" class="headerlink" title="可能问题和相应解决方案"></a>可能问题和相应解决方案</h3><h4 id="玩家在关卡中可做的事太少"><a href="#玩家在关卡中可做的事太少" class="headerlink" title="玩家在关卡中可做的事太少"></a>玩家在关卡中可做的事太少</h4><p>通过 mini game 来调整 pacing</p><h4 id="mini-game-影响剧情连贯"><a href="#mini-game-影响剧情连贯" class="headerlink" title="mini game 影响剧情连贯"></a>mini game 影响剧情连贯</h4><p>将其藏起来，不要影响主线剧情推进，同时让其有了收集属性，会激发玩家探索热情</p><h4 id="双方在-simultaneous-coop-情况下-不都有事可做"><a href="#双方在-simultaneous-coop-情况下-不都有事可做" class="headerlink" title="双方在 simultaneous coop 情况下 不都有事可做"></a>双方在 simultaneous coop 情况下 不都有事可做</h4><p>让 AI 的行为倾斜，让无事可做的一方更忙<br>例子是对战蜜蜂时，May 需要等 Cody 先给蜜蜂“挂彩”才可以造成伤害，所以会有一个等待区间，所以让蜜蜂针对 May 的攻击性更强，让等待的 May 忙起来</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Xnip2022-06-19_13-54-13.jpg"></p><h4 id="双方技能水平不对等"><a href="#双方技能水平不对等" class="headerlink" title="双方技能水平不对等"></a>双方技能水平不对等</h4><p>调整辅助瞄准机制等，让玩家关注于“好玩的玩法和机制”而不是“能不能射中”这种技术问题</p><h4 id="如何调节竞争与合作的整体感觉"><a href="#如何调节竞争与合作的整体感觉" class="headerlink" title="如何调节竞争与合作的整体感觉"></a>如何调节竞争与合作的整体感觉</h4><p>在整体合作氛围下加入对抗型的 mini game<br>并且要让 mini game 的双方都有获胜的可能（不仅仅设计技巧类的 mini game）</p><h4 id="如何平衡-story-和-gameplay"><a href="#如何平衡-story-和-gameplay" class="headerlink" title="如何平衡 story 和 gameplay"></a>如何平衡 story 和 gameplay</h4><p>让玩法也为叙事服务<br>比如磁铁 - 也象征着 吸引 attraction<br>时钟 - 也是剧情中提到过的 时间 </p><p>做到 emotional level 的玩法设计</p><h4 id="如何创造如此多的玩法-保持-variety"><a href="#如何创造如此多的玩法-保持-variety" class="headerlink" title="如何创造如此多的玩法 - 保持 variety"></a>如何创造如此多的玩法 - 保持 variety</h4><p>借鉴任天堂的超级马里奥 3D 的 <a href="https://www.youtube.com/watch?v=dBmIkEvEBtA">《4 步关卡设计法》</a></p><p>Koichi Hayashida - 超级马里奥 3D 的联合制作人</p><p>以每次跳跃都会导致场景面板翻转的蛋糕关卡为例</p><ol><li>introduction - 在安全环境中介绍机制 - 失败了也没有后果</li></ol><p>平地跳跃</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Xnip2022-06-19_14-01-36.jpg"></p><ol start="2"><li>development - 进一步深化机制运用 - 去除保护</li></ol><p>跳错了就会落到平地，需要重新开始</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Xnip2022-06-19_14-04-55.jpg"></p><ol start="3"><li>twist - 机制变化</li></ol><p>考察机制的掌握程度<br>或是做出变化，让你以新视角来感受机制 - 既需要注意跳跃行为带来的平台翻转 也要注意场景中的震波攻击（场景早期已经出现过）</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220619140904.png"></p><ol start="4"><li>conclusion - 结尾部分</li></ol><p>让玩家展示自己的技能水平</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Xnip-2022-06-19-14-15-36.jpg"></p><p>设计人说他受到了中国诗词中起承转合的结构启发</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Xnip-2022-06-19-14-18-09.jpg"></p><blockquote><blockquote><p>嗯？没想到以这种方式出现了 233</p></blockquote></blockquote><p>在游戏过程中就可以不断介绍机制（也许是以敌人的行为方式）</p><p>有时候甚至会在不同阶段引入新的机制</p><h4 id="玩法与其深度的抉择"><a href="#玩法与其深度的抉择" class="headerlink" title="玩法与其深度的抉择"></a>玩法与其深度的抉择</h4><p>depth 不一定就意味着好 —— 如果没有时间让其派上用场的话尤其如此<br>另一个双人成行的设计支柱是“finding good enough” - 找到一个玩法机制最符合直觉的最有趣的部分并将其引入</p><h4 id="策划需求-vs-程序-美术工作量"><a href="#策划需求-vs-程序-美术工作量" class="headerlink" title="策划需求 vs 程序/美术工作量"></a>策划需求 vs 程序/美术工作量</h4><p>策划最好要提前思考最后的成品效果，尽量避免无用功</p><h4 id="一个原型的迭代过程"><a href="#一个原型的迭代过程" class="headerlink" title="一个原型的迭代过程"></a>一个原型的迭代过程</h4><p>以树脂喷枪作为船的动力的机制为例</p><ol><li>第一阶段</li></ol><ul><li>原型<ul><li>射击，然后船就向射击反方向移动</li></ul></li><li>问题<ul><li>玩家看不到前进的方向</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Xnip-2022-06-19-14-28-02.jpg"></p><ol start="2"><li>第二阶段</li></ol><ul><li>原型<ul><li>玩家操纵船尾的装置（就像快艇一样）</li></ul></li><li>问题<ul><li>当前方式（按下 Y 来操纵）和当前关卡的原则（kinetic+炸东西）不契合</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Xnip-2022-06-19-14-31-55.jpg"></p><ol start="3"><li>第三阶段</li></ol><ul><li>原型<ul><li>喷枪喷到水里来作为反作用力推进器</li></ul></li><li>结果<ul><li>结合了功能与机制</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220619144332.png"></p><h4 id="游戏-pacing-的方法"><a href="#游戏-pacing-的方法" class="headerlink" title="游戏 pacing 的方法"></a>游戏 pacing 的方法</h4><p>其他游戏的方法 - 用带有变化的重复内容来填充<br>即 platforming - combating - platforming - combating …</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220619144409.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220619144423.png"></p><p>双人成行中，在有足够 variety 情况下需要调整 intensity<br>即所谓松弛有度 - 以免玩家无聊或太累</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220619144451.png"></p><h4 id="调节玩家双方的-pacing-和感觉"><a href="#调节玩家双方的-pacing-和感觉" class="headerlink" title="调节玩家双方的 pacing 和感觉"></a>调节玩家双方的 pacing 和感觉</h4><p>比如甲壳虫对战中<br>更强调作为 platformer + timing 的把控<br>减少对于 机制/aiming 的依赖</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220619144607.png"></p><p>比如生命系统的迭代</p><ul><li>方案一<ul><li>采用战争游戏中的救援机制，一方倒下，需要另一方来救援</li><li>问题<ul><li>玩家不总会在一起</li></ul></li></ul></li></ul><ul><li>方案二<ul><li>在屏幕中央共享生命</li><li>问题<ul><li>技术差的一方总会成为伤害的来源，导致二人一起死亡</li><li>而不是让强的玩家成为 carry </li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220619144630.png" alt="共享生命"></p><ul><li>最终方案<ul><li>倒计时机制<ul><li>只要有一方存活，就不算失败</li></ul></li><li>好处<ul><li>都可以直接想象到玩家间的对话“撑住，我马上就活了！”</li></ul></li></ul></li></ul><p>但同时也要保持难度上的适度<br>要让玩家能够死亡 - 从而让其感觉受到挑战 + stress + 还要再来<br>但也不能过难从而让玩家多次重复体验 - 会使得 variety 降低</p><h4 id="趣闻-甲壳虫的死亡"><a href="#趣闻-甲壳虫的死亡" class="headerlink" title="趣闻 - 甲壳虫的死亡"></a>趣闻 - 甲壳虫的死亡</h4><p>没想到玩家反应如此之大，设计团队当时只觉得这是一个一周的设计原型<br>没想到玩家最后具有很强的情感共鸣，觉得甲壳虫被抛弃了</p><h4 id="飞机部分的设计"><a href="#飞机部分的设计" class="headerlink" title="飞机部分的设计"></a>飞机部分的设计</h4><p>已经有故事板了 —— 知道后面有松鼠在追</p><ul><li>一种方式是落下飞机，然后反击</li><li>还有一种是能不能跳出堡垒，把它们打回去 —— 所以成了在飞机上的街霸</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220619144804.png"></p><h4 id="双人滑翔部分"><a href="#双人滑翔部分" class="headerlink" title="双人滑翔部分"></a>双人滑翔部分</h4><p>借鉴自《A Tale of Two Sons》，只不过是合作版本</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220619144720.png"></p><h2 id="take-aways"><a href="#take-aways" class="headerlink" title="take aways"></a>take aways</h2><ul><li><p>合作的三种类型</p><ul><li>parallel <ul><li>独立行动</li></ul></li><li>step-by-step<ul><li>依赖行动</li></ul></li><li>simultaneous<ul><li>共同行动</li></ul></li></ul></li><li><p>超级马里奥 3D 的 4 步设计法</p><ul><li>起承转合</li><li>introduction<ul><li>安全环境介绍机制</li></ul></li><li>development<ul><li>深入运用机制 - 去除保护</li></ul></li><li>twist<ul><li>为机制增添变化 - 比如引入敌人</li></ul></li><li>conclusion<ul><li>让玩家 showoff 机制的掌握</li></ul></li></ul></li><li><p>原型迭代的重要性！</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> GMTK </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220617 - Stop Getting Lost： Make Cognitive Maps, Not Levels</title>
      <link href="2022/06/17/20220617-gdc-makecognitivemap/"/>
      <url>2022/06/17/20220617-gdc-makecognitivemap/</url>
      
        <content type="html"><![CDATA[<h2 id="原视频链接"><a href="#原视频链接" class="headerlink" title="原视频链接"></a>原视频链接</h2><ul><li>Youtube 链接<br><a href="https://www.youtube.com/watch?v=Q1Tczf8vxCM&list=PL2e4mYbwSTbbjN6TTMo6toJfByWpKvEDH&index=1">Stop Getting Lost: Make Cognitive Maps, Not Levels</a></li></ul><h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><h3 id="认知地图的来源"><a href="#认知地图的来源" class="headerlink" title="认知地图的来源"></a>认知地图的来源</h3><p>Tolman E C. Cognitive maps in rats and men[J]. Psychological review, 1948, 55(4): 189.</p><p>即著名的在迷宫中找奶酪的老鼠的实验。</p><p>在一个迷宫中的某位置放置奶酪，看老鼠能不能找到。<br>每次找到后将老鼠重新带回迷宫入口</p><p>随着实验次数增加，老鼠找到奶酪的速度越来越快</p><p>它们脑中也逐渐形成了认知地图 - 在过去经验基础上，在脑中形成的对某种情境/空间关系的图画</p><p>在后续实验中，实验人员将迷宫进行了改动，但老鼠们还是能凭借对地图的认知快速找到奶酪 - 它们选择与目的地方向相近的通道，而不是选择看起来“和前一次的正确道路”长得差不多的通道</p><h3 id="一种快速看到脑中认知地图的方法"><a href="#一种快速看到脑中认知地图的方法" class="headerlink" title="一种快速看到脑中认知地图的方法"></a>一种快速看到脑中认知地图的方法</h3><p>不借助任何工具，5 min 内绘制一幅家附近的地图</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Temp.jpg"></p><h3 id="认知地图五要素"><a href="#认知地图五要素" class="headerlink" title="认知地图五要素"></a>认知地图五要素</h3><p>《The Image Of The City》让许多人绘制了他们的认知地图，并提出了关于认知地图的五个要素：</p><ul><li>Paths</li><li>Landmarks</li><li>Districts</li><li>Edges</li><li>Nodes</li></ul><h4 id="path"><a href="#path" class="headerlink" title="path"></a>path</h4><p>处于路上的时候不易察觉到路本身<br>它具有时间属性 - 现在所在位置是之前所在位置以及两者之间的部分，并不是孤立存在的点，而是点连成的线</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220617213432.png"></p><ul><li>path 的作用<ul><li>引导玩家前往某地区</li><li>帮助 lost 的玩家找到路 - 因为他们偏离了道路 而不是在路中</li><li>建立关卡中的玩家走向</li><li>连接更大的区域</li></ul></li></ul><h4 id="landmarks"><a href="#landmarks" class="headerlink" title="landmarks"></a>landmarks</h4><p>具有独特视觉辨识度的物体<br>有让人拍照的冲动</p><ul><li><p>作用</p><ul><li>帮助玩家定位</li><li>创建新的期待 - 是否意味着到了新的区域</li></ul></li><li><p>note</p><ul><li>通常是静态的，动态的大型移动物体一般不能视为地标，发挥的作用不一样</li><li>具有方向性的话更容易被记住<ul><li>在雕塑背后 vs. 我看见了塔</li></ul></li><li>会被多次作为参考系使用 - 这样才能帮助玩家建立认知地图</li></ul></li></ul><h4 id="district"><a href="#district" class="headerlink" title="district"></a>district</h4><ul><li><p>定义</p><ul><li>被分为不同块的区域</li><li>一般具有不同的特征（颜色、规模）</li><li>具有边界</li></ul></li><li><p>如何判断是好的 district 设计 - 眯眼大法</p><ul><li>眯起眼之后能区分出不同区域</li></ul></li><li><p>相似元素的簇分布</p><ul><li>可以帮助区分不同 district </li><li>也可以让具有相似元素的区域更容易被记住</li></ul></li></ul><h4 id="edge"><a href="#edge" class="headerlink" title="edge"></a>edge</h4><ul><li><p>定义</p><ul><li>线性</li><li>非路径</li></ul></li><li><p>跨越边界应该要有意义</p><ul><li>可以是叙事/机制/美学层面</li></ul></li><li><p>bold edge 比起模糊的边界更容易被人记住</p></li></ul><h4 id="node"><a href="#node" class="headerlink" title="node"></a>node</h4><ul><li><p>定义</p><ul><li>是 path 的交界处</li><li>大多会作为交通枢纽存在</li></ul></li><li><p>作用</p><ul><li>让 path 的指向有所意义 - all roads lead to Rome</li><li>可以被重用</li><li>可以作为目的地</li></ul></li><li><p>note</p><ul><li>一个好的 note 应该是可以被深入体验的，而不仅仅是经过</li></ul></li></ul><hr><h3 id="投入实践"><a href="#投入实践" class="headerlink" title="投入实践"></a>投入实践</h3><ul><li><p>audit<br>让自己的地图设计是清晰的 - 不要有模棱两可的“好像是 landmark”之类的设计</p></li><li><p>organize<br>用这些清晰的元素来构建关卡</p></li><li><p>test without HUD/Minimap UI<br>尽量在没有 UI 的情况下来进行地图测试 - 这样才能真正测试到地图本身<br>否则就会只缘身在此山中 - 以中心视角而不是世界视角来形成认知地图</p></li></ul><p>egocentric 视角：自我中心视角，就像拿着手机地图前往目的地，探索路径是被分割的 - 向前 100 米，向左 100 米 - 不利于形成认知地图<br>allocentric 视角：世界中心视角，作为个体行走在环境中</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220617210507.png"></p><h3 id="外部参考"><a href="#外部参考" class="headerlink" title="外部参考"></a>外部参考</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220617210526.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220617210535.png"></p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> GDC </tag>
            
            <tag> Learning Notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 第十二章 有些元素是游戏机制</title>
      <link href="2022/06/08/20220608-theartofgamedesign-chap12/"/>
      <url>2022/06/08/20220608-theartofgamedesign-chap12/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="第十二章-有些元素是游戏机制"><a href="#第十二章-有些元素是游戏机制" class="headerlink" title="第十二章 有些元素是游戏机制"></a>第十二章 有些元素是游戏机制</h2><p>游戏的骨架是由游戏机制定义的。<br>游戏机制是游戏真正的核心。剥离美学、技术和故事后，剩下的互动和关系，就是游戏机制。</p><p>游戏机制分类不明确的原因：</p><ul><li>简单游戏的玩法机制，也颇为复杂，难以解析。尝试将其简化到完美数学理解，就会产生各种描述，且不完整。</li><li>一方面，游戏机制是客观地、有明确规定的规则集。另一方面，游戏机制又设计一些比较神秘的东西（头脑中的某些心理模型）。</li></ul><p>下面是本书中尝试提出的机制分类。</p><h3 id="机制-1：空间"><a href="#机制-1：空间" class="headerlink" title="机制 1：空间"></a>机制 1：空间</h3><p>每个游戏都发生在某种空间里（space）。定义了游戏中可以存在的各个地点和它们之间如何关联。</p><p>一般而言，游戏空间：</p><ol><li>是离散或连续的。</li><li>具有一定数量的维度。</li><li>具有连接或不连接的有界区域。</li></ol><p>什么叫“离散”呢？<br>以九宫格为例，九宫格中只有九个离散空间有实际意义。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220612001245.png" alt="标记占据了九宫格九个离散空间之一"></p><p>某种意义上说，九宫格其实是 9 个零维的格子，在一个二维网络中互相连接：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220612001359.png"></p><p>每个圈代表一个零维空间，每条线表示相连的空间。在九宫格游戏中，没有在空间中的移动，相邻关系非常重要。<br>没有相邻关系，只有 9 个孤立的点。<br>有相邻关系，就变成离散 2D 空间，有着清晰边界——三格宽、三格高</p><p>思考大富翁棋盘，乍一看可能觉得是一个离散二维空间。但其实，只要一维空间就可以代表它——四十个离散点的一条线，头尾相连成一圈。<br>转角的格子和其他格子其实功能一样，每个格子都是零维空间。多个棋子可以停在一个格子内，但同一格内的相对位置无意义。</p><p>并非所有游戏空间都离散。桌球台就是连续二维空间的范例。但其实并非严格二维，因为有时候可以通过跳球的方式进行游玩，此时它暂时具有三维空间的属性。</p><p>对于抽象功能空间的描述并没有一定之规。<br>把游戏剥离成只有空间功能的目的是让你不受美学或是现实世界的干扰，可以更容易思考。</p><p>若考虑把足球场地边界修改成新样式，可能会从二维连续空间角度来思考：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220612002005.png"></p><p>若是想修改球门高度，或改变限制球员能将球踢多高的规则，又或者在场上加入起伏地面，那么当做连续三维空间来考虑就比较有利。</p><p>还有些时候，甚至可以把足球场当做离散空间考虑——将其分为九个主要区域，左右各多一个区域当做球门。分析各位置的配合玩法时，这样的思考模式会有帮助。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220612002216.png"></p><p>重点是找到最能帮助自己理解游戏中各种关联关系的一种。</p><h4 id="互相嵌套的空间"><a href="#互相嵌套的空间" class="headerlink" title="互相嵌套的空间"></a>互相嵌套的空间</h4><p>许多游戏空间更为复杂，具有嵌套空间。比如幻想角色扮演游戏（CRPG），此类游戏多包含二维连续“户外空间”。在该空间中旅行的玩家会遇到各种图标，代表市镇、洞穴或城堡等。玩家可以进入这些完全分隔的空间，其中除了出入口图标以外，与“户外空间”没有联系。</p><h4 id="零维度"><a href="#零维度" class="headerlink" title="零维度"></a>零维度</h4><p>每个游戏都一定在空间中进行吗？</p><p>思考这么一个游戏：一方（A）想出一个事物，另一方（B）提出能以“是”或“否”回答的问题。B 不断提问，并根据 A 的回答来猜测答案。</p><p>这里没有游戏盘，没有移动，只有二人对话，这个游戏中有空间吗？换一种思考方式就有：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220612002737.png"></p><p>A 脑中包含该事物，B 脑中包含对该事物是什么的判断，对话空间是信息交换的地方。每个游戏都有某种信息/状态,并且必须存在于某个地点。所以，就算一个游戏在一点上，或者在零维空间内发生，把它当做空间来思考也可以有帮助。</p><p>身为设计师，以功能抽象的视角来思考游戏空间是一大基础。这就是 26 透镜。</p><h4 id="26-号透镜：功能空间"><a href="#26-号透镜：功能空间" class="headerlink" title="26 号透镜：功能空间"></a>26 号透镜：功能空间</h4><p>要使用此透镜，请思考将所有表面元素剥离你的游戏之后，游戏究竟在什么空间内进行。</p><p>问自己以下问题:</p><ul><li>游戏空间是离散的还是连续的?</li><li>它有几个维度?</li><li>空间的边界在哪?</li><li>有没有子空间?空间如何互相联系?</li><li>是否有不止一种合理方式给游戏空间建立抽象模型?</li></ul><p>先专注空间，改造抽象空间布局满意后，再加以美学成分。<br>功能空间与 10 号透镜“全景设计”配合使用，效果很好。<br>如果能同时看清玩家将要体验到的抽象功能空间和美学空间，及它们之间的关联，就能充满自信地决定游戏世界的形态。</p><h3 id="机制2：时间"><a href="#机制2：时间" class="headerlink" title="机制2：时间"></a>机制2：时间</h3><p>游戏世界中的时间并非和现实一样，单向匀速前进，无法挽回。</p><h4 id="离散与连续的时间"><a href="#离散与连续的时间" class="headerlink" title="离散与连续的时间"></a>离散与连续的时间</h4><p>游戏中离散的时间单位即“回合”。</p><p>一般而言，回合制游戏中的时间并不重要。每一回合都是一个离散时间单位，回合之间并不存在时间。</p><p>很多游戏是在连续时间中进行。也有一些游戏使用混合时间系统，如国际象棋中采取回合制，但有连续计时器为每名选手规定时间限制。</p><h4 id="时钟与竞赛"><a href="#时钟与竞赛" class="headerlink" title="时钟与竞赛"></a>时钟与竞赛</h4><p>不同类型时钟在许多游戏中出现，用来给事物设定时间限制。如 Boggle （一种拼单词游戏）中的沙漏，美式足球中的计时钟，《大金刚》中马里奥跳跃的时长。设计目的在于通过绝对的时间计量对玩法作出限制。</p><p>时间也能嵌套。如篮球中会有总计时，但也有“24秒计时器”（美职业篮球比赛中规定，一方发起进攻后 24 秒内必须尝试进球得分，否则球权交给对方），来确保选手（玩家）们去冒更多风险，保证游戏过程好看。</p><p>也有偏相对性的方法来计量时间——一般称之为“竞赛”。竞赛情况下，没有固定时间限制，只有压力促使你比另一个玩家快。竞赛可能很明显，比如汽车赛，也可能比较隐含，如《太空侵略者》中，玩家需要在上方外星人碰到地面前将其全部击毁。</p><p>也有许多游戏中时间不是限制因素，但有意义。比如棒球中每局比赛没有时间限制，但如果比赛时间过长，投手就会耗尽体力，这让时间成为赛事的重要部分。</p><h4 id="操控时间"><a href="#操控时间" class="headerlink" title="操控时间"></a>操控时间</h4><p>游戏可以做到现实中无法想象的操控时间。<br>有多种引入方式：</p><ul><li>让时间完全停止<ul><li>体育比赛中的暂停（time-out）</li><li>游戏中的暂停（pause）</li></ul></li><li>加快时间<ul><li>《文明》中，几秒钟可以是游戏世界中的几年</li></ul></li><li>时间倒流<ul><li>游戏中的死亡回档</li><li>《时空幻境》（Braid）把操控游戏时间做成了游戏的核心机制</li></ul></li></ul><h4 id="27-号透镜：时间"><a href="#27-号透镜：时间" class="headerlink" title="27 号透镜：时间"></a>27 号透镜：时间</h4><p>俗话说“时间就是一切”。我们身为设计师的目标是创造体验，而体验如果太长、太短、太快、太慢，都很容易扫兴。要让你的体验长度刚刚好，可问自己以下问题:</p><ul><li>究竟是什么决定了我的游戏活动的长度?</li><li>我的玩家是否因为游戏结束太快，感到沮丧?我怎样才能改变这种状况?</li><li>我的玩家是否因为游戏时间太长，感到无聊?我怎样才能改变这种状况?</li><li>时钟和竞赛能不能让我的游戏玩法更激动人心?</li><li>时间限制也许会让玩家烦躁。我去掉时间限制会更好吗?</li><li>有层级的时间架构对我的游戏是否有益?或者说，几个小回合组成一个大回合好不好?</li></ul><p>要把时间调至合适的程度很难，但时间能成就一款游戏，也能毁掉一款游戏。听从以前歌舞艺人的格言“吊着他们的胃口 (leave’em wanting more) ” ，一般不会错。</p><h3 id="机制-3：对象、属性和状态"><a href="#机制-3：对象、属性和状态" class="headerlink" title="机制 3：对象、属性和状态"></a>机制 3：对象、属性和状态</h3><p>游戏空间中，一切可见物/可操纵物，都属于对象。对象是游戏机制里的“名词”。技术上而言，有时需要把空间本身也当做对象。</p><p>对象一般有一个或一个以上属性，其中一个常见属性是游戏空间中的位置。</p><p>属性是有关一个对象的各类信息。如赛车游戏中的车有最大速度、当前速度等属性。每个属性都有当前状态。有些状态不会经常变动（如最大速度），有些状态会在游戏过程中不断改变（如当前速度）。</p><p>对象 - 游戏机制名词<br>属性、状态 - 游戏机制形容词</p><ul><li>属性<ul><li>静态属性，整个游戏中不变<ul><li>如棋子颜色</li></ul></li><li>动态属性（主要感兴趣）<ul><li>如西洋跳棋中的“移动属性”的三种状态：普通、成王、被吃</li><li>国际象棋中，国王的“移动模式”属性：自由移动、将军、将死</li><li>《大富翁》中，每块地产都可以被当做一个对象，有动态属性“房屋数量”：0、1、2、3、4、宾馆；还有“抵押”属性：是、否</li></ul></li></ul></li></ul><p>不一定要将每次状态改变都告知玩家。有些必须告知，有些最好隐藏。<br>标准：若两个对象的行为相同，就应该看起来相同。如果行为不同，看起来也要不同。</p><p>游戏 AI 可以通过构建属性状态转换图来帮助梳理逻辑和调试。如《吃豆人》中的怪物：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220612005452.png"></p><p>状态图中会有起始状态（一般用两个圈表示）。<br>每个箭头代表依次可能的状态转化，由一个事件触发</p><p>对象有哪些属性，属性有哪些状态，取决于你。面对游戏设计的每一件事，在当时当景怎么最有效，就怎么去考虑，才是“正确”之路。</p><p>强迫玩家主义太多状态会让玩家不堪重负。下一种会讨论如何优化玩家需要处理的状态数量。</p><p>严格将游戏当做对象、属性、及其变化状态的结合，是一种有用视角：</p><h4 id="28-号透镜：状态机"><a href="#28-号透镜：状态机" class="headerlink" title="28 号透镜：状态机"></a>28 号透镜：状态机</h4><p>要使用此透镜，请思考你的游戏中哪些信息在改变。问自己这些问题:</p><ul><li>我的游戏中有什么对象?</li><li>这些对象的属性是什么?</li><li>每个属性有什么可能的状态?</li><li>每个属性中，是什么触发状态改变?</li></ul><p>玩游戏的过程就是做决定，决定是根据信息做出的。决定不同的属性、属性的状态、改变状态的事件，就是你游戏机制的核心。</p><h4 id="秘密"><a href="#秘密" class="headerlink" title="秘密"></a>秘密</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220612112612.png" alt="知情者韦恩图"></p><ul><li>每个圈代表一个知情者，包括神、游戏、以及玩家 123 号。每个点代表游戏中的一些信息——一个属性的状态</li><li>A 是完全公开信息，如棋子在棋盘上的位置，或者明牌。所有玩家都了解</li><li>B 是玩家 23 共享信息，但 1 不知道的状态。也许 23 有机会看过同一张暗牌，但 1 没有。也可能 23 是玩家 1 的虚拟对手，算法让其共享信息，一起对抗玩家 1</li><li>C 是单一玩家私密信息，这里属于玩家 2，比如他的牌</li><li>D 是只有游戏本身知道，但玩家们都不知道的信息。比如桌面角色扮演游戏中的 GM（game master）。他不属于玩家。但知道有关游戏状态的大量私密信息，因为他可能是真正让游戏机制运转的人。大部分电脑游戏中，都有很多玩家不知道的内部状态。</li><li>E 是随机生成的信息，只有命运或神明之类的才知道</li></ul><p>秘密即能力。</p><h4 id="29-号透镜：秘密"><a href="#29-号透镜：秘密" class="headerlink" title="29 号透镜：秘密"></a>29 号透镜：秘密</h4><p>改变谁掌握哪些信息，就能彻底改变你的游戏。要使用此透镜，请思考“谁”知道“哪些”，又是“为什么。</p><p>问自己这些问题:</p><ul><li>哪些信息只有游戏本身知道?</li><li>哪些信息所有玩家知道?</li><li>哪些信息只有一些或一个玩家知道?</li><li>改变谁掌握哪些信息，可以改进我的游戏吗?</li></ul><p>游戏过程就是做决定的过程。决定则根据信息做出。决定不同的属性及其状态，以及谁了解它们，是你的游戏机制的核心。对谁知道哪些信息做一些小修改，可以极大地改变一个游戏一一或者强到飞起，或者低到尘埃里。谁知道哪些属性这件事甚至可以在游戏过程中改变——想在你的游戏中创造戏剧性，一大方法就是突然将一条重要的私密信息公开。</p><h3 id="机制-4：行动"><a href="#机制-4：行动" class="headerlink" title="机制 4：行动"></a>机制 4：行动</h3><p>行动是游戏机制的动词。</p><p>有两种方式可以回答“玩家能做什么”：</p><ol><li>基本行动<br>即玩家能做的基本动作，如在西洋跳棋中，玩家仅能执行三个基本操作：</li></ol><ul><li>向前移动棋子</li><li>跳过对手棋子</li><li>往回移动棋子（仅限王）</li></ul><ol start="2"><li>策略行动<br>这些行动只在游戏大局上有意义——它们和玩家怎么使用基本行动来达成目标有关。通常比基本动作要多。考虑西洋跳棋中的可能策略行动：</li></ol><ul><li>把一个棋子移到另一颗后面保护之，以免被吃</li><li>迫使对手跳出不想要的步子</li><li>牺牲一个棋子来欺骗对手</li><li>造一座桥来保护后排棋子</li><li>把一颗棋子移入成王排，令其成王</li></ul><h4 id="自发玩法"><a href="#自发玩法" class="headerlink" title="自发玩法"></a>自发玩法</h4><p>有意义的策略行动与基本行动的比例是衡量一款游戏有多少自发性的标尺。<br>一款优雅的游戏只允许玩家做少量基本行动，却能组合出大量策略行动。</p><p>打造自发玩法，即有趣的策略行动，其过程有点像打理花园——园中生命自发生长，但同时又弱不禁风，容易毁坏。当你注意到自己的游戏中显现了一些有趣的策略行动，一定要能识别出来，然后尽己所能加以培养，为其创造机会蓬勃发展。</p><p>以下的提示可以为游戏准备土壤，好播下自发玩法的种子。</p><ol><li><p>添加更多动词。<br>也就是添加更多基本行动。<br>当基本行动与基本行动之间、基本行动与对象、基本行动与游戏空间互相作用，策略行动就会出现。<br>若添加更多基本行动，这些互动也会更多，相应地，自发玩法就更有机会产生。<br>添加过多基本行动，特别是互相不能很好呼应的，也可能让游戏变得臃肿混乱。<br>策略行动与基本行动的比值，比基本行动的绝对数量更重要。<br>最好添加优秀的基本行动。</p></li><li><p>能与许多对象互动的动词<br>如果一把枪只能射击敌人，游戏十分简单<br>但若是枪还能射开门锁、打破窗户、猎取食物、甚至在墙上留字等，就让游戏世界充满了可能性。<br>一个基本行动射击，辅以更多有效的设计对象，有意义的策略行动也随之增多了。</p></li><li><p>用各种方式达成的目标<br>给玩家许多带有多个对象的动词，让他们在游戏实际中干各种各样的事。<br>如果让玩家射击各种东西，但目标只是“打死 BOSS”，那玩家也只能这样<br>但若是可以射击怪物；也可以打落铁链，令吊灯砸下来；甚至可以完全不射击，用非暴力手段阻止——就有了丰富多变的游戏玩法，事情发展有了各种可能。<br>此方法的挑战之处是，游戏会更难平衡。</p></li><li><p>许多主体<br>如果西洋跳棋只有一颗红子、一颗黑子，规则不变，游戏就会很无聊。正是因为玩家有许多棋子可以移动、互动、合作、牺牲，整个游戏才有趣起来。<br>策略行动的数量大致相当于“主体 x 动词 x 对象”，所以添加主体有可能令策略行动数量随之增加。</p></li><li><p>改变限制条件的额外效果<br>若是每次行动还会产生额外效果，改变你或对手的限制环境，有可能出现很有意思的玩法。<br>西洋跳棋，每次移动棋子，不仅改变自己可以吃到的格子，也同时改变你的对手和自己可以移动到的格子。不论本意如何，每一步都改变着游戏空间的性质。<br>设想允许多个棋子在一个格子里，西洋跳棋会变成一个怎样的游戏呢。<br>强制游戏多方面随着每一个基本行动而改变，就很有可能会突然出现有趣的策略行动。</p></li></ol><h4 id="30-号透镜：自发"><a href="#30-号透镜：自发" class="headerlink" title="30 号透镜：自发"></a>30 号透镜：自发</h4><p>要确保你的游戏有有趣的自发玩法，问自己这些问题:</p><ul><li>我的玩家有多少动词可选?</li><li>每个动词可作用于多少对象?</li><li>玩家要达成目标有多少种方式?</li><li>玩家控制多少主体?</li><li>额外效果如何改变限制条件?</li></ul><p>游戏与书籍、电影相比，最显著的一个区别是动词数量。<br>游戏通常把玩家所能做的行动限制在很窄范围内。<br>故事中，角色能采取的行动数量近乎无限。<br>18 章“间接控制”中会讨论如何填补这个“行动鸿沟”，让你既能将基本行动数目保持在可控范围内，又能给玩家无限可能的感觉。</p><p>游戏相似的一个原因是它们使用一样的行动集。<br>玩家可以进行哪些行动对定义游戏机制颇为关键。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220613004712.png" alt="可支持大量动词的文字冒险游戏的衰落"></p><p>你选择哪些行动，很大程度上定义你游戏的结构。</p><h4 id="31-号透镜：行动"><a href="#31-号透镜：行动" class="headerlink" title="31 号透镜：行动"></a>31 号透镜：行动</h4><p>要使用此透镜，请思考你的玩家能做些什么、不能做什么，分别为什么</p><p>问自己：</p><ul><li>游戏中的基础行动是什么</li><li>策略行动是什么</li><li>想要看到怎样的策略行动？怎样改变游戏，令其可能？</li><li>策略行动与基础行动的比例，满意吗</li><li>玩家在游戏中有什么想做但不能做的行动？能不能设法令其成为可能，无论作为基础行动或策略行动？</li></ul><p>没有行动的游戏就像是没有动词的句子一什么也不会发生。你身为游戏设计师要做的最基础的决定，便是确定你游戏中的行动。对这些行动进行微小改变也会对游戏造成一系列巨大影响，可能会创造出惊人的自发玩法，也可能让游戏变得波澜不惊又烦琐。要小心选择你的行动，学会听从你游戏的声音、玩家的声音，从中了解你的选择能带来什么。</p><h3 id="机制-5：规则"><a href="#机制-5：规则" class="headerlink" title="机制 5：规则"></a>机制 5：规则</h3><p>所谓规则绝对是最基础的机制。<br>规则定义时间、空间、对象、行动、行动结果、行动限制，以及目标。<br>规则令前述所有机制成为可能，并加上了游戏之所以为游戏的一大关键——目标。</p><h4 id="帕莱特的规则分析"><a href="#帕莱特的规则分析" class="headerlink" title="帕莱特的规则分析"></a>帕莱特的规则分析</h4><p>游戏历史学者 David Parlett 在分析游戏过程中各异的规则方面很有建树：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220616010630.png" alt="Parlett 的规则分析"></p><ol><li><p>操作规则<br>即“玩家玩游戏要干什么”。<br>玩家了解操作规则后，就可以玩游戏了。</p></li><li><p>基础规则<br>基础规则是游戏底层架构。<br>操作规则表述：玩家掷一枚六面骰子，获得结果所示数量的力量标记<br>基础规则表述（更抽象）：玩家力量值增加 1~6 之间的随机整数<br>基础规则是一种数学表达，讲述游戏状态及其变化时机、方式。<br>棋盘、骰子、标记、生命计等，都只是记录基础游戏状态的操作方式。<br>基础规则是操作规则的基础<br>实践中，设计师一般只根据必要需求考虑基础规则，很少需要用正式文档将全套基础规则完全抽象地记录</p></li><li><p>行为规则<br>是游戏过程中暗含的规则，大部分人将其视为“体育精神”一部分。如不应该干扰对手。<br>行为规则的存在，强调了游戏是一种玩家之间的社交联系。<br>这些规则也形成操作规则基础<br>Steven Sniderman 有一篇讨论行为规则的好文章 —— Unwritten Rules</p></li><li><p>书面规则<br>是游戏自带的说明书，是玩家必须读来了解操作规则的文档。<br>但只有极少数人会去读。<br>现代电子游戏也逐渐摒弃书面规则，改为互动式新手教学<br>设计师必须思考 —— 玩家如何学会玩我的游戏</p></li><li><p>赛事条例<br>只有严肃、竞争性场合，赌注大到感觉有必要明确记录有两体育精神的规则，或需要明确或修改官方书面规则，赛事条例才会形成。<br>《铁拳 5》（Tekken 5）在 2005 Penny Arcade Expo 上的赛事规则：<br>a. 单淘汰制<br>b. 可自带控制器<br>c. 标准 VS 模式<br>d. 100% 血量<br>e. 随机选关<br>f. 60s 倒计时<br>g. 五局三胜<br>h. 三盘两胜<br>i. 禁止使用 Mokujin</p></li><li><p>官方规则<br>是将书面规则和赛事条例合并的形式。会慢慢成为书面规则。<br>如国际象棋中若是下一步可能将死对方，需要喊出“将军”。这原来只是“赛事条例”，不是书面规则。但如今已经是官方规则的一部分</p></li><li><p>建议性规则<br>也被称为策略规则<br>是让你玩得更好的提示，从游戏机制角度看并非真正规则</p></li><li><p>房规<br>即反馈，玩家们在游戏过程中有可能会想要调整操作规则，增加游戏乐趣<br>一般会玩了几个回合后才制定</p></li></ol><h4 id="模式"><a href="#模式" class="headerlink" title="模式"></a>模式</h4><p>不同的游戏模式可能意味着完全不同的游戏机制，让玩家知道自己处在哪个模式很重要<br>很多时候，都有一种主模式以及几个子模式</p><blockquote><p>玩家永远不该花费太长时间在子游戏内，以致于忘记了在主游戏里做什么。 —— 席德·梅尔</p></blockquote><blockquote><blockquote><p>不知道这里的“子游戏”是否涵盖“支线任务”之类的呢<br>随着游戏体量增大，也会存在部分玩家其实是为了“主游戏”之外的部分而来的情况</p></blockquote></blockquote><h4 id="执法者"><a href="#执法者" class="headerlink" title="执法者"></a>执法者</h4><p>传统游戏中，由玩家自己/裁判来确保规则得以执行<br>电子游戏中，有时必须让电脑来执行规则，这也解放了玩家，他们只需要不断尝试即可，无需反复查看规则</p><p>某种意义上，曾经的“规则”现在成了游戏世界里的物理限制<br>许多游戏规则借由空间、对象、动作的设计来实施</p><p>要把复杂电子游戏的规则做得让玩家可以自然地发现、理解——而不是只能强行记忆</p><blockquote><blockquote><p>所谓“符合直觉”的设计</p></blockquote></blockquote><h4 id="可作弊性"><a href="#可作弊性" class="headerlink" title="可作弊性"></a>可作弊性</h4><p>游戏之所以需要一个执法者是为了防止作弊</p><p>如果玩家开始相信你的游戏是“可作弊的”（即使不是），设计师努力开发的内在价值就会消失<br>如果游戏能作弊，有些人就会试图作弊，大多数人便不再想玩</p><h4 id="最重要的规则"><a href="#最重要的规则" class="headerlink" title="最重要的规则"></a>最重要的规则</h4><p>游戏的一切的基础是一条规则：游戏目标</p><p>游戏就是实现目标，一定要能把游戏目标说得清楚明白</p><p>通常游戏不只有一个目标，而是目标序列——需要将每一项目标依次说明，且阐明关系<br>要是玩家理解不当，就不能继续有把握的行动</p><p>比如国际象棋的目标——吃掉对方国王</p><p>玩家越容易理解目标，就越能想象自己实现目标的样子，越有可能想玩你的游戏</p><p>要让玩家一直有事可做、满怀动力，架构一套清晰目标/任务极为重要。</p><p>优秀游戏目标的特征：</p><ol><li>具体<br>玩家清楚了解并能讲述自己应该达成什么</li><li>可行<br>玩家需要觉得自己有机会达成目标</li><li>回报丰厚<br>请使用 20 号透镜——愉悦来找出奖赏玩家、让玩家为成就而自豪的各种方法。<br>奖励达成目标的玩家固然重要，让玩家在达成目标之前就觉得这目标奖赏丰厚也非常，甚至更加重要<br>但注意不要把期望吊得太高，以免失望</li></ol><p>让游戏中每个目标都具有这些特质颇为重要<br>让游戏中短期、长期的各种目标达到平衡，也很重要。目标的平衡会让玩家感觉自己了解眼下该做什么，并最终能达成一件重大成就。</p><h4 id="32-号透镜：目标"><a href="#32-号透镜：目标" class="headerlink" title="32 号透镜：目标"></a>32 号透镜：目标</h4><p>为确保游戏目标适当且均衡，问自己：</p><ul><li>游戏终极目标是什么</li><li>终极目标对玩家明确吗</li><li>如果有一系列目标，玩家明白吗</li><li>不同目标是否以一种有意义方式互相关联</li><li>目标是否具体、可行、回报丰厚</li><li>短期和长期目标是否平衡</li><li>玩家有无机会决定自己的目标</li></ul><p>同时拿起玩具、好奇、目标透镜，观察游戏这些方面如何互相影响</p><h4 id="规则总结"><a href="#规则总结" class="headerlink" title="规则总结"></a>规则总结</h4><p>规则是一切游戏机制的基础。<br>不是规则定义了游戏。游戏即其规则。</p><h4 id="33-号透镜：规则"><a href="#33-号透镜：规则" class="headerlink" title="33 号透镜：规则"></a>33 号透镜：规则</h4><p>深刻观察游戏，直到能辨别最基础架构，回答：</p><ul><li>游戏中的基本规则是哪些，这些规则和操作规则有何不同</li><li>开发过程中有没有形成“条例”或“房规”，这些是否应该直接纳入游戏中</li><li>游戏中有不同模式吗？这些模式让一切更简单还是更复杂？减少一些模式会让游戏更好玩吗？还是增加模式？</li><li>谁来执行规则</li><li>规则是简单易懂，还是有晦涩之处？如果有晦涩之处需要修订，应该修改规则还是更清楚地解释规则？</li></ul><p>常见误解是以为设计师做下来写一套规则就能做出游戏。一般不是。游戏规则是在实验中逐步完善的。设计师的头脑一般都在“操作规则”领域里工作，偶尔在思考怎样调整、改善游戏的时候，才切换到“基础规则”视角。“书面规则”一般在游戏能玩之后，接近收尾时形成。确保规则覆盖到每一种可能情况，是设计师的工作。一定要在试玩的同时做好记录，因为正是试玩过程会暴露出规则漏洞——如果只是随便修修补补，不认真记录，同样的漏洞会再现。<br>游戏即其规则，不可不在规则上花费足够时间和思量。</p><h3 id="机制-6：技巧"><a href="#机制-6：技巧" class="headerlink" title="机制 6：技巧"></a>机制 6：技巧</h3><blockquote><p>成功的度量有许多种。 —— 西塞罗</p></blockquote><p>每个游戏都需要玩家实践特定技巧。若玩家技巧与游戏难度相符，玩家就会感到挑战，并能保持“心流”状态。</p><p>技巧可以大致分为三类：</p><ol><li><p>身体技巧<br>涉及力量、灵巧、协调性和耐力<br>是大多数体育的重要组成部分<br>有效操控游戏控制器也是一种身体技巧<br>很多游戏（如《舞力全开》）要求玩家拥有的身体技巧就更广泛</p></li><li><p>心智技巧<br>包含记忆、观察、解谜的技巧<br>少有不包含心智技巧的游戏<br>游戏之所以有趣就在于做出有趣决定<br>做决定也是一种心智技巧</p></li><li><p>社交技巧<br>包括阅读对手（猜测其想法）、愚弄对手、配合队友等<br>通常的社交技巧指交朋友、影响他人的能力<br>游戏中，社交和沟通技巧范围更广泛<br>扑克很大程度是一款社交游戏，因为太多内容基于隐藏自己想法、猜测别人想法<br>体育中也有使用技战术来“让对手紧张”的部分</p></li></ol><h4 id="真实技巧与虚拟机能"><a href="#真实技巧与虚拟机能" class="headerlink" title="真实技巧与虚拟机能"></a>真实技巧与虚拟机能</h4><p>讨论作为游戏机制的技巧时，说的是玩家必须拥有的真实技巧<br>玩家在游戏中所获得的技能等算是虚拟机巧——玩家假装拥有的技能</p><p>虚拟技能是让玩家有力量感的绝佳手段<br>但若是使用过度，可能也会落空——许多人批评 MMO 过于强调虚拟机能，对真实技巧重视不足<br>要制作好玩的游戏，关键在于找到真实和虚拟机巧的 完美搭配</p><h4 id="列举技巧"><a href="#列举技巧" class="headerlink" title="列举技巧"></a>列举技巧</h4><p>用一张表列出游戏中所需的全部技巧，可能非常有用。</p><p>你的列表可能很宽泛，可能很具体</p><p>列出技巧可能会很困难，如 RC Pro Am，NES 上的一款赛车游戏</p><ul><li>操作方式<ul><li>方向键（左手大拇指） - 操控车辆</li><li>A（右手大拇指） - 加速</li><li>B（右手大拇指） - 向敌人开火</li></ul></li><li>考察<ul><li>解决问题能力<ul><li>一般游戏中要想按 B 键一般会先松开 A 键</li><li>该游戏中若是松开 A 键敌人就会加速跑掉 —— 所以需要练习如何同时按下 AB 键</li></ul></li><li>其他技巧<ul><li>资源管理 —— 不要用光导弹/地雷</li><li>记忆赛道</li><li>急转弯</li><li>意外危险</li></ul></li></ul></li></ul><p>作为设计师，需要知道玩家需要什么技巧来解决你所设计的问题</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220621005953.png"></p><h4 id="34-号透镜：技巧"><a href="#34-号透镜：技巧" class="headerlink" title="34 号透镜：技巧"></a>34 号透镜：技巧</h4><p>不观察游戏本身，观察游戏要求玩家发挥的技巧。</p><ul><li>游戏需要玩家拥有何种技能</li><li>其中是否缺少某个类别技能</li><li>哪些技能占主导地位</li><li>这些技能是想要创造的体验吗</li><li>是否有一些玩家的这些技能远超其他玩家？是否会让游戏感觉不公平？</li><li>玩家能否通过练习提高技巧，从而感觉掌握了游戏</li><li>游戏需要的技巧水平合适吗</li></ul><p>发挥技巧可以让人很快乐——这是人们喜爱游戏的一大原因<br>当然了，技巧水平和难度需要处于“心流”区间<br>技巧很大程度上定义体验，技巧透镜和 2 号透镜“本质体验”结合使用，效果很好。</p><h3 id="机制-7：概率"><a href="#机制-7：概率" class="headerlink" title="机制 7：概率"></a>机制 7：概率</h3><p>这是七大机制中的最后一个，其中涉及前面所有机制：时间、空间、对象、行动、规则、技巧的相互作用。</p><p>概率意味着不确定性，意味着惊喜。<br>惊喜是人类愉悦的重要来源，乐趣的秘密原料。</p><p>永远不要以为概率理所当然。<br>优秀游戏设计师一定要对概率有敏感直觉、也要牢固掌握概率原理，按照意志塑造概率，令创造出的体验充满挑战性决策和好玩的惊喜。</p><h4 id="概率的发明"><a href="#概率的发明" class="headerlink" title="概率的发明"></a>概率的发明</h4><p>概率的发明是为了解释游戏设计的目的。</p><blockquote><p>他是个好人，可惜不是数学家。 —— 帕斯卡对费马评论安托万·贡博</p></blockquote><p>1654 年，法国贵族 Antoine Gombaud, the Chevalier de Mere 遇到一个问题</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220621140357.png"></p><h4 id="游戏设计师必知的十大概率原则"><a href="#游戏设计师必知的十大概率原则" class="headerlink" title="游戏设计师必知的十大概率原则"></a>游戏设计师必知的十大概率原则</h4><ol><li><p>分数=小数=百分数</p></li><li><p>从零到一就好了<br>即概率范围为 [0,1]</p></li><li><p>$概率 = \frac{想要的结果会出现的次数}{可能的结果的总次数}$</p></li><li><p>枚举<br>若是面对“丢一枚硬币三次，至少出现两次头的概率”这种问题，可以采取枚举的办法将所有可能列出（H 表示头，T 表示另一面），易知共有 $2^3 = 8$ 种可能情况：</p></li></ol><ol><li>HHH</li><li>THH</li><li>HTH</li><li>HHT</li><li>THT</li><li>HTT</li><li>TTH</li><li>TTT<br>所以针对出现两次头这一问题，其出现为 1234，即四种，所以概率为 4/8<br>枚举法只适用于可能性较少的问题</li></ol><ol start="5"><li>特定情况下“或”意为“加”<br>很多时候要确定“A 或 B 的概率”，如“从一幅牌中抽出人头或者 A 的概率”，此时只需要将“抽出人头的概率”和“抽出 A 的概率”相加就可。</li></ol><blockquote><blockquote><p>互斥事件，二者互不影响，不会同时发生</p></blockquote></blockquote><p>所以此时的概率为 $\frac{12}{52} + \frac{4}{52} = \frac{16}{52}$</p><p>但对于另一种问题，就不能直接加和。如“从一幅牌中抽出一个 A 或是一个方片的概率”，二者并不是互斥事件（有可能抽出的是方片 A），所以概率不能直接加和。</p><p>此时的概率的其中一种算法是 $抽出 A 的概率 + 抽出方片的概率 - 抽出方片 A 的概率 = \frac{4}{52} + \frac{13}{52} - \frac{1}{52} = \frac{16}{52}$</p><ol start="6"><li>特定情况下“和”意为“乘”</li></ol><p>该规则和前一条几乎正相反！如果要找出两事件同时发生概率，可以将概率相乘，但只有这两个事件不是互斥的才行！<br>如果想掷两次骰子，想得出两次都为 6 的概率，则为 $\frac{1}{6} * \frac{1}{6} = \frac{1}{36}$<br>对于上面提到过的，抽到方片 A 的概率，虽然自然能想到是 $\frac{1}{52}$ ，也可以用该规则检查一下 $抽到方片 A 的概率 = 抽到方片的概率 * 抽到 A 的概率 = \frac{13}{52} * \frac{4}{52} = \frac{1}{52}$ 也是一样的</p><p>此时思考游戏一</p><ul><li>游戏 1：掷一粒骰子四次，有一次为 6 则获胜<br>此时要算获胜概率，可以用这样的方法：<br>$$ 获胜概率 = 1 - 四次都不是六的概率 = 1 - \frac{5}{6} \times \frac{5}{6} * \frac{5}{6} * \frac{5}{6} = \frac{671}{1296} = 51.77% $$<blockquote><blockquote><p>哦 这是规则 7 要引入的方法哈哈，那规则六就截图一下好了</p></blockquote></blockquote></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220625004524.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220625004541.png"></p><ol start="7"><li>1 - “是” = “不是”</li></ol><p>思考第二个游戏，每次投两个骰子，一共  24 次，只要其中一次点数为 12 则获胜，则获胜概率为</p><p>$$获胜概率 = 1 - 24 次非 12 的概率 = 1 - (单次非 12 的概率)^{24} = 1 - (1-单次 12 的概率)^{24}$$<br>$$ = 1 - (\frac{1}{6}*\frac{1}{6})^{24} = 1 - (\frac{35}{36})^{24} = 49.14%$$<br>8. 多个线性随机选择的总和不是线性随机选择！</p><p>一个“线性随机选择”是一个随机事件，其中所有结果发生概率相同<br>掷一次骰子就是线性随机选择的例子<br>可若把多次投骰子的结果相加，所有可能结果发射的概率就不相等，如，投两个骰子，很大概率投出 7，很小概率得到 12：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220625005650.png"><br>同时也可以画出其概率分布图：<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220625005713.png"></p><p>新手游戏设计师常误将两个随机选择的数字相加，却对其后果浑然不觉。<br>设计师若想在游戏中运用概率机制作为工具，必须清楚想要怎样的概率曲线，还要知道怎么得出。概率分布曲线会成为工具箱中很有价值的工具。</p><ol start="9"><li>掷骰子<br>以上的所有概率都是理论概率，即数学上看什么理应发生。<br>还有一种实际概率，用于衡量什么已经发生。<br>如投骰子得到一个 6 的理论概率为 $\frac{1}{6}$ ，可以通过投一个 6 面骰子100 次，记录得到 6 的次数，找出实际概率。实验次数越多，实际概率就越接近理论概率。这就是“蒙特卡洛方法”，以那座著名赌场命名。<br>蒙特卡洛方法的优点：简单，不涉及任何复杂数学，只需要重复测试。</li></ol><p>计算机时代，计算机可以在短时间内进行大量模拟。可以运用 Joris Dormans 创造的 Machinations 系统，该系统专门设计来为游戏玩法系统建模，并通过反复模拟来展示结果规律。</p><ol start="10"><li>极客爱炫耀（贡博定律）<br>这可能是一切概率准则中最重要的一条。忘了别的也不能忘了这条。<br>碰到难搞定的概率问题，最简单的做法是找到自认是“数学神童”的人。<br>一般而言，这些人发现真有人需要他们的专业技能，都会很激动，并且使出浑身解数来帮你。</li></ol><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220625010607.png"></p><blockquote><blockquote><p>可真是让人哭笑不得 (￣▽￣)”</p></blockquote></blockquote><h4 id="期望值"><a href="#期望值" class="headerlink" title="期望值"></a>期望值</h4><p>游戏中，一次数据处理的期望值等于所有可能结果的平均值。</p><p>如，一个桌面游戏规定，当一个玩家走上绿色方块，可以投六面骰子，得到结果所示的能量点数。该事件的期望值是所有可能结果的均值。要得到该案例中的均值，因为所有结果概率相等，将所有结果相加然后除以六就能得到 $(1+2+3+4+5+6)/6 = 3.5$ ，即 “每次有人走到绿色方块，平均能得到 3.5 点能量”，这一消息对于设计师而言很有用。</p><p>对于更复杂的情况，计算期望，需要把概率乘以各自的值，再相加。<br>如对于一个游戏，一个玩家投两个骰子，若是 7 或 11，则得 5 美元，其他结果输 1 美元，其期望为：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220625011506.png" alt="7 和 11 会赢"><br>若只有 7 会赢<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220625011800.png" alt="只有 7 会赢"><br>若只有 11 会赢<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220625011809.png" alt="只有 11 会赢"></p><h4 id="仔细考虑数值"><a href="#仔细考虑数值" class="headerlink" title="仔细考虑数值"></a>仔细考虑数值</h4><p>考虑一下三种攻击：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220625011950.png"></p><p>三者期望各是多少呢？<br>疾风：$4 * 1 = 4$<br>火球：$5 * 0.8 + 0 <em>0.2 = 4$<br>闪电：$40 * 0.2 + 0 * 0.8 = 20$<br>也许你会得出结论，玩家面对敌人肯定会使出攻击期望最高的闪电。<br>对于生命高达 500 的敌人，可能如此。但若是敌人只有 15 点生命，可能玩家就不会再选择使用闪电 —— 此种情况下，闪电造成伤害的期望为 $15</em>0.2+0*0.8=3$ ，低于另外二者</p><p>一定要随时注意衡量游戏中所有行动的真实价值。<br>如果什么东西给玩家的好处不能使用，或包含隐藏惩罚，计算中一定要考虑到</p><h4 id="人为因素"><a href="#人为因素" class="headerlink" title="人为因素"></a>人为因素</h4><p>期望值不能完全预测人的行为，因为人们会根据“感知期望”而不是实际期望来做决策。<br>比如他们用了几次闪电之后发现都 miss 了，可能就会得出“闪电根本打不中”，所以伤害期望为 0 的“感知期望”。</p><p>有时就算给出完美信息，玩家仍然不会选择期望值最高的选项。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220625012632.png"></p><p>原因在于，期望没有考虑重要的人为因素：后悔。人们会趋利避害。</p><blockquote><p>当讨论到获利时的冒险，大家都保守。他们愿意确保获利，胜过可能获利。但我们也发现，人们面对选择，是小额必然损失还是大额可能损失时，他们会赌。</p></blockquote><p>这也是《智龙迷城》（Puzzle &amp; Dragons）成功的一大缘由：玩家在死亡后愿意付出现实里的小额金钱来复活，避免小额必然损失。</p><p>大脑对很多事情的概率估计是不准确的：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220625013125.png"></p><p>作为设计师，不光要考虑实际概率，也要考虑感知概率。</p><h4 id="35-号透镜：期望值"><a href="#35-号透镜：期望值" class="headerlink" title="35 号透镜：期望值"></a>35 号透镜：期望值</h4><p>思考游戏内发生的各种不同事件，以及它们对玩家的意义</p><ul><li>某件事发生的实际概率？</li><li>其感知概率？</li><li>这件事的结果的价值？价值能否被量化？有没有没考虑到的无形价值？</li><li>把所有可能结果相加，玩家所有行为都有不同期望。对这些值满意吗？是否给玩家有趣的选择？会不会奖赏太多？或惩罚太多？</li></ul><p>期望值是分析游戏平衡的有力工具。难点是某些可能性的量化，如“拥有了传送门道具”，但还是可以猜。<br>调整参数就是调整对结果数值的估计。<br>量化这些偏无形的元素可能很有启发，因为这能让你接地气地思考对玩家有价值的东西是什么，以及为什么。<br>这些接地气的知识，能让你控制游戏平衡性。</p><h4 id="纠结的技巧和概率"><a href="#纠结的技巧和概率" class="headerlink" title="纠结的技巧和概率"></a>纠结的技巧和概率</h4><ol><li><p>估算概率是一种技巧<br>有无估算技巧的玩家，在游戏中感知到的概率或许差距甚大<br>如会算牌的和不会算牌的</p></li><li><p>技巧都有成功概率<br>游戏行为因为引入了人这一不确定因素，所以不完全由概率决定。设计游戏时要确保风险平衡</p></li><li><p>估计对手的技巧也是种技巧<br>预判对方行动<br>或者扮猪吃老虎<br>都是策略</p></li><li><p>预测纯概率是一种想象中的技巧<br>我们对规律的狂热往往促使我们寻找本不存在的规律<br>如“热手谬误”（已经连赢好几次了，下次也可能赢）<br>“赌徒谬误”（已经连输好几次了，下次一定会赢）<br>作为设计师，要想办法利用玩家的想象</p></li><li><p>控制纯概率是一种想象中的技巧<br>大脑不仅积极寻求规律，还拼命寻求因果<br>纯概率情况下，根本无法控制因果——但这并不能阻止大家用某种特定手法投骰子、佩戴护身符、或进行某种迷信仪式。虽然这些对于纯概率游戏毫无影响，但其实这些行为也是游戏乐趣的重要来源。</p></li></ol><blockquote><blockquote><p>想到了鸽子的迷信仪式实验 233</p></blockquote></blockquote><h4 id="36-号透镜：概率"><a href="#36-号透镜：概率" class="headerlink" title="36 号透镜：概率"></a>36 号透镜：概率</h4><p>专注于游戏中包含随机和风险的部分，时刻记住两者有不同之处<br>问自己</p><ul><li>游戏中真正随机的内容是什么？哪些部分只是感觉起来随机</li><li>随机性给玩家的，是刺激和挑战等积极情感，还是绝望和缺乏控制等消极情感</li><li>改变概率分布曲线能改进游戏吗</li><li>玩家能在游戏中冒各种有趣风险吗</li><li>游戏中，概率与技巧有何关系？有没有办法让随机元素感觉像是在发挥技巧？有没有办法让发挥技巧感觉像是在冒风险？</li></ul><p>风险和随机性就像香料。完全不加的游戏可能淡而无味，加多了又会遮盖游戏原本味道。要运用得恰到好处。<br>要运用，需要深入观察游戏，看看风险和随机性在何处自然浮现，然后决定如何驯服之，令其为你服务。<br>不要陷入思维陷阱，以为投骰子或者生成随机数才会产生概率相关元素。正相反，在玩家遭遇未知的每个时刻，你都能找到它们。</p><hr><h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><h3 id="第十二章-有些元素是游戏机制-1"><a href="#第十二章-有些元素是游戏机制-1" class="headerlink" title="第十二章 有些元素是游戏机制"></a>第十二章 有些元素是游戏机制</h3><ul><li><p> 《游戏机制:高级游戏设计技术》 (Game Mechanics: Advanced Game Design) Ernest Adams和Joris Dormans合著。本书包含大量精彩翔实的细节,讲解多种游戏机制如何互相影响。并介绍了如何使用优秀的Machinations系统模拟你的游戏设计。</p></li><li><p>《The Oxford Book of Board Games》 , David Parlett著。本书包含更多有关Parlett规则分析的细节,同时介绍了一些前几个世纪优秀但不为人知的桌面游戏。</p></li><li><p> 《Uncertainty in Games》 , Greg Costikyan著。此书深刻洞见了游戏中概率与不确定性的本质,令人叹为观止。我每次阅读都有新的所得。</p></li></ul><p> - 《The Unfinished Game: Pascal, Fermat, and the Unfinished Letter that Made the World Modern》 , Keith Devlin著。如果想要更细致地了解概率论发明的故事,读此书就够了。</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 第十一章 玩家的动机驱使着玩家的脑</title>
      <link href="2022/06/05/20220605-theartofgamedesign-chap11/"/>
      <url>2022/06/05/20220605-theartofgamedesign-chap11/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="第十一章-玩家的动机驱使着玩家的脑"><a href="#第十一章-玩家的动机驱使着玩家的脑" class="headerlink" title="第十一章 玩家的动机驱使着玩家的脑"></a>第十一章 玩家的动机驱使着玩家的脑</h2><p>先来面对一个残酷现实：<br>游戏根本不重要。</p><p>一切娱乐活动其实都是这样。</p><p>人类行事、决策总有动机，了解动机，可以帮助设计师们进行更有针对性地设计。</p><h3 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220608231724.png" alt="马斯洛需求金字塔"></p><p>若是低层次需求没有满足，人就不会去追求高层次需求。</p><p>许多游戏活动追求成就，要求练习以至精巧熟练，处于第四层，自尊。<br>但也有些满足低层次需求的游戏。</p><p>多人游戏吸引人的原因是——所满足需求比单人游戏更基础。</p><p>可以说《我的世界》（Minecraft）之所以成功，是其内容覆盖了金字塔的全部层次。这个游戏用幻想的环境覆盖最低两层（收集资源，建造安全居所），然后以成就和技巧主导的多人游戏覆盖上三层。</p><p>游戏若能让你感到与他人连接，也能带来成就感，使你得以创造事物来表达自己，满足上三层需求。从这个角度看，有在线社区工具来自行创造内容的游戏能长盛不衰，有其道理。</p><blockquote><blockquote><p>这也便是我之前读《乌合之众》后所想，即未来游戏对于“自己实现”的满足：<a href="https://medill-east.github.io/2022/06/04/20220604-after-reading-the-crowd/">群体语境下无归属玩家的个人叙事是否可能</a></p></blockquote></blockquote><h3 id="更多需求"><a href="#更多需求" class="headerlink" title="更多需求"></a>更多需求</h3><p>马斯洛之后，也有研究者提出关于需求的新观点。</p><p>Edward Deci 和 Richard Ryan 的研究与游戏尤其相关，二人对所谓“自我决定论”的发展有重大贡献。他们说，人类不仅有生理需求，也有心理需求——不仅是“想要”、“很想要”，而是真实的需求。而且他们精确提出了三大精神需求：</p><ol><li>胜任：我需要觉得自己擅长做些什么</li><li>自主：我需要按自己的方式做事的自由</li><li>关联：我需要和其他人建立联系</li></ol><p>游戏倾向于充分满足这三项需求。<br>游戏设计得可以让你感觉精通、可以驾驭<br>游戏让你自由发挥喜欢的玩法，你甚至可以随时退出<br>大部分游戏被设计为与他人一起玩，帮助你形成社会连接</p><h4 id="22-号透镜：需求"><a href="#22-号透镜：需求" class="headerlink" title="22 号透镜：需求"></a>22 号透镜：需求</h4><p>要使用此透镜，先不要考虑你的游戏本身，改为考虑它满足人类的哪些基础需求。<br>问自己这些问题:</p><ul><li>我的游戏主要运作在马斯洛层次的哪一层？</li><li>我的游戏是否满足“胜任、自主、关联”的需求？</li><li>我怎样让游戏在现有水平上，满足更多基础需求?</li><li>游戏已经满足的需求，怎样令其满足得更好？</li></ul><p>说游戏能满足人类的基础需求，虽有点奇怪，但人类的一切行为，都是在以某种方式满足这些需求。记住，有些游戏比其他游戏更能满足需求——所以你的游戏不能仅仅对需求做出承诺，而要切实满足。玩家本来以为玩你的游戏能够让自己感觉良好，或者和朋友交往更密，结果你的游戏没能满足需求，玩家就会改玩其他能满足的游戏了。</p><h3 id="内在动机、外在动机"><a href="#内在动机、外在动机" class="headerlink" title="内在动机、外在动机"></a>内在动机、外在动机</h3><p>另一种考量动机的方式，是观察其来源。</p><p>内在动机：自己想做，不在乎实质性奖励<br>外在动机：有外界原因（如物质奖励）导致自己去做</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220608232936.png" alt="内在与外在动机"></p><p>内在与外在并非二元对立，存有过渡。动机来自“真实自我”越多，就越偏向内在。</p><p>游戏设计师需要清楚自己游戏中的各种动机的构成方式。外在动机会成为内在动机的 debuff。</p><blockquote><blockquote><p>可看 <a href="https://medill-east.github.io/2022/06/01/20220601-gcores-playbeyondthegame/">机核 游戏理论系列播客笔记</a> 里，“为什么玩游戏”部分里面有关内在动机和外在动机的实验例子。</p></blockquote></blockquote><h3 id="想做和得做"><a href="#想做和得做" class="headerlink" title="想做和得做"></a>想做和得做</h3><p>追求愉悦和规避痛苦，属于脑中两个不同的系统。而这不是从痛苦到愉悦的连续取件，而是两套不同的动机回路。人们经常把追求愉悦和规避痛苦都归类到“动机”里，不加思考。但一旦将二者分开考虑，能发现有趣的事情。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220608233542.png"></p><p>很多游戏动机是追求愉悦，但不尽然。<br>还有很多游戏核心是规避痛苦。<br>躲避敌人，坚持不死，就处于痛苦回避模式。挖出星星，打出连招，则处于愉悦追求模式。两者都是有效动机，结合起来的效果也很好。</p><p>但这种结合有时会失衡。如一些 free to play 游戏，前期很爽快，在追求愉悦，但后来就会告诉你如果不连续上线就拿不到奖励，就变成了规避痛苦。</p><blockquote><blockquote><p>也想到了损失厌恶效应：面对等量收益和损失，用户对于损失十分厌恶。即用户倾向于避免损失，同量损失带来的负效用为同量收益的正效用的 2.5~3 倍。<br>比如来了给你 100，不来就扣你 100。人们会觉得来了得到的 100 其实还行，但被扣掉的 100 让人不能忍受。这反过来可能会被设计师利用来加强上线率哈哈。</p></blockquote></blockquote><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220608233744.png" alt="人类动机的分类"></p><h4 id="23-号透镜：动机"><a href="#23-号透镜：动机" class="headerlink" title="23 号透镜：动机"></a>23 号透镜：动机</h4><p>每个游戏都是由动机组成的复杂生态系统。要细致地加以研究，请问自己这些问题:</p><ul><li>玩家因何种动机来玩我的游戏？</li><li>其中哪些动机是最内在的？哪些是最外在的？</li><li>哪些是追求愉悦的？哪些是规避痛苦的？</li><li>哪些动机互相支撑？</li><li>哪些动机互相抵触？</li></ul><h3 id="创新"><a href="#创新" class="headerlink" title="创新"></a>创新</h3><blockquote><p>毫无疑问，这世上最流行的东西就是新奇。 —— 马克·吐温</p></blockquote><p>渴求新奇是玩家持续进行游戏的一大动力——玩家相信，下一关会有新东西出现，才刺激他打通这一关。</p><p>创新中的最强的方式，是带来全新的思考方式。如《传送门》（Portal）的广告宣传就是“现在，你用传送门来思考（now, you’re thinking with portals）”。这个游戏的机制让你用全新方式思考世界。新思路可以扩展我们的大脑，让我们感觉无比畅快</p><p>但是要记得，世界上还有件事叫过犹不及。每个成功游戏都是新鲜与熟悉的混合体。许多优秀游戏因为超前于时代而失败。创新可以赢得口碑，推动早期销量，但如果没有坚实游戏本体，玩家们会来得快，去得快。</p><h4 id="24-号透镜：创新"><a href="#24-号透镜：创新" class="headerlink" title="24 号透镜：创新"></a>24 号透镜：创新</h4><blockquote><p>不同的未必总是好，更好的总是不同。 ——  斯科蒂·梅尔策(Scotty Meltzer)</p></blockquote><p>为了驾驭追求新奇的强大动机，请问自己这些问题:</p><ul><li>我的游戏有何新奇之处?</li><li>新奇之处是贯穿我的游戏，还是仅限于开头?</li><li>新奇和熟悉的混合感觉对吗?</li><li>新奇感褪去后，玩家还喜欢玩我的游戏吗?</li></ul><h3 id="评断"><a href="#评断" class="headerlink" title="评断"></a>评断</h3><p>马斯洛需求第四层，尊重，与游戏相连最紧密。为什么？所有人内心深处都有一个共同需求，就是需要他人评断（译者注：英文有俗语“don’t judge”，典出圣经，不要评断人，免得被评断。此处“评断”尤指擅自批评、干涉，因此作者有此语）。听起来好像不对劲，大家不是不喜欢被评断吗？确实——大家只是讨厌受到不公评断。内心深处，我们需要知道自己到底几斤几两。当评断让我们不开心，就会加倍努力，直到获得想要评断为止。游戏最吸引人的一点，就是可以系统且出色地给人客观评价。</p><h4 id="25号透镜：评断"><a href="#25号透镜：评断" class="headerlink" title="25号透镜：评断"></a>25号透镜：评断</h4><p>要了解你的游戏是否能评断好玩家，问自己这些问题:</p><ul><li>针对玩家，你的游戏都评价些什么?</li><li>游戏怎样传达这种评断?</li><li>玩家觉得评断结果公平吗?</li><li>他们在意评断结果吗?</li><li>评断结果是否让他们想要加强能力?</li></ul><hr><h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><h3 id="第十一章-玩家的动机驱使着玩家的脑-1"><a href="#第十一章-玩家的动机驱使着玩家的脑-1" class="headerlink" title="第十一章 玩家的动机驱使着玩家的脑"></a>第十一章 玩家的动机驱使着玩家的脑</h3><ul><li><p> 《黏上游戏(Glued to Games) 》 , Scott Rigby和Richard M. Ryan著。这本书深刻介绍了自我决定理论,以及游戏之所以为游戏的原因。</p></li><li><p>《奖赏的惩罚(Punished by Rewards) 》 Alfie Kohn著。这本书很好地概括了对外在奖励之负面影响的许多研究成果。</p></li><li><p>《理解动机与情感(Understanding Motivation and Emotion) 》Johnmarshall Reeve著。如果你不满足于粗浅的理解,预备进一步钻研动机与情感的作用机制,这本大学教材可以充分介绍对这个主题的心理学研究。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220604 - Thinking after the reading of 《The Crowd - A Study of the Popular Mind》</title>
      <link href="2022/06/04/20220604-after-reading-the-crowd/"/>
      <url>2022/06/04/20220604-after-reading-the-crowd/</url>
      
        <content type="html"><![CDATA[<h2 id="Why"><a href="#Why" class="headerlink" title="Why"></a>Why</h2><p>看完《乌合之众》后，和老友的讨论引出了这寥寥千字。</p><h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><h3 id="问题的引入"><a href="#问题的引入" class="headerlink" title="问题的引入"></a>问题的引入</h3><blockquote><p>著名思想家戈布莱·达尔维拉先生说，他不属于任何当代学派，那些学派的各种结论都有各种各样的谬误，与他得出的结论完全不同。如果自己属于某个学派，必然会受其观点和信念的影响，带着先入为主的意见和偏见看待各种事物的特征。<br>—— 古斯塔夫·勒庞</p></blockquote><p>即使到了现在，我仍旧不确定我将围绕什么来展开。</p><p>看完《乌合之众》之后，其实并没有太强烈的感受。这是我第二次看完，比起第一次，多了的应该说是中间观看过程中的联想。</p><p>因为想到了群体力量，所以去重看了《浪潮》；因为想到了群体无意识，所以去看了《漫画荣格》；又因为毕设中正好涉及到他人在场如何影响个体的社会促进效应，所以连带着看了一部分《社会认同过程》。目的都是为了能更好地找到合适角度来切入。</p><p>作为策划，当然应该试着以设计师的身份来解读其意义，即如何将人的社会性与游戏结合在一起，与老友的讨论最终导向了这么一个问题——群体语境下无归属玩家的个人叙事是否可能？</p><h3 id="概念定义"><a href="#概念定义" class="headerlink" title="概念定义"></a>概念定义</h3><p>首先对问题中所涉及的概念进行一下定义。</p><p>“群体”在这里指的是由社会范畴（social categories）所构建的人群划分。划分标准通常包括：民族、国家、种族、阶级、职业、性别、宗教等。游戏中的社会范畴可能包括：种族、队伍、门派、阵营等。</p><p>“无归属”这里指的是一种对其所属群体没有认同的心理状态，并非其真的没有群体归属。举个不那么恰当的例子，在游戏中，我虽然实际意义上属于某个阵营（即范畴所构建的群体），但我在心理上并没有对于该阵营的归属感或身份认同，却没有办法离开（可能因为阵营的设定是强制的）的情况。</p><p>“个人”在这里指的是由各种社会范畴所交叉界定的，归属于某些特定范畴的个体。游戏语境下自然就是一个个玩家。</p><p>“个人叙事”在这里指代的是荣格所提的“自己实现”的概念，即从集体无意识支配中的分化（也被称为个性化）过程。</p><blockquote><p>自我是意识中心，自己是心理中心（包含意识与无意识）。<br>按《漫画荣格：内心深处结构的解析》中所提，自己实现所指的是碰到问题，自我看到阴影，借此机会看到部分自己，而后摆脱这部分自己的过程，或者用其话语，即将这部分原本属于集体无意识中支配的部分分化的过程。</p></blockquote><h3 id="问题细化"><a href="#问题细化" class="headerlink" title="问题细化"></a>问题细化</h3><p>结合上面的概念定义，对于问题的更具体描述就是，在游戏情境下，被游戏内的范畴所界定的玩家，在对自己所属的群体没有身份认同的情况下，是否有自己实现的可能。</p><p>需要明确的是，对于这个问题的讨论，会基于两个大的不同语境：一个是着眼当下的游戏语境，另一个是放眼未来的游戏语境。</p><blockquote><p>未来的游戏语境：假设届时游戏与现实息息相关，某种程度上是另一个现实（another reality）。</p></blockquote><p>首先需要回答几个问题：</p><h4 id="身份认同相关"><a href="#身份认同相关" class="headerlink" title="身份认同相关"></a>身份认同相关</h4><ul><li>身份认同意味着什么？</li></ul><p>基于社会认同路径的观点：归属于某个群体（无论规模和分布如何）在很大程度上是一种心理状态（psychological state），这样的状态与个体茕茕孑立时的心理状态截然不同。</p><p>归属于一个群体就会获得一种社会认同 social identity，或者说一种共享的/集体的表征 representation，它关乎“你是谁”，“你应该怎样行事才是恰当的”。<br>与社会认同相关联的心理过程会形成明显的“群体”行为，如群体内部的团结，对群体规范的遵从，以及对外群的歧视。</p><ul><li>玩家身份认同对于游戏设计而言意味着什么？换言之，为什么需要关注玩家身份认同？</li></ul><p>如前所言，玩家若对自己的玩家角色具有身份认同，可以帮助他们回答“是谁”，“该如何行事”等问题，甚至会表现出群际行为（简言之为对内群的友好，对外群的敌视）。</p><p>自决理论（self-determination theory）将人类动机（放在游戏场景下即玩家动机）分为内在动机（如口头鼓励）和外在动机（如物质奖励）。研究表明，内在动机对最终决策的持续力和贡献力度上要胜于外在动机。放在游戏场景下，长远来看，玩家能够不断游玩/持续付费的底层原因是有足够的内在动机（可以想象，玩家身份认同是内在动机中的重要环节）。</p><p>设计师可以反过来利用玩家对于角色的身份认同，来驱动玩家以特定方式行事。<br>如驱使具有“正义”身份认同的玩家做出与自身身份认同相符的行为、促成不同阵营间的对立以及鼓励玩家继续游玩。</p><ul><li>玩家为什么对自己所属的群体没有身份认同？</li></ul><p>首先放到当下游戏语境，没有身份认同的其中一种表现形式（这个例子可能并不够恰当，但确实没办法想到更合适的例子）为：假设游戏中有两种阵营 A 和 B，玩家必须选择阵营之一，但其实玩家既不想选择阵营 A，也不想选择阵营 B，最终只能选择其中之一。这种情况下，可以说玩家对自己所属的群体并没有身份认同。</p><p>若是放到未来游戏语境，假设届时的游戏即为另一个现实，那么可以将那时玩家在游戏中对自己所属群体没有身份认同这一情况约等于现在的玩家在现实中对自己所属群体没有身份认同这一情况。<br>以当下现实生活没有身份认同举例，部分身在美国的华裔，其社会范畴由“美国人”和“中国人”共同界定，但其中一部分人群对两种身份都没有归属感，都没有身份认同。<br>而放眼未来的游戏语境，则可以假设存在部分玩家对其所属的范畴没有身份认同，且由于一些原因没有办法摆脱这些所属范畴。</p><ul><li>玩家没有身份认同意味着什么？</li></ul><p>放在当下游戏语境而言，玩家没有身份认同在某种层面上意味着玩家目标的丧失。反过来可以说是设计师对于玩家目标设计的失误。<br>对于单机游戏，可能的表现为玩家通关率（或是完成率）未能达到设计预期；对于网络游戏，可能的表现为玩家留存率的降低或是付费意愿的降低。</p><p>未来游戏语境中玩家身份认同的丧失一定程度上对应当下现实语境中对现实身份认同的缺失。最终导向的可能是虚无主义。</p><h4 id="自己实现相关"><a href="#自己实现相关" class="headerlink" title="自己实现相关"></a>自己实现相关</h4><ul><li>什么是自己实现</li></ul><p>如前所述，自己实现是自我（意识中心）在碰到问题时看到了阴影，因此看到了部分自己（意识+潜意识的中心），并借此机会摆脱这部分自己的过程。虽然书中所写的是“将这部分原本属于集体无意识中支配的部分分化的过程”，但我个人的理解是将这部分自己内化的过程，即将这部分原本属于集体无意识的部分纳入个人意识范畴的过程。</p><blockquote><p>阴影是隐藏在可以意识到的自己内在的人格的阴暗部分，也可以说是存在于我们的无意识中的未成熟的“另一个自己”。人在梦境中，有时会梦见强盗、小偷、敌人、恶魔等，有时也梦见自己身边的交往不愉快的人。如果自己感到很不顺心，或者感觉自己周围有不能愉快交往的同性，那很可能就是你自己的阴影造成的。</p><p>阴影不一定都是坏事，也蕴藏着创造性和未知的可能性。尽管人们在某种意义上难以解决自己的阴影，但是，在认识到自己阴影的同时就会有很大收获。如果再把阴影融合到意识当中，也许就会发现以前否定的东西中包含着其它的意义，可能还会弥补自己的不足，因此，认识到阴影，将对人格的发展起到非常重要的作用。</p><p>——《漫画荣格：内心深处结构的解析》</p></blockquote><ul><li>为什么要达成游戏中的自己实现？</li></ul><p>在当下的游戏语境下，游戏中的自己实现其实不是一个必须的东西，因为绝大部分游戏都难以做到这点。但一旦能做到，达成自己实现的这部分玩家会在很长一段时间内成为游戏的核心用户，甚至会对游戏厂商达成群体身份认同，即产生“我可是 xx 家的游戏玩家！”的自豪感，从而成为黏性极高的用户。</p><p>而放在未来，私以为这会成为届时的核心竞争力。即是否能给予玩家充分的障碍呈现方式（以增大发现阴影的几率），以及是否能给予玩家充分的交互自由度（即增大玩家发现阴影后，摆脱/内化它的可能性）。</p><ul><li>为什么游戏中的自己实现很难？</li></ul><p>放在当下的游戏语境中，在游戏中的自己实现的可能性受限于有限的游戏呈现方式和有限的玩家选择路径。简言之，就是受制于技术。<br>有限的游戏呈现方式，即玩家所能碰到的有限障碍，这降低了玩家发现阴影（属于自己的被群体无意识支配的部分）的可能性。<br>而有限的玩家选择路径，即玩家所能进行的有限交互方式，减少了玩家发现阴影后，摆脱（或者按我的理解，内化）阴影阴影的可能性。</p><p>放在未来的游戏语境中，技术不再成为限制自己实现的原因。这里假设，到那时，玩家的自己实现可能性会由于独立在场条件的难以达成而降低。</p><blockquote><p>这里的“独立在场”即无他人在场。<br>无他人在场中的“在场”，涵盖现实世界和虚拟世界。<br>而这里的“他人”，包括现实世界中的真人（在未来很可能涵盖现实世界中的 AI）、虚拟世界中由玩家操控的角色和虚拟世界中由 AI 操控的角色。<br>涵盖虚拟人（即 AI 操控的角色）的原因是，社会促进/抑制理论中已有部分研究表明人们对于 AI 的在场表现出了和人类在场同样的行为。<br>可以说，要满足成为“独立的”玩家的条件是苛刻的。并且在未来，随着 AI 在日常生活和游戏中的普及，这也许不再可能。</p></blockquote><p>为什么未来游戏语境中，玩家的自己实现可能性会因为独立在场条件的难以达成而降低呢？</p><p>根据社会促进/抑制理论（social facilitation/inhibition theory），非独立在场条件下，人们的行为会与独立在场条件下有区别，这种区别可能导致自己实现的可能性降低。</p><p>一旦有他人在场，范畴自然出现，即至少会划分为两个范畴（范畴都是依存存在的，可以说不存在单个范畴独立存在的情况）。而无论是《乌合之众》还是《社会认同过程》中已经向我们揭示了，群际关系中群际冲突存在的普遍性以及个体在群群体行为中所表现出的盲目性。在这样的情况下，个体能够发现并摆脱（用我的话说即内化）阴影的可能性会降低。</p><ul><li>为什么需要探讨没有群体身份认同的玩家的自己实现可能性？（为什么没有身份认同的玩家更难自己实现）</li></ul><p>前面已经提到，当下游戏语境下的游戏自己实现大多受制于技术，所以这个问题更多关注未来游戏语境。假设那时的游戏及游戏玩家满足以下条件：</p><ol><li>游戏技术不再受限。<br> 游戏能够为所有玩家提供均等的发现阴影可能性（具有足够内容丰富度）；<br> 且为所有玩家提供均等的摆脱/内化阴影可能性（具有足够交互自由度）。</li><li>所有玩家可能都无法满足独立在场条件。</li></ol><p>首先需要回答的问题是，同样是自己实现，为什么不探讨有群体身份认同的玩家的自己实现可能性呢？</p><p>因为有身份认同情况下，其群体无意识和阴影很可能具有更大可能的共通性，身处认同群体中的玩家很可能受到群体中的其他人的自己实现过程的启发来帮助自身发现阴影（但因为身处具有身份认同的群体之中的行为盲目性，摆脱/内化阴影的难度与没有群体身份认同的玩家相比可能更高）。</p><p>而在没有身份认同的情况下，玩家无法参考具有相同身份认同的其他人的自己实现过程，只能全凭个人摸索。这种情况下，没有身份认同的玩家发现阴影的可能性会降低，但最终摆脱/内化阴影的可能性相较具有群体身份认同的玩家可能更大。</p><h3 id="解决方案的探讨"><a href="#解决方案的探讨" class="headerlink" title="解决方案的探讨"></a>解决方案的探讨</h3><h4 id="当下游戏语境对问题的不完美答卷"><a href="#当下游戏语境对问题的不完美答卷" class="headerlink" title="当下游戏语境对问题的不完美答卷"></a>当下游戏语境对问题的不完美答卷</h4><p>如前所提，在当下的游戏语境中，“群体语境下无归属玩家的个人叙事是否可能”本身还没有成为一个问题，因为技术水平以及设计水平的限制，几乎没有游戏能够做到为大部分玩家提供足够丰富的游戏内容（以增加玩家们发现阴影的可能性）以及提供足够自由的交互度（以增加玩家们摆脱/内化阴影的可能性）。</p><p>但目前的游戏中也有对问题的不完美答卷，而我认为这也是未来游戏解决该问题的可行方向：</p><ol><li>提供玩家自组织的创建机会；</li><li>提供玩家自创内容的机会。</li></ol><ul><li>为什么提供玩家自组织的创建机会可以视为对问题的某种解答呢？</li></ul><p>提供玩家自组织的创建机会相当于给了玩家创造具有群体身份认同的“群体”的机会。结合前面所说，若是玩家们能够加入自己能够获得群体身份认同的群体，就能够增大发现阴影的可能性。对游戏厂商而言，便是玩家黏性增强所表现出的种种相关指标的增加。</p><ul><li>为什么提供玩家自创内容的机会可以视为对问题的某种解答呢？</li></ul><p>原因有三：</p><ol><li>提供玩家自创内容的机会的直接意义是丰富了游戏内容，这会增大玩家们发现阴影的可能性。</li><li>根据凯文·凯利的“涌现”概念，一旦这种 UGC 内容达到一定规模，便会产生某种质变，即从中涌现出某种群体思维。个人认为这种涌现出的群体思维可视为具有相似群体身份认同的玩家的集体无意识的部分模拟。这同样会增大玩家们发现阴影的可能性。</li><li>不仅如此，从另一个层面而言，玩家自创内容也可以视为某种摆脱/内化阴影的手段。并且这种手段比起以往由所设计的游戏内容能够提供的交互自由度都要更高。即最终也加强了玩家们摆脱/内化阴影的可能性。</li></ol><h4 id="未来的可能方向"><a href="#未来的可能方向" class="headerlink" title="未来的可能方向"></a>未来的可能方向</h4><p>如上所言，个人认为当下游戏语境中对于该问题的尝试性解答便是未来的可行方向。但其中有几点需要关注：</p><ul><li>玩家自组织在某种层面上而言也是服务于玩家自创内容的</li></ul><p>玩家自组织的创建是为了给更多不具有群体身份认同的玩家提供这样的机会。但不应该止步于此。需要明确，更多的玩家具有群体身份认同后的下一步是希望他们能够参与内容共建，共建的内容能够吸引相似的但还没有获得群体身份认同的玩家加入该群体，从而达到良性循环。</p><ul><li>玩家自创内容的限制应该尽可能少</li></ul><p>提供玩家自创内容这一功能，从根本上来说是为了提供玩家摆脱/内化阴影的手段，提供的是一种可能性。如果对于该功能的限制过多，那么就回到了原本的有限交互度局面（即玩家能够摆脱/内化阴影的可能性降低）。</p><ul><li>玩家自创内容需要具备规模</li></ul><p>由于群体无意识的隐秘性，玩家自创内容若不具备规模，则难以达到“涌现”的质变点，如此便难以实现“对具有相似群体身份认同群体的集体无意识的部分模拟”。</p><h3 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h3><p>综上，对于“群体语境下无归属玩家的个人叙事是否可能”这一问题的讨论的结论是：</p><ul><li>在当下，这一问题因为受限于技术，所以几乎不可能。但一旦能实现，即使是部分实现，该部分玩家都能在较长时间段内成为黏性极高的核心玩家；</li><li>当下游戏语境中其实已经在用两种手段尝试解答该问题：1. 提供玩家自组织的创建机会；2. 提供玩家自创内容的机会。这两个方向也是未来游戏语境下游戏核心竞争力的保证。</li><li>针对上面提到的两个方向，有几点需要关注：玩家自组织的创建最终服务于玩家自创内容；玩家自创内容的限制应该尽可能少；玩家自创内容需要具备规模才能最终帮助解决问题。</li></ul><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>参考资料：</p><ul><li>古斯塔夫·勒庞. 乌合之众: 大众心理研究[M]. 江苏凤凰文艺出版社，2020.4.</li><li>迈克尔·A·豪格, 多米尼克·阿布拉姆斯. 社会认同过程[M]. 中国人民大学出版社，2011.1.</li><li>渡边学. 漫画荣格[M]. 北京科学技术文献出版社，2003.9</li><li>Die Welle. Dir. Dennis Gansel. Alliance, 2008.</li></ul><p>部分想法和思路来源：</p><ul><li><a href="https://mp.weixin.qq.com/s/G5odgMmPAmmElWIjJaJJ9w">做社交=做创造玩家间需求与被需求关系的设计</a></li><li><a href="https://mp.weixin.qq.com/s/6QI6-iZvn40mGyPrWkrEdQ">玩家选择的价值：游戏世界观中的阵营设计</a></li><li><a href="https://mp.weixin.qq.com/s/rHe6KkGR47NA_eguC9Peiw">玩家们的这个变化，可能将彻底改变二次元游戏</a></li><li><a href="https://mp.weixin.qq.com/s/fqvLT7TzIHQ1tcvCbSxdfQ">你不会还以为“刘畊宏女孩”们只是在跳健身操吧？</a></li><li><a href="https://api.xiaoheihe.cn/v3/bbs/app/api/web/share?link_id=82121001">玩单机的我们是否会感到孤独？</a></li></ul><hr><p>寥寥数言，浅薄己见，看个乐 (￣▽￣)”</p>]]></content>
      
      
      <categories>
          
          <category> Thinking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Thinking </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220601 - 机核 游戏理论系列播客笔记</title>
      <link href="2022/06/01/20220601-gcores-playbeyondthegame/"/>
      <url>2022/06/01/20220601-gcores-playbeyondthegame/</url>
      
        <content type="html"><![CDATA[<h2 id="Why-Note"><a href="#Why-Note" class="headerlink" title="Why Note"></a>Why Note</h2><p>最近听了机核的游戏理论系列播客，对其中所涉及到的一些游戏理论和想法进行了记录。</p><h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>以下基本信息引用自<a href="https://www.gcores.com/albums/119">机核播单</a>：</p><blockquote><p>由一直在高校从事游戏教育的张兆弓老师，为我们分享一些游戏研究理论。</p></blockquote><h2 id="Content"><a href="#Content" class="headerlink" title="Content"></a>Content</h2><h3 id="什么是游戏"><a href="#什么是游戏" class="headerlink" title="什么是游戏"></a>什么是游戏</h3><h4 id="谈及游戏时-谈话的三个明显特征"><a href="#谈及游戏时-谈话的三个明显特征" class="headerlink" title="谈及游戏时 谈话的三个明显特征"></a>谈及游戏时 谈话的三个明显特征</h4><ol><li>指向不明确</li></ol><p>很可能双方讨论的概念并不一致</p><ol start="2"><li>讨论者中任何一方对自身对于游戏的理解特别笃定</li></ol><p>觉得自己的理解没问题，有些想当然</p><ol start="3"><li>其实将第二点 讨论者所笃定的理解开诚布公后 发现其实和真正定义相距较远</li></ol><p>很容易说不明白</p><h4 id="张兆弓老师对于游戏发展历程的分类"><a href="#张兆弓老师对于游戏发展历程的分类" class="headerlink" title="张兆弓老师对于游戏发展历程的分类"></a>张兆弓老师对于游戏发展历程的分类</h4><ol><li>无道具时期的游戏</li></ol><p>该时期的游戏偏向纯粹意识形态上的或是捉迷藏之类的游戏。<br>举例：石头剪刀布<br>剪刀石头布甚至作为分配物资等重要决策的依据<br>可以延伸，比如谈话也可以理解为一种无道具游戏，双方有来有回，都在参与</p><p>人们对于这一阶段的游戏的负面评价较少（或至少流传下来的很少）</p><ol start="2"><li>有物理道具的游戏</li></ol><p>如：跳皮筋，扔沙包，麻将，桌游</p><p>人们对这一阶段的游戏已经有了一些负面评价的声音，但也不多</p><ol start="3"><li>电子游戏</li></ol><p>如借由计算机作为媒介的游戏，往后还会有基于物联网的游戏</p><p>游戏在这一阶段能带来的变化与其媒介息息相关，如借由计算机大大提升了图形渲染能力和声音表达能力。</p><blockquote><blockquote><p>未来借由物联网等设备会逐渐在触觉等目前还未被充分利用的感觉方面发力。<br>写到这里，想起以前不记得哪里看到的一个说法，人越往后，越来越“忙”，眼睛要看东西，耳朵被耳机塞住，以后可能手要带上手套（目前其实已经有利用超声波技术来模拟触觉反馈的装置，如 <a href="https://www.ultraleap.com/">Ultraleap</a>）等等等等，感官没有一个闲下来的。<br>又想到《道德经》第十二章里写到：“五色令人目盲，五音令人耳聋，五味令人口爽，驰骋畋猎令人心发狂，难得之货令人行妨。是以圣人为腹不为目，故去彼取此。”过犹不及啊，还是让自己“闲”些好。</p></blockquote></blockquote><h4 id="不同时期学者对于游戏的不同定义"><a href="#不同时期学者对于游戏的不同定义" class="headerlink" title="不同时期学者对于游戏的不同定义"></a>不同时期学者对于游戏的不同定义</h4><h5 id="无道具时期的游戏"><a href="#无道具时期的游戏" class="headerlink" title="无道具时期的游戏"></a>无道具时期的游戏</h5><ul><li>柏拉图（公元前429年 - 前347年）<br>游戏是一场娱神的仪式。游戏作为神赐的能力，能够培育人们对美和善的感受能力和情感能力。</li></ul><h5 id="有物理道具的游戏"><a href="#有物理道具的游戏" class="headerlink" title="有物理道具的游戏"></a>有物理道具的游戏</h5><ul><li>西格蒙德·弗洛伊德（1856年5月6日 - 1939年9月23日）<br>游戏是“人借助想象来满足自身愿望的虚拟活动”，驱使儿童去游戏的，是心理生活的快乐原则。游戏与其他心理事件一样，都受快乐原则的自动调节。在儿童的游戏中，快乐原则表现为能满足儿童的愿望，掌握创伤事件和使受压抑的敌意冲动得到发泄。游戏的对立面不是真正的工作，而是现实。</li></ul><p>他认为游戏是严肃的，特别是参与到游戏中的人，是严肃的。</p><ul><li>赫伊津哈<blockquote><p>《游戏的人》（Homo Ludens）是荷兰学者约翰·赫伊津哈在1938年写的一本著作，它讨论了在文化和社会中游戏所起的重要作用。Homo Ludens，翻成中文为：人，游戏者，或简单称作“游戏人”，形式就像我们比较熟悉的 Homo sapien (智人)，是对“人”这种“生物”或“生活型态”做的概念化描绘。 Homo ludens 同时也是一个社会科学的理论模型，在此理论模型中阐明，一如在经济活动中，人们最主要透过游戏发展其技能。由于在游戏中有被规范的行动自由并要求独立思考能力，人类可以发现自己的特点并将从中所得到的经验转化入自己的人格塑造中。在此模型中指出，人类需要游戏来做为一种发展观念及意义的基本形式。作者在书中认为游戏同理性和制造同等重要。</p><p>“如果要总结游戏的形式特征，我们不妨称之为一种自由的活动，有意识脱离平常生活并使之“不严肃”，同时又使游戏人全身心投入、忘乎所以的活动。游戏和物质利益没有直接的关系，游戏人不能从中获利。游戏在特定的时空范围内展开，遵守固定的规则，井然有序。游戏促进社群的形成，游戏的社群往往笼罩着神秘的气氛，游戏人往往要乔装打扮或戴上面具，以示自己有别于一般的世人。”</p></blockquote></li></ul><p>游戏不严肃，参与游戏的人严肃。</p><ul><li><p>爱因斯坦（1879 年 3 月 14 日 - 1955 年 4 月 18 日）<br>爱因斯坦曾说过：“玩是最高级的研究（Play is the highest form of research）。”</p></li><li><p>Roger Caillois<br>他在其著作里《Man, Play and Games》（1961）提到了游戏的6个特征： </p></li></ul><p>1.free 自由<br>2.separate (from the routine of life) 非日常，与现实有明确界限<br>3.uncertain 不确定性，主要指由于玩家输入而带来的不确定结果<br>4.unproductive 不为功利性目的而存在<br>5.governed by rules 由规则控制<br>6.make-believe (pretend) 想象构建的虚拟世界，并投入其中</p><h5 id="电子游戏时期"><a href="#电子游戏时期" class="headerlink" title="电子游戏时期"></a>电子游戏时期</h5><ul><li><p>Brian Sutton-Smith<br>《Study of Games》由 Brian Sutton-Smith 和 Elliott M. Avedon 共同编写，是一本是对几乎所有游戏（棋盘游戏、纸牌游戏、策略游戏、儿童游戏和体育游戏）的综合研究著作。</p></li><li><p>Bernard Suits<br>《The Grasshopper: Games, Life and Utopia 》一书出版于1978年。作者在此书中不仅认为游戏可以被有意义地定义；他还认为，玩游戏是人类生存理想的核心部分。</p></li><li><p>Chris Crawford<br>Chris Crawford（1950年6月1日~）是美国电脑游戏设计师和作家。20世纪80年代，他设计并编程了几款重要的电脑游戏，包括《 Eastern Front (1941) 》和《权力平衡》。在开发者中，他以热衷于倡导游戏设计作为一种艺术形式而闻名，他创办了《计算机游戏设计杂志》，并与他人共同创办了游戏开发者大会（GDC）。<br>Chris Crawford 对于游戏的定义：游戏是一个独立闭合的、有明确规则的、从世界抽象而来的一个系统，这个系统从人的主观角度反映了现实世界的作用。</p></li></ul><p>Chris Crawford 关于游戏的三层分类法（可能并不严谨，但可从中一窥游戏的属性）</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220531205047.png"></p><ul><li><p>Eric Zimmerman<br>他的观点是：游戏是一种系统，在该系统中玩家被吸引进入由规则定义的人为冲突，从而导致一定数量的结果。</p></li><li><p>Tracy Fullerton<br>他的观点是：游戏是一个独立闭合有明确规则的系统，这个系统吸引玩家参与到结构化的冲突中，并在冲突解决后产生不规则的结果。</p></li><li><p>张兆弓老师的观点<br>游戏是一套从世界抽象而来的系统，它包含4个特征：</p></li></ul><p>1.玩家自愿参与<br>2.有规则边界<br>3.玩家行为给世界带来变化从而导致不确定的结果<br>4.参与者在试图达成目标的过程中会遇到一些阻碍。</p><blockquote><blockquote><p>自愿、边界、不确定结果、阻碍</p></blockquote></blockquote><ul><li>英国作家大卫·帕列特（David Sidney Parlett）<br>他在他的著作《牛津桌面游戏史》（1999）里认为游戏这个词被过度泛用了，过多的歧义使得游戏难以被定义。</li></ul><h4 id="对游戏的不同定义中的共识特征"><a href="#对游戏的不同定义中的共识特征" class="headerlink" title="对游戏的不同定义中的共识特征"></a>对游戏的不同定义中的共识特征</h4><p>各种不同游戏定义中都提到的特征</p><ul><li>自愿参与</li><li>游戏本质：系统<ul><li>可能是开放的，可能是闭合的，可能是不同玩家间的碰撞与反馈</li></ul></li><li>人的参与会给游戏系统带来不确定的 outcome</li></ul><h4 id="关于游戏的严肃与非严肃的讨论"><a href="#关于游戏的严肃与非严肃的讨论" class="headerlink" title="关于游戏的严肃与非严肃的讨论"></a>关于游戏的严肃与非严肃的讨论</h4><p>游戏的严肃性体现在参与游戏的过程中，玩家玩游戏需要态度认真、全身心投入。<br>非严肃性体现在游戏的过程之外，从外观之，它与真实世界相隔离。</p><blockquote><blockquote><p>写到这里想到《游戏设计原型与开发》一书中其实也写到关于游戏与现实的边界讨论，其中将游戏规则统治的临时世界称为魔力圈（magic circle）：<br>    magic circle —— 《Homo Ludens》Johan Huizinga<br>    魔力圈——游戏规则统治的临时世界——《Rules of Play》Katie Salen, Eric Zimmerman</p></blockquote></blockquote><p>从严肃与非严肃也可以反观游戏设计，若是将游戏比作玩家需要解决的问题，那么可以问，设计师是否精心为玩家准备了“值得严肃对待的问题”。这其中也反映了设计师与玩家之间的信任关系，设计师准备了严肃的问题，相应的也需要玩家严肃对待。</p><blockquote><blockquote><p>想到之前写为什么艾尔登法环能打动我的时候，原因之一就是其对于 layout 和 pacing 的设计与玩家之间形成了某种默契。<br>于 layout 而言，它基本会让你每次“走入死胡同”时都有所收获，要么是假的死胡同，柳暗花明；要么是真的死胡同，但会有物质奖励。从而让玩家每一次行动都带着期待，并且愿意“扫荡”地图，而不是直接直冲下一个赐福点而去。<br>于 pacing 而言，要具体细分为局内和局外。局内 pacing 主要指的是对于战斗节奏的掌控，“不要做多余的动作”，以及“不要贪刀”这两点应该是魂类游戏向玩家成功灌输的两点，这两点对应的其实是局内节奏的松弛有度，“二人转”时的观察其实是一种“松”，挥刀时或者弹反的瞬间对应着“紧”，松紧之间，让玩家沉浸在了局内。<br>局外 pacing 其实主要指的是对于整体游戏走向和事件触发的掌控。按照之前听的网易对于游戏体验的说法，即游戏是为了打造玩家的“非线性体验”，即心境心情的高低起伏。从这个角度来说，游戏中的每次战斗会将玩家非线性体验拉到一个峰值，而当这一次峰值成为极值之后，其实对下一次战斗在某种程度上就提出了更高的要求：若是下一次战斗体验的体验只不过约等于这一次，甚至低于这一次，那最终会导致玩家兴趣逐渐走低。所以在我理解中，最完美的体验打造方式不仅是要打造非线性体验的峰值，而且要尽可能多地创造更多极值，这样会让玩家能体会到的乐趣不断加深。（反过来说，温水煮青蛙和先引入最强的体验的做法有可能值得商榷）我所知的艾尔登法环与玩家默契的结合点在于，玩家每次战斗过后，上一次战斗的余韵其实会隐隐加深玩家对于下一次战斗体验的期待（即期望峰值更高），这对于设计师而言既是机会也是挑战。显然，FS 的设计师们做得很好。<br>当然了，并不是说他们已经做得完美。艾尔登法环令人诟病的其中一点其实也正是局外 pacing 的设计。由于其高自由度的开放世界设计，局外 pacing （什么时候遭遇什么怪物或触发什么事件）完全由玩家自己掌控，所以也有一些玩家会出现“一直在逛街，也不知道该干什么”的情况，从而失去游玩兴趣。<br>解决的办法当时想到的是可以更多地加入一些大世界中的随机事件来一定程度上调控玩家的局外 pacing。当然了，若是能根据玩家所出发的事件流来作为数据支撑，那么这样的调控就更加有针对性了。</p></blockquote></blockquote><h4 id="关于游戏边界的讨论"><a href="#关于游戏边界的讨论" class="headerlink" title="关于游戏边界的讨论"></a>关于游戏边界的讨论</h4><p>在约翰·赫伊津哈的作品《游戏的人》中提到：游戏比文明，比人类都要诞生的早。人类对于游戏的探讨和研究从未停止，只不过是有意识和无意识的区别罢了。</p><ul><li><p>关于游戏边界的讨论</p><ul><li>赫伊津哈<ul><li>游戏具有仿真性，是对真实世界的仿真</li><li>游戏里涉及冲突，矛盾</li></ul></li><li>赫伊津哈，Roger Caillois，Brian Sutton Smith<ul><li>游戏涉及正规的、复杂的、关闭的系统</li></ul></li></ul></li><li><p>Chris Crawford</p><ul><li>game is a subset of the reality</li></ul></li></ul><h4 id="游戏与文化的关系"><a href="#游戏与文化的关系" class="headerlink" title="游戏与文化的关系"></a>游戏与文化的关系</h4><p>赫伊津哈《游戏的人》里写道：“游戏是文化本质的、固有的、不可或缺的、绝非偶然的成分，游戏就是文明，文明就是游戏。”</p><p>同样一个篮球，当它被漫无目的的拍打时它只是一个球，而当它被运用在篮球比赛里时它就成了游戏。</p><blockquote><p>游戏是伴随着人的发展文化的衍生所诞生的。</p></blockquote><blockquote><blockquote><p>人类现如今的很多行为即便起于游戏，但最终其实已经不再落于游戏。换言之，游戏成为了途径和手段。比如开黑，比如逛街，这些行为都具有很强的社交属性在其中（不仅限于 people fun 的层面，而是 social 层面）。</p></blockquote></blockquote><h4 id="玩本身就很重要"><a href="#玩本身就很重要" class="headerlink" title="玩本身就很重要"></a>玩本身就很重要</h4><blockquote><blockquote><p>其实我想到的是道家所讲无用之用。本就不该过于强调所谓严肃游戏的功能性，而忽视了玩本身这一行为所象征的人的某种本源渴望。<br>之前提到的陈丹青老师所说关于不用看懂艺术，和这里的玩本身就很重要其实是共通的。观看这一行为本身就已经是一种自然的，不假思索的对于外界的认知和探索，而玩这一行为本身，也是一种与世界交互，认知世界的方式。</p></blockquote></blockquote><h4 id="张兆弓老师谈游戏与学习"><a href="#张兆弓老师谈游戏与学习" class="headerlink" title="张兆弓老师谈游戏与学习"></a>张兆弓老师谈游戏与学习</h4><blockquote><p>游戏最本质的东西其实和学习很类似。</p></blockquote><ul><li>学习怎么一步步“游戏化”<ul><li>增加学习难度<ul><li>比如从 1+1 -&gt; 123+4324</li></ul></li><li>增加学习规则<ul><li>比如要求限时回答</li><li>比如增加犯错机会</li></ul></li><li>增加剧情<ul><li>比如增加故事背景<blockquote><blockquote><p>想到了小学应用题哈哈哈</p></blockquote></blockquote></li></ul></li></ul></li></ul><blockquote><p>设计游戏其实就是设计师为玩家设计一系列有趣问题</p></blockquote><h5 id="学者们对于游戏与学习关系的说法"><a href="#学者们对于游戏与学习关系的说法" class="headerlink" title="学者们对于游戏与学习关系的说法"></a>学者们对于游戏与学习关系的说法</h5><ul><li><p>柏拉图</p><blockquote><p>柏拉图把游戏等同于神圣，称神圣为游戏，这并未亵渎神圣，反而把游戏概念升华到最高的精神境界。游戏是一切幼子（动物的人的）生活和能力跳跃需要而产生的有意识的模拟活动。</p></blockquote></li><li><p>爱因斯坦</p><blockquote><p>爱因斯坦曾说过：“玩是最高级的研究（Play is the highest form of research）。”</p></blockquote></li><li><p>让·皮亚杰</p><blockquote><p>玩是关于所有新生事物如何诞生的答案。</p></blockquote></li><li><p>克里斯托弗·克劳福德</p><blockquote><p>乐趣是学习行为的情感反应。</p></blockquote></li><li><p>拉夫·科斯特</p><blockquote><p>游戏是为了帮助我们学习图式而建立的系统。<br>fun is just another word of learning</p></blockquote></li></ul><h5 id="认知科学与游戏"><a href="#认知科学与游戏" class="headerlink" title="认知科学与游戏"></a>认知科学与游戏</h5><blockquote><p>认知科学，是一门研究讯息如何在大脑中形成以及转录过程的跨领域学科。它研究何为认知，认知有何用途以及它如何工作，研究信息如何表现为感觉、语言、注意、推理和情感。其研究领域包括心理学、哲学、人工智能、神经科学、学习、语言学、人类学、社会学和教育学。它跨越相当多层次的分析，从低层次的学习和决策机制，到高层次的逻辑和策划能力，以及脑部神经电路。“认知科学”这个词是克里斯多福·龙格-希金斯在1973年评注一部关于当时人工智能最新研究的著作莱特希尔报告时创造的。同10年内，《认知科学期刊》和认知科学学会相继于美国加州成立。认知科学的基本要义是：理解思维的最好途径，是认识脑中的代表性结构，以及这些结构中发生的计算性过程。</p></blockquote><ul><li>认知学科中的解决问题领域：关注人是如何接受（识别）信息，怎么解决问题的。</li></ul><h6 id="让·皮亚杰的图式理论"><a href="#让·皮亚杰的图式理论" class="headerlink" title="让·皮亚杰的图式理论"></a>让·皮亚杰的图式理论</h6><ul><li>图式 schema</li></ul><blockquote><p>让·皮亚杰认为人在认识世界之中首先需要“图式”，在张老师看来类似于概念的封装。<br> 人实际上对于其概念的归纳并没有特别的意识，这可能是因为人类从非常小的时候就开始进行这样的活动。</p></blockquote><blockquote><blockquote><p>想到了完形心理学，即人对于事物的认知是基于整体，“整体不同于其部件的总和”。如对于一朵花的感知，并不仅仅只是其颜色、形状、气味等（某种意义上的外界）元素的呈现，还有过往对于花的经验和印象（某种意义上的自身元素），外界元素和自身元素整体构成了对于花的认知。</p></blockquote></blockquote><p>里面张老师也提到了计算机图像识别中怎么让计算机知道“这个”是狗，“那个”不是狗的问题哈哈。</p><ul><li>同化</li></ul><blockquote><p>当我建立“图示”之后，就开始有能力去认知其是否在自己归纳过的范围内，这就是“同化”，听上去有点像举一反三。</p></blockquote><p>如这个是狗，那个也是狗，是一种已有图式的匹配。</p><ul><li>顺应</li></ul><blockquote><p>当看到的事物超出了我的“图示”之后，我需要编辑新的“图式”来归纳新的事物。</p></blockquote><p>看到了一个好像狗，但其实不是狗的生物。是一种图式的更新。</p><p>新手教程阶段其实可以看作某种“建立图式”的过程。即玩家学习游戏的交互方式和系统功能。</p><h6 id="加涅的学习理论"><a href="#加涅的学习理论" class="headerlink" title="加涅的学习理论"></a>加涅的学习理论</h6><p>Robert Miles Gagné</p><p>他将人要学习的内容分为五个类别三个方向</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220601133205.png" style="zoom:67%;" /><ul><li>五个类别（横向）<ul><li>言语信息</li><li>智慧技能</li><li>认知策略</li><li>动作技能</li><li>态度</li></ul></li><li>三个方向（纵向）<ul><li>辨别能力<ul><li>如区分水还是火</li></ul></li><li>概念（和图式很像）<ul><li>对同类事物共同本质特征的一个认识，基于此对事物分类</li></ul></li><li>规则<ul><li>技能的本质就是规则，是规则支配了人的行为</li><li>还有一个高级规则的说法<ul><li>加涅认为，高级规则是由各个规则单元组成的复杂结构。其实有点类似于“系统认知”。这些很多理论都与游戏十分类似。</li></ul></li></ul></li></ul></li></ul><p>三个方向在学习中存在一定程度互斥，如经典的颜色冲突实验。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220601135546.png" style="zoom: 50%;" /><p>游戏设计过程中通常针对具体关卡，其对能力考查的偏重并不一致。若是考察的是不同方向的能力，会有些“说不上来的不舒服”。所以也启发制作人们在设计时要明确目标玩家体验，到底偏向对于什么能力的考察，尽量不要多个方向一起出现，会有些“设计混乱”。</p><p>张兆弓老师也举了相应例子：<br>以找茬游戏（考察的是认知能力）为例。</p><ul><li>第一关，从 20 个表情中找到一个不一样的；</li><li>第二关，增加总数，且增加图形复杂度；</li><li>第三关，增加复杂性，增加难度（让你找到最强的人，而不是直接告诉你找到“光头”）<ul><li>不仅考察辨别能力</li><li>也考察语言认知（需要理解“最强的人”的意义）</li></ul></li><li>第四关，如果场景里面增加了一个不断移动的需要点击才能继续交互的元素<ul><li>引入了动作方面的考察，其实和认知考察会有一点点冲突，所以会让人感觉有一些些“不适”</li></ul></li><li>第四关，如果每隔一段时间所有元素排位刷新一下<ul><li>和上一种加入动作考察的相比，其实还是深化考察了认知能力，所以玩家不会感觉“不适”</li></ul></li></ul><h6 id="加涅的九段式教学法"><a href="#加涅的九段式教学法" class="headerlink" title="加涅的九段式教学法"></a>加涅的九段式教学法</h6><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220601174111.png" style="zoom:80%;" /><p>这个主要可以用于指导游戏机制教学的设计，不应该一直给玩家介绍新机制，而是在机制介绍完后，立马让玩家能用上，复习一下，这样能加深印象。</p><p>同样，在进行机制介绍的时候，最好也能循序渐进，比如先是应对普通坑的简单跳，然后是面对长距离坑的极限跳。尽可能把同类机制一起介绍。螺旋上升！</p><p>新手引导应该尽可能以抛出问题的形式来展开，如告诉玩家需要到达对岸，让玩家自己摸索跳跃机制，而不是直接告诉玩家按这个键是跳跃就结束了。</p><p>综上，就是要通过问题引导，循序渐进地教，然后及时让玩家能用上复习！也不能一直横向展开（完全新的机制），要适度纵向深入（同一机制的深入应用）！</p><p>里面也讲到了期望管理，其实也就是常说的玩家短中长期目标。一般来说，为玩家提供清晰的目标其实是一种 pacing 的调控机制，做得比较好的其实可以参考育碧《刺客信条》系列，其为玩家提供了较为清晰的目标规划可选项。而具有更高自由度的《塞尔达：旷野之息》和《艾尔登法环》其实玩家的短期目标没有那么明显，这两种情况下 pacing 其实更多由玩家自己掌控，其实在某种程度上更是考验设计师如何以更加自然，换言之，以更“不显眼”的方式来引入玩家目标。</p><h5 id="学习与游戏的不同"><a href="#学习与游戏的不同" class="headerlink" title="学习与游戏的不同"></a>学习与游戏的不同</h5><h6 id="有趣和无趣"><a href="#有趣和无趣" class="headerlink" title="有趣和无趣"></a>有趣和无趣</h6><p>前面也提过了，游戏定义之一是自愿参与，学习有时未必是，但若是也能以自愿参与心态快乐学习，那称之为游戏也未尝不可。</p><h6 id="游戏的封闭性"><a href="#游戏的封闭性" class="headerlink" title="游戏的封闭性"></a>游戏的封闭性</h6><ol><li>行为导向的成果不同。游戏里学到的东西不一定能在现实世界用上。学习的东西一般通用性较强。</li><li>和之前提到过的 magic ring 的边界性有关。只有参与游戏的人才能感受到游戏中的乐趣。举的例子是敲别人门的小孩觉得有趣，但被敲门的人会很烦（这也太真实了 233）；包括徒手攀岩也是，对于参与者本身可能是，但对于提心吊胆的家人就未必了。</li></ol><h6 id="游戏的不确定性"><a href="#游戏的不确定性" class="headerlink" title="游戏的不确定性"></a>游戏的不确定性</h6><p>玩家对于游戏的输入会带来不确定输出是游戏的重要特征之一。Rougelike 更是将随机性发挥到了极致。但对于学习而言，通常而言，并不是一个随机过程。</p><p>这里举了抛硬币的例子。<br>抛硬币直观而言是一种随机行为，但其实从硬币被抛出的瞬间，其结果可以说已经注定。</p><blockquote><blockquote><p>想到了大数定律。偶然的必然性。</p></blockquote></blockquote><p>随机其实是一种人类错觉，是由于观测能力有限导致的一种不可知状态。但正是由于这种不可知，某种方面也可以说引起了人们的好奇心，推动技术不断向前，想要突破这种不确定的不可知。</p><p>石头剪刀布胜率更高的策略（博弈论）：<br>赢的时候马上变换手势，输的时候，尽可能保持不变。</p><p>解决问题其实是某种“战胜”不可知的过程，如果做到了，算是学习到了新的技能，就会高兴兴奋。</p><p>游戏中，或者说计算机都是伪随机，真随机的模拟对于玩家体验来说很可能是非黑即白的。毕竟有可能出现怎么都能中，和怎么都不中。所以也才引入了所谓保底机制等。</p><h3 id="游戏乐趣的三个阶段"><a href="#游戏乐趣的三个阶段" class="headerlink" title="游戏乐趣的三个阶段"></a>游戏乐趣的三个阶段</h3><h4 id="游戏前的乐趣（motivation）"><a href="#游戏前的乐趣（motivation）" class="headerlink" title="游戏前的乐趣（motivation）"></a>游戏前的乐趣（motivation）</h4><ul><li>即想要参与其中的动机（下一个章节会提到）<ul><li>比如听说它好难，所以好想玩玩看（后面会提到的 hardfun）</li><li>比如题材吸引人（会和后面提到的 easyfun 相关），开不到真车，那在游戏里开车！</li><li>people fun</li><li>serious fun</li></ul></li></ul><h4 id="游戏中的乐趣"><a href="#游戏中的乐趣" class="headerlink" title="游戏中的乐趣"></a>游戏中的乐趣</h4><ul><li>心流<ul><li>挑战与技能水平近乎完美匹配的状态</li></ul></li><li>大多数游戏的核心玩法和关卡设计都是为了尽可能延长这一阶段</li></ul><h4 id="游戏后的乐趣"><a href="#游戏后的乐趣" class="headerlink" title="游戏后的乐趣"></a>游戏后的乐趣</h4><ul><li>和游戏化有关<ul><li>以游戏方式促成某些行为</li></ul></li><li>参与之后的乐趣<ul><li>比如游戏的社区效应或玩家群聚效应</li><li>比如会有成就感<blockquote><blockquote><p>游戏中也会涉及这一部分，比如你进入类似“练功房”之类的地方拼命刷级，过程其实很无趣，但最终等级得到提升的时刻是成就感，也就是乐趣来源</p></blockquote></blockquote></li></ul></li></ul><h3 id="为什么玩游戏（Motivation）"><a href="#为什么玩游戏（Motivation）" class="headerlink" title="为什么玩游戏（Motivation）"></a>为什么玩游戏（Motivation）</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220529213324.png" style="zoom:50%;" /><h4 id="四种玩家类型理论"><a href="#四种玩家类型理论" class="headerlink" title="四种玩家类型理论"></a>四种玩家类型理论</h4><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220529213448.png" style="zoom:50%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220529213640.png" style="zoom:50%;" /><p>1996 年，理查德·巴图（Richard Bartle）在一篇名为《红心、梅花、方块、黑桃：MUD 游戏玩家分类》的文章中，提出了 MUD 玩家的四种分类方法。分别是：杀手型、成就型、探索型和社交型。该分类基于玩家的兴趣所决定。作者强调该分类其实只适用于 MUD，但没拦住大家扩散使用。后来该理论扩展到八种（x 内在动力/外在动力），但使用的人没有四理论多。</p><ul><li>杀手型玩家：其主要目的是对游戏环境造成破坏，发泄他们由现实社会造成的精神上的压力。 </li><li>探索型玩家：探索型玩家由思维的方式又可以进一步划分为，审美型玩家（以感性思维为主）和学习型玩家（以理性思维为主）。审美型玩家会跑到游戏的每一个角落，尝试各种不同的行为看会发生什么。学习型玩家的乐趣在于了解游戏内部的机制。 学习型玩家更倾向于通过插旗PK，来提高自己的技术，研究游戏的技能系统。 </li><li>社交型玩家：对社交型玩家而言，游戏本身只是一个背景，一个和其他玩家交互的平台，建立和别的玩家之间的关系是最重要的</li></ul><h4 id="马斯洛需求层次理论"><a href="#马斯洛需求层次理论" class="headerlink" title="马斯洛需求层次理论"></a>马斯洛需求层次理论</h4><p>游戏行业中对于玩家动机的解释很多基于马斯洛需求金字塔：</p><blockquote><p>马斯洛需求层次理论是亚伯拉罕·马斯洛于 1943 年提出，其基本内容是将人的需求从低到高依次分为生理需求、安全需求、社交需求、尊重需求和自我实现需求五种需求。 马斯洛需求层次理论是人本主义科学的理论之一，其不仅是动机理论，同时也是一种人性论和价值论。</p></blockquote><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220529213823.png" style="zoom: 50%;" /><h4 id="自我决定理论-SDT"><a href="#自我决定理论-SDT" class="headerlink" title="自我决定理论 SDT"></a>自我决定理论 SDT</h4><p>现在使用更广泛的，用于解释玩家动机的理论是自我决定理论（Self-Determination Theory）：</p><blockquote><p>自我决定是一种关于经验选择的潜能，是在充分认识个人需要和环境信息的基础上，个体对自己的行动做出自由的选择。自我决定论（Self-Decide Theory）由美国心理学家德西和瑞安提出，强调自我在动机过程中的能动作用。自我决定论将人类行为分为自我决定行为和非自我决定行为，认为驱力、内在需要和情绪是自我决定行为的动机来源。</p></blockquote><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220529214311.png" style="zoom: 33%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220529214603.png" alt="SDT 关于动力来源的解释" style="zoom:50%;" /><p>SDT 中将动力分为三种：</p><ul><li>自我控制（Autonomy），即像主动技能一样的控制自己的能力</li><li>竞争（competence）</li><li>关联（relatedness）</li></ul><h4 id="Hard-Fun"><a href="#Hard-Fun" class="headerlink" title="Hard Fun"></a>Hard Fun</h4><blockquote><p>我们可能认为电子游戏很“有趣”，但在《失败的艺术》一书中，Jesper Juul 声称这几乎是完全错误的。当我们玩电子游戏时，我们的面部表情很少表现出快乐或幸福。相反，当我们失败、死亡或无法进入下一个阶段时，我们会皱眉、做鬼脸、沮丧地大喊大叫。人类可能有一种渴望成功并感到有能力的基本愿望，但游戏玩家选择参与一种他们几乎肯定会失败并感到无能的活动。那么，即使电子游戏让我们不开心，我们为什么还要玩呢? Juul 研究了这个悖论。在电子游戏中，就像在悲剧艺术、文学、戏剧和电影中一样，我们似乎想要体验不愉快，即使我们也不喜欢它。读者或观众对悲剧的反应通常被解释为一种宣泄，一种负面情绪的净化。</p></blockquote><blockquote><p>买游戏其实是买了个问题回家，消费者真正的目的是回避这个问题。 —— 《失败的艺术》</p></blockquote><p>页游其实极大降低了关于难度部分的设计，突出的是 competence 属性，即玩家间的竞争。</p><ul><li>Hard Fun<ul><li>越难越有乐趣</li><li>人为什么玩游戏的原因之一</li><li>游戏最本质动力之一</li></ul></li></ul><p>高尔夫球，被称为“绿色鸦片”，其上手难度极高（两万颗球入门），但入门后的玩家会被其深深吸引。</p><p>Hardfun 一词由 Nicole Lazzaro 提出。</p><blockquote><p>Nicole Lazzaro，XEODesign 公司的创始人和总裁。在面向大众市场的娱乐产品的玩家体验设计(PXD)方面拥有 20 年的经验。被广泛认为是电子游戏界最优秀的女性之一，也是移动和社交游戏界的领军人物，Fast Company 认为 Nicole 是高科技领域最具影响力的 100 名女性之一，Gamasutra 也将她选为电子游戏界 20 名女性之一。</p></blockquote><p>Nicole Lazzaro 所提出的 4fun2key：</p><ul><li>easy fun<blockquote><p>easy fun 在后面的解读中代指了所有种类的简单模式，并不单单指在游戏难度上简单，而是指整个过程是很简单的，能够轻而易举的完成这件事情。比如说一个男孩想要成为宇航员，但是不能完成这个梦想，于是家人给了他一套宇航服，他就获得了简单的快乐，那么这就是 easy fun。<br>比如有人要买一个杯子，但是他不喜欢白色的，所以就在被子上做了个 IP 联名，结果就买到了，就快乐了。这也是 easy fun。其实 easy fun 和声音画面等等很多方面都有联系，所以和游戏并不是强绑定的关系。</p><blockquote><p>其实和难度无关，我理解是一种对于期望的快速的“折中”满足方式</p></blockquote></blockquote></li><li>hard fun<blockquote><p>Hard fun 其实是一种很矛盾的体现，是因为游戏难，他不断的抗拒玩家，从而使玩家产生了一种对抗的激情，随着不断解决难题，玩家会从中不断的收获乐趣。<br>Nicole 的老公作为一个玩家的时候，如果表示这游戏很难，那么最后就会一直玩下去。一旦觉得这个游戏简单了，那么很快就会放弃。<br>《Getting Over It with Bennett Foddy》<br>《只狼》其实是利用了一套强制引导体系，使得玩家不得不利用一些一般动作类游戏中非必须的操作来完成游戏。</p><blockquote><p>hardfun 也是我之前思考为什么《艾尔登法环》能吸引我一次次拿起手柄进行游玩这一问题的最终答案</p></blockquote></blockquote></li><li>people fun<blockquote><p>people fun 的含义非常直接，就是人与人之间是相互需要的。有很多游戏沉迷于为玩家提供自组的空间，比如说《EVE》《传奇》。当玩家发现自己属于一个群体的时候，确实很容易产生满足感。</p></blockquote></li><li>serious fun<blockquote><p>serious fun 其实是指一种脱离纯粹娱乐性的快乐。而严肃游戏(Serious Game)，电子游戏的一种。最初被定义为“以应用为目的的游戏”，具体来讲，是指以那些以教授知识技巧、提供专业训练和模拟为主要内容的游戏。严肃游戏自上个世纪八十年代诞生以来，已经广泛应用于军事、医学、工业、教育、科研、培训等诸多领域。<br>开始的时候以娱乐性为目的自愿参与游戏，但在游戏进行或完成时一开始的娱乐性目的已经不重要了</p></blockquote></li></ul><h5 id="认知理论"><a href="#认知理论" class="headerlink" title="认知理论"></a>认知理论</h5><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220529220832.png" style="zoom:50%;" /><p>Richard Garriott 在回答“人为什么玩游戏”这一问题时引入了很多认知理论。</p><blockquote><p>认知理论（theories of cognition）是关于有机体学习的内部加工过程，如信息、知识及经验的获得和记忆、达到顿悟、使观念和概念相互联系以及问题解决的各种心理学理论。持学习的认知观的理论家有德国格式塔学派的主要代表人物、瑞士的皮亚杰、美国的布鲁纳与奥苏伯尔。尽管他们彼此间存在很大差别，但在学习问题的观点上有一些共同特点。一是他们确认，有机体习得的是知觉或认知结构的形成与变化。即学习的基础是有机体内部的、有组织的结构的形成与改组，而不是刺激与反应联结的形成或行为习惯的加强或改变。二是他们相信，影响学习的主要变量是刺激情境的整体性、突然的理解或知觉、有意义的发现与接受、认知结构的特点、注意或心向，而不是刺激与反应的接近、强化、强化程式。这一理论与发展智力和培养创造能力的教育理论相符，对解释较高级的认知学习较适合。</p></blockquote><blockquote><p>认知理论是将人认知世界的方式方法用信息处理的方式进行描述。<br>即人类在接触任何知识时都有一个感知器（如眼耳口鼻），一个存储器（涉及长短期记忆），一个生成器（负责加工处理）</p></blockquote><ul><li>认知理论解释什么是感受</li></ul><blockquote><p>张老师的老师曾经给他讲过一个例子来解释感觉是什么，就是如果有一个身边的人，你很熟悉他，那么即便是在眼睛看不清正面的情况下也可以自觉的认知这个人的存在。而认知理论就是从科学的角度解释了感觉的存在。<br>其实是看见的瞬间完成了信息处理</p></blockquote><ul><li>认知理论解释游戏 —— 解决问题能力</li></ul><blockquote><p>解决问题能力是指人们运用观念、规则、一定的程序方法等对客观问题进行分析并提出解决方案的能力。 解决问题能力是指人们运用观念、规则、一定的程序方法等对客观问题进行分析并提出解决方案的能力。初级的能力表现在能够发现一般的显性问题，能够初步判断，可以简单处理；能力较强者，能在自己熟悉的领域或范围较容易发现隐藏的问题，有一定的发现问题的技巧，具备一定的分析能力，能够根据现象探求解决问题的途径，并找到答案，可以较好解决问题；更高层次的解决问题能力，实际是更早期地发现问题，感知外界对自己或工作生活地不良结合课堂，可以准确预测事情发展过程中的各种问题，并将其消灭在萌芽状态！同时能归纳总结问题发生的规律，可以指导提高他人发现问题的能力。</p></blockquote><blockquote><p>人类大脑将所有得到的信息都符号化、模块化（语言是典型模块化过程）、抽象化。所以，认知理论其实是从科学的角度解释了人为什么玩游戏这件事情，将其总结为解决问题的方式之一。问题是什么、行为参与、解决方法三个方面分别对应了游戏规则、操作、和为什么玩游戏三个方面。</p><blockquote><p>人脑对于各种信息的高度封装，即共识的形成</p></blockquote></blockquote><p>Chris Crawford 认为人玩游戏就是在解决问题，每次解决问题就会有随之而来的快乐。</p><p>借用认知理论对游戏分类，其实就是基于同品类游戏具有相似的内核，即同类游戏会让你解决相似的问题。</p><p>《Gossip》和《Her Story》就是设计师给玩家提供了大量信息，然后玩家需要从中思考事情来龙去脉（从而解决游戏所提出的问题）。</p><blockquote><p>Zachtronics 是一家美国的独立游戏开发公司，他们的游戏以充满创意的程序解谜元素著称，其代表作有《无限工厂》（Infiniminer Infinifactory），《太空化学》（SpaceChem），《巨著》（Opus Magnum）等。</p></blockquote><p>Hard fun 其实就是通过解决困难问题所带来的快乐。</p><h5 id="内在动力和外在动力"><a href="#内在动力和外在动力" class="headerlink" title="内在动力和外在动力"></a>内在动力和外在动力</h5><blockquote><p>内在动力是个体发自内心对于该项事物感到好奇，感到有兴趣，并认为能借由做这件事达成满足感与获得刺激。比如想去了解、想去达成、想获得刺激。</p></blockquote><blockquote><p>外在动力相对于内在动力则是与实际的赏酬有关系，对于做这件事所获得的内在与外在赏酬来决定是否做这件事。 外在赏酬指做这件事会获得外在奖励或酬劳，内在赏酬指做这件事会被夸奖或避免被责骂排挤，还有自我认同赏酬是认为做这件事对自己有帮助，尽管不一定有内在动机。统整以上三者之后，认为整体来说做这件事对自己有帮助，此行为的动机型态亦较趋近内在动机</p></blockquote><h6 id="索玛立方实验"><a href="#索玛立方实验" class="headerlink" title="索玛立方实验"></a>索玛立方实验</h6><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220529223626.png" style="zoom:33%;" /><ul><li>实验概述</li></ul><p>索玛立方（Soma cube）是在 1933 年由皮亚特·海恩发明的智力游戏，索马立方是由七块多立方体组成的一个 3x3x3 的立方体，在不考虑旋转及反射的情形下，这七块索马立方可以组合成 240 个不同的形态。1969 年，当时还是卡内基美隆大学研究生的爱德华·德西（Edward L. Deci）邀请了多位大学生，要求他们在不同的奖励条件下破解索玛立方谜题，最终通过实验的结果来分析动机排挤效果及内在动机及外在动机的关系。</p><ul><li>实验描述</li></ul><p>实验房间内有一张桌子，其上有七块索玛立方、几张要求参与者完成的索玛立方谜题图片，以及《时代周刊》、《纽约客》、《花花公子》杂志。<br>主试坐在桌对面向被试说明要求，并监督被试破解谜题。<br>每次实验过程中，被试拼好三个谜题中的两个后，主试会暂停实验，借口离开 8 分钟，离开时告诉被试他会短暂离开，期间可以自由活动。而后主试到实验房间旁的房间观察 8 分钟自由时间内被试会做什么。<br>实验的评估标准即被试在这 8 分钟内的行为，是继续解密还是干别的事。</p><ul><li>实验分组</li></ul><p>实验设计为  between-subject，即每个被试只参与自己组别的实验。所有被试被分为 2 组，连续三天内，被试需要参与同等时间的实验。</p><p>第一天，两组解开谜题都没有任何奖励。<br>第二天，A 组被告知，8 分钟内每解开一个谜题，奖励 1 美元，B 组和第一天一样，没有奖励。<br>第三天，A 组被告知实验经费只够支付昨天一天的奖金，今天不再有奖金，B 组还是没有奖励。</p><ul><li>实验结果</li></ul><p>第一天，两组解开谜题都没有任何奖励，两组被试表现相似，都继续解题，平均每人继续解题了 3.5~4分钟。<br>第二天，被告知有外在现金奖励的 A 组的解密兴趣激增，平均每人在主试离开的 8 分钟内解题超过 5 分钟，B 组被试表现和第一天类似。<br>第三天，A 组被告知不再有奖励，A 组被试在 8 分钟内的解密时间急剧降低，B 组花费的时间比前两次甚至还要长。</p><h6 id="后续实验"><a href="#后续实验" class="headerlink" title="后续实验"></a>后续实验</h6><blockquote><p>爱德华·德西后来又在 1971 年前后做了两次相似的实验。第二次实验的目标大体上与索玛立方实验相近，不过德西把实验对象从明确受邀参加的大学生换成了不知情的在报社兼职打工的学生，实验的任务要求从解立方谜题变成了让学生为报纸写标题。德西依然采用给予现金奖励的手段观察被试者前后的反应。整个实验在非室内环境进行，为期长达10周。实验结果也基本和索玛立方实验一致。</p></blockquote><blockquote><p>第三次实验德西又回到了室内进行实验，第三次的内容和形式都与索玛立方实验基本一致，唯一变化的是第二天实验中的现金奖励变成了口头鼓励。最终实验的结果表明受到口头奖励的被试者在解谜上付出的时间和精力明显高于没有受到任何奖励的被试者。</p></blockquote><p>第二次是变体实验，但实验内核不变。<br>第三次将外在奖励变为了口头鼓励（提升内在动力），结果发现被试所花时间大大提升。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220529232653.png" style="zoom:50%;" /><ul><li>takeaways<br>外在动力会成为内在动力的 debuff ，即会削弱内在动力<br>口头表扬最为外在奖励会增加人们的内在动机</li></ul><blockquote><p>这三次实验的结果证明了口头表扬作为外在奖励会增加人的内在动机。当一个人去完成一项任务时，像金钱这种实际的外在奖励被引入到这项任务中时，人会在认知上重新评估任务的重要性，基于有趣或快乐的内在动力会转移到外在的激励上，主要的关注点也会从享受任务转变过来为了获得实际的回报。然而，当口头表扬是在类似的情况下出现却会增加内在动力，人会在此影响下认为这项任务是一个愉快的任务，进而自主的去完成。</p></blockquote><h6 id="游戏之内也分了内外在奖励"><a href="#游戏之内也分了内外在奖励" class="headerlink" title="游戏之内也分了内外在奖励"></a>游戏之内也分了内外在奖励</h6><p>玩家出于自愿进行的游戏行为，本身没有外在动力。但在游戏之内，也分了外在与内在动力。如装备，经验等奖励就属于外在动力，而 NPC 的羁绊和鼓励等就属于游戏里的内在动力。</p><blockquote><p>游戏的核心玩法，即抛给玩家怎样的问题，一定要难住玩家，且通过内在动力来促使玩家不断向难题发起冲击</p></blockquote><h6 id="内外在动力与儿童教育"><a href="#内外在动力与儿童教育" class="headerlink" title="内外在动力与儿童教育"></a>内外在动力与儿童教育</h6><p>要鼓励不要奖励，鼓励孩子们去寻找自己的内在动力，即自己真正喜欢的东西</p><h6 id="换皮为什么行不通"><a href="#换皮为什么行不通" class="headerlink" title="换皮为什么行不通"></a>换皮为什么行不通</h6><blockquote><p>电子游戏作为一个相当多元的表现形式，它所能激发玩家产生内在动力的元素不一定只局限在游戏玩法本身，故事剧情、美术设计甚至是玩家社区的氛围都可能激发玩家的内在动力，进而让玩家们对游戏产生极大的热情。但如果仅仅通过游戏玩法这单一层面去分析游戏会受到欢迎的原因，得出的答案可能就会非常的缺乏说服力。</p></blockquote><blockquote><p>对于那些核心吸引力不在玩法设计上的游戏来说，想要通过机械的换皮去复制成功是非常困难的事情，缺乏那些原有的激发玩家内在动力的元素只会让整个玩法系统看上去僵硬无趣，玩家们也自然不会对这个“新皮”产生什么热爱。</p></blockquote><blockquote><blockquote><p>即使能“换”到外在动力，但与之相符的内在动力是换不来的</p></blockquote></blockquote><ul><li>游戏机制的来源</li></ul><p>许多游戏机制其实是对现实生活的抽象和组合（也可以理解为一种创造）</p><p>所以人们对事物的多维度感知，在换了环境（即换皮）之下，很可能无法复现，所以换皮无法成功。</p><blockquote><blockquote><p>这也让我想到陈丹青老师在《局部》里面所提到的，一件作品，能够被感知到的最完整的样子和感觉，需要结合其原本的特定放置环境。即除了作品本身，其被放置的环境，无论是挂的那面墙，还是打的光，都会产生影响。这也是为什么一些作品被外借展览的时候，好像，少了那么点意思的原因。</p></blockquote></blockquote><h4 id="反过来可以通过-信息密度-挑战难度-来对游戏进行分类"><a href="#反过来可以通过-信息密度-挑战难度-来对游戏进行分类" class="headerlink" title="反过来可以通过 信息密度-挑战难度 来对游戏进行分类"></a>反过来可以通过 信息密度-挑战难度 来对游戏进行分类</h4><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220529234953.png" style="zoom:33%;" /><blockquote><p>处于中间的基本都是神作，围棋处于右上角。</p></blockquote><p>游戏即是学习。</p><blockquote><p>人在玩游戏时必须要去接收游戏传递的信息，掌握游戏的机制和规则，这一切其实就是一个学习的过程。</p></blockquote><h3 id="对于游戏人才的培养"><a href="#对于游戏人才的培养" class="headerlink" title="对于游戏人才的培养"></a>对于游戏人才的培养</h3><p>其实是培养设计者观察归纳提取的能力</p><p>里面有讲到不同阶段对于培养学生的侧重点是不同的：</p><p>游戏迭代设计——培养工程意识<br>游戏叙事设计——着重培养观察和表达能力<br>表达自我—— find something beyond the game</p><p>最后这一部分其实听下来比较有感触。结合最近听到的关于腾讯 Next Studio 的叶梓涛前辈所做关于哲学游戏《The Shape of Time》的分享，感觉哲学，尤其是道家哲学的游戏化表达是我自己的 “something beyond the game”。</p><p>路漫漫其修远兮。革命尚未成功，同志仍需努力。</p><h3 id="书单"><a href="#书单" class="headerlink" title="书单"></a>书单</h3><ul><li><p>《艺术的故事》，贡布里希</p><ul><li>看任何的艺术作品，当看不懂的时候，回到其当时的历史语境下看<blockquote><blockquote><p>说起来看《局部》的时候，陈丹青老师也提了一个观点，看画，看艺术作品，无所谓看不看懂，不要在乎到底有没有看懂。关键是看，感受，至于懂不懂，没关系的。这可能已经有些返璞归真的感觉了。</p></blockquote></blockquote></li></ul></li><li><p>电子游戏诞生前</p><ul><li>《游戏的人》，赫伊津哈</li><li>《Man, Play and Games》，是 Roger Caillois 基于赫伊津哈的理论之后进一步讨论游戏的作品。</li><li>《The Study of Games》，Brian Sutton Smith，该书诞生于电子游戏早期萌芽期</li></ul></li><li><p>电子游戏诞生后</p><ul><li>《The Art of Failure》，Jesper Juul</li><li>《Rule of Play》，Erik Zimmerman</li><li>《The Art of Computer Game Design》，Chris Crawford，GDC 大会创始人之一，该书从艺术层面讲解游戏</li><li>《Theory of Fun》，Raph Koster</li><li>《Effects of Externally Mediated Rewards on Intrinsic Motivation》，Edward DECI</li><li>《Why We Play Games: Four Key to More Emotion Without Story》，Nicole Lazzaro</li></ul></li></ul><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul><li><a href="https://www.gcores.com/radios/101694">技法、观察、意识 — 中央美院与它的游戏设计教育</a></li><li><a href="https://www.gcores.com/radios/125339/timelines?pi=1">游戏为何能深深吸引玩家？一堂深入浅出的游戏理论课程</a></li><li><a href="https://www.gcores.com/radios/141533">重识游戏Vol.1 游戏是什么</a></li><li><a href="https://www.gcores.com/radios/141842">重识游戏Vol.2 游戏与学习</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Learning Notes </tag>
            
            <tag> GCORES </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 第十章 游戏在玩家的脑中</title>
      <link href="2022/06/01/20220601-theartofgamedesign-chap10/"/>
      <url>2022/06/01/20220601-theartofgamedesign-chap10/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="第十章-体验在玩家的脑中"><a href="#第十章-体验在玩家的脑中" class="headerlink" title="第十章 体验在玩家的脑中"></a>第十章 体验在玩家的脑中</h2><p>其实潜意识牢牢中掌控者我们的一言一行。大部分时间，潜意识不露声色，令我们以为是“自己”在做决定。只是潜意识时不时会犯下可笑的错误，暴露其控制之广。</p><p>四项主要心理能力令玩游戏成为可能：建模、专注、想象、共情。</p><h3 id="建模"><a href="#建模" class="headerlink" title="建模"></a>建模</h3><p>头脑并不直接处理现实，而是处理其模型。<br>建模过程发生在意识层面之下。所谓“意识”，不过是种幻觉。但幻觉和内在模拟有时会出错，比如视错觉。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220608002354.png" alt="点的颜色并没有随着眼球移动而改变 但大脑让它们看起来像在变色"></p><p>大量有用信息——电磁频谱中可见光范围外的一切——都被排除在我们感知到的现实之外。</p><p>就连我们能看见的光，都经过了眼和大脑的奇怪筛选。<br>眼睛看到的颜色之间好像泾渭分明，但在现实中，波长是平滑渐变的，颜色没有明显分界线。眼睛演化成这样，是因为将波长分组有助于理解世界。“颜色”不过是错觉，并非现实——但确实有用模型，能反映现实。</p><p>想掌握精神模型，有一种办法是寻找那些“不加细想，都感觉很自然”的事物。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220608003225.png"></p><p>乍一看，这张图片没有什么不对劲，但稍加思索，这根本不像真人。头身比不对，手指都是小包，而且由线段构成，但若不细想，人们不会觉得这张图片有任何不对劲。</p><p>虽然查理·布朗（即上图小男孩）不像我们认识的人，但因为他和我们内心模型相符，看起来还是很像真人。由于人脸传达许多情感，大脑会多储存一些头和脸部信息，所以我们能接受他的大脑袋；如果反过来，若是头小脑大，看起来就会滑稽，因为这与内心模型相龃龉。</p><p>组成他的线条呢？对大脑而言，从场景中挑选互相分离的物体其实很难，潜意识其实会在处理物体时“画线”，以帮助大脑进行区分。由线段构成的画面与内在模型相符，所以也很自然。</p><p>魔术师也是通过欺骗精神模型，并将其打破的方式来取悦观众。观众们的惊呼就是模型被打破的声音。</p><p>大脑每天做巨量工作，将复杂现实浓缩简化成精神模型，以简化记忆、思考、处理。</p><blockquote><blockquote><p>想到了认知理论中的图式。</p></blockquote></blockquote><p>身为游戏设计师，一定要对精神模型多加关注。每个游戏都有一套简单规则，如同查理·布朗，是预先简化过的模型，让人能轻松消化、处理。玩游戏能放松身心，是因为游戏剥离了许多复杂事物，大脑不必做现实中那么多工作。</p><p>游戏可以帮人演练现实，锻炼我们消化简单模型以及对其进行实验的能力，而后可以逐步进阶到现实世界的复杂事物。</p><p>我们体验和思考的一切都是模型——而不是现实。现实远在我们能理解和领悟的范围之外。我们能体验到的现实只是幻想，但我们永远不能超过这幻想去了解现实。</p><p>身为设计师，若能了解和控制这种幻想在玩家脑中如何形成，能创造的体验就和现实世界一样真实——甚至更甚。</p><h3 id="专注"><a href="#专注" class="headerlink" title="专注"></a>专注</h3><blockquote><p>时光有时候像鸟儿飞逝，有时像蜗牛爬行；但注意不到时间究竟是快是慢的时候，才是人最幸福的时候。 —— 伊万·屠格涅夫</p></blockquote><p>大脑理解世界的一项关键技巧是选择性地集中注意力——忽略一些事物，对另一些事物投入更多精神能力。</p><p>如“鸡尾酒会效应”：在嘈杂环境中能只关注于听到自己所想要听到的内容（比如突然听到自己的名字）。<br>“双耳分听研究”：实验中，被试戴上耳机，双耳收到不同听觉体验，如左耳读莎士比亚，右耳念数字。只要两个声音不太相似，被试一般能做到集中听一个声音并复述其内容。若是问另一个声音在说什么，被试一般都不清楚。</p><p>任意时刻，专注的内容是由潜意识欲望和清醒意志共同决定。创作游戏时，目的是创造有趣体验，足以令玩家尽可能长久而强烈地集中注意力。</p><p>心流：米哈里等人提出。忘记周遭，心无杂念。全神贯注，忘记时间。专注、快乐、享受的状态。其中一种定义是“完全专注于一个活动中，并感到高度乐趣和满足”。</p><p>想让玩家进入心流，有以下关键点：</p><ul><li>目标清晰：人有清晰目标，更容易集中精力于任务；目标不明确，就无法确定行为是否有效，就不那么沉浸。</li><li>没有干扰：干扰会吸引有限的注意力。心和手需同时参与游戏。只思考，手会闲；只用手，心会飘。</li><li>反馈直接：即及时反馈。</li><li>持续挑战：人类喜爱挑战，但人类喜爱感觉可以完成的挑战。即挑战与技能水平需要匹配。</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220608005206.png" alt="只有挑战和技巧匹配才能产生心流"></p><p>玩家技能水平会不断进步，这就要求与之相符的挑战（即游戏难题/困境）。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220608005440.png" alt="即网易所提“非线性体验”"></p><p>张弛有度，即网易所提“非线性”体验，能让玩家更加享受其中。</p><h4 id="21-号透镜：心流"><a href="#21-号透镜：心流" class="headerlink" title="21 号透镜：心流"></a>21 号透镜：心流</h4><p>使用本透镜前，请考虑是什么在吸引玩家的注意力。<br>问自己这些问题：</p><ul><li>我的游戏有清晰的目标吗？如果没有，怎样改好？</li><li>玩家目标和我所希望的一致吗？</li><li>游戏中是否有令玩家分心，以致忘记目标的部分？若有，能否减少这些干扰，或能否融入游戏目标内？</li><li>我的游戏是否稳定提供连串不太容易，也不太难的挑战？有没有考虑到玩家的技巧可能逐步提高？</li><li>玩家的技巧提高的速率和我的期望相符吗？若不是，应该怎样改进？</li></ul><p>必须学会识别心流。心流并不一定伴随外在情感流露，往往与沉默、退缩为伴。<br>单人游戏玩家进入心流后，一般会安静下来，不时轻声自言自语。因为太过专注，面对你的问题，他们有时反应很慢，有时还会烦躁；<br>多人游戏玩家进入心流后，经常热情交流，并一直专注游戏。</p><p>一旦发现你的游戏中有玩家进入新六，看仔细——他们不会永远处于该状态。务必注意关键时刻——可能某事发生，玩家就离开了心流。利用这些关键点来进行版本迭代。</p><p>也尽可能在自己的游戏设计中进入心流！</p><h3 id="共情"><a href="#共情" class="headerlink" title="共情"></a>共情</h3><p>即换位思考。每当这时，我们尽全力思他人所思，感他人所感。能做到这样是理解他人能力的一个特征，也是游戏不可分割的一部分。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220608010123.png"></p><blockquote><blockquote><p>印象中，心理学中有讲到孩子习得情绪就是通过某种模仿，也是一种本源共情能力。</p></blockquote></blockquote><p>人甚至能和动物共情。</p><p>狗比其他动物面部表情更丰富，它们也和人一样，用眉眼表达情绪。这似乎是狗为了生存目的进化出的技能。做对表情，就可以激发人类共情。</p><p>大脑通过精神模型来完成这些行为——并不是与真人、真动物共情，而是与精神模型共情——于是很容易受蒙骗。</p><p>有时人所共情并不存在情感。照片、绘画、游戏人物，能轻易激发共情。艺术家们深知这点，于是加以利用。下次看影视作品，可以注意，自己在何处共情，为何共情？</p><p>游戏设计师要与其他艺术家一样运用共情。但不仅限于此，我们还有新的交互共情方式。游戏就是解决问题，情感投射是解决问题的好办法。</p><p>如果人能站在别人立场思考，就能更好回答“那个人能怎么解决某个问题”。游戏里所投射到人物身上的，不仅仅是情感，还是所有决策能力。其他无法互动的媒体形式无法做到这点。</p><h3 id="想象"><a href="#想象" class="headerlink" title="想象"></a>想象</h3><blockquote><p>最美的世界，只能通过想象进入。 —— 海伦·凯勒</p></blockquote><p>详细那个李，把游戏代入玩家内，把玩家带入游戏。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220608010725.png"></p><blockquote><blockquote><p>所以为什么要用太极嘞，玩家就在游戏中，游戏就在玩家中？</p></blockquote></blockquote><p>这里的想象不仅指天马行空的能力，要更普遍。包括听到一段话然后自然构建画面的能力。游戏不必给出所有细节，玩家自会将其填充。了解应该给玩家展示什么，又应将什么留白，就是艺术了。</p><p>想象力的重要功能：</p><ul><li>交流（一般用于讲故事）</li><li>解决问题</li></ul><p>游戏中，以上两者都很关键。游戏设计师必须理解怎样让玩家想象力助力故事，还要清楚想象力能解决、不能解决的问题。</p><p>人脑很微妙，人类所知很少。但了解越多，越有可能利用其为玩家创造绝佳体验。<br>别忘了，你也装备着大脑。运用建模、专注、共情和想象来了解这些能力如何在玩家脑中运用。</p><hr><h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><h3 id="第十章-体验在玩家的脑中-1"><a href="#第十章-体验在玩家的脑中-1" class="headerlink" title="第十章 体验在玩家的脑中"></a>第十章 体验在玩家的脑中</h3><ul><li>《Flow: The Psychology of Optimal Experience》米哈里,契克森米哈赖著。此书引人入胜,由心流领域最知名的研究者撰写,探索了心流的本质。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 第九章 游戏为玩家而生</title>
      <link href="2022/05/30/20220530-theartofgamedesign-chap9/"/>
      <url>2022/05/30/20220530-theartofgamedesign-chap9/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="第九章-游戏为玩家而生"><a href="#第九章-游戏为玩家而生" class="headerlink" title="第九章 游戏为玩家而生"></a>第九章 游戏为玩家而生</h2><h3 id="爱因斯坦的小提琴"><a href="#爱因斯坦的小提琴" class="headerlink" title="爱因斯坦的小提琴"></a>爱因斯坦的小提琴</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220605004916.png"></p><p>要创造宏伟体验，必须和爱因斯坦一样，了解受众会喜欢什么，比他们更了解。很多时候，人们并不知道自己喜欢什么。他们觉得他们知道，但其实他们不知道。</p><blockquote><blockquote><p>想起了亨利福特名言，人们只能想到要更快的马，却没法想到汽车。</p></blockquote></blockquote><p>这里的关键是倾听。必须深入而彻底地倾听玩家。必须熟悉他们的想法、情感、恐惧和欲望。一些他们自己可能都没有意识到的部分往往是最重要的。</p><h3 id="设身处地"><a href="#设身处地" class="headerlink" title="设身处地"></a>设身处地</h3><p>如何完成倾听？最好的方法之一是移情（会在第十章中讨论），就是换位思考。</p><p>适应玩家的精神角度，积极把自己投射到玩家们的思维中。必须尝试变成他们，观其所观，听其所听，想其所想。</p><p>制作游戏时如果自己曾是目标受众的一员，就会有优势，能够更好的代入。好好保存自己的记忆，这些是最珍贵的工具之一，可以帮助你移情。</p><p>但要是为一些不了解的受众制作游戏，必须在目标人群中想起你认识的朋友，想象他们的行为。和文化人类学家一样，必须花时间与目标受众在一起，与他们交流，观察他们，想象成为他们会怎么样。勤加练习，就能进步。如果能在思想上变为任何类型的玩家，就能为游戏拓展受众，因为你的设计能够囊括其他设计师忽视的人群。</p><blockquote><blockquote><p>想起之前面试米的面试官教会我的词——“格人”。</p></blockquote></blockquote><h3 id="人群特征"><a href="#人群特征" class="headerlink" title="人群特征"></a>人群特征</h3><blockquote><p>正如有些人所言，年龄不会把我们变成孩子，它只会为我们保留真正的童心。 —— 歌德（Goethe）</p></blockquote><p>每个人都是独特的，但要制作一些许多人都喜欢的游戏，就要考虑这些人群的共同之处。这些分类叫做人群特征/市场细分。</p><p>对于游戏设计师，两条最重要的人口统计变量是年龄和性别。<br>随着年龄增长，玩游戏的方式会有所不同；男性女性在所有年龄段都有不同游戏方式。</p><p>以下是典型年龄的人群特征：</p><ul><li>0~3 岁，婴儿/幼儿：该年龄段孩子对玩具很感兴趣，但游戏复杂度于其中包含的待解决问题对他们来说太难。虚拟界面（如游戏卡牌）超越了他们的能力范围，但他们会觉得直接的界面（如触摸屏）很有趣</li><li>4~6 岁，学龄前儿童：该年龄段孩子通常会第一次表现出对游戏的兴趣。他们会更频繁地与父母而不是其它人一起玩简单游戏，因为父母知道怎样调整规则来让游戏保持快乐而有趣。</li><li>7~9 岁，儿童：7 岁被称为“启蒙时期”。该年龄段的孩子已经入学，通常能阅读书本，能够想通问题并解决一些难题。他们自然而然对游戏玩法表现出兴趣。该年龄段，孩子们开始自己决定喜爱的游戏和玩具，而不只是接受父母为他们所做的选择。</li><li>10~13 岁，青春期前的孩子：该阶段的孩子经历一系列巨大生理变化，他们开始对事物有更深入思考。该年龄段有时也被称为“迷恋时期”，因为他们开始着迷于兴趣爱好。男孩的兴趣经常就是游戏。</li><li>13~18 岁，青少年。青少年的任务是为成人做准备。男女孩兴趣出现重要分化。男孩们对竞技和征服保持兴趣，女孩更留意现实世界的问题和相互交流。两种性别的青少年都喜欢尝试新体验。</li><li>18~24岁，年轻的成人：通常比孩子玩得少。游戏类型和娱乐方式已经有了特定偏好。通常有富余的时间和金钱。</li><li>25~35，二三十岁：时间变得更加宝贵，是“构建家庭”的年龄。大多数成年人只玩一些休闲游戏，把玩游戏作为偶尔娱乐活动，或者与孩子一起玩游戏。该年龄段的“核心玩家”——把游戏作为主要爱好的人——是重要的目标市场之一，会购买很多游戏。经常表达喜好与厌恶，可能潜在影响社交网络中其他人的购买决策。</li><li>35~50，三四十岁：“家庭成熟”阶段，大多数人成为休闲玩家。随着孩子年龄增长，会做出购买昂贵游戏的决定。若有可能，会寻求整个家庭一起游戏的机会。</li><li>50+，五十岁以上：“空巢老人”，突然有了很多闲暇时间——孩子搬出去，自己很快退休。一些人回归年轻时喜爱的游戏，其他人寻求转变，转向新的游戏体验。该年龄段人群对重度社交游戏体验尤其感兴趣，如高尔夫、网球、桥牌、MMO。Facebook 游戏在这个年龄段特别成功。老人眼睛和双手不如以前灵活，所以会对小屏幕游戏或者需要控制极其复杂移动的游戏感到沮丧。</li></ul><p>无论为哪个群体创作游戏，重要的是：由于儿童时期就是以玩游戏为中心，所以他们所有的游戏活动都与他们的儿童时期有关。为给一些特定年龄的人群制作游戏，必须让自己的游戏与他们儿童时期流行的游戏和主题保持协调。换言之：要与他们真正地交流，必须用他们孩童时期说话的方式。</p><blockquote><blockquote><p>这一点倒是以前不知道的。</p></blockquote></blockquote><h3 id="媒介排斥女性吗"><a href="#媒介排斥女性吗" class="headerlink" title="媒介排斥女性吗"></a>媒介排斥女性吗</h3><p>男人和女人不同。设计师需要认识到这种区别并为之做出差异化设计。</p><h4 id="男性玩家喜欢在游戏中看到的五件事"><a href="#男性玩家喜欢在游戏中看到的五件事" class="headerlink" title="男性玩家喜欢在游戏中看到的五件事"></a>男性玩家喜欢在游戏中看到的五件事</h4><blockquote><p>假如你是一位女性并且觉得自己不了解男性，你可能想得太多了。 —— 路易斯·雷米（louis Ramey）</p></blockquote><ol><li>掌握：男性很喜欢掌握一件事。这并不意味着这件事很重要或者很有用——它可能只是很有挑战性。而女性更倾向于掌握一件很有意义的事。</li><li>竞争：男性很喜欢通过与其他人竞争来表现出他们是最棒的。但对于女性，输掉游戏（或导致其他人输掉）带来的糟糕体验远大于胜利带来的兴奋感。</li><li>破坏：男性喜欢摧毁东西。我们常看到男人在搞破坏。小男孩玩积木，最兴奋的部分不是构建，而是完成后立马推倒。电子游戏天生适合这种玩法，虚拟世界中的摧毁能比现实世界具有更大数量级。</li><li>空间谜题：男性通常比女性有更强空间推理能力。</li><li>试错：男性倾向于反复试错来学习。</li></ol><h4 id="女性玩家喜欢在游戏中看到的五件事"><a href="#女性玩家喜欢在游戏中看到的五件事" class="headerlink" title="女性玩家喜欢在游戏中看到的五件事"></a>女性玩家喜欢在游戏中看到的五件事</h4><blockquote><p>女性渴望获得情感与社交探索的体验，并将这些应用到自己的生活中。 —— Heidi Dangelmeier</p></blockquote><ol><li>情感：女性玩家喜欢探索人类丰富情感的体验。对于男性，情感是体验中的有趣部分，但很少作为体验终点。</li><li>现实世界：女性倾向于玩与现实有关联的娱乐活动。观察小女孩们的游戏（过家家、扮演兽医、换装游戏等）。小男孩更喜欢扮演幻想中的角色。这种倾向持续到成年——当事物通过有意义方式与现实世界相连，女人们更有兴趣了（如模拟人生）</li><li>照料：女性玩家喜欢照料。女孩们喜欢照顾玩具娃娃、玩具宠物和比她们更小的孩子。竞技游戏中会出现女孩放弃领先优势来帮助弱小玩家，一部分原因是她们觉得玩家之间的联系和感受比游戏更加重要；另一部分原因是出于照料的乐趣。种植游戏和宠物游戏在女性玩家中的成功大部分源于照料机制。</li><li>对话与字谜：女性具有更好的文字技能。</li><li>通过例子学习：女性倾向于通过例子学习。她们喜欢用清晰教程指导自己，一步步学习。</li></ol><p>还有其他区别。<br>男性倾向于专注一件事，女性具有较好的多线程工作能力。一些推测认为这与原始收集行为有关。</p><p>PC 的出现带来了新的游戏类型：</p><ul><li>移除所有社交元素</li><li>移除大部分文字和情感元素</li><li>很大程度与现实世界分离</li><li>通常很难掌握</li><li>为没有限制的虚拟破坏提供了可能</li></ul><p>所以早期电脑和视频游戏主要流行于男性玩家。但随着技术发展，这一局面得到了改善。</p><h4 id="19-号透镜：玩家"><a href="#19-号透镜：玩家" class="headerlink" title="19 号透镜：玩家"></a>19 号透镜：玩家</h4><p>要是用这个透镜，你需要停止思考你的游戏，开始思考你的玩家。<br>问你自己关于这几个关于你的目标玩家的问题：</p><ul><li>他们通常喜欢什么？</li><li>他们不喜欢什么,为什么?</li><li>他们希望能在你的游戏中看到什么？</li><li>如果我处在他们的位置上,我想要在游戏中看到什么?</li><li>他们将会特别喜欢或者不喜欢游戏中的哪一部分?</li></ul><p>一个优秀的游戏设计师总是考虑并拥护他的玩家。熟练的设计师会同时使用玩家透镜和全息透镜，同时考虑玩家、游戏体验和游戏机制。思考你的玩家是一种很有用的方法，但是更有用的是观察他们玩你的游戏。你观察得越多，就越容易预测他们会喜欢什么。</p><p>通过密切关注不同人群特征目标的欲望和行为，能够平衡游戏来适应所有人。当你的游戏受众广泛时，不妨将其细化分析。密切观察不同人群特征的玩家如何游玩游戏，修改已有设定，让其能支持每个群体的游戏风格。</p><h3 id="心理特征"><a href="#心理特征" class="headerlink" title="心理特征"></a>心理特征</h3><p>心理特征：人们的内在想法，他们在寻找怎样的快乐。</p><p>有一些心理特征与生活方式（活动）有关，如“喜欢养狗的人”、“FPS 硬核玩家”。</p><p>其他一些心理特征与一个人喜欢什么有关——人们从参与的游戏或者其他活动中寻找快乐。每个人行动的动机最终都可以被追溯为寻求某种快乐。</p><h4 id="Marc-LeBlanc-的游戏乐趣分类"><a href="#Marc-LeBlanc-的游戏乐趣分类" class="headerlink" title="Marc LeBlanc 的游戏乐趣分类"></a>Marc LeBlanc 的游戏乐趣分类</h4><ol><li>感官：感官乐趣包含使用感观（视听嗅味触）。看到美丽事物，聆听音乐，触摸丝绸，闻到/品尝到美味食物都是感官快乐。游戏美感主要带来这种快乐。<br>  感官乐趣通常是玩具的乐趣（17 号透镜）。这种乐趣不能把糟糕的游戏变得优秀，但它通常能把优秀的游戏变得更好。</li><li>幻想：一种想象世界的乐趣和想象自己变为其他人的乐趣。将在 19、20 章进行深入讨论。</li><li>叙事：并不意味着讲述确定的线性故事。而是故事的发生经过了一系列事件的戏剧化演变。将在 16、17 章深入讨论。</li><li>挑战：某种程度上游戏玩法的核心乐趣之一，因为每个游戏的核心都有一个需要被解决的问题。对部分玩家而言，这种乐趣就足够了，其他玩家想要更多乐趣。</li><li>团队关系：由友情、合作和社区带来的乐趣。23、24 章深入讨论。</li><li>探索：探索的乐趣很广泛，搜寻并找到新东西就是探索。有时候是对游戏世界的探索，有时候是对隐藏特性/巧妙策略的探索。探索新食物是游戏乐趣的关键。</li><li>表达：表达自我的乐趣和创造事物的乐趣。表达很少与完成游戏目标有关，在大多游戏中，为角色设计新外观不能帮你取得优势——但对一些玩家而言，这可能是他们的游戏原因。<blockquote><blockquote><p>可以算做某种程度的“自己实现”哈哈，参见《乌合之众》的读后感： <a href="https://medill-east.github.io/2022/06/04/20220604-after-reading-the-crowd/">群体语境下无归属玩家的个人叙事是否可能</a></p></blockquote></blockquote></li><li>服从：这是踏入魔法阵的快乐——离开真实世界，进入全新、令人愉悦、充满规则、有意义的世界。几乎所有游戏都包含服从的快乐。</li></ol><h4 id="Richard-Bartle-玩家类型分类"><a href="#Richard-Bartle-玩家类型分类" class="headerlink" title="Richard Bartle 玩家类型分类"></a>Richard Bartle 玩家类型分类</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220605104129.png"></p><ol><li>♦成就型：想完成游戏目标，主要乐趣源于挑战。喜欢对世界施加影响。</li><li>♠探索型：想了解游戏方方面面，主要乐趣源于探索。喜欢与世界互动。</li><li>❤社交型：对于人们之间的关系更感兴趣，主要寻求团队合作乐趣。喜欢与玩家互动。</li><li>♣杀手型：喜欢竞争并击败他人，享受混合了竞争和破坏的快乐。角色特征是“喜欢对他人施加影响”。乐于助人者也包含在这个分类中。喜欢对玩家施加影响。</li></ol><h4 id="更多乐趣：更多"><a href="#更多乐趣：更多" class="headerlink" title="更多乐趣：更多"></a>更多乐趣：更多</h4><ul><li>预感：当得知快乐就要来临，等待它的到来就是一种快乐<blockquote><blockquote><p>等待小王子的小狐狸。<br>如果你说你在下午四点来，从三点钟开始，我就开始感觉很快乐，时间越临近，我就越来越感到快乐。<br>到了四点钟的时候，我就会坐立不安，我发现了幸福的价值，但是如果你随便什么时候来，我就不知道在什么时候准备好迎接你的心情了<br>——安东尼·德·圣-埃克苏佩里 《小王子》</p></blockquote></blockquote></li><li>完成：完成一件事是一种美好感觉。如“吃掉所有豆子”，“消灭所有坏蛋”，“清空这个关卡”等目标都是利用这种乐趣。</li><li>幸灾乐祸：当一些不公正的人突然遭到报应，我们会有此感受。这是竞技游戏的重要构成部分。德国人称其为 schadenfreude。</li><li>赠与礼物：当你通过赠送惊喜礼物让别人开心时，就会感受到这种特别乐趣。可以通过包装礼物来增强这种惊喜。这种乐趣并不是源于别人的快乐，而是源于你使得他们变得快乐。</li><li>幽默感：两个没有联系的事物通过形式变化被突然联系在一起。<blockquote><blockquote><p>搞点薯条！</p></blockquote></blockquote></li><li>可能性：有很多选择并让你任意挑选的乐趣。通常在购物/自助餐桌上体验这种乐趣。</li><li>成就的自豪感：完成一件事之后，这种乐趣自身可以持续很久。意第绪语中的单词 naches 就是关于这种快乐的满足感，通常指向对孩子们/孙子们的自豪感。</li><li>惊喜：大脑喜欢惊喜。</li><li>激动：过山车设计师之间的说法“恐惧 - 死亡 = 开心”。观看《Thrill》频道的节目就是这种快乐——恐惧，但安全。</li><li>战胜逆境：这是一种完成了一件认为难以成功的事的乐趣。通常而言，这种乐趣的出现伴随着个人胜利的呼喊。意大利人用于描述这种快乐的单词：Fiero<blockquote><blockquote><p>这作者真是博学多识，怎么什么语都知道 233</p></blockquote></blockquote></li><li>难以置信：一种包含敬畏和惊异的强大感受。</li></ul><p>对不同乐趣保持开放心态，并且注意乐趣会与情境有关。</p><h4 id="20-号透镜：乐趣"><a href="#20-号透镜：乐趣" class="headerlink" title="20 号透镜：乐趣"></a>20 号透镜：乐趣</h4><p>思考你的游戏提供了哪些类型的乐趣。<br>问你自己这几个问题：</p><ul><li>你的游戏能给玩家带来哪些乐趣？这些乐趣能够继续改善吗？</li><li>你的体验中缺少了哪些乐趣，为什么？能够在游戏中增加这种乐趣吗？</li></ul><p>游戏的最终目的就是带来快乐。通过浏览已知的乐趣列表，考虑你的游戏如何传达其中的每一种乐趣，你可能就有了改进游戏的灵感，让它能够为玩家带来更多乐趣。要经常留意那些独特的、未分类的、在大多数游戏中都没有的乐趣。因为只要找到一个就能让你的游戏拥有独特的体验。</p><hr><h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><h3 id="第九章-游戏为玩家而生-1"><a href="#第九章-游戏为玩家而生-1" class="headerlink" title="第九章 游戏为玩家而生"></a>第九章 游戏为玩家而生</h3><p> - 理查德,R·巴特尔撰写的《设计虚拟世界》 (Designing Virtual Worlds by Richard R. Bartle) 。这是一本关于虚拟世界开发历史的优秀著作。它由一位实现这种虚拟世界的深度思考者撰写。</p><ul><li>马膝.L·克林格尔巴赫与肯特,C·巴里吉共同撰写的《大脑的快乐》 (Pleasures of the Brain by Morten L. Kringelbach and Kent C. Berridge, editors) 。这是一本由心理学家与神经学家共同完成的关于寻找快乐机制的研究集合。如果你还不熟悉科学论文，这可能有点令人却步，但这对于执着的读者是一笔宝贵的财富。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《Yin Yang Messenger》 Demo 展示及分析</title>
      <link href="2022/05/29/20220529-yinyangmeseenger-demo-showcase-analysis/"/>
      <url>2022/05/29/20220529-yinyangmeseenger-demo-showcase-analysis/</url>
      
        <content type="html"><![CDATA[<h2 id="《Yin-Yang-Messenger》Demo-展示"><a href="#《Yin-Yang-Messenger》Demo-展示" class="headerlink" title="《Yin Yang Messenger》Demo 展示"></a>《Yin Yang Messenger》Demo 展示</h2><h3 id="视频展示"><a href="#视频展示" class="headerlink" title="视频展示"></a>视频展示</h3><video width="480" height="270" controls>  <source src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Yin Yang Messenger Compression.mp4" type="video/mp4"></video><ul><li><a href="https://www.bilibili.com/video/BV11g411R7J4/">b 站视频链接</a></li></ul><h3 id="试玩地址"><a href="#试玩地址" class="headerlink" title="试玩地址"></a>试玩地址</h3><p><a href="https://haodongliao.itch.io/yin-yang-messenger">https://haodongliao.itch.io/yin-yang-messenger</a></p><h3 id="截图展示"><a href="#截图展示" class="headerlink" title="截图展示"></a>截图展示</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/screenshot1.jpg" alt="善良灵魂与贪吃小猪"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/screenshot2.jpg" alt="恶灵与恶犬"></p><h2 id="《Yin-Yang-Messenger》Demo-设计思路分析"><a href="#《Yin-Yang-Messenger》Demo-设计思路分析" class="headerlink" title="《Yin Yang Messenger》Demo 设计思路分析"></a>《Yin Yang Messenger》Demo 设计思路分析</h2><h3 id="基本介绍"><a href="#基本介绍" class="headerlink" title="基本介绍"></a>基本介绍</h3><p> 在中国传统文化中，公鸡是阳的象征之一。在这个游戏中，玩家将扮演一个能在阴阳状态间转换的信使，为坟墓中的灵魂带去消息。 路途中，玩家将遭遇恶犬、恶灵、善良的灵魂以及调皮的鬼魂，也会碰上只关心眼前吃食的小猪。 灵活使用阴阳状态的转换，留心坟墓中灵魂的遗言。</p><h3 id="游戏整体说明"><a href="#游戏整体说明" class="headerlink" title="游戏整体说明"></a>游戏整体说明</h3><p>以下将从目标、路径、挑战、体验四个方面对游戏进行整体说明：</p><h4 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h4><p>即游戏的结束条件<br>玩家需要通过操作，避开前方阻碍/搭建道路，到达终点</p><h4 id="路径"><a href="#路径" class="headerlink" title="路径"></a>路径</h4><p>即玩家达到目标的手段<br>玩家可进行的操作有：移动、跳跃（可两次跳跃）、阴阳转换</p><h4 id="挑战"><a href="#挑战" class="headerlink" title="挑战"></a>挑战</h4><p>即玩家在实现目标的路径中可能碰到的障碍</p><h5 id="恶犬"><a href="#恶犬" class="headerlink" title="恶犬"></a>恶犬</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220529145830.png"></p><ul><li>行为模式<br>恶犬平时会躲在自己的窝中，但若是玩家以阳状态靠近到恶犬的感知范围内，就会扑向玩家。若是在追击成功前离开窝太远，又会回到窝中。玩家若是被恶犬扑倒，游戏结束。</li><li>应对方式<br>恶犬虽会追击阳状态，但却害怕阴状态。玩家可利用这一特性来调动恶犬位置，从而为自己争取前进空间。</li></ul><h5 id="贪吃小猪"><a href="#贪吃小猪" class="headerlink" title="贪吃小猪"></a>贪吃小猪</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220529150238.png"></p><ul><li>行为模式<br>贪吃小猪什么也不管，只会埋头吃食。但若是感受到强大的灵魂，也会不情愿地勉强挪挪位置。</li><li>交互方式<br>贪吃小猪不会伤害玩家，玩家可以站到其身上，将其作为垫脚处。会朝反方向原理善良的灵魂。</li></ul><h5 id="善良的灵魂"><a href="#善良的灵魂" class="headerlink" title="善良的灵魂"></a>善良的灵魂</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220529145900.png"></p><ul><li>行为模式<br>善良的灵魂与世无争，只是在无聊游荡。但其若是感知到阴状态，便会紧紧跟随。</li><li>交互方式<br>善良的灵魂不会伤害玩家，但玩家可以利用阴状态来将它带到贪吃小猪处，迫使小猪移动。</li></ul><h5 id="恶灵"><a href="#恶灵" class="headerlink" title="恶灵"></a>恶灵</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220529150504.png"></p><ul><li>行为模式<br>恶灵不会对阳状态的玩家有任何反应，但若是玩家处于阴状态，恶灵就会慢慢靠近玩家，想要进行“夺舍”。若是被其夺舍成功，玩家便不再受控。</li><li>应对方式<br>阳状态下恶灵不会有所行动，但恶灵会靠近处于阴阳转换状态的玩家。玩家可利用这一特性来调动恶灵位置，防止被其夺舍</li></ul><h5 id="调皮鬼"><a href="#调皮鬼" class="headerlink" title="调皮鬼"></a>调皮鬼</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220529150851.png"></p><ul><li>行为模式<br>调皮鬼不会直接对玩家造成伤害，但却会对玩家操作方式造成影响。调皮鬼会不断在红绿两种状态间切换，且不断追寻玩家，若是被红色状态的调皮鬼追到，则玩家水平操作按键会反向（即原本向左的按键变为向右，反之亦然）；若是被绿色状态的调皮鬼追到，则玩家水平操作按键恢复正常。玩家每次被调皮鬼追到后会被降速，最多被降速两次。</li><li>应对方式<br>调皮鬼总是能找到玩家，但它速度较慢，所以可以先引诱其到地图角落，然后一口气突破剩余障碍。</li></ul><h4 id="体验"><a href="#体验" class="headerlink" title="体验"></a>体验</h4><p>即期望玩家在游玩时获得的情感体验<br>在后面部分会展开描述，这里只进行列举</p><ul><li>被恶犬追的心跳</li><li>被善灵帮的恍然</li><li>被恶灵附身的无助</li><li>被调皮鬼影响的恼人</li></ul><h3 id="目标体验分析"><a href="#目标体验分析" class="headerlink" title="目标体验分析"></a>目标体验分析</h3><h4 id="被恶犬追的心跳-第一关"><a href="#被恶犬追的心跳-第一关" class="headerlink" title="被恶犬追的心跳 - 第一关"></a>被恶犬追的心跳 - 第一关</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220529152132.png"></p><ul><li>预期体验</li></ul><p>心跳+紧张</p><ul><li><p>实现手段</p><ul><li>恶犬的高速移动</li><li>恶犬的范围探敌</li></ul></li><li><p>预期的玩家行为方式</p></li></ul><p>最开始进入第一关时有摄像机的视觉引导，玩家会知道需要前往墓碑。而恶犬一开始朝向右方，玩家来到恶犬附近时可能还在熟悉操作，但恶犬的速度非常之快，电光火石间战斗便已经结束。玩家这时候很可能会有种措手不及的感觉。</p><p>下一次在面对恶犬时有了些谨慎，这时玩家会逐渐试探出恶犬的活动范围，但因为恶犬的移速太快，所以多数情况下还是来不及反应就游戏结束了。这时候玩家会注意到屏幕上方除了移动和跳跃，还有转换能力，借用转换能力玩家便可发现恶犬会原理处于阴状态下的玩家。利用这点便可调动恶犬走位，实现过关。</p><p>过关后，会发现墓碑中的灵魂留下了遗言：</p><blockquote><p>Thank you! If you have trouble, go to the blue guy!</p></blockquote><p>这其实是对下关破关机制的提示。</p><ul><li>实际体验</li></ul><p>作为第一关，其实很大程度上会造就第一印象。而从给身边朋友的试玩反馈来看，对第一关的描述大多是“措手不及+心跳”。通关过程也基本和预期相符。</p><ul><li>题外话</li></ul><p>其实玩家可以不借助阴状态，直接通过极限的跳跃技巧来直接避开恶犬的扑咬。但其实很难做到这一点，所以算是给愿意探索的玩家留了一条捷径（速通，有√）。</p><h4 id="被善灵帮的恍然-第二关"><a href="#被善灵帮的恍然-第二关" class="headerlink" title="被善灵帮的恍然 - 第二关"></a>被善灵帮的恍然 - 第二关</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220529153433.png"></p><ul><li>预期体验</li></ul><p>迷茫+恍然</p><ul><li><p>实现手段</p><ul><li>无法直接跳上去的高台</li><li>善灵+小猪+箱子的配合</li></ul></li><li><p>预期的玩家行为方式</p></li></ul><p>玩家来到高台之下，会发现无法跳上，如果跳下绿色毒池也会结束游戏。所以会尝试使用阴状态在图中乱跑，发现无论是小猪还是箱子都没有反应。这时候会发现地图中还有一个没有接触过的蓝色东西，结合上一关中的墓碑遗言，玩家会尝试性地靠近善灵。</p><p>因为是无法跳跃到的高度，所以玩家只能通过阴状态接近善灵，发现善灵会跟随阴状态。此时玩家可能还是不知道能干什么，但反复尝试之后发现小猪会被善灵推远。利用这个机制，玩家利用阴状态带善灵来到右方，将小猪往左推，从而推下箱子（甚至小猪），从而有了登高的垫脚处。</p><p>过关后，会发现墓碑中的灵魂留下了遗言：</p><blockquote><p>Thank you! Watch out for that purple guy!</p></blockquote><p>这其实是对下关恶灵的提示。</p><ul><li>实际体验</li></ul><p>从给身边朋友的试玩反馈来看，确实会出现不知道该干什么的情况，但因为只有那一条可解路径，所以还是能顺利通关。通关过程也基本和预期相符。</p><h4 id="被恶灵附身的无助-第三关"><a href="#被恶灵附身的无助-第三关" class="headerlink" title="被恶灵附身的无助 - 第三关"></a>被恶灵附身的无助 - 第三关</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220529154228.png"></p><ul><li>预期体验</li></ul><p>无助</p><ul><li><p>实现手段</p><ul><li>熟悉的恶犬</li><li>只对阴状态敏感的恶灵</li><li>被恶灵附身后无法操控</li></ul></li><li><p>预期的玩家行为方式</p></li></ul><p>玩家来到这关会看到熟悉的恶犬，心中不免一紧。下意识地会开始切换到阴状态来调动恶犬位置。</p><p>当玩家切换到阴状态后会发现恶灵会向自己靠近。不知道这意味着什么的玩家可能会置之不理，但最终被恶灵附身的玩家会发现自己不受控制了，从而结束当局游戏。</p><p>玩家这时会试探恶灵的行为方式，发现它只对阴状态离体后的阳感兴趣。知道了恶灵的行为方式，也就可以通关了。</p><p>过关后，会发现墓碑中的灵魂留下了遗言：</p><blockquote><p>Thank you! The guy who changes color will make you dizzy!</p></blockquote><p>这其实是对下关调皮鬼的提示。</p><ul><li>实际体验</li></ul><p>通关过程基本和预期相符。</p><h4 id="被调皮鬼附身的恼人-第四关"><a href="#被调皮鬼附身的恼人-第四关" class="headerlink" title="被调皮鬼附身的恼人 - 第四关"></a>被调皮鬼附身的恼人 - 第四关</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220529154904.png"></p><ul><li>预期体验</li></ul><p>恼人</p><ul><li><p>实现手段</p><ul><li>熟悉的善灵与小猪</li><li>会改变玩家水平方向按键操作的调皮鬼</li><li>每次被调皮鬼追上后会被减速，一共会被减速两次</li></ul></li><li><p>预期的玩家行为方式</p></li></ul><p>玩家刚进到关卡就会注意到缓缓向自己移动的调皮鬼，经过恶灵关的玩家会对这些莫名靠近的灵体很谨慎，所以可能会想原理。一旦玩家在初始高台跳跃且按住右方向键不放，很可能就会被调皮鬼抓到，从而水平按键反向，直接落入毒池中，当局游戏结束。</p><p>之后可能会需要经过几番试探才清楚调皮鬼的水平按键反向机制，其实正好和上关中墓碑留言相应“那个变色的家伙会让你晕头转向”。知道这一点后，便是利用熟悉的善灵调动贪吃小猪的机制来通关了。</p><p>需要注意的是每次被调皮鬼追上后，玩家速度会下降，这其实会导致游戏难度不断提升，而且一旦在空中被调皮鬼追上很难处理，所以玩家会尝试先将调皮鬼勾引到角落再进行剩余部分的通关。</p><p>然后就通关啦！</p><ul><li>实际体验</li></ul><p>通关过程基本和预期相符。试玩的朋友确实也被这个小调皮鬼搞了好几次哈哈。</p><h3 id="灵感杂谈"><a href="#灵感杂谈" class="headerlink" title="灵感杂谈"></a>灵感杂谈</h3><p>本身想从阴阳出发，而 2D 平台跳跃算是现有工具和资源体系较为完善的。设计过程中其实受到了 <a href="https://space.bilibili.com/618369?spm_id_from=333.337.0.0">鱼一元 001</a> 大佬关于平台跳跃游戏中 物品（Item）、装置（Devices）、环境（Environment）、状态（Status）四元素讲解的启发。将阴阳作为状态元素引入，而后又从需要发挥阴阳作用以及克制阴阳作用的点出发，分别设计了能够帮助阴状态的善灵（以及配套的小猪拱箱子机制），以及会附身出窍（阴状态离体）状态的恶灵。</p><p>调皮鬼的设计倒是属于设计过程中的突发奇想，因为好的、坏的灵体都有了，那就设计一个亦正亦邪的吧！所以就有了调皮鬼。</p><p>恶犬设计其实思路来源于“鸡犬不宁”，以及能“开天眼”的狗。所以就是与阳状态不死不休，但又畏惧阴状态的设定。</p><p>整体其实经过了一个多月的思路反复，最终真正投入制作的时间可能也就一周左右。这要多亏了 <a href="https://www.coursera.org/learn/game-design-and-development-2">Game Design and Development 2: 2D Platformer</a> 课程打的底子。UI 框架及音乐音效都来自这里面，确实是非常不错的课程。</p><h3 id="可能的扩展思路"><a href="#可能的扩展思路" class="headerlink" title="可能的扩展思路"></a>可能的扩展思路</h3><ul><li>新机制</li></ul><p>新的机制如果继续引入会考虑一些机制上的翻转。总的理念还是阴中有阳，阳中有阴，没有绝对。<br>比如引入阳光机制，对于原本跟随阴状态的善灵，若是将其带到了阳光之下，它就会受伤发狂，从而对阳进行追杀。<br>引入贿赂机制，对于原本执着于夺舍阳的恶灵，可通过一些手段来使其夺舍他人。<br>等等。</p><ul><li>新关卡</li></ul><p>其实 demo 中基本都是机制介绍，没有真正意义上设计复杂关卡，这也是自己所欠缺，需要不断学习的部分。</p><h3 id="可能的商业化思路"><a href="#可能的商业化思路" class="headerlink" title="可能的商业化思路"></a>可能的商业化思路</h3><p>若是能丰富关卡，统一美术风格，也许可以考虑一次性买断制单机或手游。</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Demo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Portfolio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 摘抄/笔记</title>
      <link href="2022/05/29/20220529-theartofgamedesign-toc/"/>
      <url>2022/05/29/20220529-theartofgamedesign-toc/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="Why-Note"><a href="#Why-Note" class="headerlink" title="Why Note"></a>Why Note</h2><p>之前看《游戏设计艺术》一书没看完，接着看！然后也整理一下摘抄/笔记，特此记录。</p><h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>以下基本信息引用自<a href="https://book.douban.com/subject/26791007//">豆瓣</a>：</p><blockquote><p>不需要是技术专家，只要阅读《游戏设计艺术（第2版）》，学习佳作，深刻认识游戏设计的真谛，人人都可以成为成功的游戏设计者！《游戏设计艺术（第2版）》作者Jesse Schell是有二十多年成功经验的游戏设计师，曾任国际游戏开发者协会主席，并在迪士尼在线游戏服务多年，获奖颇多。他以宝贵经验提出一百多套问题集，帮助你从各种角度观察游戏设计，例如心理、建筑、音乐、视觉、电影、软件工程、主题公园设计、数学、谜题设计和人类学等方方面面。</p><p>《游戏设计艺术（第2版）》主要内容包括：游戏的体验、构成游戏的元素、元素支撑的主题、游戏的改进、游戏机制、游戏中的角色、游戏设计团队、如何开发好的游戏、如何推销游戏、设计者的责任等。</p></blockquote><hr><h2 id="Content"><a href="#Content" class="headerlink" title="Content"></a>Content</h2><ol><li><a href="https://medill-east.github.io/2021/08/13/20210813-theartofgamedesign-chap1/">20210813 - The Art of Game Design - Chap1 - In the Beginning, There Is the Designer</a></li><li><a href="https://medill-east.github.io/2021/08/13/20210813-theartofgamedesign-chap2/">20210813 - The Art of Game Design - Chap2 - The Designer Creates an Experience</a></li><li><a href="https://medill-east.github.io/2021/08/13/20210813-theartofgamedesign-chap3/">20210813 - The Art of Game Design - Chap3 - The Experience Rises Out of a Game</a></li><li><a href="https://medill-east.github.io/2021/08/13/20210813-theartofgamedesign-chap4/">20210813 - The Art of Game Design - Chap4 - The Game Consists of Elements</a></li><li><a href="https://medill-east.github.io/2021/08/13/20210813-theartofgamedesign-chap5/">20210813 - The Art of Game Design - Chap5 - The Elements Support a Theme</a></li><li><a href="https://medill-east.github.io/2021/08/13/20210813-theartofgamedesign-chap6/">20210813 - The Art of Game Design - Chap6 - The Game Begins with an Idea</a></li><li><a href="https://medill-east.github.io/2021/08/13/20210813-theartofgamedesign-chap7/">20210813 - The Art of Game Design - Chap7 - The Game Improves Through Iteration</a></li><li><a href="https://medill-east.github.io/2022/05/29/20220529-theartofgamedesign-chap8/">20220529 - The Art of Game Design - Chap8 - The Game is Made for a Player</a></li><li><a href="https://medill-east.github.io/2022/05/30/20220530-theartofgamedesign-chap9/">20220530 - The Art of Game Design - Chap9 - The Experience is in the Player’s Mind</a></li><li><a href="https://medill-east.github.io/2022/06/01/20220601-theartofgamedesign-chap10/">20220601 - The Art of Game Design - Chap10 - Some Elements are Game Mechanics</a></li><li><a href="https://medill-east.github.io/2022/06/05/20220605-theartofgamedesign-chap11/">20220605 - The Art of Game Design - Chap11 - Game Mechanics Must be in Balance</a></li><li><a href="https://medill-east.github.io/2022/06/08/20220608-theartofgamedesign-chap12/">20220608 - The Art of Game Design - Chap12 - Game Mechanics Support Puzzles</a></li><li><a href="https://medill-east.github.io/2022/07/11/20220711-theartofgamedesign-chap13/">20220711 - The Art of Game Design - Chap13 - Players Play Games Through an Interface</a></li></ol><hr><h2 id="透镜汇总"><a href="#透镜汇总" class="headerlink" title="透镜汇总"></a>透镜汇总</h2><h4 id="1-号透镜：情感"><a href="#1-号透镜：情感" class="headerlink" title="1 号透镜：情感"></a>1 号透镜：情感</h4><ul><li><p>人们可能忘掉你的言语,但他们永远不会忘掉他们对你的感受。 一玛雅·安杰洛(Maya Angelou)</p></li><li><p>为了确定你创造的情感是正确的,问自己这几个问题:</p><ul><li>我希望玩家能够体验到怎样的情感?为什么?</li><li>当人们(包括我自己)玩游戏时,他们产生了怎样的情感?为什么?</li><li>我怎样缩小人们的实际体验与我的设想之间的距离?</li></ul></li></ul><h4 id="2-号透镜：本质体验"><a href="#2-号透镜：本质体验" class="headerlink" title="2 号透镜：本质体验"></a>2 号透镜：本质体验</h4><ul><li>要想使用这个透镜,你需要停止你的游戏,开始思考游戏给玩家的体验。问你自己这几个问题：<ul><li>我想要让玩家获得怎样的体验?</li><li>这种体验的本质是什么?</li><li>我应该如何让我的游戏抓住这种体验的本质?</li></ul></li></ul><h4 id="3-号透镜：场景"><a href="#3-号透镜：场景" class="headerlink" title="3 号透镜：场景"></a>3 号透镜：场景</h4><ul><li>3号透镜:场景<ul><li>在我们的游戏设计中,我们玩游戏的场景对游戏会产生巨大的影响。为了确定你没有凭空设计游戏,问你自己这几个问题:<ul><li>我想要制作的游戏最适合哪种场景?</li><li>我的场景中是否有一些特殊的属性会影响到我的游戏?</li><li>我的游戏中有哪些元素能够与场景和谐共处?哪些元素不行?</li></ul></li></ul></li></ul><h4 id="4-号透镜：惊喜"><a href="#4-号透镜：惊喜" class="headerlink" title="4 号透镜：惊喜"></a>4 号透镜：惊喜</h4><ul><li>惊喜是一种我们很容易忘记的基础情绪。使用这个透镜来提醒你自己让你的游戏充满惊喜。问你自己这几个问题:<ul><li>当玩家们玩我的游戏时,什么会让他们感到惊喜?</li><li>我的游戏中的故事有惊喜吗?或者规则呢?或者艺术呢?或者技术呢？</li><li>你的规则能够让玩家之间互相带来惊喜吗?</li><li>你的规则能够让玩家们给自己带来惊喜吗?</li><li>惊喜是所有娱乐活动的重要组成部分–它是幽默、策略和解决问题的基础。我们的大脑很容易感受到惊喜。在一个实验中,测试者将糖水或者普通水喷到参与者的口中,获得随机模式喷雾的参与者会比获得固定模式喷雾的参与者有更好的体验,即使他们获得了同样数量的糖水。在另外的实验中,大脑扫描显示了即使在不愉快的惊喜中,大脑的愉悦中心也会被触发。</li></ul></li></ul><h4 id="5-号透镜：乐趣"><a href="#5-号透镜：乐趣" class="headerlink" title="5 号透镜：乐趣"></a>5 号透镜：乐趣</h4><ul><li>尽管有时候乐趣无法被分析,但在几乎所有的游戏中乐趣都是令人喜爱的。为了最大化游戏的乐趣,问你自己这几个问题:<ul><li>我的游戏中的哪个部分很有趣,为什么?</li><li>哪个部分需要变得更加有趣?</li></ul></li></ul><h4 id="6-号透镜：好奇心"><a href="#6-号透镜：好奇心" class="headerlink" title="6 号透镜：好奇心"></a>6 号透镜：好奇心</h4><ul><li>要使用这个透镜,思考玩家的真的动机-不是游戏的目标,而是玩家想要完成目标的真正原因。问你自己这几个问题:<ul><li>我的游戏给玩家的大脑提出了怎样的问题?</li><li>我正在做哪些努力让他们在意这些问题?</li><li>我能做什么来使他们提出更多的问题?</li><li>比如,一个解谜电子游戏在每一关中都可能有一个时间限定的目标。玩家们尝试回答这样一个问题: “我能在30秒之内找到过关的方法吗? ”一个让他们更加在意的方法是,当他们解决了任意一个谜题后播放一段有趣的动画,那么玩家就会问这样一个问题: “我想知道下一个动画是什么吗? ”</li></ul></li></ul><h4 id="7-号透镜：内生价值"><a href="#7-号透镜：内生价值" class="headerlink" title="7 号透镜：内生价值"></a>7 号透镜：内生价值</h4><ul><li>7号透镜:内生价值<ul><li>一个游戏的成功与玩家认为它是否重要紧密相关。要使用这个透镜来思考一下,在你的游戏中,玩家对道具、目标和分数的感受。问你自己这几个问题:<ul><li>在我的游戏中哪些东西对玩家很有价值?</li><li>怎样让这些东西对玩家更有价值?</li><li>游戏中的价值与玩家的动机之间有怎样的关系?</li><li>记住,道具的价值和游戏的比分直观地反映了玩家想要在游戏中获胜的程度。通过思考玩家真正关心的事物及其原因,你就知道应该怎样改进你的游戏了。</li></ul></li></ul></li></ul><h4 id="8-号透镜：解决的问题"><a href="#8-号透镜：解决的问题" class="headerlink" title="8 号透镜：解决的问题"></a>8 号透镜：解决的问题</h4><ul><li>8号透镜：解决的问题<ul><li>要使用这个透镜,需要思考一下游戏中的问题。由于每个游戏都有一些等待解决的问题,在你的游戏中,玩家需要解决那些问题才能在游戏中获胜。问你自己这几个问题：<ul><li>我的游戏要求玩家解决哪些问题?</li><li>是否有一些隐藏的问题作为玩法的一部分出现?</li><li>在我的游戏中,怎样产生新的问题来对玩家保持吸引力?</li></ul></li></ul></li></ul><h4 id="9-号透镜：四种元素"><a href="#9-号透镜：四种元素" class="headerlink" title="9 号透镜：四种元素"></a>9 号透镜：四种元素</h4><ul><li>9号透镜:四种元素<ul><li>要使用这个透镜,观察你的游戏实际上是由什么构成的,单独考虑各种元素然后将它们统一看待,问你自己这几个问题:<ul><li>我的游戏设计使用了全部的四种元素吗?</li><li>我的设计能够通过增强一种或者多种分类的元素来获得提高吗?</li><li>四种元素是否和谐,互相作用并向同一个主题努力?</li></ul></li></ul></li></ul><h4 id="10-号透镜：全息设计"><a href="#10-号透镜：全息设计" class="headerlink" title="10 号透镜：全息设计"></a>10 号透镜：全息设计</h4><ul><li>10号透镜:全息设计<ul><li>要使用这个透镜,你必须一次性看到游戏的全部:四种元素和玩家体验,以及它们是怎样关联起来的。你可以把注意力从皮肤转移到骨骼再到皮肤,但更好的方法是全息观察游戏和体验。</li><li>问你自己这几个问题：<ul><li>游戏中的哪一种元素产生了令人享受的体验?</li><li>游戏中的哪一种元素会让玩家在体验中分心?</li><li>怎样改变游戏元素来提高游戏体验?</li></ul></li></ul></li></ul><h4 id="11-号透镜：统一"><a href="#11-号透镜：统一" class="headerlink" title="11 号透镜：统一"></a>11 号透镜：统一</h4><ul><li>11号透镜:统一<ul><li>要使用这个透镜,就要尽可能地考虑这背后所有的原因。问你自己这几个问题：<ul><li><p>我的主题是什么?</p></li><li><p>我已经采用了所有可能的方法来强化这个主题吗?</p></li><li><p>统一透镜与9号透镜元素四分透镜很搭配。使用元素四分透镜从你的游戏中分割出元素,你就能够从统一主题的角度更方便地研究它们。</p></li></ul></li></ul></li></ul><h4 id="12-号透镜：共鸣"><a href="#12-号透镜：共鸣" class="headerlink" title="12 号透镜：共鸣"></a>12 号透镜：共鸣</h4><ul><li><p>12号透镜:共鸣</p><ul><li><p>要使用这个透镜,你必须去寻找隐藏的力量,问你自己这几个问题:</p><ul><li>在我的游戏中,能感觉到哪些有力的或者特殊的元素?</li><li>将我的游戏描述给他人听时,那些创意能让他们真的兴奋吗?</li><li>如果没有任何限制,这个游戏将会变成怎样?</li><li>我对这个游戏的方向有特定的直觉,那到底是什么在驱动这种直觉呢?</li></ul></li><li><p>共鸣透镜是一件安静美妙的乐器,也是一件倾听自己和他人的工具。我们把重要的事物都埋藏在内心的深处,当某些东西引起了它们的共鸣时,就会触动我们的内心。事实上这些隐藏的特性给了它们力量,也让我们难以寻找。</p></li></ul></li></ul><h4 id="13-号透镜：无尽灵感"><a href="#13-号透镜：无尽灵感" class="headerlink" title="13 号透镜：无尽灵感"></a>13 号透镜：无尽灵感</h4><ul><li>13 号透镜：无尽灵感<ul><li>当你知道如何倾听时，每个人都可以成为大师。——拉姆·达斯（Ram Dass）</li><li>要使用这个透镜，不要思考你的游戏，也不要观察那些看起来差不多的游戏。正相反，你要四处看看。</li><li>问你自己这几个问题<ul><li>我的生活中有怎样的体验想要与他人分享？</li><li>有哪些小技巧可以让我捕捉到体验的本质，并把它纳入我的游戏中？</li></ul></li><li>使用这个透镜需要开放的心态和强大的想象力。你需要了解自己的感受，观察周围发生的一切事物。你必须尝试一些不可能的事——一场比武不可能用掷骰子的方式来获得兴奋感，一个电子游戏也无法让玩家害怕黑暗。使用这个透镜寻找一些非游戏体验，为你的游戏提供灵感。四个不同的元素（技术、机制、故事和美学）能够被一个单纯的灵感组合起来，也能构筑不同的灵感，你应该将它们混合起来创造一些崭新的游戏。当你以现实生活为基础作为方向指导你的决定时，你的体验将会获得无可匹敌的力量和独一无二的特点。</li><li>这个透镜与体验本质透镜（2 号透镜）能够结合起来。使用无尽灵感透镜来寻找美妙的体验，使用体验本质透镜将它们纳入你的游戏中。</li></ul></li></ul><h4 id="14-号透镜：问题陈述"><a href="#14-号透镜：问题陈述" class="headerlink" title="14 号透镜：问题陈述"></a>14 号透镜：问题陈述</h4><p>要是用这个透镜，需要把你的游戏当做解决问题的方案。</p><p>问你自己这几个问题：</p><ul><li>我真正想要解决什么问题？</li><li>我是否做过一些与真正目标无关的游戏设定？</li><li>游戏是不是这个问题最好的解决方案？为什么？</li><li>我将怎样分辨出问题是否已经解决了？</li></ul><p>为游戏定义好约束条件和目标，并把这些作为问题陈述，这能帮助你更快地进入清晰的游戏设计中。</p><h4 id="15-号透镜：八项测试"><a href="#15-号透镜：八项测试" class="headerlink" title="15 号透镜：八项测试"></a>15 号透镜：八项测试</h4><p>要使用这个透镜，你的设计必须满足许多约束条件。只有当它通过了八项测试而不需要修改时，你的设计才算完成。</p><p>问你自己八个关键问题：</p><ol><li>这个游戏看起来不错吗?</li><li>我们的目标受众喜欢这个游戏吗?</li><li>这个游戏设计得不错吗?</li><li>这个游戏是否与众不同?</li><li>这个游戏能够盈利吗?</li><li>这个游戏在技术上是否具备可行性?</li><li>这个游戏完成我们的社交或者社区目标了吗?</li><li>游戏测试者是否享受这个游戏?</li></ol><p>在某些情况下，还需要考虑一些其他的测试。<br>如一个教育游戏必须回答“这个游戏达到了它的教育目标了吗?”。如果你的设计需要更多的测试，不要遗漏它们。</p><h4 id="16-号透镜：风险消除"><a href="#16-号透镜：风险消除" class="headerlink" title="16 号透镜：风险消除"></a>16 号透镜：风险消除</h4><p>是以圣人犹难之，故终无难矣。 —— 道德经</p><p>要使用这个透镜，停止积极地思考，然后开始认真考虑那些会危及游戏的风险。</p><p>问你自己这些问题：</p><ul><li>是什么让这个游戏变得平庸?</li><li>我们怎样防止这样的风险发生?</li></ul><p>风险管理很难。这意味着你必须面对那些不想碰到和立刻解决的问题。但是如果训练自己这么做，你就能进行更多次有效的迭代，获得一个更优秀的游戏。忽视潜在的问题，只专注于游戏中你最有信心的部分是一种诱惑。你必须抵抗这种诱惑，专注于游戏中的风险。</p><h4 id="17-号透镜：玩具"><a href="#17-号透镜：玩具" class="headerlink" title="17 号透镜：玩具"></a>17 号透镜：玩具</h4><p>要使用这个透镜，不要思考你的游戏是否好玩，要思考参与这个游戏是否有趣。</p><p>问你自己这些问题：</p><ul><li>如果我的游戏没有目标，它会有趣吗？如果不是，我怎样才能改进它？</li><li>当人们看到我的游戏时，他们想要与它产生互动吗，甚至在它们知道应该怎样玩之前？如果不是，我怎样才能改进它？</li></ul><p>有两种方式可以使用玩具透镜。<br>第一种方式是将其运用在一个现存游戏上，想出怎样为它添加一些玩具类的特质——怎样让它变得更亲切，操作更有趣。<br>第二种方式更加大胆，即在你还没有任何游戏创意之前运用它制作一个玩具。如果你在计划中做这件事就会有风险——但如果不是这样，这就是一个伟大的魔杖，可以帮助你找到你还没发现的绝妙游戏。</p><h4 id="18-号透镜：激情"><a href="#18-号透镜：激情" class="headerlink" title="18 号透镜：激情"></a>18 号透镜：激情</h4><p>在每个原型的结尾，当你小心地消除风险并计划下一步时，别忘了用这些重要问题检验你对游戏的感受：</p><ul><li>我对这款游戏的成功是否抱有极大激情？</li><li>如果失去了激情，怎样才能找回？</li><li>如果激情没有回来，是否应该做一些其他事？</li></ul><p>在每次冲刺的末尾，当你在研究原型和准备接下来的计划时，一定要记住做一个“激情检验”。激情就是潜意识与你交流的方式，它告诉你这个游戏是否令人兴奋。失去激情就说明一些地方出了问题——如果不能找到问题所在，游戏很可能会死去。激情也有危险性——毕竟这是一种不合理的情感。<br>必须小心对待激情，因为它往往能够击倒障碍并带领游戏走向成功。</p><h4 id="19-号透镜：玩家"><a href="#19-号透镜：玩家" class="headerlink" title="19 号透镜：玩家"></a>19 号透镜：玩家</h4><p>要是用这个透镜，你需要停止思考你的游戏，开始思考你的玩家。<br>问你自己关于这几个关于你的目标玩家的问题：</p><ul><li>他们通常喜欢什么？</li><li>他们不喜欢什么,为什么?</li><li>他们希望能在你的游戏中看到什么？</li><li>如果我处在他们的位置上,我想要在游戏中看到什么?</li><li>他们将会特别喜欢或者不喜欢游戏中的哪一部分?</li></ul><p>一个优秀的游戏设计师总是考虑并拥护他的玩家。熟练的设计师会同时使用玩家透镜和全息透镜，同时考虑玩家、游戏体验和游戏机制。思考你的玩家是一种很有用的方法，但是更有用的是观察他们玩你的游戏。你观察得越多，就越容易预测他们会喜欢什么。</p><h4 id="20-号透镜：乐趣"><a href="#20-号透镜：乐趣" class="headerlink" title="20 号透镜：乐趣"></a>20 号透镜：乐趣</h4><p>思考你的游戏提供了哪些类型的乐趣。<br>问你自己这几个问题：</p><ul><li>你的游戏能给玩家带来哪些乐趣？这些乐趣能够继续改善吗？</li><li>你的体验中缺少了哪些乐趣，为什么？能够在游戏中增加这种乐趣吗？</li></ul><p>游戏的最终目的就是带来快乐。通过浏览已知的乐趣列表，考虑你的游戏如何传达其中的每一种乐趣，你可能就有了改进游戏的灵感，让它能够为玩家带来更多乐趣。要经常留意那些独特的、未分类的、在大多数游戏中都没有的乐趣。因为只要找到一个就能让你的游戏拥有独特的体验。</p><h4 id="21-号透镜：心流"><a href="#21-号透镜：心流" class="headerlink" title="21 号透镜：心流"></a>21 号透镜：心流</h4><p>使用本透镜前，请考虑是什么在吸引玩家的注意力。<br>问自己这些问题：</p><ul><li>我的游戏有清晰的目标吗？如果没有，怎样改好？</li><li>玩家目标和我所希望的一致吗？</li><li>游戏中是否有令玩家分心，以致忘记目标的部分？若有，能否减少这些干扰，或能否融入游戏目标内？</li><li>我的游戏是否稳定提供连串不太容易，也不太难的挑战？有没有考虑到玩家的技巧可能逐步提高？</li><li>玩家的技巧提高的速率和我的期望相符吗？若不是，应该怎样改进？</li></ul><h4 id="22-号透镜：需求"><a href="#22-号透镜：需求" class="headerlink" title="22 号透镜：需求"></a>22 号透镜：需求</h4><p>要使用此透镜，先不要考虑你的游戏本身，改为考虑它满足人类的哪些基础需求。<br>问自己这些问题:</p><ul><li>我的游戏主要运作在马斯洛层次的哪一层？</li><li>我的游戏是否满足“胜任、自主、关联”的需求？</li><li>我怎样让游戏在现有水平上，满足更多基础需求?</li><li>游戏已经满足的需求，怎样令其满足得更好？</li></ul><p>说游戏能满足人类的基础需求，虽有点奇怪，但人类的一切行为，都是在以某种方式满足这些需求。记住，有些游戏比其他游戏更能满足需求——所以你的游戏不能仅仅对需求做出承诺，而要切实满足。玩家本来以为玩你的游戏能够让自己感觉良好，或者和朋友交往更密，结果你的游戏没能满足需求，玩家就会改玩其他能满足的游戏了。</p><h4 id="23-号透镜：动机"><a href="#23-号透镜：动机" class="headerlink" title="23 号透镜：动机"></a>23 号透镜：动机</h4><p>每个游戏都是由动机组成的复杂生态系统。要细致地加以研究，请问自己这些问题:</p><ul><li>玩家因何种动机来玩我的游戏？</li><li>其中哪些动机是最内在的？哪些是最外在的？</li><li>哪些是追求愉悦的？哪些是规避痛苦的？</li><li>哪些动机互相支撑？</li><li>哪些动机互相抵触？</li></ul><h4 id="24-号透镜：创新"><a href="#24-号透镜：创新" class="headerlink" title="24 号透镜：创新"></a>24 号透镜：创新</h4><blockquote><p>不同的未必总是好，更好的总是不同。 ——  斯科蒂·梅尔策(Scotty Meltzer)</p></blockquote><p>为了驾驭追求新奇的强大动机，请问自己这些问题:</p><ul><li>我的游戏有何新奇之处?</li><li>新奇之处是贯穿我的游戏，还是仅限于开头?</li><li>新奇和熟悉的混合感觉对吗?</li><li>新奇感褪去后，玩家还喜欢玩我的游戏吗?</li></ul><h4 id="25号透镜：评断"><a href="#25号透镜：评断" class="headerlink" title="25号透镜：评断"></a>25号透镜：评断</h4><p>要了解你的游戏是否能评断好玩家，问自己这些问题:</p><ul><li>针对玩家，你的游戏都评价些什么?</li><li>游戏怎样传达这种评断?</li><li>玩家觉得评断结果公平吗?</li><li>他们在意评断结果吗?</li><li>评断结果是否让他们想要加强能力?</li></ul><h4 id="26-号透镜：功能空间"><a href="#26-号透镜：功能空间" class="headerlink" title="26 号透镜：功能空间"></a>26 号透镜：功能空间</h4><p>要使用此透镜，请思考将所有表面元素剥离你的游戏之后，游戏究竟在什么空间内进行。</p><p>问自己以下问题:</p><ul><li>游戏空间是离散的还是连续的?</li><li>它有几个维度?</li><li>空间的边界在哪?</li><li>有没有子空间?空间如何互相联系?</li><li>是否有不止一种合理方式给游戏空间建立抽象模型?</li></ul><p>先专注空间，改造抽象空间布局满意后，再加以美学成分。<br>功能空间与 10 号透镜“全景设计”配合使用，效果很好。<br>如果能同时看清玩家将要体验到的抽象功能空间和美学空间，及它们之间的关联，就能充满自信地决定游戏世界的形态。</p><h4 id="27-号透镜：时间"><a href="#27-号透镜：时间" class="headerlink" title="27 号透镜：时间"></a>27 号透镜：时间</h4><p>俗话说“时间就是一切”。我们身为设计师的目标是创造体验，而体验如果太长、太短、太快、太慢，都很容易扫兴。要让你的体验长度刚刚好，可问自己以下问题:</p><ul><li>究竟是什么决定了我的游戏活动的长度?</li><li>我的玩家是否因为游戏结束太快，感到沮丧?我怎样才能改变这种状况?</li><li>我的玩家是否因为游戏时间太长，感到无聊?我怎样才能改变这种状况?</li><li>时钟和竞赛能不能让我的游戏玩法更激动人心?</li><li>时间限制也许会让玩家烦躁。我去掉时间限制会更好吗?</li><li>有层级的时间架构对我的游戏是否有益?或者说，几个小回合组成一个大回合好不好?</li></ul><p>要把时间调至合适的程度很难，但时间能成就一款游戏，也能毁掉一款游戏。听从以前歌舞艺人的格言“吊着他们的胃口 (leave’em wanting more) ” ，一般不会错。</p><h4 id="28-号透镜：状态机"><a href="#28-号透镜：状态机" class="headerlink" title="28 号透镜：状态机"></a>28 号透镜：状态机</h4><p>要使用此透镜，请思考你的游戏中哪些信息在改变。问自己这些问题:</p><ul><li>我的游戏中有什么对象?</li><li>这些对象的属性是什么?</li><li>每个属性有什么可能的状态?</li><li>每个属性中，是什么触发状态改变?</li></ul><p>玩游戏的过程就是做决定，决定是根据信息做出的。决定不同的属性、属性的状态、改变状态的事件，就是你游戏机制的核心。</p><h4 id="29-号透镜：秘密"><a href="#29-号透镜：秘密" class="headerlink" title="29 号透镜：秘密"></a>29 号透镜：秘密</h4><p>改变谁掌握哪些信息，就能彻底改变你的游戏。要使用此透镜，请思考“谁”知道“哪些”，又是“为什么。</p><p>问自己这些问题:</p><ul><li>哪些信息只有游戏本身知道?</li><li>哪些信息所有玩家知道?</li><li>哪些信息只有一些或一个玩家知道?</li><li>改变谁掌握哪些信息，可以改进我的游戏吗?</li></ul><p>游戏过程就是做决定的过程。决定则根据信息做出。决定不同的属性及其状态，以及谁了解它们，是你的游戏机制的核心。对谁知道哪些信息做一些小修改，可以极大地改变一个游戏一一或者强到飞起，或者低到尘埃里。谁知道哪些属性这件事甚至可以在游戏过程中改变——想在你的游戏中创造戏剧性，一大方法就是突然将一条重要的私密信息公开。</p><h4 id="30-号透镜：自发"><a href="#30-号透镜：自发" class="headerlink" title="30 号透镜：自发"></a>30 号透镜：自发</h4><p>要确保你的游戏有有趣的自发玩法，问自己这些问题:</p><ul><li>我的玩家有多少动词可选?</li><li>每个动词可作用于多少对象?</li><li>玩家要达成目标有多少种方式?</li><li>玩家控制多少主体?</li><li>额外效果如何改变限制条件?</li></ul><h4 id="31-号透镜：行动"><a href="#31-号透镜：行动" class="headerlink" title="31 号透镜：行动"></a>31 号透镜：行动</h4><p>要使用此透镜，请思考你的玩家能做些什么、不能做什么，分别为什么</p><p>问自己：</p><ul><li>游戏中的基础行动是什么</li><li>策略行动是什么</li><li>想要看到怎样的策略行动？怎样改变游戏，令其可能？</li><li>策略行动与基础行动的比例，满意吗</li><li>玩家在游戏中有什么想做但不能做的行动？能不能设法令其成为可能，无论作为基础行动或策略行动？</li></ul><p>没有行动的游戏就像是没有动词的句子一什么也不会发生。你身为游戏设计师要做的最基础的决定，便是确定你游戏中的行动。对这些行动进行微小改变也会对游戏造成一系列巨大影响，可能会创造出惊人的自发玩法，也可能</p><h4 id="32-号透镜：目标"><a href="#32-号透镜：目标" class="headerlink" title="32 号透镜：目标"></a>32 号透镜：目标</h4><p>为确保游戏目标适当且均衡，问自己：</p><ul><li>游戏终极目标是什么</li><li>终极目标对玩家明确吗</li><li>如果有一系列目标，玩家明白吗</li><li>不同目标是否以一种有意义方式互相关联</li><li>目标是否具体、可行、回报丰厚</li><li>短期和长期目标是否平衡</li><li>玩家有无机会决定自己的目标</li></ul><p>同时拿起玩具、好奇、目标透镜，观察游戏这些方面如何互相影响</p><h4 id="33-号透镜：规则"><a href="#33-号透镜：规则" class="headerlink" title="33 号透镜：规则"></a>33 号透镜：规则</h4><p>深刻观察游戏，直到能辨别最基础架构，回答：</p><ul><li>游戏中的基本规则是哪些，这些规则和操作规则有何不同</li><li>开发过程中有没有形成“条例”或“房规”，这些是否应该直接纳入游戏中</li><li>游戏中有不同模式吗？这些模式让一切更简单还是更复杂？减少一些模式会让游戏更好玩吗？还是增加模式？</li><li>谁来执行规则</li><li>规则是简单易懂，还是有晦涩之处？如果有晦涩之处需要修订，应该修改规则还是更清楚地解释规则？</li></ul><p>常见误解是以为设计师做下来写一套规则就能做出游戏。一般不是。游戏规则是在实验中逐步完善的。设计师的头脑一般都在“操作规则”领域里工作，偶尔在思考怎样调整、改善游戏的时候，才切换到“基础规则”视角。“书面规则”一般在游戏能玩之后，接近收尾时形成。确保规则覆盖到每一种可能情况，是设计师的工作。一定要在试玩的同时做好记录，因为正是试玩过程会暴露出规则漏洞——如果只是随便修修补补，不认真记录，同样的漏洞会再现。<br>游戏即其规则，不可不在规则上花费足够时间和思量。</p><h4 id="34-号透镜：技巧"><a href="#34-号透镜：技巧" class="headerlink" title="34 号透镜：技巧"></a>34 号透镜：技巧</h4><p>不观察游戏本身，观察游戏要求玩家发挥的技巧。</p><ul><li>游戏需要玩家拥有何种技能</li><li>其中是否缺少某个类别技能</li><li>哪些技能占主导地位</li><li>这些技能是想要创造的体验吗</li><li>是否有一些玩家的这些技能远超其他玩家？是否会让游戏感觉不公平？</li><li>玩家能否通过练习提高技巧，从而感觉掌握了游戏</li><li>游戏需要的技巧水平合适吗</li></ul><p>发挥技巧可以让人很快乐——这是人们喜爱游戏的一大原因<br>当然了，技巧水平和难度需要处于“心流”区间<br>技巧很大程度上定义体验，技巧透镜和 2 号透镜“本质体验”结合使用，效果很好。</p><h4 id="35-号透镜：期望值"><a href="#35-号透镜：期望值" class="headerlink" title="35 号透镜：期望值"></a>35 号透镜：期望值</h4><p>思考游戏内发生的各种不同事件，以及它们对玩家的意义</p><ul><li>某件事发生的实际概率？</li><li>其感知概率？</li><li>这件事的结果的价值？价值能否被量化？有没有没考虑到的无形价值？</li><li>把所有可能结果相加，玩家所有行为都有不同期望。对这些值满意吗？是否给玩家有趣的选择？会不会奖赏太多？或惩罚太多？</li></ul><p>期望值是分析游戏平衡的有力工具。难点是某些可能性的量化，如“拥有了传送门道具”，但还是可以猜。<br>调整参数就是调整对结果数值的估计。<br>量化这些偏无形的元素可能很有启发，因为这能让你接地气地思考对玩家有价值的东西是什么，以及为什么。<br>这些接地气的知识，能让你控制游戏平衡性。</p><h4 id="36-号透镜：概率"><a href="#36-号透镜：概率" class="headerlink" title="36 号透镜：概率"></a>36 号透镜：概率</h4><p>专注于游戏中包含随机和风险的部分，时刻记住两者有不同之处<br>问自己</p><ul><li>游戏中真正随机的内容是什么？哪些部分只是感觉起来随机</li><li>随机性给玩家的，是刺激和挑战等积极情感，还是绝望和缺乏控制等消极情感</li><li>改变概率分布曲线能改进游戏吗</li><li>玩家能在游戏中冒各种有趣风险吗</li><li>游戏中，概率与技巧有何关系？有没有办法让随机元素感觉像是在发挥技巧？有没有办法让发挥技巧感觉像是在冒风险？</li></ul><p>风险和随机性就像香料。完全不加的游戏可能淡而无味，加多了又会遮盖游戏原本味道。要运用得恰到好处。<br>要运用，需要深入观察游戏，看看风险和随机性在何处自然浮现，然后决定如何驯服之，令其为你服务。<br>不要陷入思维陷阱，以为投骰子或者生成随机数才会产生概率相关元素。正相反，在玩家遭遇未知的每个时刻，你都能找到它们。</p><h4 id="37-号透镜：公平"><a href="#37-号透镜：公平" class="headerlink" title="37 号透镜：公平"></a>37 号透镜：公平</h4><p>要使用公平透镜，从玩家视角思考游戏。考虑玩家技巧水平，找到方法让每个玩家都有机会获胜，且各自都认为公平。</p><ul><li>游戏应该对称吗，为什么</li><li>游戏应该不对称吗，为什么</li><li>哪点更重要？<ul><li>游戏应能有效衡量谁的技巧水平最高</li><li>游戏应该为所有玩家都带来有趣挑战</li></ul></li><li>如果想让不同水平玩家一起玩，会用什么手段，令游戏对所有人都具有趣味性和挑战性</li></ul><h4 id="38-号透镜：挑战"><a href="#38-号透镜：挑战" class="headerlink" title="38 号透镜：挑战"></a>38 号透镜：挑战</h4><p>挑战几乎是所有游戏玩法的核心。甚至可以说，游戏由其目标和挑战所定义。检查游戏中的挑战，问自己：</p><ul><li>游戏中的挑战是什么</li><li>太容易？太难？刚刚好？</li><li>这些挑战能否容纳各种技巧水平</li><li>随着玩家不断成功，挑战难度如何增长</li><li>挑战种类是否足够多样</li><li>游戏中最高水平挑战是什么</li></ul><hr><h2 id="摘抄"><a href="#摘抄" class="headerlink" title="摘抄"></a>摘抄</h2><ul><li>第 22 条军规<ul><li>指个人面对自相矛盾的规定,无法逃脱的悖论。典出美国长篇小说《第22条军规》。</li></ul></li></ul><hr><h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><h3 id="第一章-太初之时，有设计师"><a href="#第一章-太初之时，有设计师" class="headerlink" title="第一章 太初之时，有设计师"></a>第一章 太初之时，有设计师</h3><ul><li><p>《太阳马戏团:火花-点燃我们心中的创意之火》 (Cirque du Soleil: The Spark-Igniting the Creative Fire that Lives within Us All) 约翰.U.培根 (John U. Bacon) 、琳恩·休厄德(Lyn Heward)著。这是一本很棒的小书,教你怎么找到自己的道路。</p></li><li><p>【游戏设计师修炼秘笈》 (Challenges for Game Designers) , Brenda Brathwaite、施雷伯(lan Schreiber)著。这是一套非常出色的习题集,当你想要锻炼游戏设计肌肉时可以做。</p></li></ul><h3 id="第三章-体验发生与场景"><a href="#第三章-体验发生与场景" class="headerlink" title="第三章 体验发生与场景"></a>第三章 体验发生与场景</h3><ul><li>克里斯多弗·亚历山大等人撰写的《模式语言》 (A Pattern Language by Christopher Alexander et al)。这是一本令人深思的著作,讲述了人类与居住空间的关系。我们将会在第21章《空间》中再次介绍这本书。</li></ul><h3 id="第四章-体验从游戏中诞生"><a href="#第四章-体验从游戏中诞生" class="headerlink" title="第四章 体验从游戏中诞生"></a>第四章 体验从游戏中诞生</h3><ul><li><p>罗格·卡洛伊斯撰写的《男人、玩乐与游戏》 (Man, Play, and Games byRoger Callois)。这本写于1961年的书长久以来都是学者们研究游戏的最爱。不仅如此,这本书对游戏玩法的本质有许多与众不同的观点,读起来让人爱不释手。</p></li><li><p>詹姆斯·P.卡斯撰写的《有限与无限的游戏》 (Finite and Infinite GamesbyJames P. Carse)。这是一本简短而令人鼓舞的书,它对游戏与生活的关系有着迷人的哲学陈述。</p></li><li><p>尼科尔·拉扎罗撰写的《我们为什么玩游戏:故事以外情感的四个关键要素》 (Why We Play Games: Four Keys to Emotion without Story by NicoleLazzaro) 。这是一次对乐趣维度的激进探索。</p></li><li><p>卡蒂·萨伦与埃里克·齐默尔曼撰写的《玩乐之道》的第7章与第8章 (Rules of Play by Katie Salen and Eric Zimmerman, Chapters 7 and 8) 。这两章包含了一些关于游戏定义的值得深思的结论。</p></li><li><p>巴纳德·休茨撰写的《蝈蝈:游戏、生活与乌托邦》 (The Grasshopper: Games, Life, and Utopia by Bernard Suits ( pronounced “sweets”) 。这是一场关于游戏本质的不可思议的心理学试验。休茨对游戏的定义激怒了我,然而我却无法驳倒他。</p></li></ul><h3 id="第六章-元素支撑起主题"><a href="#第六章-元素支撑起主题" class="headerlink" title="第六章 元素支撑起主题"></a>第六章 元素支撑起主题</h3><ul><li>里奇·戈尔德撰写的《丰饶》 (The Plenitude by Rich Gold) 。在任天堂力量手套设计师的智慧宝库中,提供主题仅仅只是话题之一。</li></ul><h3 id="第七章-游戏始于一个创意"><a href="#第七章-游戏始于一个创意" class="headerlink" title="第七章 游戏始于一个创意"></a>第七章 游戏始于一个创意</h3><ul><li><p>林达·巴里撰写的《这是什么》和《设想一下》 (What It Is and PictureThis by Lynda Barry) 。这两本伟大的著作无缝整合了文字与艺术作品,它们将用创作过程中的残酷现实激励你,鞭策你。</p></li><li><p>萨尔瓦多·达利撰写的《五十个魔法技术的秘密》 (Fifty Secrets of Magic Craftsmanship by Salvador Dali) 。这本书并不出名,但它为创造天才的大脑打开了一扇新的窗户。</p></li><li><p>凯尔·加布勒,凯尔·格雷,马特·库契奇和沙林·舍第汗撰写的《怎样 在七天内完成一个游戏原型》 (Prototyping a Game in 7 Days by Kyle Gray, Kyle Gabler, Matt Kucic, and Shalin Shodhan) 。这篇短论文充满了对快速制作原型的绝妙建议。</p></li><li><p>朱利安·杰恩斯撰写的《左右脑分解中的意识起源》的第1章(The Origin of Consciousness in the Breakdown of the Bicameral Mind by Julian Jaynes Chapter 1) 。这本有争议的书会让你再次思考意识的本质以及你与潜意识的关系。</p></li><li><p>约拿·莱勒撰写的《群体思想:头脑风暴神话》 (Groupthink: The Brainstorming Myth by Jonah Lehrer in The New Yorker. January 30) 。这本书是对过去、现在和未来头脑风暴的概述。</p></li></ul><p> - 大卫·林奇撰写的《钓上大鱼》 (Catching the Big Fish by David Lynch)这本简短的书由一位电影制片人撰写,提供了一些绝佳的创意快照</p><h3 id="第八章-游戏通过迭代提高"><a href="#第八章-游戏通过迭代提高" class="headerlink" title="第八章 游戏通过迭代提高"></a>第八章 游戏通过迭代提高</h3><p> - 比尔·巴克斯顿撰写的《用户体验草图设计》 (Sketching User Experiencesby Bill Buxton)。这本书通过多元化的原理和令人嘱目的结果向我们展示了草图的概念(提示:原型就是一种草图)</p><p> - 比尔·卢卡斯撰写的《用纸设计原型》 (Have Paper, Will Prototype by BillLucas) 。这本书是一系列案例研究,关于怎样成功创造计算机界面的纸上原型。麦克·塞林格撰写的《狗头人指南之桌面游戏设计》 (The Kobold Guide to Board Game Design by Mike Selinker) 。这本非常棒的书讲述了如何制作伟大的桌面游戏。</p><p> - 超级兄弟撰写的《少说话,多做事》 (Less Talk, More Rock by Superbrothers)这篇文章认为游戏是行动的媒介,而不是语言的媒介,并坚定的认为太多的设计讨论将会是毁灭性的。</p><p> - 《敏捷软件开发》 (Agile Software Development) 。维基百科中关于敏捷软件开发的条目编写地很不错,如果你想要更多地学习敏捷,它可以提供很多参考。 </p><ul><li>杰森·范登博格撰写的《游戏设计的四个F:快速失败与跟随快乐》(The 4Fs of Game Design: Fail Faster, and Follow the Fun by Jason Vandenberghe)这篇文章(基于马克,勒布朗的一个理念)将伟大游戏设计过程的关键方面总结为清晰的基础元素</li></ul><h3 id="第九章-游戏为玩家而生"><a href="#第九章-游戏为玩家而生" class="headerlink" title="第九章 游戏为玩家而生"></a>第九章 游戏为玩家而生</h3><p> - 理查德,R·巴特尔撰写的《设计虚拟世界》 (Designing Virtual Worlds by Richard R. Bartle) 。这是一本关于虚拟世界开发历史的优秀著作。它由一位实现这种虚拟世界的深度思考者撰写。</p><ul><li>马膝.L·克林格尔巴赫与肯特,C·巴里吉共同撰写的《大脑的快乐》 (Pleasures of the Brain by Morten L. Kringelbach and Kent C. Berridge, editors) 。这是一本由心理学家与神经学家共同完成的关于寻找快乐机制的研究集合。如果你还不熟悉科学论文，这可能有点令人却步，但这对于执着的读者是一笔宝贵的财富。</li></ul><h3 id="第十章-体验在玩家的脑中"><a href="#第十章-体验在玩家的脑中" class="headerlink" title="第十章 体验在玩家的脑中"></a>第十章 体验在玩家的脑中</h3><ul><li>《Flow: The Psychology of Optimal Experience》米哈里,契克森米哈赖著。此书引人入胜,由心流领域最知名的研究者撰写,探索了心流的本质。</li></ul><h3 id="第十一章-玩家的动机驱使着玩家的脑"><a href="#第十一章-玩家的动机驱使着玩家的脑" class="headerlink" title="第十一章 玩家的动机驱使着玩家的脑"></a>第十一章 玩家的动机驱使着玩家的脑</h3><ul><li><p> 《黏上游戏(Glued to Games) 》 , Scott Rigby和Richard M. Ryan著。这本书深刻介绍了自我决定理论,以及游戏之所以为游戏的原因。</p></li><li><p>《奖赏的惩罚(Punished by Rewards) 》 Alfie Kohn著。这本书很好地概括了对外在奖励之负面影响的许多研究成果。</p></li><li><p>《理解动机与情感(Understanding Motivation and Emotion) 》Johnmarshall Reeve著。如果你不满足于粗浅的理解,预备进一步钻研动机与情感的作用机制,这本大学教材可以充分介绍对这个主题的心理学研究。</p></li></ul><h3 id="第十二章-有些元素是游戏机制"><a href="#第十二章-有些元素是游戏机制" class="headerlink" title="第十二章 有些元素是游戏机制"></a>第十二章 有些元素是游戏机制</h3><ul><li><p> 《游戏机制:高级游戏设计技术》 (Game Mechanics: Advanced Game Design) Ernest Adams和Joris Dormans合著。本书包含大量精彩翔实的细节,讲解多种游戏机制如何互相影响。并介绍了如何使用优秀的Machinations系统模拟你的游戏设计。</p></li><li><p>《The Oxford Book of Board Games》 , David Parlett著。本书包含更多有关Parlett规则分析的细节,同时介绍了一些前几个世纪优秀但不为人知的桌面游戏。</p></li><li><p> 《Uncertainty in Games》 , Greg Costikyan著。此书深刻洞见了游戏中概率与不确定性的本质,令人叹为观止。我每次阅读都有新的所得。</p></li></ul><p> - 《The Unfinished Game: Pascal, Fermat, and the Unfinished Letter that Made the World Modern》 , Keith Devlin著。如果想要更细致地了解概率论发明的故事,读此书就够了。</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 第八章 游戏通过迭代提高</title>
      <link href="2022/05/29/20220529-theartofgamedesign-chap8/"/>
      <url>2022/05/29/20220529-theartofgamedesign-chap8/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="第八章-游戏通过迭代提高"><a href="#第八章-游戏通过迭代提高" class="headerlink" title="第八章 游戏通过迭代提高"></a>第八章 游戏通过迭代提高</h2><h3 id="选择创意"><a href="#选择创意" class="headerlink" title="选择创意"></a>选择创意</h3><blockquote><p>一个平淡的创意根本不算创意。——艾尔伯特·哈伯德</p></blockquote><p>面对一堆想法，迅速做出设计决定，坚持下去，然后立刻想一想这个决定的后果。</p><p>而当做出决策后意识到错误时，准备好推翻之前的决策。</p><blockquote><p>创意不是一个完好的瓷器，而是一次性纸杯——它很廉价，能够大量生产。如果有人得到了一个纸杯，去拿另一个就好了。</p></blockquote><blockquote><p>尽快确定一个创意比拖延更好——你将可能更快地做出好决定，而不是花费时间考虑潜在选择。不要沉迷于你的决定，当它并没有效果时，准备好推翻它。</p></blockquote><p>怎样选择？猜！</p><h3 id="八项测试"><a href="#八项测试" class="headerlink" title="八项测试"></a>八项测试</h3><p>你完成的设计方案必须通过八项测试或是过滤器。只有所有测试都通过，设计方案才算得上优秀。</p><ol><li>测试一：艺术冲动。<br>作为设计师，是否觉得这个游戏“感觉不错”。自己的直觉和团队直觉都很重要。<br>关键问题：这个游戏看起来不错吗？</li><li>测试二：人群特征<br>你的游戏有一群特定受众。需要考虑设计是否适合目标受众。<br>关键问题：我们的目标受众很喜欢这个游戏吗？</li><li>测试三：体验设计<br>为通过这项测试，需要尽一切努力创造良好体验，包括美学、兴趣曲线、共鸣主题和游戏平衡。游戏必须经得起书中的透镜的检验<br>关键问题：这个游戏设计得不错吗</li><li>革新<br>一个新游戏按理说需要包含一些玩家从未见到过的新内容<br>关键问题：这个游戏是否与众不同？</li><li>商业和市场<br>想要卖出游戏的设计师必须考虑商业现实，并将其融入游戏设计中。这带来了很多问题。<br>游戏主题和故事对玩家们具有吸引力吗？<br>游戏是否通俗易懂，一个玩家能否仅仅通过观看概述就能明白这个游戏的内容？<br>消费者对这种题材的游戏有怎样的期待？<br>市场上，这个游戏与相似游戏比有哪些特点？<br>是否开发成本过高导致无法盈利？<br>关键问题：这个问题能够盈利吗？</li><li>工程<br>即技术可行性。<br>关键问题：这个游戏在技术上是否具备可行性？</li><li>社交/社区<br>有时候，一个好玩的游戏可能并不足够。一些设计目标可能需要很强的社交元素，迅速蔓延的病毒式传播，或者围绕游戏形成社区。<br>关键问题：这个游戏完成我们的社交或社区目标了吗？</li><li>玩法测试<br>当游戏开发到可玩程度，必须通过玩法测试。必须尽可能把游戏开发到可玩程度，只有实际看到游戏表现，才知道需要做出哪些重大改变。随着对游戏机制和目标受众的心理感受的了解加深，这个过程中测试目标与游戏都会不断迭代。<br>关键问题：游戏测试者是否享受这个游戏？</li></ol><p>测试过程中对某些测试预期的调整是允许的，如改变目标受众。关键是要想办法通过所有测试。</p><p>当你选择一个初始创意时，重要的是选择创意中最容易被修改和塑造的那个，这样它更容易在测试中存活。</p><h4 id="15-号透镜：八项测试"><a href="#15-号透镜：八项测试" class="headerlink" title="15 号透镜：八项测试"></a>15 号透镜：八项测试</h4><p>要使用这个透镜，你的设计必须满足许多约束条件。只有当它通过了八项测试而不需要修改时，你的设计才算完成。</p><p>问你自己八个关键问题：</p><ol><li>这个游戏看起来不错吗?</li><li>我们的目标受众喜欢这个游戏吗?</li><li>这个游戏设计得不错吗?</li><li>这个游戏是否与众不同?</li><li>这个游戏能够盈利吗?</li><li>这个游戏在技术上是否具备可行性?</li><li>这个游戏完成我们的社交或者社区目标了吗?</li><li>游戏测试者是否享受这个游戏?</li></ol><p>在某些情况下，还需要考虑一些其他的测试。<br>如一个教育游戏必须回答“这个游戏达到了它的教育目标了吗?”。如果你的设计需要更多的测试，不要遗漏它们。</p><h3 id="迭代规则"><a href="#迭代规则" class="headerlink" title="迭代规则"></a>迭代规则</h3><p>思考并选择创意后，下一步是尝试将其实现。</p><p>对于简单游戏，可以快速构建原型，并进行玩法测试。<br>但若是无法在一两小时内构建可玩原型，要谨慎。游戏设计和开发过程必须是迭代/循环的。</p><p>期待游戏做完时就是最好的状态是一种天真想法。</p><blockquote><p>迭代规则：你的游戏测试和改进的次数越多，就会越出色。</p></blockquote><p>如果会经历长期测试与改进，需要回答以下问题：</p><ul><li>迭代问题 1：怎样才能让每一次迭代都有意义？</li><li>迭代问题 2：怎样才能尽可能快地进行迭代？</li></ul><p>软件工程师在过去 40 年中已经对这两个问题进行了深刻思考，他们想出了一些有用技巧。</p><h3 id="软件工程的简短历史"><a href="#软件工程的简短历史" class="headerlink" title="软件工程的简短历史"></a>软件工程的简短历史</h3><h4 id="危险-瀑布-保留"><a href="#危险-瀑布-保留" class="headerlink" title="危险-瀑布-保留"></a>危险-瀑布-保留</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220530003026.png" alt="瀑布模型"></p><p>瀑布模型中，只需要不断向前，没有迭代，因为瀑布不会回头。</p><ul><li>优点<br>鼓励开发者在编写代码前花费更多时间进行规划和设计</li><li>缺点<br>违背了迭代规则</li></ul><blockquote><blockquote><p>瀑布模型符合项目认知，但却缺少工程认知，对于一个复杂系统而言，瀑布模型的推进是完全不可控的，也不太可能如此顺利</p></blockquote></blockquote><h4 id="巴里·伯姆爱你"><a href="#巴里·伯姆爱你" class="headerlink" title="巴里·伯姆爱你"></a>巴里·伯姆爱你</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220530003310.png" alt="螺旋模型"></p><p>螺旋模型中，开发从最中间开始，顺时针旋转，依次通过四个象限。</p><p>里面包含了最棒的三个理念：风险评估、原型和迭代。</p><p>螺旋模型建议你做以下几件事：</p><ol><li>想出一个基础设计</li><li>找出设计中最大的风险</li><li>建立原型消除这些风险</li><li>测试原型</li><li>基于从原型中得出的结论作更详细的设计</li><li>回到 2</li></ol><p>它运用了迭代规则击败了瀑布模型的递进关系，它也回答了之前描述的问题：</p><ul><li>迭代问题 1：怎样让每次迭代都有意义<ul><li>螺旋模型的答案：评估并消除风险</li></ul></li><li>迭代问题 2：怎样尽可能快速进行迭代<ul><li>螺旋模型答案：构建许多粗糙模型</li></ul></li></ul><p>螺旋模型有很多衍生，目前为止，最成功的的是敏捷开发的传播。</p><h4 id="敏捷宣言"><a href="#敏捷宣言" class="headerlink" title="敏捷宣言"></a>敏捷宣言</h4><p>2001 年，由工程师提出的敏捷宣言：</p><blockquote><p>个体和互动高于流程和工具<br>工作的软件高于详尽的文档<br>客户合作高于合同谈判<br>响应变化高于遵循计划<br>也就是说，尽管右项有其价值<br>我们更重视左项的价值</p></blockquote><p>原则：争分夺秒！</p><ol><li>最重要的目标，是通过持续不断地及早交付有价值的软件使客户满意</li><li>欣然面对需求变化，即使在开发后期也一样。为了客户的竞争优势，敏捷过程掌控变化</li><li>经常交付可工作的软件，间隔几星期或一两个月，倾向于采取较短周期</li><li>业务人员和开发人员必须相互合作，项目中的每一天都不例外</li><li>激发个体斗志，以他们为核心搭建项目。提供所需的环境和支援，辅以信任，从而达成目标</li><li>不论团队内外，传递信息效果最好效率也最高的方式是面对面交谈</li><li>可工作的软件是进度的首要度量标准</li><li>敏捷过程倡导可持续开发。责任人、开发人员和用户要能够共同维持其步调稳定延续</li><li>坚持不懈追求技术卓越和良好设计，敏捷能力由此增强</li><li>以简洁为本，它是极力减少不必要工作量的艺术</li><li>最好的架构、需求和设计出自自组织团队</li><li>团队定期反思如何能提高成效，并依此调整自身行为</li></ol><p>被大多数开发者使用的核心元素：</p><ul><li>灵活的目标：无法恰好得知计划所需的时间。围绕更加灵活的目标组制定计划，而不是忍受对计划做出改变，有计划地改变计划。开发过程中，团队能够迅速适应新创意和信息。</li><li>优先级列表：任何时候有人为一个特性想到了一个新的创意，他就能将其加入到列表中。每次迭代时，团队就查看列表，重新设定特性优先级——重要的评分高。接下来的工作只需要看看列表顶端就好。没有人能保证列表上的所有特性都会被完成——这样能保证大多重要特性能在时间允许范围内完成。</li><li>冲刺：相较于制定长期目标，敏捷开发者们用一系列冲刺工作，每一个冲刺持续一段较短时间，并在最后能传递一个坚实的工作结果。更多的 ddl 意味着更多工作被完成了！</li><li>争分夺秒会议：10~15 分钟，站着开会以表明会议简短的本质。每个成员解释三件事：昨天完成了什么，今天计划完成什么，面临的问题。会议结束后，通过与团队成员一对一接触来一个个找到问题解决方案。每个团队成员明确知道他们要做的事，且能够被其他团队成员帮助。</li><li>演示日：每个冲刺阶段最后，大家聚集在一起，面对面观看和测试工作结果。从新基准开始工作。团队开始分析风险，并一起确定下一阶段的冲刺计划。</li><li>回顾：每个冲刺阶段最后，团队有一个回顾会议。不是关于产品，而是关于工作进度。这给了团队机会来讨论什么是正确的，什么是错误的，怎样在下一冲刺阶段调整工作。</li></ul><p>敏捷是一种哲学，不是一种规定方法。不同开发者有不同方法，但都致力于创造更多次迭代，且让每次迭代都有意义。</p><p>所有特性的风险评估和原型设计都是他们的核心。</p><h3 id="风险评估与原型设计"><a href="#风险评估与原型设计" class="headerlink" title="风险评估与原型设计"></a>风险评估与原型设计</h3><h4 id="案例：气泡城的囚徒"><a href="#案例：气泡城的囚徒" class="headerlink" title="案例：气泡城的囚徒"></a>案例：气泡城的囚徒</h4><p>假设要制作一款城市跳伞的电子游戏。</p><p>气泡城的囚徒：设计概况</p><ul><li>剧情：你是一只叫作“微笑”的跳伞猫。气泡城的市民们都被一个邪恶的巫师困在他们的房间中。你只有通过跳伞进入城市，从烟肉中滑下来找到市民，寻找阻止巫师的方法。</li><li>机制：在向城市中跳伞时，你可以试着抓住从城市中升起的魔法气泡。你能使用气泡的能量向邪恶的秃鸷发出射线，防止他们戳破气泡或者撕碎你的降落伞。同时你必须使降落伞正好落到城市中的目标建筑之上。</li><li>艺术：卡通风格的外观和游戏体验。</li><li>技术：使用第三方引擎的、多平台的三维主机游戏。</li></ul><p>可以马上开始制作，深入细节，但很可能在玩法测试之前已经过去了很长时间。</p><p>正确的做法：和团队一起坐下，做一个风险评估，这意味着列出一个会危害到项目的所有风险的列表。可能示例：</p><p>风险 1：收集泡泡/射击秃鹫的机制不如想象中有趣<br>风险 2：游戏引擎无法同时完成绘制整个城市、所有气泡和秃鹫的任务<br>风险 3：目前的想法是需要 30 种不同房子来构成完整游戏——可能没有足够时间完成所有室内设计和动画角色<br>风险 4：不确定人们是否喜欢角色和剧情<br>风险 5：可能要改变游戏主题，以夏季新上映的电影作为跳伞噱头</p><p>可以通过构建小型原型，尽快减少或消除风险。</p><ul><li><p>风险 1：收集泡泡/射击秃鹫的机制不如想象中有趣<br>可以将游戏机制抽象出来，比如方块版本。这样可以立即回答游戏机制是否好玩的问题，若是不好玩，对着简单模型迅速做出改变，直到好玩，然后就可以开始制作精细化版本。<br>明智的做法是利用迭代规则的优势。</p></li><li><p>风险 2：游戏引擎无法同时完成绘制整个城市、所有气泡和秃鹫的任务<br>立刻做出快速原型。原型没有其他功能，只是单纯在屏幕上展示预估数量的相同物品，看引擎能否处理。这个引擎没有玩法，只是单纯测试技术可行性。如果能处理，很好，若是不能，在艺术品完成前，赶紧想解决方案！</p></li><li><p>风险 3：目前的想法是需要 30 种不同房子来构成完整游戏——可能没有足够时间完成所有室内设计和动画角色<br>让艺术家先做一间房屋和一个角色，评估时间。如果达不到预期，想办法——用更少房屋或复用角色。</p></li><li><p>风险 4：不确定人们是否喜欢角色和剧情<br>构建能够快速展示角色的艺术原型和故事版，将其展现给（最好是目标人群）玩家，评估他们的反映，整理出他们喜欢什么，不喜欢什么，为什么。充分利用这些信息进行迭代！</p></li><li><p>风险 5：可能要改变游戏主题，以夏季新上映的电影作为跳伞噱头<br>要消除这个风险，可以寄希望于管理层尽快作出决定，或者可以决定制作一款能够更容易偏向电影主题的游戏，甚至可能想出一个制作两款不同游戏的计划——关键是立即考虑风险，并做出行动以保证它不会危及项目。</p></li></ul><blockquote><blockquote><p>这可太可怕了 2333</p></blockquote></blockquote><h4 id="16-号透镜：风险消除"><a href="#16-号透镜：风险消除" class="headerlink" title="16 号透镜：风险消除"></a>16 号透镜：风险消除</h4><blockquote><p>是以圣人犹难之，故终无难矣。 —— 道德经</p></blockquote><blockquote><p>有道的圣人总是看重困难，所以就终于没有困难了。</p><blockquote><p>没想到这里能看到哈哈。</p></blockquote></blockquote><p>要使用这个透镜，停止积极地思考，然后开始认真考虑那些会危及游戏的风险。</p><p>问你自己这些问题：</p><ul><li>是什么让这个游戏变得平庸?</li><li>我们怎样防止这样的风险发生?</li></ul><p>风险管理很难。这意味着你必须面对那些不想碰到和立刻解决的问题。但是如果训练自己这么做，你就能进行更多次有效的迭代，获得一个更优秀的游戏。忽视潜在的问题，只专注于游戏中你最有信心的部分是一种诱惑。你必须抵抗这种诱惑，专注于游戏中的风险。</p><h3 id="制作有效原型的-10-个技巧"><a href="#制作有效原型的-10-个技巧" class="headerlink" title="制作有效原型的 10 个技巧"></a>制作有效原型的 10 个技巧</h3><ol><li>原型设计技巧 1：回答问题</li></ol><p>每个圆形都应该设计为回答一个或多个问题。应该能清楚地描述问题，如果不能很可能会浪费时间。一些原型应该要回答的问题示例：</p><ul><li>我们的技术能够在一个场景中支持多少个动画角色？</li><li>核心玩法有趣吗？趣味能持续较长时间吗？</li><li>角色和设定在艺术上能融合吗？</li><li>游戏关卡应该有多大？</li></ul><p>避免过度构建原型，专注于让原型回答关键问题。</p><ol start="2"><li>原型设计技巧 2：忘记质量</li></ol><p>制作原型，唯一要关心的是其能否解决问题。其解决的越快，这个原型就越好——即使这个原型只能勉强使用而且只有粗糙外观。<br>目标是尽快找到问题，从而尽早解决。精致的原型会隐藏真正问题，带来错误安全感。</p><p>不要逃避迭代规则。需要尽快构建能回答疑问的原型，别管它有多难看！</p><blockquote><blockquote><p>想起自己在做 Yin Yang Messenger demo 的时候，一开始不敢动手，然后想了半天，做了个简易的 cube 版本出来，让朋友玩了之后收集了反馈立马迭代了新版本出来，一下子好了不少。</p></blockquote></blockquote><ol start="3"><li>原型设计技巧 3：不要太过留恋</li></ol><blockquote><p>计划好扔掉当前的产品——你总会这样。 —— 《人月神话》（The Mythical Man Month）， Fred Brooks</p></blockquote><p>要带着一切都是临时的心态开始原型工作——唯一要关心的是这个原型是否能回答问题。<br>把每个原型都当做学习机会——这是制作真正系统的练习。</p><ol start="4"><li>原型制作技巧 4：区分原型的优先级</li></ol><p>若是有多个风险需要消除，为风险也列出优先级，这样才能解决最大风险。特别是当一些风险因为其他风险而存在，那么解决源头，后续风险自然不再存在。</p><ol start="5"><li>原型设计技巧 5：有效的并行原则</li></ol><p>巧妙进行更多次迭代的方法是同时制作几个原型。<br>系统工程师构建回答技术问题的原型，艺术家构建艺术原型，设计师构建玩法原型<br>多个小型独立原型可以帮助你更快回答更多问题</p><ol start="6"><li>原型设计技巧 6：并不总需要数字化</li></ol><p>简单的桌上游戏原型——纸上原型，也能很好回答问题！<br>这样能迅速制作出桌面游戏，而且实现相同玩法。这能让你更快定位问题。</p><p>回合制游戏的数值可以通过纸上原型来打磨<br>实时游戏也能将行为转换为回合制模式<br>案例：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220530012013.png"></p><ol start="7"><li>原型设计技巧 7：无须交互</li></ol><p>简单的草图和动画能够对回答关于游戏玩法的问题大有帮助</p><p>《波斯王子：时之沙》有一套新奇的跳跃和时间回溯机制，最初的原型就来自无交互动画，描绘了设计师想象中难以置信的巧妙杂技，所以团队能够更容易看到思考和讨论怎样创造一个交互系统能够完成这个愿景。</p><ol start="8"><li>原型设计技巧 8：选择一个“快速迭代”的游戏引擎</li></ol><p>传统软件开发像烤面包：</p><p>1.编写代码。<br>2.编译和链接。<br>3.运行你的游戏。<br>4.操纵你的游戏到你想要测试的部分。<br>5.测试并验证。<br>6.回到步骤1。</p><p>如果对结果不满意，只能从头再来。</p><p>选择一个能快速迭代的引擎像是捏黏土——可以一直改变：</p><p>1.运行你的游戏。<br>2.操纵你的游戏到你想要测试的部分。<br>3.测试并验证。<br>4.编写代码。<br>5.回到步骤3。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220530012620.png"></p><ol start="9"><li>原型设计技巧 9：先构建玩具</li></ol><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220601221510.png"></p><p>通过先制作一个玩具再想出游戏，可能从根本上提高了游戏质量，因为这在两个层次上都会很有趣。更深远的是，当你创造的玩法是基于一个很有趣的玩具的一部分，两个层级就能够通过最强有力的方式互相支持。</p><h4 id="17-号透镜：玩具"><a href="#17-号透镜：玩具" class="headerlink" title="17 号透镜：玩具"></a>17 号透镜：玩具</h4><p>要使用这个透镜，不要思考你的游戏是否好玩，要思考参与这个游戏是否有趣。</p><p>问你自己这些问题：</p><ul><li>如果我的游戏没有目标，它会有趣吗？如果不是，我怎样才能改进它？</li><li>当人们看到我的游戏时，他们想要与它产生互动吗，甚至在它们知道应该怎样玩之前？如果不是，我怎样才能改进它？</li></ul><p>有两种方式可以使用玩具透镜。<br>第一种方式是将其运用在一个现存游戏上，想出怎样为它添加一些玩具类的特质——怎样让它变得更亲切，操作更有趣。<br>第二种方式更加大胆，即在你还没有任何游戏创意之前运用它制作一个玩具。如果你在计划中做这件事就会有风险——但如果不是这样，这就是一个伟大的魔杖，可以帮助你找到你还没发现的绝妙游戏。</p><ol start="10"><li>原型设计技巧 10：抓住更多迭代的机会</li></ol><p>在游戏开发过程中会对游戏做出一些改变，这需要更多时间。<br>《光环》（Halo）就是这样，它原本作为一款苹果电脑游戏而被开发。与微软交涉时，他们为个人电脑做了改变，团队利用这个机会进行了更多次迭代。第二个意外是微软请他们将这个游戏从个人电脑转移到新发布的 Xbox 平台！团队需要更多时间改变技术，他们也再次拥有了提高和迭代游戏核心玩法的时间。</p><h3 id="完成迭代"><a href="#完成迭代" class="headerlink" title="完成迭代"></a>完成迭代</h3><ul><li>非正式迭代</li></ul><ol><li>想出一个创意</li><li>试验它</li><li>测试和改进，直到其足够好</li></ol><ul><li>正式迭代：</li></ul><ol><li>描述一个问题（利用机制、技术、美学、故事作为限定）</li><li>用头脑风暴的方式找到几种可能的解决方案</li><li>选择一个解决方案</li><li>列出使用这种解决方案的风险</li><li>构建原型来消除这些风险</li><li>测试原型，直到足够好为止</li><li>描述一个新的想要解决的问题，回到第 2 步</li></ol><p>每次原型设计迭代中，都能更加详细地描述问题。<br>迭代的例子：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220601222707.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220601222718.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220601222735.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220601222748.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220601222759.png"></p><h3 id="多少次才足够"><a href="#多少次才足够" class="headerlink" title="多少次才足够"></a>多少次才足够</h3><blockquote><p>现在我明白了，尽管太晚了。在我们计算费用之前，在我们评价自己是否有能力完成它之前就开始工作是很荒谬的。 —— 鲁滨逊·克鲁索（Robinson Crusoe）</p></blockquote><p>更多的迭代总会让你的游戏变得更好。但是“工作永远不会终结——只会被放弃。”<br>需要确定在用尽开发预算之前，进行足够的迭代次数。</p><p>马克·塞尔尼（Mark Cerny）的观点：在你完成两个可发布的游戏版本并完成所有必要特性之前，你都处于试验产品阶段。换言之，除非有两个完全完整的关卡，你仍在进行游戏基本设计。</p><p>这个点通常在花费 30% 必要预算之后。<br>如果到达该点花费了 100w，那么可能还需要花费额外 230w。</p><p>作者有自己的 50% 法则：</p><ul><li>50 % 法则前半部分：当计划游戏时，确定用这种方式构建它。如果 50 % 的预算被削减了，你依然能够有一个可玩的游戏。这条规则要求保持系统简单，也保证当出现糟糕的事情（很可能）迫使你放弃一些特性时，依然能够得到一个可玩游戏。</li><li>50 % 法则后半部分：所有核心玩法元素应该在规划中前半部分完成。即用一半时间让游戏变得可玩，用一半时间让游戏变得更好。</li></ul><h3 id="你的秘密燃料"><a href="#你的秘密燃料" class="headerlink" title="你的秘密燃料"></a>你的秘密燃料</h3><h4 id="18-号透镜：激情"><a href="#18-号透镜：激情" class="headerlink" title="18 号透镜：激情"></a>18 号透镜：激情</h4><p>在每个原型的结尾，当你小心地消除风险并计划下一步时，别忘了用这些重要问题检验你对游戏的感受：</p><ul><li>我对这款游戏的成功是否抱有极大激情？</li><li>如果失去了激情，怎样才能找回？</li><li>如果激情没有回来，是否应该做一些其他事？</li></ul><p>在每次冲刺的末尾，当你在研究原型和准备接下来的计划时，一定要记住做一个“激情检验”。激情就是潜意识与你交流的方式，它告诉你这个游戏是否令人兴奋。失去激情就说明一些地方出了问题——如果不能找到问题所在，游戏很可能会死去。激情也有危险性——毕竟这是一种不合理的情感。<br>必须小心对待激情，因为它往往能够击倒障碍并带领游戏走向成功。</p><hr><h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><h3 id="第八章-游戏通过迭代提高-1"><a href="#第八章-游戏通过迭代提高-1" class="headerlink" title="第八章 游戏通过迭代提高"></a>第八章 游戏通过迭代提高</h3><p> - 比尔·巴克斯顿撰写的《用户体验草图设计》 (Sketching User Experiencesby Bill Buxton)。这本书通过多元化的原理和令人嘱目的结果向我们展示了草图的概念(提示:原型就是一种草图)</p><p> - 比尔·卢卡斯撰写的《用纸设计原型》 (Have Paper, Will Prototype by BillLucas) 。这本书是一系列案例研究,关于怎样成功创造计算机界面的纸上原型。麦克·塞林格撰写的《狗头人指南之桌面游戏设计》 (The Kobold Guide to Board Game Design by Mike Selinker) 。这本非常棒的书讲述了如何制作伟大的桌面游戏。</p><p> - 超级兄弟撰写的《少说话,多做事》 (Less Talk, More Rock by Superbrothers)这篇文章认为游戏是行动的媒介,而不是语言的媒介,并坚定的认为太多的设计讨论将会是毁灭性的。</p><p> - 《敏捷软件开发》 (Agile Software Development) 。维基百科中关于敏捷软件开发的条目编写地很不错,如果你想要更多地学习敏捷,它可以提供很多参考。 </p><ul><li>杰森·范登博格撰写的《游戏设计的四个F:快速失败与跟随快乐》(The 4Fs of Game Design: Fail Faster, and Follow the Fun by Jason Vandenberghe)这篇文章(基于马克,勒布朗的一个理念)将伟大游戏设计过程的关键方面总结为清晰的基础元素</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 摘抄/笔记 汇总</title>
      <link href="2022/05/29/20220529-theartofgamedesign-sum/"/>
      <url>2022/05/29/20220529-theartofgamedesign-sum/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="序言"><a href="#序言" class="headerlink" title="序言"></a>序言</h2><h3 id="游戏设计是什么"><a href="#游戏设计是什么" class="headerlink" title="游戏设计是什么"></a>游戏设计是什么</h3><blockquote><p>游戏设计，即决定一款游戏应当如何的行为。</p></blockquote><h3 id="透镜"><a href="#透镜" class="headerlink" title="透镜"></a>透镜</h3><p><a href="http://artofgamedesign.com/">http://artofgamedesign.com</a></p><hr><h2 id="第一章-太初之时，有设计师"><a href="#第一章-太初之时，有设计师" class="headerlink" title="第一章 太初之时，有设计师"></a>第一章 太初之时，有设计师</h2><h3 id="咒语"><a href="#咒语" class="headerlink" title="咒语"></a>咒语</h3><blockquote><p>我是游戏设计师</p></blockquote><h3 id="游戏设计师需要什么技能"><a href="#游戏设计师需要什么技能" class="headerlink" title="游戏设计师需要什么技能"></a>游戏设计师需要什么技能</h3><ul><li>动画</li><li>人类学<ul><li>了解受众</li></ul></li><li>建筑学<ul><li>世界的建造</li><li>人与空间的关系</li></ul></li><li>头脑风暴<ul><li>新想法的产生</li></ul></li><li>商业</li><li>电影制作方法<ul><li>镜头语言</li><li>有冲击力的情感</li></ul></li><li>沟通<ul><li>平息争论</li><li>了解彼此对于游戏的真实感受</li></ul></li><li>创意写作<ul><li>创造完整的虚拟世界及其中的住民</li><li>决定其中发生的一切</li></ul></li><li>经济学<ul><li>经济系统</li></ul></li><li>工程学<ul><li>有创意的设计师必须了解技术的局限和能力</li></ul></li><li>玩游戏<ul><li>相互借鉴</li></ul></li><li>历史<ul><li>汲取灵感</li></ul></li><li>管理<ul><li>共同目标</li><li>向上管理</li></ul></li><li>数学<ul><li>不能有所畏惧</li></ul></li><li>音乐<ul><li>触达灵魂</li></ul></li><li>心理学<ul><li>目标是令人感到幸福</li><li>了解心理运作机制</li></ul></li><li>公开演讲<ul><li>向人展示想法</li><li>自信、清晰、自然而有趣</li></ul></li><li>声音设计<ul><li>耳闻为实</li></ul></li><li>技术协作<ul><li>技术文档</li><li>不留遗漏</li></ul></li><li>视觉艺术<ul><li>熟练运用图形设计语言创造想要的感觉</li></ul></li></ul><h3 id="最重要的技能"><a href="#最重要的技能" class="headerlink" title="最重要的技能"></a>最重要的技能</h3><ul><li>倾听<ul><li>团队</li><li>受众</li><li>游戏</li><li>客户</li><li>自己</li></ul></li></ul><blockquote><p>需要经过思考来倾听</p></blockquote><blockquote><p>当我们倾听时,我们也将自己置于险境,接受这样的可能性:接下来听到的事情可能让我们心神倾覆,与我们的一切知识龃龉。这是开放思想的终极形式。这是了解真相的唯一途经。你必须像孩子一样看待一切,不带假设,观察全部,像赫尔曼·黑塞(Hermann Hesse)在《悉达多》中描述的那样:</p><blockquote><p>以一颗宁静的心灵、一种期盼而又宽容的心境去倾听,抛弃一切欲望和激情，抛弃一切评判与见解。</p></blockquote></blockquote><h4 id="五种倾听"><a href="#五种倾听" class="headerlink" title="五种倾听"></a>五种倾听</h4><ul><li>团队的声音<ul><li>互补</li><li>共享技能</li></ul></li><li>受众的声音<ul><li>了解他们的想法</li><li>胜于他们自身</li></ul></li><li>游戏的声音<ul><li>了解游戏的方方面面</li><li>知道哪里出了问题</li></ul></li><li>客户的声音<ul><li>辨别他们真正的需求</li></ul></li><li>自己的声音<ul><li>创意来源</li></ul></li></ul><h3 id="天才的秘密"><a href="#天才的秘密" class="headerlink" title="天才的秘密"></a>天才的秘密</h3><ul><li>天赋<ul><li>小天赋<ul><li>先天擅长</li></ul></li><li>大天赋<ul><li>对工作的爱</li></ul></li></ul></li></ul><hr><h2 id="第二章-设计师创造体验"><a href="#第二章-设计师创造体验" class="headerlink" title="第二章 设计师创造体验"></a>第二章 设计师创造体验</h2><blockquote><p>游戏设计师真正关注的就是创造体验。</p></blockquote><h3 id="游戏不等于体验"><a href="#游戏不等于体验" class="headerlink" title="游戏不等于体验"></a>游戏不等于体验</h3><blockquote><p>游戏能够带来体验，但它并不是体验本身。</p></blockquote><blockquote><p>游戏设计师的能力需要通过想象体验的品质来衡量，因为这就是人们玩游戏的目的。</p></blockquote><h3 id="游戏特有于其他艺术形式的体验"><a href="#游戏特有于其他艺术形式的体验" class="headerlink" title="游戏特有于其他艺术形式的体验"></a>游戏特有于其他艺术形式的体验</h3><ul><li>书籍或剧本<ul><li>线性体验</li></ul></li><li>游戏<ul><li>非线性体验<ul><li>赋予玩家很强的控制能力</li><li>可以改变体验节奏/事件顺序</li><li>加入随机事件</li></ul></li></ul></li></ul><h3 id="追寻彩虹的三种途径"><a href="#追寻彩虹的三种途径" class="headerlink" title="追寻彩虹的三种途径"></a>追寻彩虹的三种途径</h3><ul><li>目标<ul><li>制作一种能够带来美妙和难忘体验的游戏</li></ul></li><li>三个学科<ul><li>心理学<ul><li>了解人类作出某种行为的机制</li></ul></li><li>人类学<ul><li>在人类层面上了解人们</li></ul></li><li>设计学<ul><li>让人们变得开心</li></ul></li></ul></li></ul><h4 id="心理学"><a href="#心理学" class="headerlink" title="心理学"></a>心理学</h4><ul><li>研究<ul><li>控制人类大脑的机制</li></ul></li><li>二十世纪早期分类<ul><li>行为学家<ul><li>只关注可量化行为</li><li>采用黑盒方式进行思维探究</li><li>主要工具是客观可控实验</li></ul></li><li>现象学家<ul><li>研究人类体验的本质和对事物的感受</li><li>主要工具是反思——在事情发生后感受自己的体验</li></ul></li></ul></li></ul><blockquote><p>游戏设计师不需要被科学的严谨责任感束缚,我们能够同时使用行为主义的实验和现象主义的反思学习我们想要了解的知识。因为<strong>作为设计师,我们并不关注客观现实世界中的绝对正确,而只关注在主观体验世界中的相对正确。</strong></p></blockquote><h4 id="人类学"><a href="#人类学" class="headerlink" title="人类学"></a>人类学</h4><ul><li><p>研究</p><ul><li>人类及其思想行为</li><li>采用比心理学更综合的方式观察人类<ul><li>身体</li><li>精神</li><li>文化</li></ul></li><li>研究世界上各种人群的相同点和不同点<ul><li>贯穿人类历史</li></ul></li></ul></li><li><p>方法</p><ul><li>field study<ul><li>居住在他们研究课题的所在地，尝试把自己完全融入到目标人群的世界中</li><li>努力客观地观察文化并进行实践，同时不断反思，将自己放在实验对象的位置。帮助人类学家 更好地想象实验对象的感受</li></ul></li></ul></li><li><p>与玩家交谈，学习他们的一切，把自己放到他们的位置，获得客观观点中没有的洞察力</p></li></ul><h4 id="设计学"><a href="#设计学" class="headerlink" title="设计学"></a>设计学</h4><ul><li><p>研究</p><ul><li>人类体验</li></ul></li><li><p>所有的设计原则都源于人类大脑，我们在理想情况下能够通过相同的心理学和人类学基础找到连接所有设计原则的方法。</p></li><li><p>我们必须开放四位并且勇于实践——优秀的创意能够来源于任何地方，但只有帮助提升游戏体验的创意才是好创意。</p></li></ul><h3 id="反思：力量、风险和实践"><a href="#反思：力量、风险和实践" class="headerlink" title="反思：力量、风险和实践"></a>反思：力量、风险和实践</h3><blockquote><p>通过深刻地体会自身的感受,观察评估和描述自己的体验,你能够对你的游戏做出迅速地判断:哪些地方做得不错,而哪些地方没有达到目标以及为什么。</p></blockquote><h4 id="危险-1：反思可能导致对事实的错误结论"><a href="#危险-1：反思可能导致对事实的错误结论" class="headerlink" title="危险 1：反思可能导致对事实的错误结论"></a>危险 1：反思可能导致对事实的错误结论</h4><blockquote><p>这一教训很简单:当处理人们的内心思维、尝试理解体验、感受事物时,反思是一种强有力且可信赖的工具。作为游戏设计师,我们不需要担忧这第一个危险。<strong>我们应当更加关注事物的感受而不是真实的正确。这样我们就能够更加信任自己的感受和本能去决定体验的品质。</strong></p></blockquote><h4 id="危险-2：自己的体验不一定适用于其他人"><a href="#危险-2：自己的体验不一定适用于其他人" class="headerlink" title="危险 2：自己的体验不一定适用于其他人"></a>危险 2：自己的体验不一定适用于其他人</h4><ul><li><p>“我只为与我一样的玩家设计游戏”有这些问题:</p><ul><li>游戏设计师更倾向于有特殊的偏好。也许与你一样的玩家的数量不足以让你的游戏具有投资价值。</li><li>你很难一个人设计或者开发游戏。如果团队中的不同成员对于最佳设计有不同的想法,你将很难与他们达成一致。</li><li>许多类型的游戏和受众都在你可接触的范围之外。</li></ul></li><li><p>“不能相信个人的观点”有这些问题:</p><ul><li>你无法用游戏测试解决所有的问题,尤其是在早期的设计阶段,你根本没有可供测试的游戏。这时候必须用“个人观点”的方法判定游戏设计的好坏。</li><li>在一个游戏完全成型之前,测试者也许难以接受一个非同寻常的创意。也许直到完成整个游戏时,他们才会欣赏这种想法。如果你不相信自己关于游戏好坏的感受,也许你的游戏本可以成为美丽的天鹅,但测试者认为只是个“丑小鸭”</li><li>游戏测试只能偶尔进行,但你每天都需要做出重要的游戏设计决定。</li></ul></li></ul><blockquote><ul><li>倾听！发掘自己的体验和其他人体验间的差异，把自己放到他们的位置上</li></ul></blockquote><h3 id="仔细分析想法"><a href="#仔细分析想法" class="headerlink" title="仔细分析想法"></a>仔细分析想法</h3><ul><li>想法需要具体<ul><li>是什么导致了感受</li><li>是什么让你思考</li><li>是什么让你做这件事</li></ul></li><li>你应该能分析任何可能产生的体验</li></ul><h4 id="1-号透镜：情感"><a href="#1-号透镜：情感" class="headerlink" title="1 号透镜：情感"></a>1 号透镜：情感</h4><ul><li><p>人们可能忘掉你的言语,但他们永远不会忘掉他们对你的感受。 一玛雅·安杰洛(Maya Angelou)</p></li><li><p>为了确定你创造的情感是正确的,问自己这几个问题:</p><ul><li>我希望玩家能够体验到怎样的情感?为什么?</li><li>当人们(包括我自己)玩游戏时,他们产生了怎样的情感?为什么?</li><li>我怎样缩小人们的实际体验与我的设想之间的距离?</li></ul></li></ul><h3 id="战胜海森堡原理"><a href="#战胜海森堡原理" class="headerlink" title="战胜海森堡原理"></a>战胜海森堡原理</h3><ul><li>反思仍然有一个巨大的挑战。我们怎样才能获得不受干扰的体验?由于观测行为本身就是一种体验。我们往往会面临这样一个问题。当你尝试观察自己打字时,你会发现你的打字速度减慢了,并且会产生很多错误。</li><li>在享受一个游戏或者电影时尝试观察你自己,享受感会很快消失殆尽。有人把这称作“分析的无奈”,也有人把这比作“海森堡原理”。<ul><li>这条原理引用自量子力学中的“海森堡不确定原理” 。</li><li>这个原理指出,无法在不干扰一个物体运动的情况下测量这个物体的运动。</li><li>类似的,体验的本质无法在不被干扰的情况下获得。</li></ul></li></ul><h4 id="分析记忆"><a href="#分析记忆" class="headerlink" title="分析记忆"></a>分析记忆</h4><ul><li>我们很难在体验发生时分析记忆</li><li>最好选择强有力的体验（通常会带来最好的灵感）和清晰的记忆进行分析<blockquote><ul><li>不要刻意抱着分析的目的玩游戏，而是等游戏结束之后，立即分析这段游戏的体验。</li><li>带着分析的目的能够帮助你记忆更多体验的细节而不会干涉体验本身。</li></ul></blockquote></li></ul><h4 id="两次经历"><a href="#两次经历" class="headerlink" title="两次经历"></a>两次经历</h4><ul><li><p>分析的另一个方法就是重复你的体验</p><ul><li>第一次不要停下来分析 —— 仅注重体验</li><li>第二次要分析所有的体验 <ul><li>甚至可以停下来记笔记</li></ul></li></ul></li><li><p>第二次经历体验会让脑海中一些纯粹的新鲜体验释放，让你有机会停下来思考体验的感觉和原因</p></li></ul><h4 id="暗中一瞥"><a href="#暗中一瞥" class="headerlink" title="暗中一瞥"></a>暗中一瞥</h4><ul><li><p>有没有可能观察体验而不破坏它</p><ul><li>偷偷的快速一瞥</li><li>在脑海中质疑并回答太多问题时，体验就毁了</li></ul></li><li><p>一个快速一瞥更像是</p><ul><li>“刺激吗” “是的” 这样的过程</li><li>立即停止分析回到体验中，直到下一次暗中一瞥</li></ul></li></ul><h4 id="默默观察"><a href="#默默观察" class="headerlink" title="默默观察"></a>默默观察</h4><ul><li>类似禅道自我审视</li><li>听从内心，理解人类本质</li></ul><h3 id="本质体验"><a href="#本质体验" class="headerlink" title="本质体验"></a>本质体验</h3><blockquote><p>一个优秀的游戏不需要你完美复制真实地体验。你需要做的是<strong>为你的游戏找出这种体验的精髓</strong>。</p></blockquote><ul><li><p>寻找能够定义所想要的体验的基本元素，并想办法让他们成为游戏中的一部分</p><ul><li>本质体验能够通过一种形式传递，这与真实的体验不同</li></ul></li><li><p>例子</p><ul><li>打雪仗<ul><li>天气很冷<ul><li>美术效果<ul><li>呼吸白气</li><li>动作颤抖</li></ul></li><li>音效<ul><li>呼啸寒风</li></ul></li><li>先关游戏规则<ul><li>脱去手套能够制造更好的雪球</li><li>手太冷就必须把手套穿上</li></ul></li></ul></li></ul></li></ul></li></ul><h4 id="2-号透镜：本质体验"><a href="#2-号透镜：本质体验" class="headerlink" title="2 号透镜：本质体验"></a>2 号透镜：本质体验</h4><ul><li><p>要想使用这个透镜,你需要停止你的游戏,开始思考游戏给玩家的体验。问你自己这几个问题：</p><ul><li>我想要让玩家获得怎样的体验?</li><li>这种体验的本质是什么?</li><li>我应该如何让我的游戏抓住这种体验的本质?</li></ul></li><li><p>需要清晰地表明想要创造的体验，找出尽可能多的方法把这种体验放入游戏中</p></li><li><p>例子</p><ul><li>will sports 棒球游戏<ul><li>本质体验：挥棒</li></ul></li><li>James Bond 007<ul><li>本质体验：风险行为</li><li>游戏机制：英雄点</li></ul></li></ul></li></ul><blockquote><ul><li>游戏设计师的终极目标是<strong>传达体验</strong></li></ul></blockquote><h3 id="你的感受都是真实的"><a href="#你的感受都是真实的" class="headerlink" title="你的感受都是真实的"></a>你的感受都是真实的</h3><blockquote><p>实际上所有对体验的讨论都会带来一个很奇怪的想法。我们所能了解的现实都是现实的体验。我们又知道我们的体验“并不是真的现实”。我们会用自己的意识和大脑过滤现实。<strong>我们实际体验到的意识是一种幻觉–一点也不真切。但这种幻觉是我们所能拥有的最真实的东西。因为这就是我们自己。</strong>这是个让哲学家头痛的问题,但是对游戏设计师是一件好事。这意味着<strong>我们的游戏创造了所设计的体验,并且这种体验可能比日常体验更真实,更有意义。</strong></p></blockquote><hr><h2 id="第三章-体验发生于场景"><a href="#第三章-体验发生于场景" class="headerlink" title="第三章 体验发生于场景"></a>第三章 体验发生于场景</h2><h3 id="流沙般的平台"><a href="#流沙般的平台" class="headerlink" title="流沙般的平台"></a>流沙般的平台</h3><ul><li><p>我们把生活中使用技术的地方称之为场景</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210813122146.png" style="zoom: 67%;" /></li></ul><h3 id="私人场景"><a href="#私人场景" class="headerlink" title="私人场景"></a>私人场景</h3><ul><li>游戏玩法常常具有私密性<ul><li>家<ul><li>安全</li><li>不孤单</li><li>不被人们包围</li></ul></li></ul></li></ul><h4 id="炉边"><a href="#炉边" class="headerlink" title="炉边"></a>炉边</h4><ul><li><p>人类定义的一个方面就是与火的关系</p><ul><li>光线</li><li>温暖</li><li>安全感</li></ul></li><li><p>例子</p><ul><li>任天堂 Wii<ul><li>为炉边设计</li><li>能让整个家庭一起玩</li><li>能在虚拟世界使用体感<ul><li>仅仅观赏游戏就能带来足够的快乐</li></ul></li></ul></li><li>舞力全开<ul><li>炉边跳舞</li></ul></li></ul></li></ul><h4 id="工作台"><a href="#工作台" class="headerlink" title="工作台"></a>工作台</h4><ul><li><p>感觉</p><ul><li>孤独</li><li>安静</li><li>有些凌乱</li></ul></li><li><p>工作台游戏</p><ul><li>难度更高</li><li>更紧张</li><li>持续时间长</li></ul></li><li><p>例子</p><ul><li>Valve Steam</li><li>魔兽世界和其他 MMORPG</li></ul></li></ul><h4 id="读书角"><a href="#读书角" class="headerlink" title="读书角"></a>读书角</h4><ul><li><p>典型读书角</p><ul><li>后仰姿势远离电视</li></ul></li><li><p>例子</p><ul><li>iPad 抓住了读书角的游戏机会</li></ul></li><li><p>读书角游戏 - 与读书体验类似</p><ul><li>难度更低</li><li>更简单</li><li>更放松</li></ul></li></ul><h3 id="公共场合"><a href="#公共场合" class="headerlink" title="公共场合"></a>公共场合</h3><ul><li>给予玩家在家中无法得到的体验</li></ul><h4 id="剧场"><a href="#剧场" class="headerlink" title="剧场"></a>剧场</h4><ul><li>特点<ul><li>大量人聚集</li><li>共同见证某事</li></ul></li></ul><blockquote><p>我们的潜意识能够感觉到其他人对这场表演的感受。这帮助我们专注于自己的感受。<br>这可能就是为什么电视秀总是播放哈哈大笑的声音——共同参与一种体验能够带来满足感</p></blockquote><ul><li>问题<ul><li>人太多了</li><li>游戏需要交互，想要成为每个玩家独特的体验<ul><li>交互的换了被大量座位打了折扣<ul><li>可能是因为人们容易感到疲倦</li><li>可能因为剧院太小而无法体现</li></ul></li></ul></li></ul></li></ul><h4 id="竞技场"><a href="#竞技场" class="headerlink" title="竞技场"></a>竞技场</h4><ul><li>特点<ul><li>庞大</li><li>露天</li><li>专为游戏玩法设计</li><li>输赢公开</li></ul></li></ul><blockquote><p>既然人们能够对他们所看到的游戏产生很强的兴奋感，许多<strong>竞技场的外围就是剧院</strong>，在一个地点创造了两种场景！</p></blockquote><ul><li>例子<ul><li>多人 FPS<ul><li>技术在工作台/炉边</li><li>大脑在竞技场</li></ul></li></ul></li></ul><h4 id="博物馆"><a href="#博物馆" class="headerlink" title="博物馆"></a>博物馆</h4><ul><li><p>特点</p><ul><li>从日常生活解放</li><li>观赏外来事物/浏览新的地点带来全新变化</li><li>拓宽知识</li><li>带回新观念 让家中熟悉事物焕然一新</li></ul></li><li><p>例子</p><ul><li>成都游戏展 GAMEON</li></ul></li></ul><h3 id="半公开-半私人场景"><a href="#半公开-半私人场景" class="headerlink" title="半公开/半私人场景"></a>半公开/半私人场景</h3><h4 id="游戏桌"><a href="#游戏桌" class="headerlink" title="游戏桌"></a>游戏桌</h4><ul><li>例子<ul><li>木板游戏</li><li>卡片游戏</li><li>骰子游戏</li></ul></li></ul><h4 id="操场"><a href="#操场" class="headerlink" title="操场"></a>操场</h4><ul><li>孩子们很喜欢</li><li>目前被忽视</li></ul><h4 id="随时随地"><a href="#随时随地" class="headerlink" title="随时随地"></a>随时随地</h4><ul><li><p>例子</p><ul><li>字谜</li><li>数独</li><li>找词语</li></ul></li><li><p>特点</p><ul><li>较低可玩性</li><li>简单互动和故事</li><li>只是为了填补碎片时间<ul><li>玩家并不倾向消费很多 可以的话希望免费</li></ul></li></ul></li></ul><h3 id="场景之间的混合与搭配"><a href="#场景之间的混合与搭配" class="headerlink" title="场景之间的混合与搭配"></a>场景之间的混合与搭配</h3><h4 id="3-号透镜：场景"><a href="#3-号透镜：场景" class="headerlink" title="3 号透镜：场景"></a>3 号透镜：场景</h4><ul><li>3号透镜:场景<ul><li>在我们的游戏设计中,我们玩游戏的场景对游戏会产生巨大的影响。为了确定你没有凭空设计游戏,问你自己这几个问题:<ul><li>我想要制作的游戏最适合哪种场景?</li><li>我的场景中是否有一些特殊的属性会影响到我的游戏?</li><li>我的游戏中有哪些元素能够与场景和谐共处?哪些元素不行?</li></ul></li></ul></li></ul><hr><h2 id="第四章-体验从游戏中诞生"><a href="#第四章-体验从游戏中诞生" class="headerlink" title="第四章 体验从游戏中诞生"></a>第四章 体验从游戏中诞生</h2><ul><li>所有类型的游戏都可以被视为一种<ul><li>桌面</li><li>卡牌</li><li>体育</li><li>操场</li><li>聚会</li><li>赌博</li><li>解密</li><li>街机</li><li>电子</li><li>电脑</li><li>视频</li><li>…</li></ul></li></ul><h3 id="定义的争吵"><a href="#定义的争吵" class="headerlink" title="定义的争吵"></a>定义的争吵</h3><blockquote><ul><li>我们面临的真正问题并不是缺少描述游戏设计元素的单词——而是对这些想法的真正含义缺少清晰的思考。</li><li>当你评判一个设计是好是坏以及原因的时候，你需要清楚地陈述你想要表达的意思</li><li>是否知道游戏设计的词汇并不重要——重要的是知道游戏设计的理念——我们认为这些词汇都无关紧要</li></ul></blockquote><blockquote><ul><li>定义术语能够让你清晰简洁并有分析性地进行思考</li></ul></blockquote><h3 id="什么是游戏"><a href="#什么是游戏" class="headerlink" title="什么是游戏"></a>什么是游戏</h3><ul><li><p>游戏是一种玩的东西</p></li><li><p>玩具是一些你可以玩的东西</p></li><li><p>玩具是一种可以玩的物品</p></li><li><p>好的玩具是一件玩起来很有乐趣的物品</p></li><li><p>乐趣是一种带有惊喜的愉悦感</p></li><li><p>什么是玩</p><blockquote><ul><li>玩耍就是漫无目的地浪费旺盛的精力。 -弗兰德里奇·席勒( Friedrich Schiller)</li><li>玩耍是指那些伴有愉悦、兴奋、力量和自我认知感的活动。 -.巴纳德·吉尔摩(J. Barnard Gilmore )</li><li>玩耍就是在一个更加坚固的结构中的自由移动。 -凯蒂·赛伦和埃里克·齐默尔曼( Katie Salen and Eric Zimmerman )《玩乐之道》（Rules of Play）</li><li>玩耍是那些自发的并且<strong>纯粹</strong>为此的活动。 –乔治·桑塔亚那(George Santayana )</li></ul></blockquote></li></ul><blockquote><p>我发现当我想要定义一个人类的活动时,减少关注这个活动本身而更多关注驱动这个活动的想法和感受会很有用。</p></blockquote><blockquote><ul><li>玩耍是沉迷于好奇心的活动</li></ul></blockquote><h4 id="4-号透镜：惊喜"><a href="#4-号透镜：惊喜" class="headerlink" title="4 号透镜：惊喜"></a>4 号透镜：惊喜</h4><ul><li>惊喜是一种我们很容易忘记的基础情绪。使用这个透镜来提醒你自己让你的游戏充满惊喜。问你自己这几个问题:<ul><li>当玩家们玩我的游戏时,什么会让他们感到惊喜?</li><li>我的游戏中的故事有惊喜吗?或者规则呢?或者艺术呢?或者技术呢？</li><li>你的规则能够让玩家之间互相带来惊喜吗?</li><li>你的规则能够让玩家们给自己带来惊喜吗?</li><li>惊喜是所有娱乐活动的重要组成部分–它是幽默、策略和解决问题的基础。我们的大脑很容易感受到惊喜。在一个实验中,测试者将糖水或者普通水喷到参与者的口中,获得随机模式喷雾的参与者会比获得固定模式喷雾的参与者有更好的体验,即使他们获得了同样数量的糖水。在另外的实验中,大脑扫描显示了即使在不愉快的惊喜中,大脑的愉悦中心也会被触发。</li></ul></li></ul><h4 id="5-号透镜：乐趣"><a href="#5-号透镜：乐趣" class="headerlink" title="5 号透镜：乐趣"></a>5 号透镜：乐趣</h4><ul><li>尽管有时候乐趣无法被分析,但在几乎所有的游戏中乐趣都是令人喜爱的。为了最大化游戏的乐趣,问你自己这几个问题:<ul><li>我的游戏中的哪个部分很有趣,为什么?</li><li>哪个部分需要变得更加有趣?</li></ul></li></ul><h4 id="6-号透镜：好奇心"><a href="#6-号透镜：好奇心" class="headerlink" title="6 号透镜：好奇心"></a>6 号透镜：好奇心</h4><ul><li>要使用这个透镜,思考玩家的真的动机-不是游戏的目标,而是玩家想要完成目标的真正原因。问你自己这几个问题:<ul><li>我的游戏给玩家的大脑提出了怎样的问题?</li><li>我正在做哪些努力让他们在意这些问题?</li><li>我能做什么来使他们提出更多的问题?</li><li>比如,一个解谜电子游戏在每一关中都可能有一个时间限定的目标。玩家们尝试回答这样一个问题: “我能在30秒之内找到过关的方法吗? ”一个让他们更加在意的方法是,当他们解决了任意一个谜题后播放一段有趣的动画,那么玩家就会问这样一个问题: “我想知道下一个动画是什么吗? ”</li></ul></li></ul><h3 id="不，认真一些，什么才是游戏呢"><a href="#不，认真一些，什么才是游戏呢" class="headerlink" title="不，认真一些，什么才是游戏呢"></a>不，认真一些，什么才是游戏呢</h3><ul><li>游戏<ul><li>游戏是一种对自主控制系统的练习,其中包含了力量的竞争,被规则限制以产生一个不平衡的结果。一艾略特·埃夫登和布莱恩·萨顿·史密斯 (Elliot Avedon and Brian Sutton-Smith)<ul><li>对自主控制系统的练习<ul><li>游戏与玩耍一样，是完全的自主行为</li></ul></li><li>力量的竞争<ul><li>游戏有目标</li><li>游戏也有冲突</li></ul></li><li>被规则限制<ul><li>游戏有其规则</li></ul></li><li>不平衡的结果<ul><li>游戏从平衡开始，最后有人获得了胜利</li></ul></li></ul></li><li>(游戏是)一个拥有内在意义的交互结构，需要玩家们努力完成目标。 —格雷格·科斯蒂基安(Greg Costikyan )<ul><li>交互结构<ul><li> 玩家是主动的</li><li> 游戏有一种结构（被规则定义），你可以与之交互，它也能与你交互</li></ul></li><li>努力完成目标<ul><li> 优秀的游戏的挑战恰到好处</li></ul></li><li>内生意义<ul><li> 内生：由器官或者系统的内部因素引起，或者内在发生</li><li>在游戏中有价值的部分也仅仅在游戏中才有价值<ul><li> 是游戏本身给了它这种意义</li><li> 游戏越吸引人，游戏中产生的内生价值就越大</li></ul></li><li>例子<ul><li>《大笨猫》 Bubsy<ul><li> 标准平台类游戏</li><li> 闯关 + 收集纱线球获得分数（分数只与收集了多少物品有关）</li><li> 玩家开始还会去收集 但后来完全忽视了纱线球 因为更高的分数并没有任何效果 即纱线球没有内在价值</li></ul></li><li>《刺客索尼克 2》 sonic the hedgehog 2<ul><li> 相似的平台游戏</li><li>可以收集戒指<ul><li> 携带截止能够保护避免被打败，每当收集到 100 个戒指就能获得新的生命，这增加了通关机会</li><li> 戒指有很强的内生价值</li></ul></li></ul></li></ul></li></ul></li></ul></li><li>游戏是一个封闭的正式系统,会给玩家带来结构化的冲突,并产生一个不平衡的结果。一特雷西·富勒顿、克里斯·斯维因和史蒂文·霍夫曼 (Tracy Fullerton, Chris Swain, and Steven Hoffman)<ul><li>吸引玩家</li><li>一个封闭的正式系统<ul><li>系统<ul><li>游戏由相互关联并协同工作的元素构成</li></ul></li><li>正式<ul><li>系统被清晰地定义了，有其自己的规则</li></ul></li><li>封闭<ul><li>说明了系统边界</li></ul></li></ul></li></ul></li></ul></li></ul><h4 id="7-号透镜：内生价值"><a href="#7-号透镜：内生价值" class="headerlink" title="7 号透镜：内生价值"></a>7 号透镜：内生价值</h4><ul><li>7号透镜:内生价值<ul><li>一个游戏的成功与玩家认为它是否重要紧密相关。要使用这个透镜来思考一下,在你的游戏中,玩家对道具、目标和分数的感受。问你自己这几个问题:<ul><li>在我的游戏中哪些东西对玩家很有价值?</li><li>怎样让这些东西对玩家更有价值?</li><li>游戏中的价值与玩家的动机之间有怎样的关系?</li><li>记住,道具的价值和游戏的比分直观地反映了玩家想要在游戏中获胜的程度。通过思考玩家真正关心的事物及其原因,你就知道应该怎样改进你的游戏了。</li></ul></li></ul></li></ul><h4 id="游戏特性列表"><a href="#游戏特性列表" class="headerlink" title="游戏特性列表"></a>游戏特性列表</h4><ul><li><p>Q1 游戏是完全自主的</p></li><li><p>Q2 游戏有目标</p></li><li><p>Q3 游戏有冲突</p></li><li><p>Q4 游戏有规则</p></li><li><p>Q5 游戏有输赢</p></li><li><p>Q6 游戏是可交互的</p></li><li><p>Q7 游戏具有挑战性</p></li><li><p>Q8 游戏能够创造他自己的内在价值</p></li><li><p>Q9 游戏能吸引玩家</p></li><li><p>Q10 游戏是封闭的正式系统</p></li><li><p>人们为什么这么喜欢游戏</p><ul><li>喜欢解决问题</li></ul></li></ul><h3 id="解决问题的入门"><a href="#解决问题的入门" class="headerlink" title="解决问题的入门"></a>解决问题的入门</h3><ul><li>我们在解决问题时做了什么，怎样与游戏特性列表联系起来<ul><li>第一件事就是描述我们想要解决的问题<ul><li>Q2 游戏有目标</li></ul></li><li>为问题构建框架，确定其范围和问题空间的本质，也要确定可以用哪些方法来解决问题<ul><li>Q4 游戏有规则</li></ul></li><li>我们很难描述应该怎样去做。这并不是一个完整的口头进程。我们仿佛在大脑中建立了一个内在的最小简化版本的现实世界,这个世界只包含了一些用于解决问题的必要关系。它就像是一个更干净的微型现实世界环境,让我们可以更轻松地在其中思考、操作或者交互(Q6)。<ul><li>Q6 游戏是可交互的</li></ul></li><li>在某种意义上,我们确立了一个带有目标的封闭的正式系统(Q10) 。<ul><li>Q10 游戏是封闭的正式系统</li></ul></li><li>在我们努力完成目标时,会遇到许多挑战(Q7) ,因为这个系统包含了一些冲突(Q3) 。<ul><li>Q7 游戏具有挑战性</li><li>Q3 游戏有冲突</li></ul></li><li>如果我们在意这个问题,我们会很快沉浸到解决问题之中(Q9) 。<ul><li>Q9 游戏能吸引玩家</li></ul></li><li>这个时候,由于我们专注于内在的问题空间,我们会有些忘记现实世界。既然问题空间只是现实世界的一个简化版本,而解决问题对我们又很重要,那么如果问题空间中的元素能让我们更接近于解决问题的目标,这些元素很快就会获得一种内在的重要性,这种重要性不需要被关联到问题内容的外部(Q8) 。<ul><li>Q8 游戏能够创造他自己的内在价值</li></ul></li><li>最终,我们击败了这个问题或者被这个问题击败,这就是胜利或者失败(Q5)<ul><li>Q5 游戏有输赢</li></ul></li></ul></li></ul><blockquote><ul><li>游戏是一种解决问题的活动 —— 缺少 Q1</li><li>游戏是一种以嬉戏的态度进行的解决问题的活动</li></ul></blockquote><h4 id="8-号透镜：解决的问题"><a href="#8-号透镜：解决的问题" class="headerlink" title="8 号透镜：解决的问题"></a>8 号透镜：解决的问题</h4><ul><li>8号透镜：解决的问题<ul><li>要使用这个透镜,需要思考一下游戏中的问题。由于每个游戏都有一些等待解决的问题,在你的游戏中,玩家需要解决那些问题才能在游戏中获胜。问你自己这几个问题：<ul><li>我的游戏要求玩家解决哪些问题?</li><li>是否有一些隐藏的问题作为玩法的一部分出现?</li><li>在我的游戏中,怎样产生新的问题来对玩家保持吸引力?</li></ul></li></ul></li></ul><h3 id="我们努力的成果"><a href="#我们努力的成果" class="headerlink" title="我们努力的成果"></a>我们努力的成果</h3><ul><li>快乐是一种带有惊喜的满足感。</li><li>玩耍是一种满足好奇心的行为。</li><li>玩具是你玩耍的对象。</li><li>优秀的玩具是一个能够带来乐趣的物品。</li><li>游戏是一种以嬉戏的态度进行的解决问题的活动。</li></ul><blockquote><p>定义这些属于最终的目的是获得新的视角——这些视角才是我们努力的成果，而不是定义本身</p></blockquote><blockquote><p>我们无法在洞悉生命本身的全部事实之前了解玩乐的全部事实。 一雷曼和威蒂(Lehman and Witty)</p></blockquote><hr><h2 id="第五章-游戏由元素构成"><a href="#第五章-游戏由元素构成" class="headerlink" title="第五章 游戏由元素构成"></a>第五章 游戏由元素构成</h2><ul><li><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210813200614.png" style="zoom: 50%;" /></li></ul><h3 id="什么组成了小游戏"><a href="#什么组成了小游戏" class="headerlink" title="什么组成了小游戏"></a>什么组成了小游戏</h3><h3 id="四种基本元素"><a href="#四种基本元素" class="headerlink" title="四种基本元素"></a>四种基本元素</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210813200747.png" style="zoom:67%;" /><ol><li>机制<ul><li>定义<ul><li>游戏中的过程和规则</li><li>机制描述了玩家怎样才能完成你的游戏目标，当他们尝试时，会发生什么。</li></ul></li><li>对比<ul><li>线性体验（小说、电影）并不包含机制，是机制让游戏成为了游戏</li></ul></li><li>与其他元素的关系<ul><li>当你选择了一系列对玩法有重要作用的机制时，需要选择技术来支持；需要选择美学来呈现；需要故事来让（有时很奇怪）机制吸引玩家</li></ul></li></ul></li><li>故事<ul><li>定义<ul><li>是游戏中事件展开的顺序</li><li>可能是线性/预先设定的；也可能是有分支/随机发生的</li></ul></li><li>与其他元素的关系<ul><li>当想通过游戏讲述故事</li><li>需要合适的机制来推动故事发展，让故事浮出水面</li><li>通过美学来加强故事表现力</li><li>通过技术来配合游戏中将要出现的特定故事</li></ul></li></ul></li><li>美学<ul><li>定义<ul><li>是游戏的外观、声音、气味、味道和感觉</li><li>对玩家体验有最直接影响，因而是游戏设计中非常重要的一个方面</li></ul></li><li>与其他元素的关系<ul><li>如果想让玩家体验到特定的外观、语音并让玩家沉浸其中</li><li>需要选择技术，不仅能够将美学表达出来，而且能够放大它们</li><li>需要选择一种机制让玩家们感受到游戏世界中的美学已经被确定了</li><li>需要一个有一系列事件的故事让美学在合适的时机凸显出来，展现出最强的影响力</li><li>美学能够强化其他游戏元素，创造一个更有纪念意义的体验</li></ul></li></ul></li><li>技术<ul><li>定义<ul><li>不是特指高科技</li><li>对于任何让你游戏实现的材质和交互，就像纸和铅笔，塑料原型或者高能激光一样，你选择的技术英爱能让你的游戏完成特定目标，并禁止它完成其他事情</li></ul></li><li>与其他元素的关系<ul><li>技术从本质上来讲是一种媒介</li><li>美学通过它展现</li><li>机制通过它产生作用</li><li>故事通过它被讲述</li></ul></li></ul></li></ol><blockquote><p>没有任何一种元素比其他的更重要</p></blockquote><h4 id="9-号透镜：四种元素"><a href="#9-号透镜：四种元素" class="headerlink" title="9 号透镜：四种元素"></a>9 号透镜：四种元素</h4><ul><li><p>9号透镜:四种元素</p><ul><li>要使用这个透镜,观察你的游戏实际上是由什么构成的,单独考虑各种元素然后将它们统一看待,问你自己这几个问题:<ul><li>我的游戏设计使用了全部的四种元素吗?</li><li>我的设计能够通过增强一种或者多种分类的元素来获得提高吗?</li><li>四种元素是否和谐,互相作用并向同一个主题努力?</li></ul></li></ul></li><li><p>例子</p><ul><li>太空侵入者<ul><li>技术:<ul><li>所有的新游戏在某种程度上都有所革新。《太空入侵者》背后的技术是为这款游戏量身定做的。这是第一款允许玩家与不断逼近的军队战斗的视频游戏。这个设计只有通过为它特地定制的主板才可以实现。通过这项技术,一系列新的游戏机制能够展现出来。这项技术也为这个目的而产生。</li></ul></li><li>机制: <ul><li>《太空入侵者》的游戏机制是崭新的,非常刺激。更重要的是,这很有趣并且是平衡的。玩家不仅能与外星人互相射击,还能躲在可被摧毁的盾牌之后(玩家自己也可以选择摧毁) 。不仅如此,通过设计神秘的飞碟,玩家还能获得额外的分数奖励。没有时间限制,因为游戏能够通过2种方式结束:玩家的飞船被外星人摧毁,或者外星人抵达玩家的星球。外星人靠得越近,就越容易射击,但是分数也越低。远处的外星人拥有更高的分数。另一个有趣的机制是,你每击落48个外星人,外星人的入侵就会加速。这带来了兴奋感,让有趣的故事体现出来。从根本上说, 《太空入侵者》背后的机制在当时十分坚固、平衡,而充满了革新。</li></ul></li><li>故事:<ul><li>这个游戏不需要故事。它本可以是个抽象的游戏,玩家操纵三角形向方块射击。但是故事能够让游戏更加令人兴奋并且更容易理解。《太空入侵者》的故事最初并不是一个关于外星人入侵的故事。它原本是这样一个游戏,你向逼近的人类军队开火。据说太东公司认为这会传达一种不好的信息,所以故事就改变了。一个关于外星人的新故事会更有效,理由如下:<ul><li>市面上已经发布了一些战争主题的游戏(例如, 1976年发布的《海狼》 (Sea Wolf) ) ,但当时关于外太空战争的游戏却十分新颖。</li><li>一些人对于在游戏中向人类射击感到恶心(1976年发布的《死亡竞速》 (Death Race)已经让暴力成为了视频游戏中的敏感问题)</li><li>高科技的电脑绘图技术让他们能够创造未来主题。</li><li>进攻的战士需要在地上跑步,这意味着游戏必须有一个从上至下的视角。《太空入侵者》给你这样一种感觉:外星人正在向你的行星表面降落,你正在朝上向他们射击。从某种程度上,悬停飞行的外星人是可信的,并让这个故事更有戏剧性。如果他们降落了,我们的末日就到了。故事的改变带来了摄像视角的改变。这对美术的变化也是戏剧性的。</li></ul></li></ul></li><li>美学:<ul><li>有人嘲笑它的视觉表现看起来很原始。但是设计师在游戏中设计了许多细节。外星人并不完全相同,他们有3种不同的设计,每一种都拥有不同的分数。他们有2帧效果不错的行进动画。它原本并不能显示颜色-但一种基本技术的改变解决了这个问题!既然玩家被限制在屏幕的底部,外星人在中部而飞碟在顶部,设计师设置了透明的彩色塑料条来分割屏幕,你地飞船和护盾是绿色的,外星人是白色的,飞碟是红色的。因为游戏的机制极大的增强了美术表现,这改变了游戏中的技术。声音是美学中一个重要的组成部分。行进的入侵者会产生一种心跳声。当它们加速时,心跳声也会加速,让玩家觉得身临其境。游戏中还有其他音效帮助讲述这个故事。最有纪念意义的是,当你的飞船被外星人的导弹击中时,会有惩罚性的嗡嗡声。但不是所有的美学都被禁锢在游戏本身里面,在《外星人入侵者》的街机筐体上,有一个引人注目的招贴画,简单地表现了外星人入侵者的故事。</li></ul></li><li>《太空入侵者》的成功的关键在一定程度上可以归功于这四种基本元素,它们都向同一个目标努力-让玩家体验到与外星人之间绚丽的太空战斗。每一种元素会兼顾其他的元素,一种元素的不足会激发设计师的灵感来调整其他元素。在通过元素四分透镜看待你的设计时,你需要拥有一些敏锐的洞察力。</li></ul></li></ul></li></ul><h3 id="皮肤与骨骼"><a href="#皮肤与骨骼" class="headerlink" title="皮肤与骨骼"></a>皮肤与骨骼</h3><ul><li><p>游戏的皮肤</p><ul><li>玩家体验</li></ul></li><li><p>游戏的骨骼</p><ul><li>组成游戏的元素</li></ul></li><li><p>游戏设计中的巨大挑战</p><ul><li>在理解元素及其关系是如何产生体验的同时感受游戏体验</li><li>你必须同时看到皮肤和骨骼<ul><li>如果只专注于皮肤<ul><li>会思考体验的感受</li><li>却不理解为什么会有这样的感受或者怎样提高这种感受</li></ul></li><li>如果只关注骨骼<ul><li>可能让一个游戏结构在理论上十分完美</li><li>而在实践中十分糟糕</li></ul></li><li>同时专注于这两件事<ul><li>就能在看到游戏运行的方式的同时感受到游戏体验的力量</li></ul></li></ul></li></ul></li></ul><h4 id="10-号透镜：全息设计"><a href="#10-号透镜：全息设计" class="headerlink" title="10 号透镜：全息设计"></a>10 号透镜：全息设计</h4><ul><li>10号透镜:全息设计<ul><li>要使用这个透镜,你必须一次性看到游戏的全部:四种元素和玩家体验,以及它们是怎样关联起来的。你可以把注意力从皮肤转移到骨骼再到皮肤,但更好的方法是全息观察游戏和体验。</li><li>问你自己这几个问题：<ul><li>游戏中的哪一种元素产生了令人享受的体验?</li><li>游戏中的哪一种元素会让玩家在体验中分心?</li><li>怎样改变游戏元素来提高游戏体验?</li></ul></li></ul></li></ul><hr><h2 id="第六章-元素支撑起主题"><a href="#第六章-元素支撑起主题" class="headerlink" title="第六章 元素支撑起主题"></a>第六章 元素支撑起主题</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210813203012.png" style="zoom:50%;" /><blockquote><ul><li>一部伟大的著作必然有一个伟大的主题。—— 赫尔曼·梅尔維尔</li></ul></blockquote><h3 id="微不足道的游戏"><a href="#微不足道的游戏" class="headerlink" title="微不足道的游戏"></a>微不足道的游戏</h3><ul><li><p>痛苦的现实</p><ul><li>在许多人的观念中，游戏只是一种毫无意义的消遣活动</li><li>一些人认为游戏，尤其是电子游戏，不可能具有深刻的意义，因为它们是粗制滥造的<ul><li>如 20 世纪初对于电影的争论</li><li>媒体技术的更新会让这种争论烟消云散</li></ul></li></ul></li><li><p>游戏的问题在于它是在最近才作为不严肃的表达媒介产生的。</p></li><li><p>我们的目标不是艺术化的表达，而是创造伟大的体验。</p></li></ul><h3 id="统一主题"><a href="#统一主题" class="headerlink" title="统一主题"></a>统一主题</h3><blockquote><p>如果你的设计围绕了一个单一的主题,那么它最大的优势就是<strong>游戏中的所有元素将互相强化,因为它们向着一个共同的目标发挥作用</strong>。在你制作游戏的过程中形成主题是再好不过的。你越快确定一个主题,接下来的制作将会越简单,因为你能够用一个简单的方式来<strong>决定哪些元素应该或者不该出现在你的游戏中</strong>:如果这个元素能够强化主题,就留下,反之就从游戏中去掉。</p></blockquote><ul><li><p>利用主题增强游戏体验的步骤</p><ul><li>步骤一<ul><li>确定你的主题是什么</li></ul></li><li>步骤二<ul><li>采用所有可能的方法来强化这个主题</li></ul></li></ul></li><li><p>什么是主题</p><ul><li>主题就是你的游戏是关于什么的<ul><li>这是一种能把整个游戏联系起来的创意——一种所有元素都必须支撑的创意</li></ul></li><li>大多数游戏的主题都基于体验<ul><li>设计的目标是给玩家传达必要的体验</li></ul></li></ul></li></ul><ul><li>例子<ul><li>大象<ul><li>设计师里奇·戈尔德(Rich Gold)在他的著作《丰饶》 (The Plenitude)中阐述了一个确定主题的简单案例。<ul><li>当他还是个孩子时,他拿起了一本关于大象的书。这本书的想法很简单:给孩子们传达一种体验,让他们能够理解大象是什么。在某种意义上,你会说这个主题就是“大象是什么?”那么,步骤1已经完成了。这把我们带到了步骤2:采用所有可能的方法来强化这个主题。作者很明显地这么做了-这本书包含了关于大象的各种各样的问题和图片。另外,他们把整本书包括封面和内页都裁剪为大象的形状。在每一次翻页中,你都需要寻找机会用更聪明和难以预期的方式来强化你的主题。</li></ul></li></ul></li><li>加勒比海盗：海盗宝藏之战<ul><li>让我们给出一个更详细的案例,这个案例是基于一个我为迪士尼制作的虚拟现实的游戏,它的名字叫作《加勒比海盗:海盗宝藏之战》 (Pirates of the Caribbean: Battle for the Buccaneer Gold) 。<ul><li>我们的团队(迪士尼VR工作室)被赋予了一项任务:为广受欢迎的加勒比海盗主题公园中的游乐设施制作一个交互改编的版本,让它可以出现在所有的迪士尼公园中。我们知道要把 它放入一个计算机增强虚拟环境中(Computer Augmented Virtual Environment,CAVE) ,这是一个位于迪士尼探索世界(迪士尼世界中的虚拟现实中心)中的带有3D投射的小房间,体验大约需要持续五分钟,但我们还没有设定故事线或者特定的游戏目标。</li><li>主题的确定<ul><li>主题开端：主题的吸引力将是关于海盗的</li><li>想要用哪种视角来看待海盗？<ul><li>可能的创意<ul><li>一步关于海盗的历史纪录片</li><li>一场海盗船之间的海战</li><li>一起搜寻海盗财宝的行动</li><li>海盗们是必须被打败的坏人</li></ul></li><li>艰难探索<ul><li>加勒比海盗的游乐设施并不是关于海盗本身，而是关于海盗的生活</li><li>整个游乐设施的目标就是满足人们的幻想：把社会规则泡在一边，开始成为一名真正的海盗！</li></ul></li><li>最终定题<ul><li>这不是历史的再现</li><li>也不是一个关于击败海盗的故事</li><li>而是在每个人内心中涌动的，成为海盗之梦</li></ul></li><li>主题<ul><li>海盗梦</li></ul></li></ul></li></ul></li><li>采用所有可能的方法来强化这个主题<ul><li>CAVE外形:<ul><li>过去我们通常使用正方形或六边形的CAVE。但这一次为了适合模拟一条海盗船,我们创造了一个全新的、带有四块屏幕的CAVE.</li></ul></li><li>立体投影:<ul><li>不是每个CAVE体验都会使用立体投影。但是我们选择这么做,因为立体投影能够带来纵深感。让你的眼睛聚焦于远方能够帮助你产生海上的感觉。</li></ul></li><li>定制的3D眼镜:<ul><li>许多剧院使用现成的3D眼镜。这种眼镜在侧边有遮挡物,会在看电影的时候分散人们的注意力。我们知道一个人的运动感在很大程度上会被周边的视野影响,所以这种遮挡物就是个问题了-由于玩家们无法获得足够的航海感,主题对他们的影响就减少了。我们与制造商达成了协议,定制了不带遮挡的3D眼镜。</li></ul></li><li>运动平台:<ul><li>我们想要让玩家感觉身处摇晃的船只上,一个运动平台看起来是个好主意,但是应该选用哪种类型呢?最终我们定制了一个充气的平台,因为它很像一艘船。</li></ul></li><li>操作界面:<ul><li>海盗梦的一部分是驾驶海盗船,而另一部分是发射大炮。原本我们能够使用控制手柄或者其他现成的硬件设施,但与主题并不搭配。最后,我们用舵轮驱动整艘船只,玩家能够操作一个真实的金属大炮瞄准和射击。</li></ul></li><li>视觉表现:<ul><li>我们需要把每个物体都变得漂亮。游乐设施的特性是一种“超现实”的外观,这完美地适合我们的主题。我们使用高端的图像硬件、大量的纹理和模型来完成相似的外观。</li></ul></li><li>音乐:<ul><li>尽管有些麻烦,我们获得了使用游乐设施中音乐的许可。它能够完美地衬托出主题并用一种怀旧的方式把游戏与游乐设施联系起来。</li></ul></li><li>音效:<ul><li>我们的音效设计师定制了一套包含十个扬声器的音效系统,这个系统能够从任意一个方向播放声音,让你感觉仿佛就在大海之上。一些扬声器的设计为只播放大炮爆炸声,它们被精确地设置在距离船只合适的位置上。这样大炮的音波就可以震撼你,你不仅能听到而且能感受到大炮的轰鸣。</li></ul></li><li>自由感:<ul><li>海盗是自由的代表。我们把游戏机制设计为让玩家能够航行到他们选择的任何海域,同时保证玩家获得兴奋的体验。我们将在第18章《空间控制》中详细讨论如何完成这一点。</li></ul></li><li>死人不会泄密:<ul><li>在游戏中处理死亡是一大难题。一些人建议既然这是个电子游戏,我们应该像传统的电子游戏一样处理这个问题:如果你死了,就会有一些惩罚,然后你就可以再次复活回归到游戏中。但但这并不适合海盗梦这样的主题-在海盗梦中,你不会死。即使你死了,也会以一个戏剧性的方式离开,而且你无法复活。更进一步地说,既然戏剧性是海盗梦的一部分,我们就要努力尝试为我们的五分钟体验保持戏剧兴趣曲线(将在第16章解释) 。如果玩家在游戏过程中突然死亡,就会毁了这种体验。我们的解决方案是让玩家们毫发无损地通过大部分的游戏,但是如果他们在体验过程中受到了太多的攻击,在最终的战斗结束时,他们的船只就会以戏剧性的方式沉没。虽然这打破了电子游戏的传统,但主题显然比传统更重要。</li></ul></li><li>宝藏:<ul><li>收集各种各样的部落宝藏是海盗梦的基本组成部分。不幸的是,在电子游戏中很难渲染出大堆真实的金子。我们使用了一项特殊的技术,可以让手绘的平面财宝看起来像是固态的三维物体,并把这些财宝放置在船的甲板上。</li></ul></li><li>灯光:<ul><li>我们需要点亮玩家所在的房间。怎样才能把灯光与主题结合起来?我们在灯上使用了特殊的滤镜,让光线上看起来好像是从水中反射而出的。</li></ul></li><li>摆放物品的地方:<ul><li>在人们玩游戏的时候,他们需要一个地方来放置他们的背包、钱包等。我们原本只需要制作一个架子,但我们没有这么做,而是用渔网制作了一个包,渔网看起来仿佛本身就属于这艘船。</li></ul></li><li>空调：<ul><li>场地上主管器材的人问我们,是否考虑过在游戏房间的何处放置空调的出风口。我们的第一想法是“谁在意呢? ”但是我们之后想到了“我们怎样利用空调加强我们的主题? ”最后,出风口被放置在船的前端向后吹风,所以玩家们会感觉到微风拂过,就像他们在船上航行一样</li></ul></li><li>蓝胡子的眼睛:<ul><li>我们无法找到让3D眼镜符合主题的好方法。我们试验过让它们看起来像是海盗帽和头巾,但效果并不好。一个机智的绅士提议道应该让玩家都带上眼罩,这样3D效果就没必要了。最终,我们放弃了这些想法。当游戏被装载进迪士尼世界时,我们亲自去尝试了一下。让我们惊讶的是,带领我们去甲板的角色成员预先声明道:“在登上甲板之前,你们必须戴上蓝胡子的眼睛。”这太令人惊奇了,因为这并不包含在给角色成员的“官方剧本”中。游乐设施的工作人员弥补了我们的失败设计。这是个简单有效的方式把一个从我们手中逃脱的细节主题化。这也有力地说明了当你有一个很强的统一主题时,团队中的任何人都能够更加简便地做出贡献。</li></ul></li></ul></li></ul></li></ul></li></ul></li></ul><h4 id="11-号透镜：统一"><a href="#11-号透镜：统一" class="headerlink" title="11 号透镜：统一"></a>11 号透镜：统一</h4><ul><li>11号透镜:统一<ul><li>要使用这个透镜,就要尽可能地考虑这背后所有的原因。问你自己这几个问题：<ul><li><p>我的主题是什么?</p></li><li><p>我已经采用了所有可能的方法来强化这个主题吗?</p></li><li><p>统一透镜与9号透镜元素四分透镜很搭配。使用元素四分透镜从你的游戏中分割出元素,你就能够从统一主题的角度更方便地研究它们。</p></li></ul></li></ul></li></ul><h3 id="共鸣"><a href="#共鸣" class="headerlink" title="共鸣"></a>共鸣</h3><ul><li><p>最好的主题能够引起玩家的共鸣——这些主题能够触碰到玩家的内心深处</p></li><li><p>海盗梦</p><ul><li>一个有力的主题</li><li>因为每个人一度想要</li><li>在某种程度上，它与我们想要的自由欲望产生了共鸣——把我们从义务中解放出来，从担忧和关心中解放出来，让我们自由地做任何想做的事</li></ul></li><li><p>基于本质体验的主题和基于真相的主题</p><blockquote><p>当你设法触及某一共鸣性主题时,你就有了一些深刻而有力的东西——这些东西有一种真正的能力,能够让人们感动并给予他们一个卓越和革新的体验。我们之前讨论过的一些主题是基于体验的,传达一种本质的体验。当这种体验能够与玩家的幻想和欲望产生共鸣时,它就能迅速转变为对他们重要的体验。还有另外一种主题能够像基于体验的主题一样产生共鸣,有时甚至更加有力,这就是基于真相的主题。</p></blockquote></li><li><p>例子</p><ul><li>泰坦尼克号<ul><li>想一想电影《泰坦尼克号》。这部电影深深地打动了全世界的观众。为什么?</li><li>当然它拍摄得很好,有很棒的特效和甜蜜的(尽管有时过分感伤)爱情故事。但大多数电影都有这些元素。</li><li>特殊的是,电影中所有的元素都强化了一个深刻而能引起共鸣的主题。<ul><li>那么它的主题是什么?最初,你可能会认为它的主题就是泰坦尼克本身和它的悲剧事故。这当然是电影的一个重要组成部分。事实上,你可能争论说这是一个电影的主题之一,但并不是最重要的主题。</li><li>实际上最重要的主题不是基于体验的。相反的,它只是基于一个陈述,</li><li>我能够用一些像<strong>“爱情比生命更重要,比死亡更强大”</strong>这样的短语。</li><li>这是个有力的陈述,也是我们很多人在心中都深信不疑的陈述。</li><li>当然这不是一个科学真理,但对很多人来说,这是一个深埋心底,很少表达的个人真理。</li></ul></li><li>很多好莱坞的内部人员都不相信这个电影能够成功:因为观众们已经知道了电影的结局。但是你能找到一个比这艘会杀死几乎所有人的船更好的地方来讲述一个有着如此有力主题的故事吗?昂贵的特效不是毫无理由的——这些特效能够紧紧抓住主题的入口,我们一定觉得所有的都像是真的一样,就像我们身临其境,就像我们自己就要死了。</li></ul></li><li>魔女嘉莉<ul><li>史蒂芬·金(Stephen King)</li><li>他在写第二遍草稿时才意识到这是一个关于鲜血的小说<ul><li>不仅是恐怖电影的鲜血</li><li>而且是一种对鲜血的含义的探索<ul><li>从受伤到家庭羁绊到成年</li></ul></li><li>当他意识到这些时，他知道可以通过很多方式调整和强化这个故事</li></ul></li></ul></li><li>危机·遗产<ul><li>罗伯·达维奥(Rob Daviau)的奇幻桌面游戏《危机:遗产》 (Risk:Legacy)就是一个优秀的基于真相主题的案例。</li><li>在这个不同寻常的游戏中,达维奥完成了一些世界上其他桌面游戏从未有过的尝试——他创造了一种游戏机制,比如当你玩的时候,你的抉择总会永久地改变游戏。</li><li>这个规则坚持让你用不可移动的贴纸改变游戏板,用永久的马克笔在游戏板上书写来主张领地,扯掉和丢弃游戏卡片,甚至对游戏规则书做出永久性的改变。这些不同寻常的游戏机制很新颖,让人着迷,但是更重要的是,它们都强化了游戏的中心主题:“战争改变了世界。”</li></ul></li><li>海格力斯 hercules 的故事<ul><li>故事被再传播时会有偏差，但这些故事都有一个共同的元素。在每个故事中，海格力斯都非常高尚，所以他战胜了死亡。这个真理如此神课以至于它成为了很多信仰的核心：<strong>如果你足够高尚，你就能战胜死亡。</strong></li><li>迪士尼动画家在海格力斯和冥界之主哈迪斯 hades 冲突中体现了这个主题</li><li>我们继续把这个主题放到游戏中<ul><li>大部分故事发生在冥界</li><li>直到最后，你成功进入生者世界，并在空中与哈德斯战斗</li></ul></li></ul></li><li>卡通城 Online<ul><li>迪士尼首款大型多人游戏</li><li>无法确定主题<ul><li>卡通城虽然强大，但并不在任何一个地方有明确定义<ul><li>每个人对卡通城都有一个先入为主的印象——好像他们知道一直有一个特殊的地方，当卡通角色不在屏幕上时，都住在那里</li><li>这个事实有点令人惊悚</li><li>我们正在触及一些基本和隐藏的要素</li></ul></li><li>理想中卡通城样子的列表<ol><li>与朋友们开心地玩耍<ul><li>适合在线网络游戏</li></ul></li><li>逃离现实生活<ul><li>有很多层含义——卡通是一种优秀的逃离现实的形式</li></ul></li><li>天真的和超然的<ul><li>卡通城比现实世界更单纯，你在卡通城也比在现实世界中更强大</li></ul></li></ol></li><li>所有的这些都帮助我们阐明了我们想要在游戏中看到的事物,但是没有一个能告诉我们一个明确的主题。这些看起来更像是子主题。在某种程度上,我们意识到这三个特点一起增强了其中一些我们已经在第4章中讨论过的细节:<strong>玩</strong>。玩是关于获得快乐并与你的朋友们逃离现实,一个游戏世界比现实世界更单纯,而且你有更多的力量。但我们并不认为玩本身能够作为一个有力的主题。我们需要一些更加有冲突的元素。这就引导我们找到了<strong>游戏本质的反面:工作</strong>。这就很清楚-“<strong>工作vs.玩</strong>”将会是个强有力的主题。更详细的描述是, “<strong>工作试图消灭玩,但玩耍必须生存</strong>”,这就是我们找到的基于真理的主题。就像我们在第4章做的那样,<strong>把工作和玩换成“奴役”和“自由”,这个主题的力量就更加清晰了</strong>。这感觉就真的对了。我们想要创造一个孩子们和他们的父母能够一起玩的游戏,他们能够通过玩联系在一起——还有比探索他们生活中的主要冲突更好玩的事情吗?我们就这么做了。</li><li>《卡通城Online》就是这样一个故事:机器人管理员(齿轮们)想要把彩色的卡通城变为昏暗的办公室。卡通人物联合起来用笑话和恶作剧反抗这些齿轮,齿轮们则用办公用品反击。这个故事很奇怪,以至于它在公司中吸引了一些注意力,但我们对这个故事的成功有信心,因为我们知道它表达的主题能够引起观众的共鸣。</li></ul></li></ul></li></ul></li></ul><blockquote><ul><li>共鸣主题能把你的作品升华为艺术。艺术家会引领你进入无法独自到达的领域，而主题就是让你前行的工具。</li><li>当你找到一个深刻的共鸣主题，就值得你好好利用它。</li><li>这些主题中一些是基于体验的</li><li>另一些是基于真相的</li></ul></blockquote><h4 id="12-号透镜：共鸣"><a href="#12-号透镜：共鸣" class="headerlink" title="12 号透镜：共鸣"></a>12 号透镜：共鸣</h4><ul><li><p>12号透镜:共鸣</p><ul><li><p>要使用这个透镜,你必须去寻找隐藏的力量,问你自己这几个问题:</p><ul><li>在我的游戏中,能感觉到哪些有力的或者特殊的元素?</li><li>将我的游戏描述给他人听时,那些创意能让他们真的兴奋吗?</li><li>如果没有任何限制,这个游戏将会变成怎样?</li><li>我对这个游戏的方向有特定的直觉,那到底是什么在驱动这种直觉呢?</li></ul></li><li><p>共鸣透镜是一件安静美妙的乐器,也是一件倾听自己和他人的工具。我们把重要的事物都埋藏在内心的深处,当某些东西引起了它们的共鸣时,就会触动我们的内心。事实上这些隐藏的特性给了它们力量,也让我们难以寻找。</p></li></ul></li></ul><blockquote><p>共鸣主题能够为你的作品增加巨大的力量。但即使没有引发共鸣的特性，一个统一的主题依然能欧股通过集中的体验强化游戏</p></blockquote><hr><h2 id="第七章-游戏始于一个创意"><a href="#第七章-游戏始于一个创意" class="headerlink" title="第七章 游戏始于一个创意"></a>第七章 游戏始于一个创意</h2><h3 id="灵感"><a href="#灵感" class="headerlink" title="灵感"></a>灵感</h3><blockquote><p>秘密就是：不要从其他杂技演员那里寻找灵感——到其他地方去看看。</p></blockquote><h4 id="13-号透镜：无尽灵感"><a href="#13-号透镜：无尽灵感" class="headerlink" title="13 号透镜：无尽灵感"></a>13 号透镜：无尽灵感</h4><ul><li>13 号透镜：无尽灵感<ul><li>当你知道如何倾听时，每个人都可以成为大师。——拉姆·达斯（Ram Dass）</li><li>要使用这个透镜，不要思考你的游戏，也不要观察那些看起来差不多的游戏。正相反，你要四处看看。</li><li>问你自己这几个问题<ul><li>我的生活中有怎样的体验想要与他人分享？</li><li>有哪些小技巧可以让我捕捉到体验的本质，并把它纳入我的游戏中？</li></ul></li><li>使用这个透镜需要开放的心态和强大的想象力。你需要了解自己的感受，观察周围发生的一切事物。你必须尝试一些不可能的事——一场比武不可能用掷骰子的方式来获得兴奋感，一个电子游戏也无法让玩家害怕黑暗。使用这个透镜寻找一些非游戏体验，为你的游戏提供灵感。四个不同的元素（技术、机制、故事和美学）能够被一个单纯的灵感组合起来，也能构筑不同的灵感，你应该将它们混合起来创造一些崭新的游戏。当你以现实生活为基础作为方向指导你的决定时，你的体验将会获得无可匹敌的力量和独一无二的特点。</li><li>这个透镜与体验本质透镜（2 号透镜）能够结合起来。使用无尽灵感透镜来寻找美妙的体验，使用体验本质透镜将它们纳入你的游戏中。</li></ul></li></ul><p>灵感是最优秀的游戏背后隐藏的秘密之一。怎样才能将一个灵感变为一个伟大的游戏设计？</p><p>第一步就是承认你遇到了一个难题。</p><h3 id="陈述问题"><a href="#陈述问题" class="headerlink" title="陈述问题"></a>陈述问题</h3><p>设计的目的就是解决问题。想出创意之前，需要确定为什么要做这件事。好的问题描述能体现目标与约束。</p><blockquote><blockquote><p>“为什么”这件事实在是致命而重要</p></blockquote></blockquote><p>最初的问题描述可能是：</p><blockquote><p>怎样制作一款基于网页的，能让孩子们真正喜欢的游戏呢</p></blockquote><p>目标：孩子们真正喜欢的游戏<br>约束：web-based</p><p>这里其实并没有限定只能做游戏，所以可能需要用更宽泛的术语来重新描述问题：</p><blockquote><p>怎样才能创造出一种让孩子们喜欢的，基于网页的体验呢</p></blockquote><p>正确的问题描述很重要</p><ul><li>太宽泛：会想到不符合目标的设计</li><li>太狭窄：可能拒绝潜在的明智解决方案，因为认定只有特定类型解决方案才适用</li></ul><p>清晰陈述问题的优势：</p><ol><li>更广阔的的创造空间。</li><li>更清晰地评估。</li><li>更顺畅的交流。</li></ol><p>一个完整游戏设计将会覆盖所有四种基本元素：技术、机制、故事和美学。问题陈述往往会把你约束在一个或多个已确立元素之上。尝试陈述问题时，用四维度观点来检视陈述。</p><p>比如：</p><ol><li>怎样制作一个利用磁铁特性（机制限制）的有趣的桌面游戏（技术限制）</li><li>怎样制作一个能够讲述奇幻森林历险记（故事限制）的电子游戏（技术限制）</li><li>怎样制作一个感觉像超现实主义绘画（美学限制）的游戏</li><li>怎样改进俄罗斯方块（算是 故事限制吧？）</li></ol><p>把游戏看作问题的解决方案，这是一种有用的视角，也是 14 号透镜。</p><h4 id="14-号透镜：问题陈述"><a href="#14-号透镜：问题陈述" class="headerlink" title="14 号透镜：问题陈述"></a>14 号透镜：问题陈述</h4><p>要是用这个透镜，需要把你的游戏当做解决问题的方案。</p><p>问你自己这几个问题：</p><ul><li>我真正想要解决什么问题？</li><li>我是否做过一些与真正目标无关的游戏设定？</li><li>游戏是不是这个问题最好的解决方案？为什么？</li><li>我将怎样分辨出问题是否已经解决了？</li></ul><p>为游戏定义好约束条件和目标，并把这些作为问题陈述，这能帮助你更快地进入清晰的游戏设计中。</p><h3 id="如何睡眠"><a href="#如何睡眠" class="headerlink" title="如何睡眠"></a>如何睡眠</h3><blockquote><p>睡眠是产生创意的重要组成部分——优秀的设计师会最大化地利用睡眠的力量。</p></blockquote><p>接下来的部分（达利的秘密 3）是从超现实主义画家萨尔瓦多·达利（Salvador Dali）的书《五十个魔法技术的秘密》（Fifty Secrets of Magic Craftsmanship）中的摘录：</p><blockquote><p>利用睡眠的关键是你必须坐在一张扶手椅上，最好是西班牙风格的。让你的头后仰，靠在拉伸的皮革背面。把你的双手放置在椅子的扶手处。让你自己进入一个完全放松的状态。<br>在这种姿势下，你必须用左手的拇指与食指抓住一把沉重的钥匙并保持悬空的状态。在钥匙的下方事先放置好一个翻过来盘子。完成这些准备工作后，你只要等待午间的睡意轻轻袭来，仿佛你身体的方糖中凝结出了一滴精神上的美酒。钥匙从你的指尖滑落时，你会被掉落到盘子上的声音惊醒。你同样也能肯定，这个小憩在你无法获得真正的睡眠时是完全足够的，因为你知道通过这样的休息，你的整个身心都再次恢复了活力。</p></blockquote><h4 id="你的无声伙伴"><a href="#你的无声伙伴" class="headerlink" title="你的无声伙伴"></a>你的无声伙伴</h4><blockquote><p>我们被自己的潜意识迷惑和纠缠，以至于忘记了很久以来的事实，上帝主要在睡梦与幻觉中出现。 —— 卡尔·荣格（Carl Jung）</p></blockquote><blockquote><blockquote><p>确实，这些看似无意义的放松瞬间很多时候是创意与灵感真正涌出的时刻。</p></blockquote></blockquote><p>在梦中解决重要问题的实例：化学家凯库勒（Friedrich Von Kekule）在梦中想出了苯环的结构。</p><p>在某种层面上，潜意识就是我们的一部分：但在另一种层面上，它看起来又是分离的。一些人很不喜欢把潜意识当做另一个人的观点。<br>大多数人的创造性潜意识都有一些共同的特点：</p><ul><li>无法交谈。或者至少不选择用语言交流。它也不会通过文字交流，而倾向于通过想象力和情感交流。</li><li>冲动。不会提前做好规划，想要活在当下。</li><li>情绪化。会扫过你所有的感受，潜意识对事物的感受看起来比显意识（用荣格的话来说应该是自我）更加深刻和强大</li><li>贪玩。总是充满好奇心，喜欢玩文字游戏和恶作剧</li><li>荒谬的。不被逻辑和理性约束，潜意识带来的想法经常毫无意义。</li></ul><p>你如果正在做关于游戏的头脑风暴，你无声的伙伴会比你更强大！</p><h5 id="潜意识建议"><a href="#潜意识建议" class="headerlink" title="潜意识建议"></a>潜意识建议</h5><ol><li>潜意识建议 1：给予关注</li></ol><blockquote><p>“我们应该留意梦境吗？”约瑟夫问到，“我们能解读它们吗？”<br>大师看着他的眼睛，说到：“我们应该留意任何事，因为我们可以解读所有的事。” ——赫尔曼·海塞，《玻璃念珠游戏》<br>（Herman Hesse, The Glass Bead Game）</p></blockquote><p>与往常一样，倾听是关键，这一次是倾听你自己（的一部分）。<br>潜意识和其他人没有区别：若常被忽视，它会停止提供建议；若你习惯于倾听它，认真考虑它的想法，当它为你提供了一个优秀创意时感谢它，它就会开始给予更多更好的建议。</p><p>怎样倾听？<br>对你的思想、你的感受、你的情感以及你的梦境给予更多的关注，因为这些都是潜意识与你交流的方式。你对潜意识所表达的关注越多，它就会为你完成越多的工作。</p><blockquote><blockquote><p>最近的梦确实多了起来，谢谢你啊无声的朋友。</p></blockquote></blockquote><ol start="2"><li>潜意识建议 2：记录你的创意</li></ol><p>记下你的所有创意，会发生两件事。</p><ul><li>如果不记下来，你会把许多创意统统忘掉</li><li>你会清空你的大脑来思考其他事情</li></ul><blockquote><blockquote><p>别忘了重要的 5 ± 2 原则，认知容量，也就是人脑中能暂存的东西可是有限的 (￣▽￣)”</p></blockquote></blockquote><p>日本人把“记下想法从而清空大脑”这一过程称为“mizu no kokoro”，经常被翻译为“如水一般清澈的思维”。</p><p>便宜的录音机或录音应用也能发挥作用</p><blockquote><blockquote><p>但后面还得整理，可以的话还是直接记下来比较好。合适的手机软件或者随身带纸笔！</p></blockquote></blockquote><ol start="3"><li>潜意识建议 3：（明智地）满足它的欲望</li></ol><p>潜意识有其欲望，其中一些很原始。这些欲望看起来是它工作的一部分，就好像理性大脑的工作是决定哪些欲望可以被放心的满足和怎样去满足。</p><p>如果潜意识的某些欲望过于强烈，就会陷于其中。当它沉迷于此，就无法完成漂亮的创意工作了。</p><p>解决好那些让你分心的思想，它们可能来源于潜意识！<br>有选择地满足潜意识，不要听之任之。</p><ol start="4"><li>潜意识建议 4：睡眠</li></ol><blockquote><p>常识就是，晚上的难题在第二天早上会被解决，因为睡眠已经把它解决了。 —— 约翰·斯坦贝克（John Steinbeck）</p></blockquote><p>睡眠很重要，主要是为了大脑。</p><p>没有得到充足睡眠时，潜意识也会罢工。</p><ol start="5"><li>潜意识建议 5：尽力而为</li></ol><blockquote><p>那么现在，你必须开动你的脑筋，克制自己的活动，然后看看会出现怎样伟大的灵魂。 —— 拉尔夫·沃尔多·艾默生（Ralph Waldo Emerson）</p></blockquote><blockquote><p>我没有任何创意——它们准备好时才会让你知道。 —— 史蒂芬·莫法特（Stephen Moffat）</p></blockquote><p>到了嘴边的话说不出来？本来记得的东西突然想不起来了？放一放，一会儿自然会想起来。“自然”不是别的，是潜意识在帮你呢。</p><h4 id="个人关系"><a href="#个人关系" class="headerlink" title="个人关系"></a>个人关系</h4><p>每个人和潜意识的关系可能并不相同，重要的是找到适合自己的方法。<br>跟随直觉（被潜意识暗示）找到什么才是最有创造力的，然后不断尝试和实验。<br>探索吧！找到和潜意识的良好相处方式！</p><h3 id="十六个关键的头脑风暴建议"><a href="#十六个关键的头脑风暴建议" class="headerlink" title="十六个关键的头脑风暴建议"></a>十六个关键的头脑风暴建议</h3><blockquote><p>创造力就是为了那些不能再第一时间想到优秀创意的人准备的。—— 佚名</p></blockquote><ol><li>头脑风暴建议 1：记下答案</li></ol><p>记下来可以清空大脑，解放认知负载，让它更好的工作！为新创意腾出空间！</p><ol start="2"><li>头脑风暴建议 2：写字还是打字</li></ol><p>选择合适自己的就好</p><blockquote><blockquote><p>我觉得写在一张平面上（ipad 上也可以）其实效果会好一些</p></blockquote></blockquote><p>书中也写到他喜欢在没有线条的纸上书写，这样可以圈画，可以连线。最后再把有用的部分导入电脑。</p><ol start="3"><li>头脑风暴建议 3：草图</li></ol><p>不要怕画得不好，尽量尝试！<br>如果能生动表达创意，不仅会更容易记得，图画还会激发更多创意！</p><ol start="4"><li>头脑风暴建议 4：玩具</li></ol><p>选择一些和问题有关的玩具，再选一些无关玩具放到桌上！<br>玩具不只是通过外形，还通过触觉方式促进创造力<br>黏土！橡皮泥！为创意制作小小雕塑！</p><ol start="5"><li>头脑风暴建议 5：改变视角</li></ol><p>从另一个角度看待你的游戏。<br>不要只是坐在椅子上，试着站在椅子上！<br>尝试在在公交车上、海滩边、商场中，玩具店里头脑风暴！<br>任何能带来想象力或思考新事物的方法都值得一试——倒立！</p><ol start="6"><li>头脑风暴建议 6：沉浸自己</li></ol><p>已经陈述了自己的问题，现在将自己沉浸其中！<br>在商场中找到目标受众，他们在买什么？为什么？去偷听他们——他们在谈论什么？什么对他们很重要？你需要密切关注这些人。</p><p>你已经设定了一项技术了吗？学习关于它的一切——在你的墙上写满它的规则——找出它从未有人注意到的秘密。</p><p>你已经锁定了一个主题或故事线吗？找出其他相似的改变故事然后阅读他们。</p><p>你需要将一些古老的玩法机制推陈出新吗？找到所有运用这套机制的游戏，尽可能多地玩——还要玩一些不使用这套机制的游戏！</p><blockquote><blockquote><p>争取把以后家里的墙面做成可以写写画画的材质哈哈哈</p></blockquote></blockquote><ol start="7"><li>头脑风暴建议 7：开几个玩笑</li></ol><p>在头脑风暴过程中，一些笑话能够帮助你完成工作。<br>笑话能够放松我们的大脑，然后让我们从之前错过的角度看待事物，新角度就是新创意的源头！<br>笑话可能会让你们跑题，但要记得拉回正轨。</p><p>头脑风暴应该遵循一条规则：谁先跑题，就要负责将话题引回正轨。</p><ol start="8"><li>头脑风暴建议 8：不要节约</li></ol><p>头脑风暴不是节约的时候，不要让纸张和墨水成为创意的阻碍。</p><p>写大字！平铺纸面与想法！这样甚至可以有机会远距离地思考所有想法。</p><p>头脑风暴时需要做你认为感觉不错的事——任何你做的让你更有创造力的小事都能增加你想出伟大创意的机会。</p><p>找到合适自己的方式，找不到也不要纠结，不要忘了还有工作没有完成！</p><ol start="9"><li>头脑风暴建议 9：写在墙上</li></ol><p>墙上的方案可以让所有人能立刻看到</p><p>大的可以粘贴的纸也可以！（方便收纳，且易于复现）</p><blockquote><blockquote><p>刚说什么来着 (￣▽￣)”</p></blockquote></blockquote><ol start="10"><li>头脑风暴建议 10：空间记忆</li></ol><p>把创意放置在墙上的另一个理由是：我们对清单的记忆很糟糕，但我们对身边事物位置的记忆却很优秀。通过把围绕着你的创意放置在房间中，你能更清楚地记住它们的位置。</p><p>这很重要，因为你将要试着找到几十种创意之间的联系，你需要获得任何可能的帮助——尤其是如果要进行多个环节的头脑风暴。这样做的效果很显著。</p><ol start="11"><li>头脑风暴建议 11：记下所有东西</li></ol><blockquote><p>获得优秀创意的最佳方法就是先获得一大堆创意。 —— 莱纳斯·鲍林（Linus Pauling）</p></blockquote><p>已经有了钢笔、纸张、咖啡、玩具、黏土，所有你认为能让你富有创造力的东西。</p><p>写下一切觉得与问题隐隐相关的想法，愚蠢也无所谓！不要检查，写就完了！</p><ol start="12"><li>头脑风暴建议 12：为清单计数</li></ol><p>制作清单时，为它们标号，好处有二：</p><ol><li>让清单讨论起来更方便</li><li>标上数字后，清单条目就有了优先级</li></ol><p>有数字的清单在某种程度上看起来更重要，若是其中之一消失，会更容易让人察觉，这能让所有人更严肃地对待清单上的创意。</p><ol start="13"><li>头脑风暴建议 13：颠覆你的设定</li></ol><p>从设计师罗伯·达维奥（Rob Daviau）学到了这个建议</p><p>列出关于游戏的清单，包含认为假定正确的项目，如：</p><ul><li>假设游戏要在室内玩</li><li>假设玩家们将会看着屏幕</li><li>假设玩家只用一个手指触摸屏幕</li></ul><p>清单可能很长，一旦完成，浏览每一个条目，仔细思考如果这条假设是错的，游戏会怎样</p><p>大多情况，假设必须成立，但打破假设会给你带来深刻洞察力</p><ol start="14"><li>头脑风暴建议 14：组合和搭配分类</li></ol><p>一个帮助聚集创意的好办法：按照分类进行头脑风暴</p><p>四个基本元素（技术、美学、机制、故事）在这里很合适</p><p>假如决定为少女制作一款游戏，列出清单，开始互相组合搭配。一些清单如下：</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220529013236.png" style="zoom:25%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220529013303.png" style="zoom:25%;" /><p>一旦有了几份清单，自由组合搭配</p><ul><li>以类似俄罗斯方块的智能手机游戏</li><li>以动物为角色的医院主题游戏<br>有需要也可以设定其它分类</li></ul><ol start="15"><li>头脑风暴建议 15：自言自语</li></ol><p>独自进行头脑风暴时，有些人觉得自言自语很有帮助——大声说出一些事物比只在大脑中思考更实际。</p><p>找个合适地方，放心自言自语！</p><p>另一个技巧，如果在公共场合，假装打电话然后自言自语！</p><blockquote><blockquote><p>这也太搞笑了 </p></blockquote></blockquote><ol start="16"><li>头脑风暴建议 16：找一个搭档</li></ol><p>与其他人一起头脑风暴和自己单独头脑风暴完全不同<br>合适的头脑风暴搭档能为彼此创意互补</p><p>找一些人大声谈论，即使他们什么也没有说，有时也能让进展变得更快</p><p>一般来说，不多于四人的小团体最合适</p><p>记得限定头脑风暴范围</p><p>对于刚刚组建的团队，更好的解决方案可能是先独立进行头脑风暴，然后聚集在一起分享、交换和匹配创意</p><p>远离不好的（挑刺/偏好狭隘）头脑风暴搭档</p><h3 id="看看这些创意！接下来该怎么办"><a href="#看看这些创意！接下来该怎么办" class="headerlink" title="看看这些创意！接下来该怎么办"></a>看看这些创意！接下来该怎么办</h3><p>下一步是缩小宽泛的创意清单，用这些创意做一些有用的事</p><hr><h2 id="第八章-游戏通过迭代提高"><a href="#第八章-游戏通过迭代提高" class="headerlink" title="第八章 游戏通过迭代提高"></a>第八章 游戏通过迭代提高</h2><h3 id="选择创意"><a href="#选择创意" class="headerlink" title="选择创意"></a>选择创意</h3><blockquote><p>一个平淡的创意根本不算创意。——艾尔伯特·哈伯德</p></blockquote><p>面对一堆想法，迅速做出设计决定，坚持下去，然后立刻想一想这个决定的后果。</p><p>而当做出决策后意识到错误时，准备好推翻之前的决策。</p><blockquote><p>创意不是一个完好的瓷器，而是一次性纸杯——它很廉价，能够大量生产。如果有人得到了一个纸杯，去拿另一个就好了。</p></blockquote><blockquote><p>尽快确定一个创意比拖延更好——你将可能更快地做出好决定，而不是花费时间考虑潜在选择。不要沉迷于你的决定，当它并没有效果时，准备好推翻它。</p></blockquote><p>怎样选择？猜！</p><h3 id="八项测试"><a href="#八项测试" class="headerlink" title="八项测试"></a>八项测试</h3><p>你完成的设计方案必须通过八项测试或是过滤器。只有所有测试都通过，设计方案才算得上优秀。</p><ol><li>测试一：艺术冲动。<br>作为设计师，是否觉得这个游戏“感觉不错”。自己的直觉和团队直觉都很重要。<br>关键问题：这个游戏看起来不错吗？</li><li>测试二：人群特征<br>你的游戏有一群特定受众。需要考虑设计是否适合目标受众。<br>关键问题：我们的目标受众很喜欢这个游戏吗？</li><li>测试三：体验设计<br>为通过这项测试，需要尽一切努力创造良好体验，包括美学、兴趣曲线、共鸣主题和游戏平衡。游戏必须经得起书中的透镜的检验<br>关键问题：这个游戏设计得不错吗</li><li>革新<br>一个新游戏按理说需要包含一些玩家从未见到过的新内容<br>关键问题：这个游戏是否与众不同？</li><li>商业和市场<br>想要卖出游戏的设计师必须考虑商业现实，并将其融入游戏设计中。这带来了很多问题。<br>游戏主题和故事对玩家们具有吸引力吗？<br>游戏是否通俗易懂，一个玩家能否仅仅通过观看概述就能明白这个游戏的内容？<br>消费者对这种题材的游戏有怎样的期待？<br>市场上，这个游戏与相似游戏比有哪些特点？<br>是否开发成本过高导致无法盈利？<br>关键问题：这个问题能够盈利吗？</li><li>工程<br>即技术可行性。<br>关键问题：这个游戏在技术上是否具备可行性？</li><li>社交/社区<br>有时候，一个好玩的游戏可能并不足够。一些设计目标可能需要很强的社交元素，迅速蔓延的病毒式传播，或者围绕游戏形成社区。<br>关键问题：这个游戏完成我们的社交或社区目标了吗？</li><li>玩法测试<br>当游戏开发到可玩程度，必须通过玩法测试。必须尽可能把游戏开发到可玩程度，只有实际看到游戏表现，才知道需要做出哪些重大改变。随着对游戏机制和目标受众的心理感受的了解加深，这个过程中测试目标与游戏都会不断迭代。<br>关键问题：游戏测试者是否享受这个游戏？</li></ol><p>测试过程中对某些测试预期的调整是允许的，如改变目标受众。关键是要想办法通过所有测试。</p><p>当你选择一个初始创意时，重要的是选择创意中最容易被修改和塑造的那个，这样它更容易在测试中存活。</p><h4 id="15-号透镜：八项测试"><a href="#15-号透镜：八项测试" class="headerlink" title="15 号透镜：八项测试"></a>15 号透镜：八项测试</h4><p>要使用这个透镜，你的设计必须满足许多约束条件。只有当它通过了八项测试而不需要修改时，你的设计才算完成。</p><p>问你自己八个关键问题：</p><ol><li>这个游戏看起来不错吗?</li><li>我们的目标受众喜欢这个游戏吗?</li><li>这个游戏设计得不错吗?</li><li>这个游戏是否与众不同?</li><li>这个游戏能够盈利吗?</li><li>这个游戏在技术上是否具备可行性?</li><li>这个游戏完成我们的社交或者社区目标了吗?</li><li>游戏测试者是否享受这个游戏?</li></ol><p>在某些情况下，还需要考虑一些其他的测试。<br>如一个教育游戏必须回答“这个游戏达到了它的教育目标了吗?”。如果你的设计需要更多的测试，不要遗漏它们。</p><h3 id="迭代规则"><a href="#迭代规则" class="headerlink" title="迭代规则"></a>迭代规则</h3><p>思考并选择创意后，下一步是尝试将其实现。</p><p>对于简单游戏，可以快速构建原型，并进行玩法测试。<br>但若是无法在一两小时内构建可玩原型，要谨慎。游戏设计和开发过程必须是迭代/循环的。</p><p>期待游戏做完时就是最好的状态是一种天真想法。</p><blockquote><p>迭代规则：你的游戏测试和改进的次数越多，就会越出色。</p></blockquote><p>如果会经历长期测试与改进，需要回答以下问题：</p><ul><li>迭代问题 1：怎样才能让每一次迭代都有意义？</li><li>迭代问题 2：怎样才能尽可能快地进行迭代？</li></ul><p>软件工程师在过去 40 年中已经对这两个问题进行了深刻思考，他们想出了一些有用技巧。</p><h3 id="软件工程的简短历史"><a href="#软件工程的简短历史" class="headerlink" title="软件工程的简短历史"></a>软件工程的简短历史</h3><h4 id="危险-瀑布-保留"><a href="#危险-瀑布-保留" class="headerlink" title="危险-瀑布-保留"></a>危险-瀑布-保留</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220530003026.png" alt="瀑布模型"></p><p>瀑布模型中，只需要不断向前，没有迭代，因为瀑布不会回头。</p><ul><li>优点<br>鼓励开发者在编写代码前花费更多时间进行规划和设计</li><li>缺点<br>违背了迭代规则</li></ul><blockquote><blockquote><p>瀑布模型符合项目认知，但却缺少工程认知，对于一个复杂系统而言，瀑布模型的推进是完全不可控的，也不太可能如此顺利</p></blockquote></blockquote><h4 id="巴里·伯姆爱你"><a href="#巴里·伯姆爱你" class="headerlink" title="巴里·伯姆爱你"></a>巴里·伯姆爱你</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220530003310.png" alt="螺旋模型"></p><p>螺旋模型中，开发从最中间开始，顺时针旋转，依次通过四个象限。</p><p>里面包含了最棒的三个理念：风险评估、原型和迭代。</p><p>螺旋模型建议你做以下几件事：</p><ol><li>想出一个基础设计</li><li>找出设计中最大的风险</li><li>建立原型消除这些风险</li><li>测试原型</li><li>基于从原型中得出的结论作更详细的设计</li><li>回到 2</li></ol><p>它运用了迭代规则击败了瀑布模型的递进关系，它也回答了之前描述的问题：</p><ul><li>迭代问题 1：怎样让每次迭代都有意义<ul><li>螺旋模型的答案：评估并消除风险</li></ul></li><li>迭代问题 2：怎样尽可能快速进行迭代<ul><li>螺旋模型答案：构建许多粗糙模型</li></ul></li></ul><p>螺旋模型有很多衍生，目前为止，最成功的的是敏捷开发的传播。</p><h4 id="敏捷宣言"><a href="#敏捷宣言" class="headerlink" title="敏捷宣言"></a>敏捷宣言</h4><p>2001 年，由工程师提出的敏捷宣言：</p><blockquote><p>个体和互动高于流程和工具<br>工作的软件高于详尽的文档<br>客户合作高于合同谈判<br>响应变化高于遵循计划<br>也就是说，尽管右项有其价值<br>我们更重视左项的价值</p></blockquote><p>原则：争分夺秒！</p><ol><li>最重要的目标，是通过持续不断地及早交付有价值的软件使客户满意</li><li>欣然面对需求变化，即使在开发后期也一样。为了客户的竞争优势，敏捷过程掌控变化</li><li>经常交付可工作的软件，间隔几星期或一两个月，倾向于采取较短周期</li><li>业务人员和开发人员必须相互合作，项目中的每一天都不例外</li><li>激发个体斗志，以他们为核心搭建项目。提供所需的环境和支援，辅以信任，从而达成目标</li><li>不论团队内外，传递信息效果最好效率也最高的方式是面对面交谈</li><li>可工作的软件是进度的首要度量标准</li><li>敏捷过程倡导可持续开发。责任人、开发人员和用户要能够共同维持其步调稳定延续</li><li>坚持不懈追求技术卓越和良好设计，敏捷能力由此增强</li><li>以简洁为本，它是极力减少不必要工作量的艺术</li><li>最好的架构、需求和设计出自自组织团队</li><li>团队定期反思如何能提高成效，并依此调整自身行为</li></ol><p>被大多数开发者使用的核心元素：</p><ul><li>灵活的目标：无法恰好得知计划所需的时间。围绕更加灵活的目标组制定计划，而不是忍受对计划做出改变，有计划地改变计划。开发过程中，团队能够迅速适应新创意和信息。</li><li>优先级列表：任何时候有人为一个特性想到了一个新的创意，他就能将其加入到列表中。每次迭代时，团队就查看列表，重新设定特性优先级——重要的评分高。接下来的工作只需要看看列表顶端就好。没有人能保证列表上的所有特性都会被完成——这样能保证大多重要特性能在时间允许范围内完成。</li><li>冲刺：相较于制定长期目标，敏捷开发者们用一系列冲刺工作，每一个冲刺持续一段较短时间，并在最后能传递一个坚实的工作结果。更多的 ddl 意味着更多工作被完成了！</li><li>争分夺秒会议：10~15 分钟，站着开会以表明会议简短的本质。每个成员解释三件事：昨天完成了什么，今天计划完成什么，面临的问题。会议结束后，通过与团队成员一对一接触来一个个找到问题解决方案。每个团队成员明确知道他们要做的事，且能够被其他团队成员帮助。</li><li>演示日：每个冲刺阶段最后，大家聚集在一起，面对面观看和测试工作结果。从新基准开始工作。团队开始分析风险，并一起确定下一阶段的冲刺计划。</li><li>回顾：每个冲刺阶段最后，团队有一个回顾会议。不是关于产品，而是关于工作进度。这给了团队机会来讨论什么是正确的，什么是错误的，怎样在下一冲刺阶段调整工作。</li></ul><p>敏捷是一种哲学，不是一种规定方法。不同开发者有不同方法，但都致力于创造更多次迭代，且让每次迭代都有意义。</p><p>所有特性的风险评估和原型设计都是他们的核心。</p><h3 id="风险评估与原型设计"><a href="#风险评估与原型设计" class="headerlink" title="风险评估与原型设计"></a>风险评估与原型设计</h3><h4 id="案例：气泡城的囚徒"><a href="#案例：气泡城的囚徒" class="headerlink" title="案例：气泡城的囚徒"></a>案例：气泡城的囚徒</h4><p>假设要制作一款城市跳伞的电子游戏。</p><p>气泡城的囚徒：设计概况</p><ul><li>剧情：你是一只叫作“微笑”的跳伞猫。气泡城的市民们都被一个邪恶的巫师困在他们的房间中。你只有通过跳伞进入城市，从烟肉中滑下来找到市民，寻找阻止巫师的方法。</li><li>机制：在向城市中跳伞时，你可以试着抓住从城市中升起的魔法气泡。你能使用气泡的能量向邪恶的秃鸷发出射线，防止他们戳破气泡或者撕碎你的降落伞。同时你必须使降落伞正好落到城市中的目标建筑之上。</li><li>艺术：卡通风格的外观和游戏体验。</li><li>技术：使用第三方引擎的、多平台的三维主机游戏。</li></ul><p>可以马上开始制作，深入细节，但很可能在玩法测试之前已经过去了很长时间。</p><p>正确的做法：和团队一起坐下，做一个风险评估，这意味着列出一个会危害到项目的所有风险的列表。可能示例：</p><p>风险 1：收集泡泡/射击秃鹫的机制不如想象中有趣<br>风险 2：游戏引擎无法同时完成绘制整个城市、所有气泡和秃鹫的任务<br>风险 3：目前的想法是需要 30 种不同房子来构成完整游戏——可能没有足够时间完成所有室内设计和动画角色<br>风险 4：不确定人们是否喜欢角色和剧情<br>风险 5：可能要改变游戏主题，以夏季新上映的电影作为跳伞噱头</p><p>可以通过构建小型原型，尽快减少或消除风险。</p><ul><li><p>风险 1：收集泡泡/射击秃鹫的机制不如想象中有趣<br>可以将游戏机制抽象出来，比如方块版本。这样可以立即回答游戏机制是否好玩的问题，若是不好玩，对着简单模型迅速做出改变，直到好玩，然后就可以开始制作精细化版本。<br>明智的做法是利用迭代规则的优势。</p></li><li><p>风险 2：游戏引擎无法同时完成绘制整个城市、所有气泡和秃鹫的任务<br>立刻做出快速原型。原型没有其他功能，只是单纯在屏幕上展示预估数量的相同物品，看引擎能否处理。这个引擎没有玩法，只是单纯测试技术可行性。如果能处理，很好，若是不能，在艺术品完成前，赶紧想解决方案！</p></li><li><p>风险 3：目前的想法是需要 30 种不同房子来构成完整游戏——可能没有足够时间完成所有室内设计和动画角色<br>让艺术家先做一间房屋和一个角色，评估时间。如果达不到预期，想办法——用更少房屋或复用角色。</p></li><li><p>风险 4：不确定人们是否喜欢角色和剧情<br>构建能够快速展示角色的艺术原型和故事版，将其展现给（最好是目标人群）玩家，评估他们的反映，整理出他们喜欢什么，不喜欢什么，为什么。充分利用这些信息进行迭代！</p></li><li><p>风险 5：可能要改变游戏主题，以夏季新上映的电影作为跳伞噱头<br>要消除这个风险，可以寄希望于管理层尽快作出决定，或者可以决定制作一款能够更容易偏向电影主题的游戏，甚至可能想出一个制作两款不同游戏的计划——关键是立即考虑风险，并做出行动以保证它不会危及项目。</p></li></ul><blockquote><blockquote><p>这可太可怕了 2333</p></blockquote></blockquote><h4 id="16-号透镜：风险消除"><a href="#16-号透镜：风险消除" class="headerlink" title="16 号透镜：风险消除"></a>16 号透镜：风险消除</h4><p>是以圣人犹难之，故终无难矣。 —— 道德经</p><blockquote><p>有道的圣人总是看重困难，所以就终于没有困难了。</p><blockquote><p>没想到这里能看到哈哈。</p></blockquote></blockquote><p>要使用这个透镜，停止积极地思考，然后开始认真考虑那些会危及游戏的风险。</p><p>问你自己这些问题：</p><ul><li>是什么让这个游戏变得平庸?</li><li>我们怎样防止这样的风险发生?</li></ul><p>风险管理很难。这意味着你必须面对那些不想碰到和立刻解决的问题。但是如果训练自己这么做，你就能进行更多次有效的迭代，获得一个更优秀的游戏。忽视潜在的问题，只专注于游戏中你最有信心的部分是一种诱惑。你必须抵抗这种诱惑，专注于游戏中的风险。</p><h3 id="制作有效原型的-10-个技巧"><a href="#制作有效原型的-10-个技巧" class="headerlink" title="制作有效原型的 10 个技巧"></a>制作有效原型的 10 个技巧</h3><ol><li>原型设计技巧 1：回答问题</li></ol><p>每个圆形都应该设计为回答一个或多个问题。应该能清楚地描述问题，如果不能很可能会浪费时间。一些原型应该要回答的问题示例：</p><ul><li>我们的技术能够在一个场景中支持多少个动画角色？</li><li>核心玩法有趣吗？趣味能持续较长时间吗？</li><li>角色和设定在艺术上能融合吗？</li><li>游戏关卡应该有多大？</li></ul><p>避免过度构建原型，专注于让原型回答关键问题。</p><ol start="2"><li>原型设计技巧 2：忘记质量</li></ol><p>制作原型，唯一要关心的是其能否解决问题。其解决的越快，这个原型就越好——即使这个原型只能勉强使用而且只有粗糙外观。<br>目标是尽快找到问题，从而尽早解决。精致的原型会隐藏真正问题，带来错误安全感。</p><p>不要逃避迭代规则。需要尽快构建能回答疑问的原型，别管它有多难看！</p><blockquote><blockquote><p>想起自己在做 Yin Yang Messenger demo 的时候，一开始不敢动手，然后想了半天，做了个简易的 cube 版本出来，让朋友玩了之后收集了反馈立马迭代了新版本出来，一下子好了不少。</p></blockquote></blockquote><ol start="3"><li>原型设计技巧 3：不要太过留恋</li></ol><blockquote><p>计划好扔掉当前的产品——你总会这样。 —— 《人月神话》（The Mythical Man Month）， Fred Brooks</p></blockquote><p>要带着一切都是临时的心态开始原型工作——唯一要关心的是这个原型是否能回答问题。<br>把每个原型都当做学习机会——这是制作真正系统的练习。</p><ol start="4"><li>原型制作技巧 4：区分原型的优先级</li></ol><p>若是有多个风险需要消除，为风险也列出优先级，这样才能解决最大风险。特别是当一些风险因为其他风险而存在，那么解决源头，后续风险自然不再存在。</p><ol start="5"><li>原型设计技巧 5：有效的并行原则</li></ol><p>巧妙进行更多次迭代的方法是同时制作几个原型。<br>系统工程师构建回答技术问题的原型，艺术家构建艺术原型，设计师构建玩法原型<br>多个小型独立原型可以帮助你更快回答更多问题</p><ol start="6"><li>原型设计技巧 6：并不总需要数字化</li></ol><p>简单的桌上游戏原型——纸上原型，也能很好回答问题！<br>这样能迅速制作出桌面游戏，而且实现相同玩法。这能让你更快定位问题。</p><p>回合制游戏的数值可以通过纸上原型来打磨<br>实时游戏也能将行为转换为回合制模式<br>案例：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220530012013.png"></p><ol start="7"><li>原型设计技巧 7：无须交互</li></ol><p>简单的草图和动画能够对回答关于游戏玩法的问题大有帮助</p><p>《波斯王子：时之沙》有一套新奇的跳跃和时间回溯机制，最初的原型就来自无交互动画，描绘了设计师想象中难以置信的巧妙杂技，所以团队能够更容易看到思考和讨论怎样创造一个交互系统能够完成这个愿景。</p><ol start="8"><li>原型设计技巧 8：选择一个“快速迭代”的游戏引擎</li></ol><p>传统软件开发像烤面包：</p><p>1.编写代码。<br>2.编译和链接。<br>3.运行你的游戏。<br>4.操纵你的游戏到你想要测试的部分。<br>5.测试并验证。<br>6.回到步骤1。</p><p>如果对结果不满意，只能从头再来。</p><p>选择一个能快速迭代的引擎像是捏黏土——可以一直改变：</p><p>1.运行你的游戏。<br>2.操纵你的游戏到你想要测试的部分。<br>3.测试并验证。<br>4.编写代码。<br>5.回到步骤3。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220530012620.png"></p><ol start="9"><li>原型设计技巧 9：先构建玩具</li></ol><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220601221510.png"></p><p>通过先制作一个玩具再想出游戏，可能从根本上提高了游戏质量，因为这在两个层次上都会很有趣。更深远的是，当你创造的玩法是基于一个很有趣的玩具的一部分，两个层级就能够通过最强有力的方式互相支持。</p><h4 id="17-号透镜：玩具"><a href="#17-号透镜：玩具" class="headerlink" title="17 号透镜：玩具"></a>17 号透镜：玩具</h4><p>要使用这个透镜，不要思考你的游戏是否好玩，要思考参与这个游戏是否有趣。</p><p>问你自己这些问题：</p><ul><li>如果我的游戏没有目标，它会有趣吗？如果不是，我怎样才能改进它？</li><li>当人们看到我的游戏时，他们想要与它产生互动吗，甚至在它们知道应该怎样玩之前？如果不是，我怎样才能改进它？</li></ul><p>有两种方式可以使用玩具透镜。<br>第一种方式是将其运用在一个现存游戏上，想出怎样为它添加一些玩具类的特质——怎样让它变得更亲切，操作更有趣。<br>第二种方式更加大胆，即在你还没有任何游戏创意之前运用它制作一个玩具。如果你在计划中做这件事就会有风险——但如果不是这样，这就是一个伟大的魔杖，可以帮助你找到你还没发现的绝妙游戏。</p><ol start="10"><li>原型设计技巧 10：抓住更多迭代的机会</li></ol><p>在游戏开发过程中会对游戏做出一些改变，这需要更多时间。<br>《光环》（Halo）就是这样，它原本作为一款苹果电脑游戏而被开发。与微软交涉时，他们为个人电脑做了改变，团队利用这个机会进行了更多次迭代。第二个意外是微软请他们将这个游戏从个人电脑转移到新发布的 Xbox 平台！团队需要更多时间改变技术，他们也再次拥有了提高和迭代游戏核心玩法的时间。</p><h3 id="完成迭代"><a href="#完成迭代" class="headerlink" title="完成迭代"></a>完成迭代</h3><ul><li>非正式迭代</li></ul><ol><li>想出一个创意</li><li>试验它</li><li>测试和改进，直到其足够好</li></ol><ul><li>正式迭代：</li></ul><ol><li>描述一个问题（利用机制、技术、美学、故事作为限定）</li><li>用头脑风暴的方式找到几种可能的解决方案</li><li>选择一个解决方案</li><li>列出使用这种解决方案的风险</li><li>构建原型来消除这些风险</li><li>测试原型，直到足够好为止</li><li>描述一个新的想要解决的问题，回到第 2 步</li></ol><p>每次原型设计迭代中，都能更加详细地描述问题。<br>迭代的例子：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220601222707.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220601222718.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220601222735.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220601222748.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220601222759.png"></p><h3 id="多少次才足够"><a href="#多少次才足够" class="headerlink" title="多少次才足够"></a>多少次才足够</h3><blockquote><p>现在我明白了，尽管太晚了。在我们计算费用之前，在我们评价自己是否有能力完成它之前就开始工作是很荒谬的。 —— 鲁滨逊·克鲁索（Robinson Crusoe）</p></blockquote><p>更多的迭代总会让你的游戏变得更好。但是“工作永远不会终结——只会被放弃。”<br>需要确定在用尽开发预算之前，进行足够的迭代次数。</p><p>马克·塞尔尼（Mark Cerny）的观点：在你完成两个可发布的游戏版本并完成所有必要特性之前，你都处于试验产品阶段。换言之，除非有两个完全完整的关卡，你仍在进行游戏基本设计。</p><p>这个点通常在花费 30% 必要预算之后。<br>如果到达该点花费了 100w，那么可能还需要花费额外 230w。</p><p>作者有自己的 50% 法则：</p><ul><li>50 % 法则前半部分：当计划游戏时，确定用这种方式构建它。如果 50 % 的预算被削减了，你依然能够有一个可玩的游戏。这条规则要求保持系统简单，也保证当出现糟糕的事情（很可能）迫使你放弃一些特性时，依然能够得到一个可玩游戏。</li><li>50 % 法则后半部分：所有核心玩法元素应该在规划中前半部分完成。即用一半时间让游戏变得可玩，用一半时间让游戏变得更好。</li></ul><h3 id="你的秘密燃料"><a href="#你的秘密燃料" class="headerlink" title="你的秘密燃料"></a>你的秘密燃料</h3><h4 id="18-号透镜：激情"><a href="#18-号透镜：激情" class="headerlink" title="18 号透镜：激情"></a>18 号透镜：激情</h4><p>在每个原型的结尾，当你小心地消除风险并计划下一步时，别忘了用这些重要问题检验你对游戏的感受：</p><ul><li>我对这款游戏的成功是否抱有极大激情？</li><li>如果失去了激情，怎样才能找回？</li><li>如果激情没有回来，是否应该做一些其他事？</li></ul><p>在每次冲刺的末尾，当你在研究原型和准备接下来的计划时，一定要记住做一个“激情检验”。激情就是潜意识与你交流的方式，它告诉你这个游戏是否令人兴奋。失去激情就说明一些地方出了问题——如果不能找到问题所在，游戏很可能会死去。激情也有危险性——毕竟这是一种不合理的情感。<br>必须小心对待激情，因为它往往能够击倒障碍并带领游戏走向成功。</p><hr><h2 id="第九章-游戏为玩家而生"><a href="#第九章-游戏为玩家而生" class="headerlink" title="第九章 游戏为玩家而生"></a>第九章 游戏为玩家而生</h2><h3 id="爱因斯坦的小提琴"><a href="#爱因斯坦的小提琴" class="headerlink" title="爱因斯坦的小提琴"></a>爱因斯坦的小提琴</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220605004916.png"></p><p>要创造宏伟体验，必须和爱因斯坦一样，了解受众会喜欢什么，比他们更了解。很多时候，人们并不知道自己喜欢什么。他们觉得他们知道，但其实他们不知道。</p><blockquote><blockquote><p>想起了亨利福特名言，人们只能想到要更快的马，却没法想到汽车。</p></blockquote></blockquote><p>这里的关键是倾听。必须深入而彻底地倾听玩家。必须熟悉他们的想法、情感、恐惧和欲望。一些他们自己可能都没有意识到的部分往往是最重要的。</p><h3 id="设身处地"><a href="#设身处地" class="headerlink" title="设身处地"></a>设身处地</h3><p>如何完成倾听？最好的方法之一是移情（会在第十章中讨论），就是换位思考。</p><p>适应玩家的精神角度，积极把自己投射到玩家们的思维中。必须尝试变成他们，观其所观，听其所听，想其所想。</p><p>制作游戏时如果自己曾是目标受众的一员，就会有优势，能够更好的代入。好好保存自己的记忆，这些是最珍贵的工具之一，可以帮助你移情。</p><p>但要是为一些不了解的受众制作游戏，必须在目标人群中想起你认识的朋友，想象他们的行为。和文化人类学家一样，必须花时间与目标受众在一起，与他们交流，观察他们，想象成为他们会怎么样。勤加练习，就能进步。如果能在思想上变为任何类型的玩家，就能为游戏拓展受众，因为你的设计能够囊括其他设计师忽视的人群。</p><blockquote><blockquote><p>想起之前面试米的面试官教会我的词——“格人”。</p></blockquote></blockquote><h3 id="人群特征"><a href="#人群特征" class="headerlink" title="人群特征"></a>人群特征</h3><blockquote><p>正如有些人所言，年龄不会把我们变成孩子，它只会为我们保留真正的童心。 —— 歌德（Goethe）</p></blockquote><p>每个人都是独特的，但要制作一些许多人都喜欢的游戏，就要考虑这些人群的共同之处。这些分类叫做人群特征/市场细分。</p><p>对于游戏设计师，两条最重要的人口统计变量是年龄和性别。<br>随着年龄增长，玩游戏的方式会有所不同；男性女性在所有年龄段都有不同游戏方式。</p><p>以下是典型年龄的人群特征：</p><ul><li>0~3 岁，婴儿/幼儿：该年龄段孩子对玩具很感兴趣，但游戏复杂度于其中包含的待解决问题对他们来说太难。虚拟界面（如游戏卡牌）超越了他们的能力范围，但他们会觉得直接的界面（如触摸屏）很有趣</li><li>4~6 岁，学龄前儿童：该年龄段孩子通常会第一次表现出对游戏的兴趣。他们会更频繁地与父母而不是其它人一起玩简单游戏，因为父母知道怎样调整规则来让游戏保持快乐而有趣。</li><li>7~9 岁，儿童：7 岁被称为“启蒙时期”。该年龄段的孩子已经入学，通常能阅读书本，能够想通问题并解决一些难题。他们自然而然对游戏玩法表现出兴趣。该年龄段，孩子们开始自己决定喜爱的游戏和玩具，而不只是接受父母为他们所做的选择。</li><li>10~13 岁，青春期前的孩子：该阶段的孩子经历一系列巨大生理变化，他们开始对事物有更深入思考。该年龄段有时也被称为“迷恋时期”，因为他们开始着迷于兴趣爱好。男孩的兴趣经常就是游戏。</li><li>13~18 岁，青少年。青少年的任务是为成人做准备。男女孩兴趣出现重要分化。男孩们对竞技和征服保持兴趣，女孩更留意现实世界的问题和相互交流。两种性别的青少年都喜欢尝试新体验。</li><li>18~24岁，年轻的成人：通常比孩子玩得少。游戏类型和娱乐方式已经有了特定偏好。通常有富余的时间和金钱。</li><li>25~35，二三十岁：时间变得更加宝贵，是“构建家庭”的年龄。大多数成年人只玩一些休闲游戏，把玩游戏作为偶尔娱乐活动，或者与孩子一起玩游戏。该年龄段的“核心玩家”——把游戏作为主要爱好的人——是重要的目标市场之一，会购买很多游戏。经常表达喜好与厌恶，可能潜在影响社交网络中其他人的购买决策。</li><li>35~50，三四十岁：“家庭成熟”阶段，大多数人成为休闲玩家。随着孩子年龄增长，会做出购买昂贵游戏的决定。若有可能，会寻求整个家庭一起游戏的机会。</li><li>50+，五十岁以上：“空巢老人”，突然有了很多闲暇时间——孩子搬出去，自己很快退休。一些人回归年轻时喜爱的游戏，其他人寻求转变，转向新的游戏体验。该年龄段人群对重度社交游戏体验尤其感兴趣，如高尔夫、网球、桥牌、MMO。Facebook 游戏在这个年龄段特别成功。老人眼睛和双手不如以前灵活，所以会对小屏幕游戏或者需要控制极其复杂移动的游戏感到沮丧。</li></ul><p>无论为哪个群体创作游戏，重要的是：由于儿童时期就是以玩游戏为中心，所以他们所有的游戏活动都与他们的儿童时期有关。为给一些特定年龄的人群制作游戏，必须让自己的游戏与他们儿童时期流行的游戏和主题保持协调。换言之：要与他们真正地交流，必须用他们孩童时期说话的方式。</p><blockquote><blockquote><p>这一点倒是以前不知道的。</p></blockquote></blockquote><h3 id="媒介排斥女性吗"><a href="#媒介排斥女性吗" class="headerlink" title="媒介排斥女性吗"></a>媒介排斥女性吗</h3><p>男人和女人不同。设计师需要认识到这种区别并为之做出差异化设计。</p><h4 id="男性玩家喜欢在游戏中看到的五件事"><a href="#男性玩家喜欢在游戏中看到的五件事" class="headerlink" title="男性玩家喜欢在游戏中看到的五件事"></a>男性玩家喜欢在游戏中看到的五件事</h4><blockquote><p>假如你是一位女性并且觉得自己不了解男性，你可能想得太多了。 —— 路易斯·雷米（louis Ramey）</p></blockquote><ol><li>掌握：男性很喜欢掌握一件事。这并不意味着这件事很重要或者很有用——它可能只是很有挑战性。而女性更倾向于掌握一件很有意义的事。</li><li>竞争：男性很喜欢通过与其他人竞争来表现出他们是最棒的。但对于女性，输掉游戏（或导致其他人输掉）带来的糟糕体验远大于胜利带来的兴奋感。</li><li>破坏：男性喜欢摧毁东西。我们常看到男人在搞破坏。小男孩玩积木，最兴奋的部分不是构建，而是完成后立马推倒。电子游戏天生适合这种玩法，虚拟世界中的摧毁能比现实世界具有更大数量级。</li><li>空间谜题：男性通常比女性有更强空间推理能力。</li><li>试错：男性倾向于反复试错来学习。</li></ol><h4 id="女性玩家喜欢在游戏中看到的五件事"><a href="#女性玩家喜欢在游戏中看到的五件事" class="headerlink" title="女性玩家喜欢在游戏中看到的五件事"></a>女性玩家喜欢在游戏中看到的五件事</h4><blockquote><p>女性渴望获得情感与社交探索的体验，并将这些应用到自己的生活中。 —— Heidi Dangelmeier</p></blockquote><ol><li>情感：女性玩家喜欢探索人类丰富情感的体验。对于男性，情感是体验中的有趣部分，但很少作为体验终点。</li><li>现实世界：女性倾向于玩与现实有关联的娱乐活动。观察小女孩们的游戏（过家家、扮演兽医、换装游戏等）。小男孩更喜欢扮演幻想中的角色。这种倾向持续到成年——当事物通过有意义方式与现实世界相连，女人们更有兴趣了（如模拟人生）</li><li>照料：女性玩家喜欢照料。女孩们喜欢照顾玩具娃娃、玩具宠物和比她们更小的孩子。竞技游戏中会出现女孩放弃领先优势来帮助弱小玩家，一部分原因是她们觉得玩家之间的联系和感受比游戏更加重要；另一部分原因是出于照料的乐趣。种植游戏和宠物游戏在女性玩家中的成功大部分源于照料机制。</li><li>对话与字谜：女性具有更好的文字技能。</li><li>通过例子学习：女性倾向于通过例子学习。她们喜欢用清晰教程指导自己，一步步学习。</li></ol><p>还有其他区别。<br>男性倾向于专注一件事，女性具有较好的多线程工作能力。一些推测认为这与原始收集行为有关。</p><p>PC 的出现带来了新的游戏类型：</p><ul><li>移除所有社交元素</li><li>移除大部分文字和情感元素</li><li>很大程度与现实世界分离</li><li>通常很难掌握</li><li>为没有限制的虚拟破坏提供了可能</li></ul><p>所以早期电脑和视频游戏主要流行于男性玩家。但随着技术发展，这一局面得到了改善。</p><h4 id="19-号透镜：玩家"><a href="#19-号透镜：玩家" class="headerlink" title="19 号透镜：玩家"></a>19 号透镜：玩家</h4><p>要是用这个透镜，你需要停止思考你的游戏，开始思考你的玩家。<br>问你自己关于这几个关于你的目标玩家的问题：</p><ul><li>他们通常喜欢什么？</li><li>他们不喜欢什么,为什么?</li><li>他们希望能在你的游戏中看到什么？</li><li>如果我处在他们的位置上,我想要在游戏中看到什么?</li><li>他们将会特别喜欢或者不喜欢游戏中的哪一部分?</li></ul><p>一个优秀的游戏设计师总是考虑并拥护他的玩家。熟练的设计师会同时使用玩家透镜和全息透镜，同时考虑玩家、游戏体验和游戏机制。思考你的玩家是一种很有用的方法，但是更有用的是观察他们玩你的游戏。你观察得越多，就越容易预测他们会喜欢什么。</p><p>通过密切关注不同人群特征目标的欲望和行为，能够平衡游戏来适应所有人。当你的游戏受众广泛时，不妨将其细化分析。密切观察不同人群特征的玩家如何游玩游戏，修改已有设定，让其能支持每个群体的游戏风格。</p><h3 id="心理特征"><a href="#心理特征" class="headerlink" title="心理特征"></a>心理特征</h3><p>心理特征：人们的内在想法，他们在寻找怎样的快乐。</p><p>有一些心理特征与生活方式（活动）有关，如“喜欢养狗的人”、“FPS 硬核玩家”。</p><p>其他一些心理特征与一个人喜欢什么有关——人们从参与的游戏或者其他活动中寻找快乐。每个人行动的动机最终都可以被追溯为寻求某种快乐。</p><h4 id="Marc-LeBlanc-的游戏乐趣分类"><a href="#Marc-LeBlanc-的游戏乐趣分类" class="headerlink" title="Marc LeBlanc 的游戏乐趣分类"></a>Marc LeBlanc 的游戏乐趣分类</h4><ol><li>感官：感官乐趣包含使用感观（视听嗅味触）。看到美丽事物，聆听音乐，触摸丝绸，闻到/品尝到美味食物都是感官快乐。游戏美感主要带来这种快乐。<br>  感官乐趣通常是玩具的乐趣（17 号透镜）。这种乐趣不能把糟糕的游戏变得优秀，但它通常能把优秀的游戏变得更好。</li><li>幻想：一种想象世界的乐趣和想象自己变为其他人的乐趣。将在 19、20 章进行深入讨论。</li><li>叙事：并不意味着讲述确定的线性故事。而是故事的发生经过了一系列事件的戏剧化演变。将在 16、17 章深入讨论。</li><li>挑战：某种程度上游戏玩法的核心乐趣之一，因为每个游戏的核心都有一个需要被解决的问题。对部分玩家而言，这种乐趣就足够了，其他玩家想要更多乐趣。</li><li>团队关系：由友情、合作和社区带来的乐趣。23、24 章深入讨论。</li><li>探索：探索的乐趣很广泛，搜寻并找到新东西就是探索。有时候是对游戏世界的探索，有时候是对隐藏特性/巧妙策略的探索。探索新食物是游戏乐趣的关键。</li><li>表达：表达自我的乐趣和创造事物的乐趣。表达很少与完成游戏目标有关，在大多游戏中，为角色设计新外观不能帮你取得优势——但对一些玩家而言，这可能是他们的游戏原因。<blockquote><blockquote><p>可以算做某种程度的“自己实现”哈哈，参见《乌合之众》的读后感： <a href="https://medill-east.github.io/2022/06/04/20220604-after-reading-the-crowd/">群体语境下无归属玩家的个人叙事是否可能</a></p></blockquote></blockquote></li><li>服从：这是踏入魔法阵的快乐——离开真实世界，进入全新、令人愉悦、充满规则、有意义的世界。几乎所有游戏都包含服从的快乐。</li></ol><h4 id="Richard-Bartle-玩家类型分类"><a href="#Richard-Bartle-玩家类型分类" class="headerlink" title="Richard Bartle 玩家类型分类"></a>Richard Bartle 玩家类型分类</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220605104129.png"></p><ol><li>♦成就型：想完成游戏目标，主要乐趣源于挑战。喜欢对世界施加影响。</li><li>♠探索型：想了解游戏方方面面，主要乐趣源于探索。喜欢与世界互动。</li><li>❤社交型：对于人们之间的关系更感兴趣，主要寻求团队合作乐趣。喜欢与玩家互动。</li><li>♣杀手型：喜欢竞争并击败他人，享受混合了竞争和破坏的快乐。角色特征是“喜欢对他人施加影响”。乐于助人者也包含在这个分类中。喜欢对玩家施加影响。</li></ol><h4 id="更多乐趣：更多"><a href="#更多乐趣：更多" class="headerlink" title="更多乐趣：更多"></a>更多乐趣：更多</h4><ul><li>预感：当得知快乐就要来临，等待它的到来就是一种快乐<blockquote><blockquote><p>等待小王子的小狐狸。<br>如果你说你在下午四点来，从三点钟开始，我就开始感觉很快乐，时间越临近，我就越来越感到快乐。<br>到了四点钟的时候，我就会坐立不安，我发现了幸福的价值，但是如果你随便什么时候来，我就不知道在什么时候准备好迎接你的心情了<br>——安东尼·德·圣-埃克苏佩里 《小王子》</p></blockquote></blockquote></li><li>完成：完成一件事是一种美好感觉。如“吃掉所有豆子”，“消灭所有坏蛋”，“清空这个关卡”等目标都是利用这种乐趣。</li><li>幸灾乐祸：当一些不公正的人突然遭到报应，我们会有此感受。这是竞技游戏的重要构成部分。德国人称其为 schadenfreude。</li><li>赠与礼物：当你通过赠送惊喜礼物让别人开心时，就会感受到这种特别乐趣。可以通过包装礼物来增强这种惊喜。这种乐趣并不是源于别人的快乐，而是源于你使得他们变得快乐。</li><li>幽默感：两个没有联系的事物通过形式变化被突然联系在一起。<blockquote><blockquote><p>搞点薯条！</p></blockquote></blockquote></li><li>可能性：有很多选择并让你任意挑选的乐趣。通常在购物/自助餐桌上体验这种乐趣。</li><li>成就的自豪感：完成一件事之后，这种乐趣自身可以持续很久。意第绪语中的单词 naches 就是关于这种快乐的满足感，通常指向对孩子们/孙子们的自豪感。</li><li>惊喜：大脑喜欢惊喜。</li><li>激动：过山车设计师之间的说法“恐惧 - 死亡 = 开心”。观看《Thrill》频道的节目就是这种快乐——恐惧，但安全。</li><li>战胜逆境：这是一种完成了一件认为难以成功的事的乐趣。通常而言，这种乐趣的出现伴随着个人胜利的呼喊。意大利人用于描述这种快乐的单词：Fiero<blockquote><blockquote><p>这作者真是博学多识，怎么什么语都知道 233</p></blockquote></blockquote></li><li>难以置信：一种包含敬畏和惊异的强大感受。</li></ul><p>对不同乐趣保持开放心态，并且注意乐趣会与情境有关。</p><h4 id="20-号透镜：乐趣"><a href="#20-号透镜：乐趣" class="headerlink" title="20 号透镜：乐趣"></a>20 号透镜：乐趣</h4><p>思考你的游戏提供了哪些类型的乐趣。<br>问你自己这几个问题：</p><ul><li>你的游戏能给玩家带来哪些乐趣？这些乐趣能够继续改善吗？</li><li>你的体验中缺少了哪些乐趣，为什么？能够在游戏中增加这种乐趣吗？</li></ul><p>游戏的最终目的就是带来快乐。通过浏览已知的乐趣列表，考虑你的游戏如何传达其中的每一种乐趣，你可能就有了改进游戏的灵感，让它能够为玩家带来更多乐趣。要经常留意那些独特的、未分类的、在大多数游戏中都没有的乐趣。因为只要找到一个就能让你的游戏拥有独特的体验。</p><hr><h2 id="第十章-体验在玩家的脑中"><a href="#第十章-体验在玩家的脑中" class="headerlink" title="第十章 体验在玩家的脑中"></a>第十章 体验在玩家的脑中</h2><p>其实潜意识牢牢中掌控者我们的一言一行。大部分时间，潜意识不露声色，令我们以为是“自己”在做决定。只是潜意识时不时会犯下可笑的错误，暴露其控制之广。</p><p>四项主要心理能力令玩游戏成为可能：建模、专注、想象、共情。</p><h3 id="建模"><a href="#建模" class="headerlink" title="建模"></a>建模</h3><p>头脑并不直接处理现实，而是处理其模型。<br>建模过程发生在意识层面之下。所谓“意识”，不过是种幻觉。但幻觉和内在模拟有时会出错，比如视错觉。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220608002354.png" alt="点的颜色并没有随着眼球移动而改变 但大脑让它们看起来像在变色"></p><p>大量有用信息——电磁频谱中可见光范围外的一切——都被排除在我们感知到的现实之外。</p><p>就连我们能看见的光，都经过了眼和大脑的奇怪筛选。<br>眼睛看到的颜色之间好像泾渭分明，但在现实中，波长是平滑渐变的，颜色没有明显分界线。眼睛演化成这样，是因为将波长分组有助于理解世界。“颜色”不过是错觉，并非现实——但确实有用模型，能反映现实。</p><p>想掌握精神模型，有一种办法是寻找那些“不加细想，都感觉很自然”的事物。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220608003225.png"></p><p>乍一看，这张图片没有什么不对劲，但稍加思索，这根本不像真人。头身比不对，手指都是小包，而且由线段构成，但若不细想，人们不会觉得这张图片有任何不对劲。</p><p>虽然查理·布朗（即上图小男孩）不像我们认识的人，但因为他和我们内心模型相符，看起来还是很像真人。由于人脸传达许多情感，大脑会多储存一些头和脸部信息，所以我们能接受他的大脑袋；如果反过来，若是头小脑大，看起来就会滑稽，因为这与内心模型相龃龉。</p><p>组成他的线条呢？对大脑而言，从场景中挑选互相分离的物体其实很难，潜意识其实会在处理物体时“画线”，以帮助大脑进行区分。由线段构成的画面与内在模型相符，所以也很自然。</p><p>魔术师也是通过欺骗精神模型，并将其打破的方式来取悦观众。观众们的惊呼就是模型被打破的声音。</p><p>大脑每天做巨量工作，将复杂现实浓缩简化成精神模型，以简化记忆、思考、处理。</p><blockquote><blockquote><p>想到了认知理论中的图式。</p></blockquote></blockquote><p>身为游戏设计师，一定要对精神模型多加关注。每个游戏都有一套简单规则，如同查理·布朗，是预先简化过的模型，让人能轻松消化、处理。玩游戏能放松身心，是因为游戏剥离了许多复杂事物，大脑不必做现实中那么多工作。</p><p>游戏可以帮人演练现实，锻炼我们消化简单模型以及对其进行实验的能力，而后可以逐步进阶到现实世界的复杂事物。</p><p>我们体验和思考的一切都是模型——而不是现实。现实远在我们能理解和领悟的范围之外。我们能体验到的现实只是幻想，但我们永远不能超过这幻想去了解现实。</p><p>身为设计师，若能了解和控制这种幻想在玩家脑中如何形成，能创造的体验就和现实世界一样真实——甚至更甚。</p><h3 id="专注"><a href="#专注" class="headerlink" title="专注"></a>专注</h3><blockquote><p>时光有时候像鸟儿飞逝，有时像蜗牛爬行；但注意不到时间究竟是快是慢的时候，才是人最幸福的时候。 —— 伊万·屠格涅夫</p></blockquote><p>大脑理解世界的一项关键技巧是选择性地集中注意力——忽略一些事物，对另一些事物投入更多精神能力。</p><p>如“鸡尾酒会效应”：在嘈杂环境中能只关注于听到自己所想要听到的内容（比如突然听到自己的名字）。<br>“双耳分听研究”：实验中，被试戴上耳机，双耳收到不同听觉体验，如左耳读莎士比亚，右耳念数字。只要两个声音不太相似，被试一般能做到集中听一个声音并复述其内容。若是问另一个声音在说什么，被试一般都不清楚。</p><p>任意时刻，专注的内容是由潜意识欲望和清醒意志共同决定。创作游戏时，目的是创造有趣体验，足以令玩家尽可能长久而强烈地集中注意力。</p><p>心流：米哈里等人提出。忘记周遭，心无杂念。全神贯注，忘记时间。专注、快乐、享受的状态。其中一种定义是“完全专注于一个活动中，并感到高度乐趣和满足”。</p><p>想让玩家进入心流，有以下关键点：</p><ul><li>目标清晰：人有清晰目标，更容易集中精力于任务；目标不明确，就无法确定行为是否有效，就不那么沉浸。</li><li>没有干扰：干扰会吸引有限的注意力。心和手需同时参与游戏。只思考，手会闲；只用手，心会飘。</li><li>反馈直接：即及时反馈。</li><li>持续挑战：人类喜爱挑战，但人类喜爱感觉可以完成的挑战。即挑战与技能水平需要匹配。</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220608005206.png" alt="只有挑战和技巧匹配才能产生心流"></p><p>玩家技能水平会不断进步，这就要求与之相符的挑战（即游戏难题/困境）。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220608005440.png" alt="即网易所提“非线性体验”"></p><p>张弛有度，即网易所提“非线性”体验，能让玩家更加享受其中。</p><h4 id="21-号透镜：心流"><a href="#21-号透镜：心流" class="headerlink" title="21 号透镜：心流"></a>21 号透镜：心流</h4><p>使用本透镜前，请考虑是什么在吸引玩家的注意力。<br>问自己这些问题：</p><ul><li>我的游戏有清晰的目标吗？如果没有，怎样改好？</li><li>玩家目标和我所希望的一致吗？</li><li>游戏中是否有令玩家分心，以致忘记目标的部分？若有，能否减少这些干扰，或能否融入游戏目标内？</li><li>我的游戏是否稳定提供连串不太容易，也不太难的挑战？有没有考虑到玩家的技巧可能逐步提高？</li><li>玩家的技巧提高的速率和我的期望相符吗？若不是，应该怎样改进？</li></ul><p>必须学会识别心流。心流并不一定伴随外在情感流露，往往与沉默、退缩为伴。<br>单人游戏玩家进入心流后，一般会安静下来，不时轻声自言自语。因为太过专注，面对你的问题，他们有时反应很慢，有时还会烦躁；<br>多人游戏玩家进入心流后，经常热情交流，并一直专注游戏。</p><p>一旦发现你的游戏中有玩家进入新六，看仔细——他们不会永远处于该状态。务必注意关键时刻——可能某事发生，玩家就离开了心流。利用这些关键点来进行版本迭代。</p><p>也尽可能在自己的游戏设计中进入心流！</p><h3 id="共情"><a href="#共情" class="headerlink" title="共情"></a>共情</h3><p>即换位思考。每当这时，我们尽全力思他人所思，感他人所感。能做到这样是理解他人能力的一个特征，也是游戏不可分割的一部分。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220608010123.png"></p><blockquote><blockquote><p>印象中，心理学中有讲到孩子习得情绪就是通过某种模仿，也是一种本源共情能力。</p></blockquote></blockquote><p>人甚至能和动物共情。</p><p>狗比其他动物面部表情更丰富，它们也和人一样，用眉眼表达情绪。这似乎是狗为了生存目的进化出的技能。做对表情，就可以激发人类共情。</p><p>大脑通过精神模型来完成这些行为——并不是与真人、真动物共情，而是与精神模型共情——于是很容易受蒙骗。</p><p>有时人所共情并不存在情感。照片、绘画、游戏人物，能轻易激发共情。艺术家们深知这点，于是加以利用。下次看影视作品，可以注意，自己在何处共情，为何共情？</p><p>游戏设计师要与其他艺术家一样运用共情。但不仅限于此，我们还有新的交互共情方式。游戏就是解决问题，情感投射是解决问题的好办法。</p><p>如果人能站在别人立场思考，就能更好回答“那个人能怎么解决某个问题”。游戏里所投射到人物身上的，不仅仅是情感，还是所有决策能力。其他无法互动的媒体形式无法做到这点。</p><h3 id="想象"><a href="#想象" class="headerlink" title="想象"></a>想象</h3><blockquote><p>最美的世界，只能通过想象进入。 —— 海伦·凯勒</p></blockquote><p>详细那个李，把游戏代入玩家内，把玩家带入游戏。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220608010725.png"></p><blockquote><blockquote><p>所以为什么要用太极嘞，玩家就在游戏中，游戏就在玩家中？</p></blockquote></blockquote><p>这里的想象不仅指天马行空的能力，要更普遍。包括听到一段话然后自然构建画面的能力。游戏不必给出所有细节，玩家自会将其填充。了解应该给玩家展示什么，又应将什么留白，就是艺术了。</p><p>想象力的重要功能：</p><ul><li>交流（一般用于讲故事）</li><li>解决问题</li></ul><p>游戏中，以上两者都很关键。游戏设计师必须理解怎样让玩家想象力助力故事，还要清楚想象力能解决、不能解决的问题。</p><p>人脑很微妙，人类所知很少。但了解越多，越有可能利用其为玩家创造绝佳体验。<br>别忘了，你也装备着大脑。运用建模、专注、共情和想象来了解这些能力如何在玩家脑中运用。</p><hr><h2 id="第十一章-玩家的动机驱使着玩家的脑"><a href="#第十一章-玩家的动机驱使着玩家的脑" class="headerlink" title="第十一章 玩家的动机驱使着玩家的脑"></a>第十一章 玩家的动机驱使着玩家的脑</h2><p>先来面对一个残酷现实：<br>游戏根本不重要。</p><p>一切娱乐活动其实都是这样。</p><p>人类行事、决策总有动机，了解动机，可以帮助设计师们进行更有针对性地设计。</p><h3 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220608231724.png" alt="马斯洛需求金字塔"></p><p>若是低层次需求没有满足，人就不会去追求高层次需求。</p><p>许多游戏活动追求成就，要求练习以至精巧熟练，处于第四层，自尊。<br>但也有些满足低层次需求的游戏。</p><p>多人游戏吸引人的原因是——所满足需求比单人游戏更基础。</p><p>可以说《我的世界》（Minecraft）之所以成功，是其内容覆盖了金字塔的全部层次。这个游戏用幻想的环境覆盖最低两层（收集资源，建造安全居所），然后以成就和技巧主导的多人游戏覆盖上三层。</p><p>游戏若能让你感到与他人连接，也能带来成就感，使你得以创造事物来表达自己，满足上三层需求。从这个角度看，有在线社区工具来自行创造内容的游戏能长盛不衰，有其道理。</p><blockquote><blockquote><p>这也便是我之前读《乌合之众》后所想，即未来游戏对于“自己实现”的满足：<a href="https://medill-east.github.io/2022/06/04/20220604-after-reading-the-crowd/">群体语境下无归属玩家的个人叙事是否可能</a></p></blockquote></blockquote><h3 id="更多需求"><a href="#更多需求" class="headerlink" title="更多需求"></a>更多需求</h3><p>马斯洛之后，也有研究者提出关于需求的新观点。</p><p>Edward Deci 和 Richard Ryan 的研究与游戏尤其相关，二人对所谓“自我决定论”的发展有重大贡献。他们说，人类不仅有生理需求，也有心理需求——不仅是“想要”、“很想要”，而是真实的需求。而且他们精确提出了三大精神需求：</p><ol><li>胜任：我需要觉得自己擅长做些什么</li><li>自主：我需要按自己的方式做事的自由</li><li>关联：我需要和其他人建立联系</li></ol><p>游戏倾向于充分满足这三项需求。<br>游戏设计得可以让你感觉精通、可以驾驭<br>游戏让你自由发挥喜欢的玩法，你甚至可以随时退出<br>大部分游戏被设计为与他人一起玩，帮助你形成社会连接</p><h4 id="22-号透镜：需求"><a href="#22-号透镜：需求" class="headerlink" title="22 号透镜：需求"></a>22 号透镜：需求</h4><p>要使用此透镜，先不要考虑你的游戏本身，改为考虑它满足人类的哪些基础需求。<br>问自己这些问题:</p><ul><li>我的游戏主要运作在马斯洛层次的哪一层？</li><li>我的游戏是否满足“胜任、自主、关联”的需求？</li><li>我怎样让游戏在现有水平上，满足更多基础需求?</li><li>游戏已经满足的需求，怎样令其满足得更好？</li></ul><p>说游戏能满足人类的基础需求，虽有点奇怪，但人类的一切行为，都是在以某种方式满足这些需求。记住，有些游戏比其他游戏更能满足需求——所以你的游戏不能仅仅对需求做出承诺，而要切实满足。玩家本来以为玩你的游戏能够让自己感觉良好，或者和朋友交往更密，结果你的游戏没能满足需求，玩家就会改玩其他能满足的游戏了。</p><h3 id="内在动机、外在动机"><a href="#内在动机、外在动机" class="headerlink" title="内在动机、外在动机"></a>内在动机、外在动机</h3><p>另一种考量动机的方式，是观察其来源。</p><p>内在动机：自己想做，不在乎实质性奖励<br>外在动机：有外界原因（如物质奖励）导致自己去做</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220608232936.png" alt="内在与外在动机"></p><p>内在与外在并非二元对立，存有过渡。动机来自“真实自我”越多，就越偏向内在。</p><p>游戏设计师需要清楚自己游戏中的各种动机的构成方式。外在动机会成为内在动机的 debuff。</p><blockquote><blockquote><p>可看 <a href="https://medill-east.github.io/2022/06/01/20220601-gcores-playbeyondthegame/">机核 游戏理论系列播客笔记</a> 里，“为什么玩游戏”部分里面有关内在动机和外在动机的实验例子。</p></blockquote></blockquote><h3 id="想做和得做"><a href="#想做和得做" class="headerlink" title="想做和得做"></a>想做和得做</h3><p>追求愉悦和规避痛苦，属于脑中两个不同的系统。而这不是从痛苦到愉悦的连续取件，而是两套不同的动机回路。人们经常把追求愉悦和规避痛苦都归类到“动机”里，不加思考。但一旦将二者分开考虑，能发现有趣的事情。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220608233542.png"></p><p>很多游戏动机是追求愉悦，但不尽然。<br>还有很多游戏核心是规避痛苦。<br>躲避敌人，坚持不死，就处于痛苦回避模式。挖出星星，打出连招，则处于愉悦追求模式。两者都是有效动机，结合起来的效果也很好。</p><p>但这种结合有时会失衡。如一些 free to play 游戏，前期很爽快，在追求愉悦，但后来就会告诉你如果不连续上线就拿不到奖励，就变成了规避痛苦。</p><blockquote><blockquote><p>也想到了损失厌恶效应：面对等量收益和损失，用户对于损失十分厌恶。即用户倾向于避免损失，同量损失带来的负效用为同量收益的正效用的 2.5~3 倍。<br>比如来了给你 100，不来就扣你 100。人们会觉得来了得到的 100 其实还行，但被扣掉的 100 让人不能忍受。这反过来可能会被设计师利用来加强上线率哈哈。</p></blockquote></blockquote><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220608233744.png" alt="人类动机的分类"></p><h4 id="23-号透镜：动机"><a href="#23-号透镜：动机" class="headerlink" title="23 号透镜：动机"></a>23 号透镜：动机</h4><p>每个游戏都是由动机组成的复杂生态系统。要细致地加以研究，请问自己这些问题:</p><ul><li>玩家因何种动机来玩我的游戏？</li><li>其中哪些动机是最内在的？哪些是最外在的？</li><li>哪些是追求愉悦的？哪些是规避痛苦的？</li><li>哪些动机互相支撑？</li><li>哪些动机互相抵触？</li></ul><h3 id="创新"><a href="#创新" class="headerlink" title="创新"></a>创新</h3><blockquote><p>毫无疑问，这世上最流行的东西就是新奇。 —— 马克·吐温</p></blockquote><p>渴求新奇是玩家持续进行游戏的一大动力——玩家相信，下一关会有新东西出现，才刺激他打通这一关。</p><p>创新中的最强的方式，是带来全新的思考方式。如《传送门》（Portal）的广告宣传就是“现在，你用传送门来思考（now, you’re thinking with portals）”。这个游戏的机制让你用全新方式思考世界。新思路可以扩展我们的大脑，让我们感觉无比畅快</p><p>但是要记得，世界上还有件事叫过犹不及。每个成功游戏都是新鲜与熟悉的混合体。许多优秀游戏因为超前于时代而失败。创新可以赢得口碑，推动早期销量，但如果没有坚实游戏本体，玩家们会来得快，去得快。</p><h4 id="24-号透镜：创新"><a href="#24-号透镜：创新" class="headerlink" title="24 号透镜：创新"></a>24 号透镜：创新</h4><blockquote><p>不同的未必总是好，更好的总是不同。 ——  斯科蒂·梅尔策(Scotty Meltzer)</p></blockquote><p>为了驾驭追求新奇的强大动机，请问自己这些问题:</p><ul><li>我的游戏有何新奇之处?</li><li>新奇之处是贯穿我的游戏，还是仅限于开头?</li><li>新奇和熟悉的混合感觉对吗?</li><li>新奇感褪去后，玩家还喜欢玩我的游戏吗?</li></ul><h3 id="评断"><a href="#评断" class="headerlink" title="评断"></a>评断</h3><p>马斯洛需求第四层，尊重，与游戏相连最紧密。为什么？所有人内心深处都有一个共同需求，就是需要他人评断（译者注：英文有俗语“don’t judge”，典出圣经，不要评断人，免得被评断。此处“评断”尤指擅自批评、干涉，因此作者有此语）。听起来好像不对劲，大家不是不喜欢被评断吗？确实——大家只是讨厌受到不公评断。内心深处，我们需要知道自己到底几斤几两。当评断让我们不开心，就会加倍努力，直到获得想要评断为止。游戏最吸引人的一点，就是可以系统且出色地给人客观评价。</p><h4 id="25号透镜：评断"><a href="#25号透镜：评断" class="headerlink" title="25号透镜：评断"></a>25号透镜：评断</h4><p>要了解你的游戏是否能评断好玩家，问自己这些问题:</p><ul><li>针对玩家，你的游戏都评价些什么?</li><li>游戏怎样传达这种评断?</li><li>玩家觉得评断结果公平吗?</li><li>他们在意评断结果吗?</li><li>评断结果是否让他们想要加强能力?</li></ul><hr><h2 id="第十二章-有些元素是游戏机制"><a href="#第十二章-有些元素是游戏机制" class="headerlink" title="第十二章 有些元素是游戏机制"></a>第十二章 有些元素是游戏机制</h2><p>游戏的骨架是由游戏机制定义的。<br>游戏机制是游戏真正的核心。剥离美学、技术和故事后，剩下的互动和关系，就是游戏机制。</p><p>游戏机制分类不明确的原因：</p><ul><li>简单游戏的玩法机制，也颇为复杂，难以解析。尝试将其简化到完美数学理解，就会产生各种描述，且不完整。</li><li>一方面，游戏机制是客观地、有明确规定的规则集。另一方面，游戏机制又设计一些比较神秘的东西（头脑中的某些心理模型）。</li></ul><p>下面是本书中尝试提出的机制分类。</p><h3 id="机制-1：空间"><a href="#机制-1：空间" class="headerlink" title="机制 1：空间"></a>机制 1：空间</h3><p>每个游戏都发生在某种空间里（space）。定义了游戏中可以存在的各个地点和它们之间如何关联。</p><p>一般而言，游戏空间：</p><ol><li>是离散或连续的。</li><li>具有一定数量的维度。</li><li>具有连接或不连接的有界区域。</li></ol><p>什么叫“离散”呢？<br>以九宫格为例，九宫格中只有九个离散空间有实际意义。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220612001245.png" alt="标记占据了九宫格九个离散空间之一"></p><p>某种意义上说，九宫格其实是 9 个零维的格子，在一个二维网络中互相连接：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220612001359.png"></p><p>每个圈代表一个零维空间，每条线表示相连的空间。在九宫格游戏中，没有在空间中的移动，相邻关系非常重要。<br>没有相邻关系，只有 9 个孤立的点。<br>有相邻关系，就变成离散 2D 空间，有着清晰边界——三格宽、三格高</p><p>思考大富翁棋盘，乍一看可能觉得是一个离散二维空间。但其实，只要一维空间就可以代表它——四十个离散点的一条线，头尾相连成一圈。<br>转角的格子和其他格子其实功能一样，每个格子都是零维空间。多个棋子可以停在一个格子内，但同一格内的相对位置无意义。</p><p>并非所有游戏空间都离散。桌球台就是连续二维空间的范例。但其实并非严格二维，因为有时候可以通过跳球的方式进行游玩，此时它暂时具有三维空间的属性。</p><p>对于抽象功能空间的描述并没有一定之规。<br>把游戏剥离成只有空间功能的目的是让你不受美学或是现实世界的干扰，可以更容易思考。</p><p>若考虑把足球场地边界修改成新样式，可能会从二维连续空间角度来思考：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220612002005.png"></p><p>若是想修改球门高度，或改变限制球员能将球踢多高的规则，又或者在场上加入起伏地面，那么当做连续三维空间来考虑就比较有利。</p><p>还有些时候，甚至可以把足球场当做离散空间考虑——将其分为九个主要区域，左右各多一个区域当做球门。分析各位置的配合玩法时，这样的思考模式会有帮助。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220612002216.png"></p><p>重点是找到最能帮助自己理解游戏中各种关联关系的一种。</p><h4 id="互相嵌套的空间"><a href="#互相嵌套的空间" class="headerlink" title="互相嵌套的空间"></a>互相嵌套的空间</h4><p>许多游戏空间更为复杂，具有嵌套空间。比如幻想角色扮演游戏（CRPG），此类游戏多包含二维连续“户外空间”。在该空间中旅行的玩家会遇到各种图标，代表市镇、洞穴或城堡等。玩家可以进入这些完全分隔的空间，其中除了出入口图标以外，与“户外空间”没有联系。</p><h4 id="零维度"><a href="#零维度" class="headerlink" title="零维度"></a>零维度</h4><p>每个游戏都一定在空间中进行吗？</p><p>思考这么一个游戏：一方（A）想出一个事物，另一方（B）提出能以“是”或“否”回答的问题。B 不断提问，并根据 A 的回答来猜测答案。</p><p>这里没有游戏盘，没有移动，只有二人对话，这个游戏中有空间吗？换一种思考方式就有：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220612002737.png"></p><p>A 脑中包含该事物，B 脑中包含对该事物是什么的判断，对话空间是信息交换的地方。每个游戏都有某种信息/状态,并且必须存在于某个地点。所以，就算一个游戏在一点上，或者在零维空间内发生，把它当做空间来思考也可以有帮助。</p><p>身为设计师，以功能抽象的视角来思考游戏空间是一大基础。这就是 26 透镜。</p><h4 id="26-号透镜：功能空间"><a href="#26-号透镜：功能空间" class="headerlink" title="26 号透镜：功能空间"></a>26 号透镜：功能空间</h4><p>要使用此透镜，请思考将所有表面元素剥离你的游戏之后，游戏究竟在什么空间内进行。</p><p>问自己以下问题:</p><ul><li>游戏空间是离散的还是连续的?</li><li>它有几个维度?</li><li>空间的边界在哪?</li><li>有没有子空间?空间如何互相联系?</li><li>是否有不止一种合理方式给游戏空间建立抽象模型?</li></ul><p>先专注空间，改造抽象空间布局满意后，再加以美学成分。<br>功能空间与 10 号透镜“全景设计”配合使用，效果很好。<br>如果能同时看清玩家将要体验到的抽象功能空间和美学空间，及它们之间的关联，就能充满自信地决定游戏世界的形态。</p><h3 id="机制2：时间"><a href="#机制2：时间" class="headerlink" title="机制2：时间"></a>机制2：时间</h3><p>游戏世界中的时间并非和现实一样，单向匀速前进，无法挽回。</p><h4 id="离散与连续的时间"><a href="#离散与连续的时间" class="headerlink" title="离散与连续的时间"></a>离散与连续的时间</h4><p>游戏中离散的时间单位即“回合”。</p><p>一般而言，回合制游戏中的时间并不重要。每一回合都是一个离散时间单位，回合之间并不存在时间。</p><p>很多游戏是在连续时间中进行。也有一些游戏使用混合时间系统，如国际象棋中采取回合制，但有连续计时器为每名选手规定时间限制。</p><h4 id="时钟与竞赛"><a href="#时钟与竞赛" class="headerlink" title="时钟与竞赛"></a>时钟与竞赛</h4><p>不同类型时钟在许多游戏中出现，用来给事物设定时间限制。如 Boggle （一种拼单词游戏）中的沙漏，美式足球中的计时钟，《大金刚》中马里奥跳跃的时长。设计目的在于通过绝对的时间计量对玩法作出限制。</p><p>时间也能嵌套。如篮球中会有总计时，但也有“24秒计时器”（美职业篮球比赛中规定，一方发起进攻后 24 秒内必须尝试进球得分，否则球权交给对方），来确保选手（玩家）们去冒更多风险，保证游戏过程好看。</p><p>也有偏相对性的方法来计量时间——一般称之为“竞赛”。竞赛情况下，没有固定时间限制，只有压力促使你比另一个玩家快。竞赛可能很明显，比如汽车赛，也可能比较隐含，如《太空侵略者》中，玩家需要在上方外星人碰到地面前将其全部击毁。</p><p>也有许多游戏中时间不是限制因素，但有意义。比如棒球中每局比赛没有时间限制，但如果比赛时间过长，投手就会耗尽体力，这让时间成为赛事的重要部分。</p><h4 id="操控时间"><a href="#操控时间" class="headerlink" title="操控时间"></a>操控时间</h4><p>游戏可以做到现实中无法想象的操控时间。<br>有多种引入方式：</p><ul><li>让时间完全停止<ul><li>体育比赛中的暂停（time-out）</li><li>游戏中的暂停（pause）</li></ul></li><li>加快时间<ul><li>《文明》中，几秒钟可以是游戏世界中的几年</li></ul></li><li>时间倒流<ul><li>游戏中的死亡回档</li><li>《时空幻境》（Braid）把操控游戏时间做成了游戏的核心机制</li></ul></li></ul><h4 id="27-号透镜：时间"><a href="#27-号透镜：时间" class="headerlink" title="27 号透镜：时间"></a>27 号透镜：时间</h4><p>俗话说“时间就是一切”。我们身为设计师的目标是创造体验，而体验如果太长、太短、太快、太慢，都很容易扫兴。要让你的体验长度刚刚好，可问自己以下问题:</p><ul><li>究竟是什么决定了我的游戏活动的长度?</li><li>我的玩家是否因为游戏结束太快，感到沮丧?我怎样才能改变这种状况?</li><li>我的玩家是否因为游戏时间太长，感到无聊?我怎样才能改变这种状况?</li><li>时钟和竞赛能不能让我的游戏玩法更激动人心?</li><li>时间限制也许会让玩家烦躁。我去掉时间限制会更好吗?</li><li>有层级的时间架构对我的游戏是否有益?或者说，几个小回合组成一个大回合好不好?</li></ul><p>要把时间调至合适的程度很难，但时间能成就一款游戏，也能毁掉一款游戏。听从以前歌舞艺人的格言“吊着他们的胃口 (leave’em wanting more) ” ，一般不会错。</p><h3 id="机制-3：对象、属性和状态"><a href="#机制-3：对象、属性和状态" class="headerlink" title="机制 3：对象、属性和状态"></a>机制 3：对象、属性和状态</h3><p>游戏空间中，一切可见物/可操纵物，都属于对象。对象是游戏机制里的“名词”。技术上而言，有时需要把空间本身也当做对象。</p><p>对象一般有一个或一个以上属性，其中一个常见属性是游戏空间中的位置。</p><p>属性是有关一个对象的各类信息。如赛车游戏中的车有最大速度、当前速度等属性。每个属性都有当前状态。有些状态不会经常变动（如最大速度），有些状态会在游戏过程中不断改变（如当前速度）。</p><p>对象 - 游戏机制名词<br>属性、状态 - 游戏机制形容词</p><ul><li>属性<ul><li>静态属性，整个游戏中不变<ul><li>如棋子颜色</li></ul></li><li>动态属性（主要感兴趣）<ul><li>如西洋跳棋中的“移动属性”的三种状态：普通、成王、被吃</li><li>国际象棋中，国王的“移动模式”属性：自由移动、将军、将死</li><li>《大富翁》中，每块地产都可以被当做一个对象，有动态属性“房屋数量”：0、1、2、3、4、宾馆；还有“抵押”属性：是、否</li></ul></li></ul></li></ul><p>不一定要将每次状态改变都告知玩家。有些必须告知，有些最好隐藏。<br>标准：若两个对象的行为相同，就应该看起来相同。如果行为不同，看起来也要不同。</p><p>游戏 AI 可以通过构建属性状态转换图来帮助梳理逻辑和调试。如《吃豆人》中的怪物：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220612005452.png"></p><p>状态图中会有起始状态（一般用两个圈表示）。<br>每个箭头代表依次可能的状态转化，由一个事件触发</p><p>对象有哪些属性，属性有哪些状态，取决于你。面对游戏设计的每一件事，在当时当景怎么最有效，就怎么去考虑，才是“正确”之路。</p><p>强迫玩家主义太多状态会让玩家不堪重负。下一种会讨论如何优化玩家需要处理的状态数量。</p><p>严格将游戏当做对象、属性、及其变化状态的结合，是一种有用视角：</p><h4 id="28-号透镜：状态机"><a href="#28-号透镜：状态机" class="headerlink" title="28 号透镜：状态机"></a>28 号透镜：状态机</h4><p>要使用此透镜，请思考你的游戏中哪些信息在改变。问自己这些问题:</p><ul><li>我的游戏中有什么对象?</li><li>这些对象的属性是什么?</li><li>每个属性有什么可能的状态?</li><li>每个属性中，是什么触发状态改变?</li></ul><p>玩游戏的过程就是做决定，决定是根据信息做出的。决定不同的属性、属性的状态、改变状态的事件，就是你游戏机制的核心。</p><h4 id="秘密"><a href="#秘密" class="headerlink" title="秘密"></a>秘密</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220612112612.png" alt="知情者韦恩图"></p><ul><li>每个圈代表一个知情者，包括神、游戏、以及玩家 123 号。每个点代表游戏中的一些信息——一个属性的状态</li><li>A 是完全公开信息，如棋子在棋盘上的位置，或者明牌。所有玩家都了解</li><li>B 是玩家 23 共享信息，但 1 不知道的状态。也许 23 有机会看过同一张暗牌，但 1 没有。也可能 23 是玩家 1 的虚拟对手，算法让其共享信息，一起对抗玩家 1</li><li>C 是单一玩家私密信息，这里属于玩家 2，比如他的牌</li><li>D 是只有游戏本身知道，但玩家们都不知道的信息。比如桌面角色扮演游戏中的 GM（game master）。他不属于玩家。但知道有关游戏状态的大量私密信息，因为他可能是真正让游戏机制运转的人。大部分电脑游戏中，都有很多玩家不知道的内部状态。</li><li>E 是随机生成的信息，只有命运或神明之类的才知道</li></ul><p>秘密即能力。</p><h4 id="29-号透镜：秘密"><a href="#29-号透镜：秘密" class="headerlink" title="29 号透镜：秘密"></a>29 号透镜：秘密</h4><p>改变谁掌握哪些信息，就能彻底改变你的游戏。要使用此透镜，请思考“谁”知道“哪些”，又是“为什么。</p><p>问自己这些问题:</p><ul><li>哪些信息只有游戏本身知道?</li><li>哪些信息所有玩家知道?</li><li>哪些信息只有一些或一个玩家知道?</li><li>改变谁掌握哪些信息，可以改进我的游戏吗?</li></ul><p>游戏过程就是做决定的过程。决定则根据信息做出。决定不同的属性及其状态，以及谁了解它们，是你的游戏机制的核心。对谁知道哪些信息做一些小修改，可以极大地改变一个游戏一一或者强到飞起，或者低到尘埃里。谁知道哪些属性这件事甚至可以在游戏过程中改变——想在你的游戏中创造戏剧性，一大方法就是突然将一条重要的私密信息公开。</p><h3 id="机制-4：行动"><a href="#机制-4：行动" class="headerlink" title="机制 4：行动"></a>机制 4：行动</h3><p>行动是游戏机制的动词。</p><p>有两种方式可以回答“玩家能做什么”：</p><ol><li>基本行动<br>即玩家能做的基本动作，如在西洋跳棋中，玩家仅能执行三个基本操作：</li></ol><ul><li>向前移动棋子</li><li>跳过对手棋子</li><li>往回移动棋子（仅限王）</li></ul><ol start="2"><li>策略行动<br>这些行动只在游戏大局上有意义——它们和玩家怎么使用基本行动来达成目标有关。通常比基本动作要多。考虑西洋跳棋中的可能策略行动：</li></ol><ul><li>把一个棋子移到另一颗后面保护之，以免被吃</li><li>迫使对手跳出不想要的步子</li><li>牺牲一个棋子来欺骗对手</li><li>造一座桥来保护后排棋子</li><li>把一颗棋子移入成王排，令其成王</li></ul><h4 id="自发玩法"><a href="#自发玩法" class="headerlink" title="自发玩法"></a>自发玩法</h4><p>有意义的策略行动与基本行动的比例是衡量一款游戏有多少自发性的标尺。<br>一款优雅的游戏只允许玩家做少量基本行动，却能组合出大量策略行动。</p><p>打造自发玩法，即有趣的策略行动，其过程有点像打理花园——园中生命自发生长，但同时又弱不禁风，容易毁坏。当你注意到自己的游戏中显现了一些有趣的策略行动，一定要能识别出来，然后尽己所能加以培养，为其创造机会蓬勃发展。</p><p>以下的提示可以为游戏准备土壤，好播下自发玩法的种子。</p><ol><li><p>添加更多动词。<br>也就是添加更多基本行动。<br>当基本行动与基本行动之间、基本行动与对象、基本行动与游戏空间互相作用，策略行动就会出现。<br>若添加更多基本行动，这些互动也会更多，相应地，自发玩法就更有机会产生。<br>添加过多基本行动，特别是互相不能很好呼应的，也可能让游戏变得臃肿混乱。<br>策略行动与基本行动的比值，比基本行动的绝对数量更重要。<br>最好添加优秀的基本行动。</p></li><li><p>能与许多对象互动的动词<br>如果一把枪只能射击敌人，游戏十分简单<br>但若是枪还能射开门锁、打破窗户、猎取食物、甚至在墙上留字等，就让游戏世界充满了可能性。<br>一个基本行动射击，辅以更多有效的设计对象，有意义的策略行动也随之增多了。</p></li><li><p>用各种方式达成的目标<br>给玩家许多带有多个对象的动词，让他们在游戏实际中干各种各样的事。<br>如果让玩家射击各种东西，但目标只是“打死 BOSS”，那玩家也只能这样<br>但若是可以射击怪物；也可以打落铁链，令吊灯砸下来；甚至可以完全不射击，用非暴力手段阻止——就有了丰富多变的游戏玩法，事情发展有了各种可能。<br>此方法的挑战之处是，游戏会更难平衡。</p></li><li><p>许多主体<br>如果西洋跳棋只有一颗红子、一颗黑子，规则不变，游戏就会很无聊。正是因为玩家有许多棋子可以移动、互动、合作、牺牲，整个游戏才有趣起来。<br>策略行动的数量大致相当于“主体 x 动词 x 对象”，所以添加主体有可能令策略行动数量随之增加。</p></li><li><p>改变限制条件的额外效果<br>若是每次行动还会产生额外效果，改变你或对手的限制环境，有可能出现很有意思的玩法。<br>西洋跳棋，每次移动棋子，不仅改变自己可以吃到的格子，也同时改变你的对手和自己可以移动到的格子。不论本意如何，每一步都改变着游戏空间的性质。<br>设想允许多个棋子在一个格子里，西洋跳棋会变成一个怎样的游戏呢。<br>强制游戏多方面随着每一个基本行动而改变，就很有可能会突然出现有趣的策略行动。</p></li></ol><h4 id="30-号透镜：自发"><a href="#30-号透镜：自发" class="headerlink" title="30 号透镜：自发"></a>30 号透镜：自发</h4><p>要确保你的游戏有有趣的自发玩法，问自己这些问题:</p><ul><li>我的玩家有多少动词可选?</li><li>每个动词可作用于多少对象?</li><li>玩家要达成目标有多少种方式?</li><li>玩家控制多少主体?</li><li>额外效果如何改变限制条件?</li></ul><p>游戏与书籍、电影相比，最显著的一个区别是动词数量。<br>游戏通常把玩家所能做的行动限制在很窄范围内。<br>故事中，角色能采取的行动数量近乎无限。<br>18 章“间接控制”中会讨论如何填补这个“行动鸿沟”，让你既能将基本行动数目保持在可控范围内，又能给玩家无限可能的感觉。</p><p>游戏相似的一个原因是它们使用一样的行动集。<br>玩家可以进行哪些行动对定义游戏机制颇为关键。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220613004712.png" alt="可支持大量动词的文字冒险游戏的衰落"></p><p>你选择哪些行动，很大程度上定义你游戏的结构。</p><h4 id="31-号透镜：行动"><a href="#31-号透镜：行动" class="headerlink" title="31 号透镜：行动"></a>31 号透镜：行动</h4><p>要使用此透镜，请思考你的玩家能做些什么、不能做什么，分别为什么</p><p>问自己：</p><ul><li>游戏中的基础行动是什么</li><li>策略行动是什么</li><li>想要看到怎样的策略行动？怎样改变游戏，令其可能？</li><li>策略行动与基础行动的比例，满意吗</li><li>玩家在游戏中有什么想做但不能做的行动？能不能设法令其成为可能，无论作为基础行动或策略行动？</li></ul><p>没有行动的游戏就像是没有动词的句子一什么也不会发生。你身为游戏设计师要做的最基础的决定，便是确定你游戏中的行动。对这些行动进行微小改变也会对游戏造成一系列巨大影响，可能会创造出惊人的自发玩法，也可能让游戏变得波澜不惊又烦琐。要小心选择你的行动，学会听从你游戏的声音、玩家的声音，从中了解你的选择能带来什么。</p><h3 id="机制-5：规则"><a href="#机制-5：规则" class="headerlink" title="机制 5：规则"></a>机制 5：规则</h3><p>所谓规则绝对是最基础的机制。<br>规则定义时间、空间、对象、行动、行动结果、行动限制，以及目标。<br>规则令前述所有机制成为可能，并加上了游戏之所以为游戏的一大关键——目标。</p><h4 id="帕莱特的规则分析"><a href="#帕莱特的规则分析" class="headerlink" title="帕莱特的规则分析"></a>帕莱特的规则分析</h4><p>游戏历史学者 David Parlett 在分析游戏过程中各异的规则方面很有建树：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220616010630.png" alt="Parlett 的规则分析"></p><ol><li><p>操作规则<br>即“玩家玩游戏要干什么”。<br>玩家了解操作规则后，就可以玩游戏了。</p></li><li><p>基础规则<br>基础规则是游戏底层架构。<br>操作规则表述：玩家掷一枚六面骰子，获得结果所示数量的力量标记<br>基础规则表述（更抽象）：玩家力量值增加 1~6 之间的随机整数<br>基础规则是一种数学表达，讲述游戏状态及其变化时机、方式。<br>棋盘、骰子、标记、生命计等，都只是记录基础游戏状态的操作方式。<br>基础规则是操作规则的基础<br>实践中，设计师一般只根据必要需求考虑基础规则，很少需要用正式文档将全套基础规则完全抽象地记录</p></li><li><p>行为规则<br>是游戏过程中暗含的规则，大部分人将其视为“体育精神”一部分。如不应该干扰对手。<br>行为规则的存在，强调了游戏是一种玩家之间的社交联系。<br>这些规则也形成操作规则基础<br>Steven Sniderman 有一篇讨论行为规则的好文章 —— Unwritten Rules</p></li><li><p>书面规则<br>是游戏自带的说明书，是玩家必须读来了解操作规则的文档。<br>但只有极少数人会去读。<br>现代电子游戏也逐渐摒弃书面规则，改为互动式新手教学<br>设计师必须思考 —— 玩家如何学会玩我的游戏</p></li><li><p>赛事条例<br>只有严肃、竞争性场合，赌注大到感觉有必要明确记录有两体育精神的规则，或需要明确或修改官方书面规则，赛事条例才会形成。<br>《铁拳 5》（Tekken 5）在 2005 Penny Arcade Expo 上的赛事规则：<br>a. 单淘汰制<br>b. 可自带控制器<br>c. 标准 VS 模式<br>d. 100% 血量<br>e. 随机选关<br>f. 60s 倒计时<br>g. 五局三胜<br>h. 三盘两胜<br>i. 禁止使用 Mokujin</p></li><li><p>官方规则<br>是将书面规则和赛事条例合并的形式。会慢慢成为书面规则。<br>如国际象棋中若是下一步可能将死对方，需要喊出“将军”。这原来只是“赛事条例”，不是书面规则。但如今已经是官方规则的一部分</p></li><li><p>建议性规则<br>也被称为策略规则<br>是让你玩得更好的提示，从游戏机制角度看并非真正规则</p></li><li><p>房规<br>即反馈，玩家们在游戏过程中有可能会想要调整操作规则，增加游戏乐趣<br>一般会玩了几个回合后才制定</p></li></ol><h4 id="模式"><a href="#模式" class="headerlink" title="模式"></a>模式</h4><p>不同的游戏模式可能意味着完全不同的游戏机制，让玩家知道自己处在哪个模式很重要<br>很多时候，都有一种主模式以及几个子模式</p><blockquote><p>玩家永远不该花费太长时间在子游戏内，以致于忘记了在主游戏里做什么。 —— 席德·梅尔</p></blockquote><blockquote><blockquote><p>不知道这里的“子游戏”是否涵盖“支线任务”之类的呢<br>随着游戏体量增大，也会存在部分玩家其实是为了“主游戏”之外的部分而来的情况</p></blockquote></blockquote><h4 id="执法者"><a href="#执法者" class="headerlink" title="执法者"></a>执法者</h4><p>传统游戏中，由玩家自己/裁判来确保规则得以执行<br>电子游戏中，有时必须让电脑来执行规则，这也解放了玩家，他们只需要不断尝试即可，无需反复查看规则</p><p>某种意义上，曾经的“规则”现在成了游戏世界里的物理限制<br>许多游戏规则借由空间、对象、动作的设计来实施</p><p>要把复杂电子游戏的规则做得让玩家可以自然地发现、理解——而不是只能强行记忆</p><blockquote><blockquote><p>所谓“符合直觉”的设计</p></blockquote></blockquote><h4 id="可作弊性"><a href="#可作弊性" class="headerlink" title="可作弊性"></a>可作弊性</h4><p>游戏之所以需要一个执法者是为了防止作弊</p><p>如果玩家开始相信你的游戏是“可作弊的”（即使不是），设计师努力开发的内在价值就会消失<br>如果游戏能作弊，有些人就会试图作弊，大多数人便不再想玩</p><h4 id="最重要的规则"><a href="#最重要的规则" class="headerlink" title="最重要的规则"></a>最重要的规则</h4><p>游戏的一切的基础是一条规则：游戏目标</p><p>游戏就是实现目标，一定要能把游戏目标说得清楚明白</p><p>通常游戏不只有一个目标，而是目标序列——需要将每一项目标依次说明，且阐明关系<br>要是玩家理解不当，就不能继续有把握的行动</p><p>比如国际象棋的目标——吃掉对方国王</p><p>玩家越容易理解目标，就越能想象自己实现目标的样子，越有可能想玩你的游戏</p><p>要让玩家一直有事可做、满怀动力，架构一套清晰目标/任务极为重要。</p><p>优秀游戏目标的特征：</p><ol><li>具体<br>玩家清楚了解并能讲述自己应该达成什么</li><li>可行<br>玩家需要觉得自己有机会达成目标</li><li>回报丰厚<br>请使用 20 号透镜——愉悦来找出奖赏玩家、让玩家为成就而自豪的各种方法。<br>奖励达成目标的玩家固然重要，让玩家在达成目标之前就觉得这目标奖赏丰厚也非常，甚至更加重要<br>但注意不要把期望吊得太高，以免失望</li></ol><p>让游戏中每个目标都具有这些特质颇为重要<br>让游戏中短期、长期的各种目标达到平衡，也很重要。目标的平衡会让玩家感觉自己了解眼下该做什么，并最终能达成一件重大成就。</p><h4 id="32-号透镜：目标"><a href="#32-号透镜：目标" class="headerlink" title="32 号透镜：目标"></a>32 号透镜：目标</h4><p>为确保游戏目标适当且均衡，问自己：</p><ul><li>游戏终极目标是什么</li><li>终极目标对玩家明确吗</li><li>如果有一系列目标，玩家明白吗</li><li>不同目标是否以一种有意义方式互相关联</li><li>目标是否具体、可行、回报丰厚</li><li>短期和长期目标是否平衡</li><li>玩家有无机会决定自己的目标</li></ul><p>同时拿起玩具、好奇、目标透镜，观察游戏这些方面如何互相影响</p><h4 id="规则总结"><a href="#规则总结" class="headerlink" title="规则总结"></a>规则总结</h4><p>规则是一切游戏机制的基础。<br>不是规则定义了游戏。游戏即其规则。</p><h4 id="33-号透镜：规则"><a href="#33-号透镜：规则" class="headerlink" title="33 号透镜：规则"></a>33 号透镜：规则</h4><p>深刻观察游戏，直到能辨别最基础架构，回答：</p><ul><li>游戏中的基本规则是哪些，这些规则和操作规则有何不同</li><li>开发过程中有没有形成“条例”或“房规”，这些是否应该直接纳入游戏中</li><li>游戏中有不同模式吗？这些模式让一切更简单还是更复杂？减少一些模式会让游戏更好玩吗？还是增加模式？</li><li>谁来执行规则</li><li>规则是简单易懂，还是有晦涩之处？如果有晦涩之处需要修订，应该修改规则还是更清楚地解释规则？</li></ul><p>常见误解是以为设计师做下来写一套规则就能做出游戏。一般不是。游戏规则是在实验中逐步完善的。设计师的头脑一般都在“操作规则”领域里工作，偶尔在思考怎样调整、改善游戏的时候，才切换到“基础规则”视角。“书面规则”一般在游戏能玩之后，接近收尾时形成。确保规则覆盖到每一种可能情况，是设计师的工作。一定要在试玩的同时做好记录，因为正是试玩过程会暴露出规则漏洞——如果只是随便修修补补，不认真记录，同样的漏洞会再现。<br>游戏即其规则，不可不在规则上花费足够时间和思量。</p><h3 id="机制-6：技巧"><a href="#机制-6：技巧" class="headerlink" title="机制 6：技巧"></a>机制 6：技巧</h3><blockquote><p>成功的度量有许多种。 —— 西塞罗</p></blockquote><p>每个游戏都需要玩家实践特定技巧。若玩家技巧与游戏难度相符，玩家就会感到挑战，并能保持“心流”状态。</p><p>技巧可以大致分为三类：</p><ol><li><p>身体技巧<br>涉及力量、灵巧、协调性和耐力<br>是大多数体育的重要组成部分<br>有效操控游戏控制器也是一种身体技巧<br>很多游戏（如《舞力全开》）要求玩家拥有的身体技巧就更广泛</p></li><li><p>心智技巧<br>包含记忆、观察、解谜的技巧<br>少有不包含心智技巧的游戏<br>游戏之所以有趣就在于做出有趣决定<br>做决定也是一种心智技巧</p></li><li><p>社交技巧<br>包括阅读对手（猜测其想法）、愚弄对手、配合队友等<br>通常的社交技巧指交朋友、影响他人的能力<br>游戏中，社交和沟通技巧范围更广泛<br>扑克很大程度是一款社交游戏，因为太多内容基于隐藏自己想法、猜测别人想法<br>体育中也有使用技战术来“让对手紧张”的部分</p></li></ol><h4 id="真实技巧与虚拟机能"><a href="#真实技巧与虚拟机能" class="headerlink" title="真实技巧与虚拟机能"></a>真实技巧与虚拟机能</h4><p>讨论作为游戏机制的技巧时，说的是玩家必须拥有的真实技巧<br>玩家在游戏中所获得的技能等算是虚拟机巧——玩家假装拥有的技能</p><p>虚拟技能是让玩家有力量感的绝佳手段<br>但若是使用过度，可能也会落空——许多人批评 MMO 过于强调虚拟机能，对真实技巧重视不足<br>要制作好玩的游戏，关键在于找到真实和虚拟机巧的 完美搭配</p><h4 id="列举技巧"><a href="#列举技巧" class="headerlink" title="列举技巧"></a>列举技巧</h4><p>用一张表列出游戏中所需的全部技巧，可能非常有用。</p><p>你的列表可能很宽泛，可能很具体</p><p>列出技巧可能会很困难，如 RC Pro Am，NES 上的一款赛车游戏</p><ul><li>操作方式<ul><li>方向键（左手大拇指） - 操控车辆</li><li>A（右手大拇指） - 加速</li><li>B（右手大拇指） - 向敌人开火</li></ul></li><li>考察<ul><li>解决问题能力<ul><li>一般游戏中要想按 B 键一般会先松开 A 键</li><li>该游戏中若是松开 A 键敌人就会加速跑掉 —— 所以需要练习如何同时按下 AB 键</li></ul></li><li>其他技巧<ul><li>资源管理 —— 不要用光导弹/地雷</li><li>记忆赛道</li><li>急转弯</li><li>意外危险</li></ul></li></ul></li></ul><p>作为设计师，需要知道玩家需要什么技巧来解决你所设计的问题</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220621005953.png"></p><h4 id="34-号透镜：技巧"><a href="#34-号透镜：技巧" class="headerlink" title="34 号透镜：技巧"></a>34 号透镜：技巧</h4><p>不观察游戏本身，观察游戏要求玩家发挥的技巧。</p><ul><li>游戏需要玩家拥有何种技能</li><li>其中是否缺少某个类别技能</li><li>哪些技能占主导地位</li><li>这些技能是想要创造的体验吗</li><li>是否有一些玩家的这些技能远超其他玩家？是否会让游戏感觉不公平？</li><li>玩家能否通过练习提高技巧，从而感觉掌握了游戏</li><li>游戏需要的技巧水平合适吗</li></ul><p>发挥技巧可以让人很快乐——这是人们喜爱游戏的一大原因<br>当然了，技巧水平和难度需要处于“心流”区间<br>技巧很大程度上定义体验，技巧透镜和 2 号透镜“本质体验”结合使用，效果很好。</p><h3 id="机制-7：概率"><a href="#机制-7：概率" class="headerlink" title="机制 7：概率"></a>机制 7：概率</h3><p>这是七大机制中的最后一个，其中涉及前面所有机制：时间、空间、对象、行动、规则、技巧的相互作用。</p><p>概率意味着不确定性，意味着惊喜。<br>惊喜是人类愉悦的重要来源，乐趣的秘密原料。</p><p>永远不要以为概率理所当然。<br>优秀游戏设计师一定要对概率有敏感直觉、也要牢固掌握概率原理，按照意志塑造概率，令创造出的体验充满挑战性决策和好玩的惊喜。</p><h4 id="概率的发明"><a href="#概率的发明" class="headerlink" title="概率的发明"></a>概率的发明</h4><p>概率的发明是为了解释游戏设计的目的。</p><blockquote><p>他是个好人，可惜不是数学家。 —— 帕斯卡对费马评论安托万·贡博</p></blockquote><p>1654 年，法国贵族 Antoine Gombaud, the Chevalier de Mere 遇到一个问题</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220621140357.png"></p><h4 id="游戏设计师必知的十大概率原则"><a href="#游戏设计师必知的十大概率原则" class="headerlink" title="游戏设计师必知的十大概率原则"></a>游戏设计师必知的十大概率原则</h4><ol><li><p>分数=小数=百分数</p></li><li><p>从零到一就好了<br>即概率范围为 [0,1]</p></li><li><p>$概率 = \frac{想要的结果会出现的次数}{可能的结果的总次数}$</p></li><li><p>枚举<br>若是面对“丢一枚硬币三次，至少出现两次头的概率”这种问题，可以采取枚举的办法将所有可能列出（H 表示头，T 表示另一面），易知共有 $2^3 = 8$ 种可能情况：</p></li></ol><ol><li>HHH</li><li>THH</li><li>HTH</li><li>HHT</li><li>THT</li><li>HTT</li><li>TTH</li><li>TTT<br>所以针对出现两次头这一问题，其出现为 1234，即四种，所以概率为 4/8<br>枚举法只适用于可能性较少的问题</li></ol><ol start="5"><li>特定情况下“或”意为“加”<br>很多时候要确定“A 或 B 的概率”，如“从一幅牌中抽出人头或者 A 的概率”，此时只需要将“抽出人头的概率”和“抽出 A 的概率”相加就可。</li></ol><blockquote><blockquote><p>互斥事件，二者互不影响，不会同时发生</p></blockquote></blockquote><p>所以此时的概率为 $\frac{12}{52} + \frac{4}{52} = \frac{16}{52}$</p><p>但对于另一种问题，就不能直接加和。如“从一幅牌中抽出一个 A 或是一个方片的概率”，二者并不是互斥事件（有可能抽出的是方片 A），所以概率不能直接加和。</p><p>此时的概率的其中一种算法是 $抽出 A 的概率 + 抽出方片的概率 - 抽出方片 A 的概率 = \frac{4}{52} + \frac{13}{52} - \frac{1}{52} = \frac{16}{52}$</p><ol start="6"><li>特定情况下“和”意为“乘”</li></ol><p>该规则和前一条几乎正相反！如果要找出两事件同时发生概率，可以将概率相乘，但只有这两个事件不是互斥的才行！<br>如果想掷两次骰子，想得出两次都为 6 的概率，则为 $\frac{1}{6} * \frac{1}{6} = \frac{1}{36}$<br>对于上面提到过的，抽到方片 A 的概率，虽然自然能想到是 $\frac{1}{52}$ ，也可以用该规则检查一下 $抽到方片 A 的概率 = 抽到方片的概率 * 抽到 A 的概率 = \frac{13}{52} * \frac{4}{52} = \frac{1}{52}$ 也是一样的</p><p>此时思考游戏一</p><ul><li>游戏 1：掷一粒骰子四次，有一次为 6 则获胜<br>此时要算获胜概率，可以用这样的方法：<br>$$ 获胜概率 = 1 - 四次都不是六的概率 = 1 - \frac{5}{6} \times \frac{5}{6} * \frac{5}{6} * \frac{5}{6} = \frac{671}{1296} = 51.77% $$<blockquote><blockquote><p>哦 这是规则 7 要引入的方法哈哈，那规则六就截图一下好了</p></blockquote></blockquote></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220625004524.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220625004541.png"></p><ol start="7"><li>1 - “是” = “不是”</li></ol><p>思考第二个游戏，每次投两个骰子，一共  24 次，只要其中一次点数为 12 则获胜，则获胜概率为</p><p>$$获胜概率 = 1 - 24 次非 12 的概率 = 1 - (单次非 12 的概率)^{24} = 1 - (1-单次 12 的概率)^{24}$$<br>$$ = 1 - (\frac{1}{6}*\frac{1}{6})^{24} = 1 - (\frac{35}{36})^{24} = 49.14%$$<br>8. 多个线性随机选择的总和不是线性随机选择！</p><p>一个“线性随机选择”是一个随机事件，其中所有结果发生概率相同<br>掷一次骰子就是线性随机选择的例子<br>可若把多次投骰子的结果相加，所有可能结果发射的概率就不相等，如，投两个骰子，很大概率投出 7，很小概率得到 12：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220625005650.png"><br>同时也可以画出其概率分布图：<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220625005713.png"></p><p>新手游戏设计师常误将两个随机选择的数字相加，却对其后果浑然不觉。<br>设计师若想在游戏中运用概率机制作为工具，必须清楚想要怎样的概率曲线，还要知道怎么得出。概率分布曲线会成为工具箱中很有价值的工具。</p><ol start="9"><li>掷骰子<br>以上的所有概率都是理论概率，即数学上看什么理应发生。<br>还有一种实际概率，用于衡量什么已经发生。<br>如投骰子得到一个 6 的理论概率为 $\frac{1}{6}$ ，可以通过投一个 6 面骰子100 次，记录得到 6 的次数，找出实际概率。实验次数越多，实际概率就越接近理论概率。这就是“蒙特卡洛方法”，以那座著名赌场命名。<br>蒙特卡洛方法的优点：简单，不涉及任何复杂数学，只需要重复测试。</li></ol><p>计算机时代，计算机可以在短时间内进行大量模拟。可以运用 Joris Dormans 创造的 Machinations 系统，该系统专门设计来为游戏玩法系统建模，并通过反复模拟来展示结果规律。</p><ol start="10"><li>极客爱炫耀（贡博定律）<br>这可能是一切概率准则中最重要的一条。忘了别的也不能忘了这条。<br>碰到难搞定的概率问题，最简单的做法是找到自认是“数学神童”的人。<br>一般而言，这些人发现真有人需要他们的专业技能，都会很激动，并且使出浑身解数来帮你。</li></ol><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220625010607.png"></p><blockquote><blockquote><p>可真是让人哭笑不得 (￣▽￣)”</p></blockquote></blockquote><h4 id="期望值"><a href="#期望值" class="headerlink" title="期望值"></a>期望值</h4><p>游戏中，一次数据处理的期望值等于所有可能结果的平均值。</p><p>如，一个桌面游戏规定，当一个玩家走上绿色方块，可以投六面骰子，得到结果所示的能量点数。该事件的期望值是所有可能结果的均值。要得到该案例中的均值，因为所有结果概率相等，将所有结果相加然后除以六就能得到 $(1+2+3+4+5+6)/6 = 3.5$ ，即 “每次有人走到绿色方块，平均能得到 3.5 点能量”，这一消息对于设计师而言很有用。</p><p>对于更复杂的情况，计算期望，需要把概率乘以各自的值，再相加。<br>如对于一个游戏，一个玩家投两个骰子，若是 7 或 11，则得 5 美元，其他结果输 1 美元，其期望为：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220625011506.png" alt="7 和 11 会赢"><br>若只有 7 会赢<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220625011800.png" alt="只有 7 会赢"><br>若只有 11 会赢<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220625011809.png" alt="只有 11 会赢"></p><h4 id="仔细考虑数值"><a href="#仔细考虑数值" class="headerlink" title="仔细考虑数值"></a>仔细考虑数值</h4><p>考虑一下三种攻击：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220625011950.png"></p><p>三者期望各是多少呢？<br>疾风：$4 * 1 = 4$<br>火球：$5 * 0.8 + 0 <em>0.2 = 4$<br>闪电：$40 * 0.2 + 0 * 0.8 = 20$<br>也许你会得出结论，玩家面对敌人肯定会使出攻击期望最高的闪电。<br>对于生命高达 500 的敌人，可能如此。但若是敌人只有 15 点生命，可能玩家就不会再选择使用闪电 —— 此种情况下，闪电造成伤害的期望为 $15</em>0.2+0*0.8=3$ ，低于另外二者</p><p>一定要随时注意衡量游戏中所有行动的真实价值。<br>如果什么东西给玩家的好处不能使用，或包含隐藏惩罚，计算中一定要考虑到</p><h4 id="人为因素"><a href="#人为因素" class="headerlink" title="人为因素"></a>人为因素</h4><p>期望值不能完全预测人的行为，因为人们会根据“感知期望”而不是实际期望来做决策。<br>比如他们用了几次闪电之后发现都 miss 了，可能就会得出“闪电根本打不中”，所以伤害期望为 0 的“感知期望”。</p><p>有时就算给出完美信息，玩家仍然不会选择期望值最高的选项。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220625012632.png"></p><p>原因在于，期望没有考虑重要的人为因素：后悔。人们会趋利避害。</p><blockquote><p>当讨论到获利时的冒险，大家都保守。他们愿意确保获利，胜过可能获利。但我们也发现，人们面对选择，是小额必然损失还是大额可能损失时，他们会赌。</p></blockquote><p>这也是《智龙迷城》（Puzzle &amp; Dragons）成功的一大缘由：玩家在死亡后愿意付出现实里的小额金钱来复活，避免小额必然损失。</p><p>大脑对很多事情的概率估计是不准确的：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220625013125.png"></p><p>作为设计师，不光要考虑实际概率，也要考虑感知概率。</p><h4 id="35-号透镜：期望值"><a href="#35-号透镜：期望值" class="headerlink" title="35 号透镜：期望值"></a>35 号透镜：期望值</h4><p>思考游戏内发生的各种不同事件，以及它们对玩家的意义</p><ul><li>某件事发生的实际概率？</li><li>其感知概率？</li><li>这件事的结果的价值？价值能否被量化？有没有没考虑到的无形价值？</li><li>把所有可能结果相加，玩家所有行为都有不同期望。对这些值满意吗？是否给玩家有趣的选择？会不会奖赏太多？或惩罚太多？</li></ul><p>期望值是分析游戏平衡的有力工具。难点是某些可能性的量化，如“拥有了传送门道具”，但还是可以猜。<br>调整参数就是调整对结果数值的估计。<br>量化这些偏无形的元素可能很有启发，因为这能让你接地气地思考对玩家有价值的东西是什么，以及为什么。<br>这些接地气的知识，能让你控制游戏平衡性。</p><h4 id="纠结的技巧和概率"><a href="#纠结的技巧和概率" class="headerlink" title="纠结的技巧和概率"></a>纠结的技巧和概率</h4><ol><li><p>估算概率是一种技巧<br>有无估算技巧的玩家，在游戏中感知到的概率或许差距甚大<br>如会算牌的和不会算牌的</p></li><li><p>技巧都有成功概率<br>游戏行为因为引入了人这一不确定因素，所以不完全由概率决定。设计游戏时要确保风险平衡</p></li><li><p>估计对手的技巧也是种技巧<br>预判对方行动<br>或者扮猪吃老虎<br>都是策略</p></li><li><p>预测纯概率是一种想象中的技巧<br>我们对规律的狂热往往促使我们寻找本不存在的规律<br>如“热手谬误”（已经连赢好几次了，下次也可能赢）<br>“赌徒谬误”（已经连输好几次了，下次一定会赢）<br>作为设计师，要想办法利用玩家的想象</p></li><li><p>控制纯概率是一种想象中的技巧<br>大脑不仅积极寻求规律，还拼命寻求因果<br>纯概率情况下，根本无法控制因果——但这并不能阻止大家用某种特定手法投骰子、佩戴护身符、或进行某种迷信仪式。虽然这些对于纯概率游戏毫无影响，但其实这些行为也是游戏乐趣的重要来源。</p></li></ol><blockquote><blockquote><p>想到了鸽子的迷信仪式实验 233</p></blockquote></blockquote><h4 id="36-号透镜：概率"><a href="#36-号透镜：概率" class="headerlink" title="36 号透镜：概率"></a>36 号透镜：概率</h4><p>专注于游戏中包含随机和风险的部分，时刻记住两者有不同之处<br>问自己</p><ul><li>游戏中真正随机的内容是什么？哪些部分只是感觉起来随机</li><li>随机性给玩家的，是刺激和挑战等积极情感，还是绝望和缺乏控制等消极情感</li><li>改变概率分布曲线能改进游戏吗</li><li>玩家能在游戏中冒各种有趣风险吗</li><li>游戏中，概率与技巧有何关系？有没有办法让随机元素感觉像是在发挥技巧？有没有办法让发挥技巧感觉像是在冒风险？</li></ul><p>风险和随机性就像香料。完全不加的游戏可能淡而无味，加多了又会遮盖游戏原本味道。要运用得恰到好处。<br>要运用，需要深入观察游戏，看看风险和随机性在何处自然浮现，然后决定如何驯服之，令其为你服务。<br>不要陷入思维陷阱，以为投骰子或者生成随机数才会产生概率相关元素。正相反，在玩家遭遇未知的每个时刻，你都能找到它们。</p><h2 id="20220711-第十三章-游戏机制必须平衡"><a href="#20220711-第十三章-游戏机制必须平衡" class="headerlink" title="20220711 第十三章 游戏机制必须平衡"></a>20220711 第十三章 游戏机制必须平衡</h2><blockquote><p>诡诈的天平为耶和华所憎恶。 —— 《箴言 11：:1》</p></blockquote><p>平衡一个游戏，不过是调整游戏的各种元素，直到它们传达了你想要的体验。</p><h3 id="十二种最常见的游戏平衡"><a href="#十二种最常见的游戏平衡" class="headerlink" title="十二种最常见的游戏平衡"></a>十二种最常见的游戏平衡</h3><h4 id="平衡类型-1：公平"><a href="#平衡类型-1：公平" class="headerlink" title="平衡类型 1：公平"></a>平衡类型 1：公平</h4><blockquote><p>不对等的战斗毫无乐趣可言。 —— 卡武尔太太（出自电影《妈妈市场》）</p></blockquote><h5 id="对称游戏"><a href="#对称游戏" class="headerlink" title="对称游戏"></a>对称游戏</h5><p>给予所有玩家同等资源和能力。</p><p>如果想要玩家们互相直接竞争，并预期他们的技巧水平差不多，对称游戏是不错的选择。这种系统特别适合确定哪个玩家最强。</p><p>完美对称也不容易实现，会存在“先/后手优势”等问题，一般用抛硬币或投骰子等随机方式解决。<br>有时会把优势给劣势方可以弥补不对称，如“让年龄最小的玩家先来”。</p><h5 id="不对称游戏"><a href="#不对称游戏" class="headerlink" title="不对称游戏"></a>不对称游戏</h5><p>创造非对称游戏的可能原因：</p><ol><li><p>为了模拟真实世界情况</p></li><li><p>为了给玩家另一种方式来探索游戏空间<br>如格斗游戏中，用不同角色意味着不同玩法。</p></li><li><p>个性化<br>可以让玩家自由选择游戏方式</p></li><li><p>为了场上情况均衡<br>特别是当双方实力相差悬殊时，或有电脑对手在场<br>是否引入该方法，取决于游戏目的。是要对玩家技巧设立标准，还是为所有玩家提供挑战。</p></li><li><p>为了创建有趣情况<br>让多股不对称力量相互斗争很有趣，且能引发玩家深刻思考<br>游戏制胜策略往往不能一眼看出，玩家会思考哪方占优，游戏是否真正公平<br>例子：尼泊尔虎棋。一方控制五只老虎，另一方控制二十只山羊。老虎方吃五只山羊就胜利，山羊方移动山羊，使得所有老虎不能移动而取胜。有经验的玩家一般承认游戏公平，但新手玩家会花大量时间讨论是否公平，并反复游玩以确认。</p></li></ol><p>不对称游戏的平衡通常通过量化资源/能力，确保双方总值相等。</p><h5 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h5><h6 id="双翼飞机大战"><a href="#双翼飞机大战" class="headerlink" title="双翼飞机大战"></a>双翼飞机大战</h6><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220711004949.png"></p><p>此时不好判断平衡性，但若是将低中高分别量化为 123，那么可以得到</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220711005039.png"></p><p>好像复仇者优势明显。经过测试后，发现食人鱼和复仇者势均力敌，但骆驼总是输，所以推测火力比其他属性更有价值，同时将骆驼火力调高，从而得到新的表：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220711005225.png"></p><p>如果此时几方势均力敌，则说明模型正确，否则可能需要继续调整模型。</p><p>调整平衡和开发指导平衡的模型需要共同推进。<br>只有游戏可玩了，才能真正开始调整平衡。<br>经验之谈：一半的开发时间应该用来平衡游戏。</p><h6 id="石头、剪子、布"><a href="#石头、剪子、布" class="headerlink" title="石头、剪子、布"></a>石头、剪子、布</h6><p>还有一种平衡方式——克制关系。</p><h4 id="37-号透镜：公平"><a href="#37-号透镜：公平" class="headerlink" title="37 号透镜：公平"></a>37 号透镜：公平</h4><p>要使用公平透镜，从玩家视角思考游戏。考虑玩家技巧水平，找到方法让每个玩家都有机会获胜，且各自都认为公平。</p><ul><li>游戏应该对称吗，为什么</li><li>游戏应该不对称吗，为什么</li><li>哪点更重要？<ul><li>游戏应能有效衡量谁的技巧水平最高</li><li>游戏应该为所有玩家都带来有趣挑战</li></ul></li><li>如果想让不同水平玩家一起玩，会用什么手段，令游戏对所有人都具有趣味性和挑战性</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220711005807.png"></p><h3 id="平衡类型-2：挑战与成功"><a href="#平衡类型-2：挑战与成功" class="headerlink" title="平衡类型 2：挑战与成功"></a>平衡类型 2：挑战与成功</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220711010326.png"></p><p>让玩家能持续体验心流，意味着平衡挑战与成功两种体验。由于玩家技巧水平不一，找到平衡很难。以下是找到平衡的一些常用方法：</p><ul><li>随着每次成功增加难度。<ul><li>一方面不断增强关卡难度</li><li>一方面也不要忘记“张弛有度”</li></ul></li><li>让玩家快速打通容易部分<ul><li>可以让熟练玩家快速遇到有意思的挑战</li><li>让技巧不那么熟练的玩家慢慢挑战之前的关卡</li><li>可以让每种类型玩家都快速进入游戏中能给自己带来挑战的部分</li></ul></li><li>创建“层层挑战”<ul><li>即结尾评分，如评分太差，就需要重玩</li><li>新手玩家一开始只要能拿 C，就能沉浸在过关喜悦中，但随着技术水平提高，他们也会对自己有更高评分要求</li></ul></li><li>让玩家自选难度<ul><li>一种是预设难度 —— 游戏开始前就定好了会遇到什么样的困难</li><li>一种是动态难度 —— 在游戏过程中根据玩家表现调整难度<ul><li>优点：可以让玩家找到相匹配的挑战难度</li><li>缺点：<ul><li>需要创建多个难度版本（这个是对应以前的游戏，随着人工智能的发展，动态难度这一问题相信会真正被攻克）</li><li>会削弱游戏“真实感”（书中说玩家会争论哪个版本才是“真的”，译者注里面写，作者解释说，这里的“真实”指的是令玩家认真对待幻想世界的真实感，因为如果有多个平行幻想世界，就提醒了玩家这些都是虚构的。有些幻想世界比别的感觉更真实。）</li></ul></li></ul></li><li>请各种玩家试玩<ul><li>让具有各种技巧水平的玩家都来试玩，确保游戏开头好玩，稍后好玩，后面依然好玩</li></ul></li><li>让失败者休息一下<ul><li>《马里奥赛车》中的道具机制是排名靠前的玩家拿到的道具就弱，排名靠后的玩家拿到的道具就强。这是很棒的设计。</li></ul></li></ul></li></ul><p>决定游戏难度怎样随时间增加，是调整游戏平衡的一大挑战。<br>作为设计师，应当问自己，“我想要百分之多少的玩家能打通游戏？”，然后朝这个目标去设计</p><p>不要忘记，学着玩一个游戏，本身也是挑战！因此，游戏前一两关通常非常简单。因为玩家需要理解“控制和目标”。在前期，一点点成功可以帮助玩家建立自信，自信的玩家是不会轻易放弃一款游戏的。</p><h4 id="38-号透镜：挑战"><a href="#38-号透镜：挑战" class="headerlink" title="38 号透镜：挑战"></a>38 号透镜：挑战</h4><p>挑战几乎是所有游戏玩法的核心。甚至可以说，游戏由其目标和挑战所定义。检查游戏中的挑战，问自己：</p><ul><li>游戏中的挑战是什么</li><li>太容易？太难？刚刚好？</li><li>这些挑战能否容纳各种技巧水平</li><li>随着玩家不断成功，挑战难度如何增长</li><li>挑战种类是否足够多样</li><li>游戏中最高水平挑战是什么</li></ul><hr><h2 id="透镜汇总"><a href="#透镜汇总" class="headerlink" title="透镜汇总"></a>透镜汇总</h2><h4 id="1-号透镜：情感-1"><a href="#1-号透镜：情感-1" class="headerlink" title="1 号透镜：情感"></a>1 号透镜：情感</h4><ul><li><p>人们可能忘掉你的言语,但他们永远不会忘掉他们对你的感受。 一玛雅·安杰洛(Maya Angelou)</p></li><li><p>为了确定你创造的情感是正确的,问自己这几个问题:</p><ul><li>我希望玩家能够体验到怎样的情感?为什么?</li><li>当人们(包括我自己)玩游戏时,他们产生了怎样的情感?为什么?</li><li>我怎样缩小人们的实际体验与我的设想之间的距离?</li></ul></li></ul><h4 id="2-号透镜：本质体验-1"><a href="#2-号透镜：本质体验-1" class="headerlink" title="2 号透镜：本质体验"></a>2 号透镜：本质体验</h4><ul><li>要想使用这个透镜,你需要停止你的游戏,开始思考游戏给玩家的体验。问你自己这几个问题：<ul><li>我想要让玩家获得怎样的体验?</li><li>这种体验的本质是什么?</li><li>我应该如何让我的游戏抓住这种体验的本质?</li></ul></li></ul><h4 id="3-号透镜：场景-1"><a href="#3-号透镜：场景-1" class="headerlink" title="3 号透镜：场景"></a>3 号透镜：场景</h4><ul><li>3号透镜:场景<ul><li>在我们的游戏设计中,我们玩游戏的场景对游戏会产生巨大的影响。为了确定你没有凭空设计游戏,问你自己这几个问题:<ul><li>我想要制作的游戏最适合哪种场景?</li><li>我的场景中是否有一些特殊的属性会影响到我的游戏?</li><li>我的游戏中有哪些元素能够与场景和谐共处?哪些元素不行?</li></ul></li></ul></li></ul><h4 id="4-号透镜：惊喜-1"><a href="#4-号透镜：惊喜-1" class="headerlink" title="4 号透镜：惊喜"></a>4 号透镜：惊喜</h4><ul><li>惊喜是一种我们很容易忘记的基础情绪。使用这个透镜来提醒你自己让你的游戏充满惊喜。问你自己这几个问题:<ul><li>当玩家们玩我的游戏时,什么会让他们感到惊喜?</li><li>我的游戏中的故事有惊喜吗?或者规则呢?或者艺术呢?或者技术呢？</li><li>你的规则能够让玩家之间互相带来惊喜吗?</li><li>你的规则能够让玩家们给自己带来惊喜吗?</li><li>惊喜是所有娱乐活动的重要组成部分–它是幽默、策略和解决问题的基础。我们的大脑很容易感受到惊喜。在一个实验中,测试者将糖水或者普通水喷到参与者的口中,获得随机模式喷雾的参与者会比获得固定模式喷雾的参与者有更好的体验,即使他们获得了同样数量的糖水。在另外的实验中,大脑扫描显示了即使在不愉快的惊喜中,大脑的愉悦中心也会被触发。</li></ul></li></ul><h4 id="5-号透镜：乐趣-1"><a href="#5-号透镜：乐趣-1" class="headerlink" title="5 号透镜：乐趣"></a>5 号透镜：乐趣</h4><ul><li>尽管有时候乐趣无法被分析,但在几乎所有的游戏中乐趣都是令人喜爱的。为了最大化游戏的乐趣,问你自己这几个问题:<ul><li>我的游戏中的哪个部分很有趣,为什么?</li><li>哪个部分需要变得更加有趣?</li></ul></li></ul><h4 id="6-号透镜：好奇心-1"><a href="#6-号透镜：好奇心-1" class="headerlink" title="6 号透镜：好奇心"></a>6 号透镜：好奇心</h4><ul><li>要使用这个透镜,思考玩家的真的动机-不是游戏的目标,而是玩家想要完成目标的真正原因。问你自己这几个问题:<ul><li>我的游戏给玩家的大脑提出了怎样的问题?</li><li>我正在做哪些努力让他们在意这些问题?</li><li>我能做什么来使他们提出更多的问题?</li><li>比如,一个解谜电子游戏在每一关中都可能有一个时间限定的目标。玩家们尝试回答这样一个问题: “我能在30秒之内找到过关的方法吗? ”一个让他们更加在意的方法是,当他们解决了任意一个谜题后播放一段有趣的动画,那么玩家就会问这样一个问题: “我想知道下一个动画是什么吗? ”</li></ul></li></ul><h4 id="7-号透镜：内生价值-1"><a href="#7-号透镜：内生价值-1" class="headerlink" title="7 号透镜：内生价值"></a>7 号透镜：内生价值</h4><ul><li>7号透镜:内生价值<ul><li>一个游戏的成功与玩家认为它是否重要紧密相关。要使用这个透镜来思考一下,在你的游戏中,玩家对道具、目标和分数的感受。问你自己这几个问题:<ul><li>在我的游戏中哪些东西对玩家很有价值?</li><li>怎样让这些东西对玩家更有价值?</li><li>游戏中的价值与玩家的动机之间有怎样的关系?</li><li>记住,道具的价值和游戏的比分直观地反映了玩家想要在游戏中获胜的程度。通过思考玩家真正关心的事物及其原因,你就知道应该怎样改进你的游戏了。</li></ul></li></ul></li></ul><h4 id="8-号透镜：解决的问题-1"><a href="#8-号透镜：解决的问题-1" class="headerlink" title="8 号透镜：解决的问题"></a>8 号透镜：解决的问题</h4><ul><li>8号透镜：解决的问题<ul><li>要使用这个透镜,需要思考一下游戏中的问题。由于每个游戏都有一些等待解决的问题,在你的游戏中,玩家需要解决那些问题才能在游戏中获胜。问你自己这几个问题：<ul><li>我的游戏要求玩家解决哪些问题?</li><li>是否有一些隐藏的问题作为玩法的一部分出现?</li><li>在我的游戏中,怎样产生新的问题来对玩家保持吸引力?</li></ul></li></ul></li></ul><h4 id="9-号透镜：四种元素-1"><a href="#9-号透镜：四种元素-1" class="headerlink" title="9 号透镜：四种元素"></a>9 号透镜：四种元素</h4><ul><li>9号透镜:四种元素<ul><li>要使用这个透镜,观察你的游戏实际上是由什么构成的,单独考虑各种元素然后将它们统一看待,问你自己这几个问题:<ul><li>我的游戏设计使用了全部的四种元素吗?</li><li>我的设计能够通过增强一种或者多种分类的元素来获得提高吗?</li><li>四种元素是否和谐,互相作用并向同一个主题努力?</li></ul></li></ul></li></ul><h4 id="10-号透镜：全息设计-1"><a href="#10-号透镜：全息设计-1" class="headerlink" title="10 号透镜：全息设计"></a>10 号透镜：全息设计</h4><ul><li>10号透镜:全息设计<ul><li>要使用这个透镜,你必须一次性看到游戏的全部:四种元素和玩家体验,以及它们是怎样关联起来的。你可以把注意力从皮肤转移到骨骼再到皮肤,但更好的方法是全息观察游戏和体验。</li><li>问你自己这几个问题：<ul><li>游戏中的哪一种元素产生了令人享受的体验?</li><li>游戏中的哪一种元素会让玩家在体验中分心?</li><li>怎样改变游戏元素来提高游戏体验?</li></ul></li></ul></li></ul><h4 id="11-号透镜：统一-1"><a href="#11-号透镜：统一-1" class="headerlink" title="11 号透镜：统一"></a>11 号透镜：统一</h4><ul><li>11号透镜:统一<ul><li>要使用这个透镜,就要尽可能地考虑这背后所有的原因。问你自己这几个问题：<ul><li><p>我的主题是什么?</p></li><li><p>我已经采用了所有可能的方法来强化这个主题吗?</p></li><li><p>统一透镜与9号透镜元素四分透镜很搭配。使用元素四分透镜从你的游戏中分割出元素,你就能够从统一主题的角度更方便地研究它们。</p></li></ul></li></ul></li></ul><h4 id="12-号透镜：共鸣-1"><a href="#12-号透镜：共鸣-1" class="headerlink" title="12 号透镜：共鸣"></a>12 号透镜：共鸣</h4><ul><li><p>12号透镜:共鸣</p><ul><li><p>要使用这个透镜,你必须去寻找隐藏的力量,问你自己这几个问题:</p><ul><li>在我的游戏中,能感觉到哪些有力的或者特殊的元素?</li><li>将我的游戏描述给他人听时,那些创意能让他们真的兴奋吗?</li><li>如果没有任何限制,这个游戏将会变成怎样?</li><li>我对这个游戏的方向有特定的直觉,那到底是什么在驱动这种直觉呢?</li></ul></li><li><p>共鸣透镜是一件安静美妙的乐器,也是一件倾听自己和他人的工具。我们把重要的事物都埋藏在内心的深处,当某些东西引起了它们的共鸣时,就会触动我们的内心。事实上这些隐藏的特性给了它们力量,也让我们难以寻找。</p></li></ul></li></ul><h4 id="13-号透镜：无尽灵感-1"><a href="#13-号透镜：无尽灵感-1" class="headerlink" title="13 号透镜：无尽灵感"></a>13 号透镜：无尽灵感</h4><ul><li>13 号透镜：无尽灵感<ul><li>当你知道如何倾听时，每个人都可以成为大师。——拉姆·达斯（Ram Dass）</li><li>要使用这个透镜，不要思考你的游戏，也不要观察那些看起来差不多的游戏。正相反，你要四处看看。</li><li>问你自己这几个问题<ul><li>我的生活中有怎样的体验想要与他人分享？</li><li>有哪些小技巧可以让我捕捉到体验的本质，并把它纳入我的游戏中？</li></ul></li><li>使用这个透镜需要开放的心态和强大的想象力。你需要了解自己的感受，观察周围发生的一切事物。你必须尝试一些不可能的事——一场比武不可能用掷骰子的方式来获得兴奋感，一个电子游戏也无法让玩家害怕黑暗。使用这个透镜寻找一些非游戏体验，为你的游戏提供灵感。四个不同的元素（技术、机制、故事和美学）能够被一个单纯的灵感组合起来，也能构筑不同的灵感，你应该将它们混合起来创造一些崭新的游戏。当你以现实生活为基础作为方向指导你的决定时，你的体验将会获得无可匹敌的力量和独一无二的特点。</li><li>这个透镜与体验本质透镜（2 号透镜）能够结合起来。使用无尽灵感透镜来寻找美妙的体验，使用体验本质透镜将它们纳入你的游戏中。</li></ul></li></ul><h4 id="14-号透镜：问题陈述-1"><a href="#14-号透镜：问题陈述-1" class="headerlink" title="14 号透镜：问题陈述"></a>14 号透镜：问题陈述</h4><p>要是用这个透镜，需要把你的游戏当做解决问题的方案。</p><p>问你自己这几个问题：</p><ul><li>我真正想要解决什么问题？</li><li>我是否做过一些与真正目标无关的游戏设定？</li><li>游戏是不是这个问题最好的解决方案？为什么？</li><li>我将怎样分辨出问题是否已经解决了？</li></ul><p>为游戏定义好约束条件和目标，并把这些作为问题陈述，这能帮助你更快地进入清晰的游戏设计中。</p><h4 id="15-号透镜：八项测试-1"><a href="#15-号透镜：八项测试-1" class="headerlink" title="15 号透镜：八项测试"></a>15 号透镜：八项测试</h4><p>要使用这个透镜，你的设计必须满足许多约束条件。只有当它通过了八项测试而不需要修改时，你的设计才算完成。</p><p>问你自己八个关键问题：</p><ol><li>这个游戏看起来不错吗?</li><li>我们的目标受众喜欢这个游戏吗?</li><li>这个游戏设计得不错吗?</li><li>这个游戏是否与众不同?</li><li>这个游戏能够盈利吗?</li><li>这个游戏在技术上是否具备可行性?</li><li>这个游戏完成我们的社交或者社区目标了吗?</li><li>游戏测试者是否享受这个游戏?</li></ol><p>在某些情况下，还需要考虑一些其他的测试。<br>如一个教育游戏必须回答“这个游戏达到了它的教育目标了吗?”。如果你的设计需要更多的测试，不要遗漏它们。</p><h4 id="16-号透镜：风险消除-1"><a href="#16-号透镜：风险消除-1" class="headerlink" title="16 号透镜：风险消除"></a>16 号透镜：风险消除</h4><p>是以圣人犹难之，故终无难矣。 —— 道德经</p><p>要使用这个透镜，停止积极地思考，然后开始认真考虑那些会危及游戏的风险。</p><p>问你自己这些问题：</p><ul><li>是什么让这个游戏变得平庸?</li><li>我们怎样防止这样的风险发生?</li></ul><p>风险管理很难。这意味着你必须面对那些不想碰到和立刻解决的问题。但是如果训练自己这么做，你就能进行更多次有效的迭代，获得一个更优秀的游戏。忽视潜在的问题，只专注于游戏中你最有信心的部分是一种诱惑。你必须抵抗这种诱惑，专注于游戏中的风险。</p><h4 id="17-号透镜：玩具-1"><a href="#17-号透镜：玩具-1" class="headerlink" title="17 号透镜：玩具"></a>17 号透镜：玩具</h4><p>要使用这个透镜，不要思考你的游戏是否好玩，要思考参与这个游戏是否有趣。</p><p>问你自己这些问题：</p><ul><li>如果我的游戏没有目标，它会有趣吗？如果不是，我怎样才能改进它？</li><li>当人们看到我的游戏时，他们想要与它产生互动吗，甚至在它们知道应该怎样玩之前？如果不是，我怎样才能改进它？</li></ul><p>有两种方式可以使用玩具透镜。<br>第一种方式是将其运用在一个现存游戏上，想出怎样为它添加一些玩具类的特质——怎样让它变得更亲切，操作更有趣。<br>第二种方式更加大胆，即在你还没有任何游戏创意之前运用它制作一个玩具。如果你在计划中做这件事就会有风险——但如果不是这样，这就是一个伟大的魔杖，可以帮助你找到你还没发现的绝妙游戏。</p><h4 id="18-号透镜：激情-1"><a href="#18-号透镜：激情-1" class="headerlink" title="18 号透镜：激情"></a>18 号透镜：激情</h4><p>在每个原型的结尾，当你小心地消除风险并计划下一步时，别忘了用这些重要问题检验你对游戏的感受：</p><ul><li>我对这款游戏的成功是否抱有极大激情？</li><li>如果失去了激情，怎样才能找回？</li><li>如果激情没有回来，是否应该做一些其他事？</li></ul><p>在每次冲刺的末尾，当你在研究原型和准备接下来的计划时，一定要记住做一个“激情检验”。激情就是潜意识与你交流的方式，它告诉你这个游戏是否令人兴奋。失去激情就说明一些地方出了问题——如果不能找到问题所在，游戏很可能会死去。激情也有危险性——毕竟这是一种不合理的情感。<br>必须小心对待激情，因为它往往能够击倒障碍并带领游戏走向成功。</p><h4 id="19-号透镜：玩家-1"><a href="#19-号透镜：玩家-1" class="headerlink" title="19 号透镜：玩家"></a>19 号透镜：玩家</h4><p>要是用这个透镜，你需要停止思考你的游戏，开始思考你的玩家。<br>问你自己关于这几个关于你的目标玩家的问题：</p><ul><li>他们通常喜欢什么？</li><li>他们不喜欢什么,为什么?</li><li>他们希望能在你的游戏中看到什么？</li><li>如果我处在他们的位置上,我想要在游戏中看到什么?</li><li>他们将会特别喜欢或者不喜欢游戏中的哪一部分?</li></ul><p>一个优秀的游戏设计师总是考虑并拥护他的玩家。熟练的设计师会同时使用玩家透镜和全息透镜，同时考虑玩家、游戏体验和游戏机制。思考你的玩家是一种很有用的方法，但是更有用的是观察他们玩你的游戏。你观察得越多，就越容易预测他们会喜欢什么。</p><h4 id="20-号透镜：乐趣-1"><a href="#20-号透镜：乐趣-1" class="headerlink" title="20 号透镜：乐趣"></a>20 号透镜：乐趣</h4><p>思考你的游戏提供了哪些类型的乐趣。<br>问你自己这几个问题：</p><ul><li>你的游戏能给玩家带来哪些乐趣？这些乐趣能够继续改善吗？</li><li>你的体验中缺少了哪些乐趣，为什么？能够在游戏中增加这种乐趣吗？</li></ul><p>游戏的最终目的就是带来快乐。通过浏览已知的乐趣列表，考虑你的游戏如何传达其中的每一种乐趣，你可能就有了改进游戏的灵感，让它能够为玩家带来更多乐趣。要经常留意那些独特的、未分类的、在大多数游戏中都没有的乐趣。因为只要找到一个就能让你的游戏拥有独特的体验。</p><h4 id="21-号透镜：心流-1"><a href="#21-号透镜：心流-1" class="headerlink" title="21 号透镜：心流"></a>21 号透镜：心流</h4><p>使用本透镜前，请考虑是什么在吸引玩家的注意力。<br>问自己这些问题：</p><ul><li>我的游戏有清晰的目标吗？如果没有，怎样改好？</li><li>玩家目标和我所希望的一致吗？</li><li>游戏中是否有令玩家分心，以致忘记目标的部分？若有，能否减少这些干扰，或能否融入游戏目标内？</li><li>我的游戏是否稳定提供连串不太容易，也不太难的挑战？有没有考虑到玩家的技巧可能逐步提高？</li><li>玩家的技巧提高的速率和我的期望相符吗？若不是，应该怎样改进？</li></ul><h4 id="22-号透镜：需求-1"><a href="#22-号透镜：需求-1" class="headerlink" title="22 号透镜：需求"></a>22 号透镜：需求</h4><p>要使用此透镜，先不要考虑你的游戏本身，改为考虑它满足人类的哪些基础需求。<br>问自己这些问题:</p><ul><li>我的游戏主要运作在马斯洛层次的哪一层？</li><li>我的游戏是否满足“胜任、自主、关联”的需求？</li><li>我怎样让游戏在现有水平上，满足更多基础需求?</li><li>游戏已经满足的需求，怎样令其满足得更好？</li></ul><p>说游戏能满足人类的基础需求，虽有点奇怪，但人类的一切行为，都是在以某种方式满足这些需求。记住，有些游戏比其他游戏更能满足需求——所以你的游戏不能仅仅对需求做出承诺，而要切实满足。玩家本来以为玩你的游戏能够让自己感觉良好，或者和朋友交往更密，结果你的游戏没能满足需求，玩家就会改玩其他能满足的游戏了。</p><h4 id="23-号透镜：动机-1"><a href="#23-号透镜：动机-1" class="headerlink" title="23 号透镜：动机"></a>23 号透镜：动机</h4><p>每个游戏都是由动机组成的复杂生态系统。要细致地加以研究，请问自己这些问题:</p><ul><li>玩家因何种动机来玩我的游戏？</li><li>其中哪些动机是最内在的？哪些是最外在的？</li><li>哪些是追求愉悦的？哪些是规避痛苦的？</li><li>哪些动机互相支撑？</li><li>哪些动机互相抵触？</li></ul><h4 id="24-号透镜：创新-1"><a href="#24-号透镜：创新-1" class="headerlink" title="24 号透镜：创新"></a>24 号透镜：创新</h4><blockquote><p>不同的未必总是好，更好的总是不同。 ——  斯科蒂·梅尔策(Scotty Meltzer)</p></blockquote><p>为了驾驭追求新奇的强大动机，请问自己这些问题:</p><ul><li>我的游戏有何新奇之处?</li><li>新奇之处是贯穿我的游戏，还是仅限于开头?</li><li>新奇和熟悉的混合感觉对吗?</li><li>新奇感褪去后，玩家还喜欢玩我的游戏吗?</li></ul><h4 id="25号透镜：评断-1"><a href="#25号透镜：评断-1" class="headerlink" title="25号透镜：评断"></a>25号透镜：评断</h4><p>要了解你的游戏是否能评断好玩家，问自己这些问题:</p><ul><li>针对玩家，你的游戏都评价些什么?</li><li>游戏怎样传达这种评断?</li><li>玩家觉得评断结果公平吗?</li><li>他们在意评断结果吗?</li><li>评断结果是否让他们想要加强能力?</li></ul><h4 id="26-号透镜：功能空间-1"><a href="#26-号透镜：功能空间-1" class="headerlink" title="26 号透镜：功能空间"></a>26 号透镜：功能空间</h4><p>要使用此透镜，请思考将所有表面元素剥离你的游戏之后，游戏究竟在什么空间内进行。</p><p>问自己以下问题:</p><ul><li>游戏空间是离散的还是连续的?</li><li>它有几个维度?</li><li>空间的边界在哪?</li><li>有没有子空间?空间如何互相联系?</li><li>是否有不止一种合理方式给游戏空间建立抽象模型?</li></ul><p>先专注空间，改造抽象空间布局满意后，再加以美学成分。<br>功能空间与 10 号透镜“全景设计”配合使用，效果很好。<br>如果能同时看清玩家将要体验到的抽象功能空间和美学空间，及它们之间的关联，就能充满自信地决定游戏世界的形态。</p><h4 id="27-号透镜：时间-1"><a href="#27-号透镜：时间-1" class="headerlink" title="27 号透镜：时间"></a>27 号透镜：时间</h4><p>俗话说“时间就是一切”。我们身为设计师的目标是创造体验，而体验如果太长、太短、太快、太慢，都很容易扫兴。要让你的体验长度刚刚好，可问自己以下问题:</p><ul><li>究竟是什么决定了我的游戏活动的长度?</li><li>我的玩家是否因为游戏结束太快，感到沮丧?我怎样才能改变这种状况?</li><li>我的玩家是否因为游戏时间太长，感到无聊?我怎样才能改变这种状况?</li><li>时钟和竞赛能不能让我的游戏玩法更激动人心?</li><li>时间限制也许会让玩家烦躁。我去掉时间限制会更好吗?</li><li>有层级的时间架构对我的游戏是否有益?或者说，几个小回合组成一个大回合好不好?</li></ul><p>要把时间调至合适的程度很难，但时间能成就一款游戏，也能毁掉一款游戏。听从以前歌舞艺人的格言“吊着他们的胃口 (leave’em wanting more) ” ，一般不会错。</p><h4 id="28-号透镜：状态机-1"><a href="#28-号透镜：状态机-1" class="headerlink" title="28 号透镜：状态机"></a>28 号透镜：状态机</h4><p>要使用此透镜，请思考你的游戏中哪些信息在改变。问自己这些问题:</p><ul><li>我的游戏中有什么对象?</li><li>这些对象的属性是什么?</li><li>每个属性有什么可能的状态?</li><li>每个属性中，是什么触发状态改变?</li></ul><p>玩游戏的过程就是做决定，决定是根据信息做出的。决定不同的属性、属性的状态、改变状态的事件，就是你游戏机制的核心。</p><h4 id="29-号透镜：秘密-1"><a href="#29-号透镜：秘密-1" class="headerlink" title="29 号透镜：秘密"></a>29 号透镜：秘密</h4><p>改变谁掌握哪些信息，就能彻底改变你的游戏。要使用此透镜，请思考“谁”知道“哪些”，又是“为什么。</p><p>问自己这些问题:</p><ul><li>哪些信息只有游戏本身知道?</li><li>哪些信息所有玩家知道?</li><li>哪些信息只有一些或一个玩家知道?</li><li>改变谁掌握哪些信息，可以改进我的游戏吗?</li></ul><p>游戏过程就是做决定的过程。决定则根据信息做出。决定不同的属性及其状态，以及谁了解它们，是你的游戏机制的核心。对谁知道哪些信息做一些小修改，可以极大地改变一个游戏一一或者强到飞起，或者低到尘埃里。谁知道哪些属性这件事甚至可以在游戏过程中改变——想在你的游戏中创造戏剧性，一大方法就是突然将一条重要的私密信息公开。</p><h4 id="30-号透镜：自发-1"><a href="#30-号透镜：自发-1" class="headerlink" title="30 号透镜：自发"></a>30 号透镜：自发</h4><p>要确保你的游戏有有趣的自发玩法，问自己这些问题:</p><ul><li>我的玩家有多少动词可选?</li><li>每个动词可作用于多少对象?</li><li>玩家要达成目标有多少种方式?</li><li>玩家控制多少主体?</li><li>额外效果如何改变限制条件?</li></ul><h4 id="31-号透镜：行动-1"><a href="#31-号透镜：行动-1" class="headerlink" title="31 号透镜：行动"></a>31 号透镜：行动</h4><p>要使用此透镜，请思考你的玩家能做些什么、不能做什么，分别为什么</p><p>问自己：</p><ul><li>游戏中的基础行动是什么</li><li>策略行动是什么</li><li>想要看到怎样的策略行动？怎样改变游戏，令其可能？</li><li>策略行动与基础行动的比例，满意吗</li><li>玩家在游戏中有什么想做但不能做的行动？能不能设法令其成为可能，无论作为基础行动或策略行动？</li></ul><p>没有行动的游戏就像是没有动词的句子一什么也不会发生。你身为游戏设计师要做的最基础的决定，便是确定你游戏中的行动。对这些行动进行微小改变也会对游戏造成一系列巨大影响，可能会创造出惊人的自发玩法，也可能</p><h4 id="32-号透镜：目标-1"><a href="#32-号透镜：目标-1" class="headerlink" title="32 号透镜：目标"></a>32 号透镜：目标</h4><p>为确保游戏目标适当且均衡，问自己：</p><ul><li>游戏终极目标是什么</li><li>终极目标对玩家明确吗</li><li>如果有一系列目标，玩家明白吗</li><li>不同目标是否以一种有意义方式互相关联</li><li>目标是否具体、可行、回报丰厚</li><li>短期和长期目标是否平衡</li><li>玩家有无机会决定自己的目标</li></ul><p>同时拿起玩具、好奇、目标透镜，观察游戏这些方面如何互相影响</p><h4 id="33-号透镜：规则-1"><a href="#33-号透镜：规则-1" class="headerlink" title="33 号透镜：规则"></a>33 号透镜：规则</h4><p>深刻观察游戏，直到能辨别最基础架构，回答：</p><ul><li>游戏中的基本规则是哪些，这些规则和操作规则有何不同</li><li>开发过程中有没有形成“条例”或“房规”，这些是否应该直接纳入游戏中</li><li>游戏中有不同模式吗？这些模式让一切更简单还是更复杂？减少一些模式会让游戏更好玩吗？还是增加模式？</li><li>谁来执行规则</li><li>规则是简单易懂，还是有晦涩之处？如果有晦涩之处需要修订，应该修改规则还是更清楚地解释规则？</li></ul><p>常见误解是以为设计师做下来写一套规则就能做出游戏。一般不是。游戏规则是在实验中逐步完善的。设计师的头脑一般都在“操作规则”领域里工作，偶尔在思考怎样调整、改善游戏的时候，才切换到“基础规则”视角。“书面规则”一般在游戏能玩之后，接近收尾时形成。确保规则覆盖到每一种可能情况，是设计师的工作。一定要在试玩的同时做好记录，因为正是试玩过程会暴露出规则漏洞——如果只是随便修修补补，不认真记录，同样的漏洞会再现。<br>游戏即其规则，不可不在规则上花费足够时间和思量。</p><h4 id="34-号透镜：技巧-1"><a href="#34-号透镜：技巧-1" class="headerlink" title="34 号透镜：技巧"></a>34 号透镜：技巧</h4><p>不观察游戏本身，观察游戏要求玩家发挥的技巧。</p><ul><li>游戏需要玩家拥有何种技能</li><li>其中是否缺少某个类别技能</li><li>哪些技能占主导地位</li><li>这些技能是想要创造的体验吗</li><li>是否有一些玩家的这些技能远超其他玩家？是否会让游戏感觉不公平？</li><li>玩家能否通过练习提高技巧，从而感觉掌握了游戏</li><li>游戏需要的技巧水平合适吗</li></ul><p>发挥技巧可以让人很快乐——这是人们喜爱游戏的一大原因<br>当然了，技巧水平和难度需要处于“心流”区间<br>技巧很大程度上定义体验，技巧透镜和 2 号透镜“本质体验”结合使用，效果很好。</p><h4 id="35-号透镜：期望值-1"><a href="#35-号透镜：期望值-1" class="headerlink" title="35 号透镜：期望值"></a>35 号透镜：期望值</h4><p>思考游戏内发生的各种不同事件，以及它们对玩家的意义</p><ul><li>某件事发生的实际概率？</li><li>其感知概率？</li><li>这件事的结果的价值？价值能否被量化？有没有没考虑到的无形价值？</li><li>把所有可能结果相加，玩家所有行为都有不同期望。对这些值满意吗？是否给玩家有趣的选择？会不会奖赏太多？或惩罚太多？</li></ul><p>期望值是分析游戏平衡的有力工具。难点是某些可能性的量化，如“拥有了传送门道具”，但还是可以猜。<br>调整参数就是调整对结果数值的估计。<br>量化这些偏无形的元素可能很有启发，因为这能让你接地气地思考对玩家有价值的东西是什么，以及为什么。<br>这些接地气的知识，能让你控制游戏平衡性。</p><h4 id="36-号透镜：概率-1"><a href="#36-号透镜：概率-1" class="headerlink" title="36 号透镜：概率"></a>36 号透镜：概率</h4><p>专注于游戏中包含随机和风险的部分，时刻记住两者有不同之处<br>问自己</p><ul><li>游戏中真正随机的内容是什么？哪些部分只是感觉起来随机</li><li>随机性给玩家的，是刺激和挑战等积极情感，还是绝望和缺乏控制等消极情感</li><li>改变概率分布曲线能改进游戏吗</li><li>玩家能在游戏中冒各种有趣风险吗</li><li>游戏中，概率与技巧有何关系？有没有办法让随机元素感觉像是在发挥技巧？有没有办法让发挥技巧感觉像是在冒风险？</li></ul><p>风险和随机性就像香料。完全不加的游戏可能淡而无味，加多了又会遮盖游戏原本味道。要运用得恰到好处。<br>要运用，需要深入观察游戏，看看风险和随机性在何处自然浮现，然后决定如何驯服之，令其为你服务。<br>不要陷入思维陷阱，以为投骰子或者生成随机数才会产生概率相关元素。正相反，在玩家遭遇未知的每个时刻，你都能找到它们。</p><h4 id="37-号透镜：公平-1"><a href="#37-号透镜：公平-1" class="headerlink" title="37 号透镜：公平"></a>37 号透镜：公平</h4><p>要使用公平透镜，从玩家视角思考游戏。考虑玩家技巧水平，找到方法让每个玩家都有机会获胜，且各自都认为公平。</p><ul><li>游戏应该对称吗，为什么</li><li>游戏应该不对称吗，为什么</li><li>哪点更重要？<ul><li>游戏应能有效衡量谁的技巧水平最高</li><li>游戏应该为所有玩家都带来有趣挑战</li></ul></li><li>如果想让不同水平玩家一起玩，会用什么手段，令游戏对所有人都具有趣味性和挑战性</li></ul><h4 id="38-号透镜：挑战-1"><a href="#38-号透镜：挑战-1" class="headerlink" title="38 号透镜：挑战"></a>38 号透镜：挑战</h4><p>挑战几乎是所有游戏玩法的核心。甚至可以说，游戏由其目标和挑战所定义。检查游戏中的挑战，问自己：</p><ul><li>游戏中的挑战是什么</li><li>太容易？太难？刚刚好？</li><li>这些挑战能否容纳各种技巧水平</li><li>随着玩家不断成功，挑战难度如何增长</li><li>挑战种类是否足够多样</li><li>游戏中最高水平挑战是什么</li></ul><hr><h2 id="摘抄"><a href="#摘抄" class="headerlink" title="摘抄"></a>摘抄</h2><ul><li>第 22 条军规<ul><li>指个人面对自相矛盾的规定,无法逃脱的悖论。典出美国长篇小说《第22条军规》。</li></ul></li></ul><hr><h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><h3 id="第一章-太初之时，有设计师-1"><a href="#第一章-太初之时，有设计师-1" class="headerlink" title="第一章 太初之时，有设计师"></a>第一章 太初之时，有设计师</h3><ul><li><p>《太阳马戏团:火花-点燃我们心中的创意之火》 (Cirque du Soleil: The Spark-Igniting the Creative Fire that Lives within Us All) 约翰.U.培根 (John U. Bacon) 、琳恩·休厄德(Lyn Heward)著。这是一本很棒的小书,教你怎么找到自己的道路。</p></li><li><p>【游戏设计师修炼秘笈》 (Challenges for Game Designers) , Brenda Brathwaite、施雷伯(lan Schreiber)著。这是一套非常出色的习题集,当你想要锻炼游戏设计肌肉时可以做。</p></li></ul><h3 id="第三章-体验发生与场景"><a href="#第三章-体验发生与场景" class="headerlink" title="第三章 体验发生与场景"></a>第三章 体验发生与场景</h3><ul><li>克里斯多弗·亚历山大等人撰写的《模式语言》 (A Pattern Language by Christopher Alexander et al)。这是一本令人深思的著作,讲述了人类与居住空间的关系。我们将会在第21章《空间》中再次介绍这本书。</li></ul><h3 id="第四章-体验从游戏中诞生-1"><a href="#第四章-体验从游戏中诞生-1" class="headerlink" title="第四章 体验从游戏中诞生"></a>第四章 体验从游戏中诞生</h3><ul><li><p>罗格·卡洛伊斯撰写的《男人、玩乐与游戏》 (Man, Play, and Games byRoger Callois)。这本写于1961年的书长久以来都是学者们研究游戏的最爱。不仅如此,这本书对游戏玩法的本质有许多与众不同的观点,读起来让人爱不释手。</p></li><li><p>詹姆斯·P.卡斯撰写的《有限与无限的游戏》 (Finite and Infinite GamesbyJames P. Carse)。这是一本简短而令人鼓舞的书,它对游戏与生活的关系有着迷人的哲学陈述。</p></li><li><p>尼科尔·拉扎罗撰写的《我们为什么玩游戏:故事以外情感的四个关键要素》 (Why We Play Games: Four Keys to Emotion without Story by NicoleLazzaro) 。这是一次对乐趣维度的激进探索。</p></li><li><p>卡蒂·萨伦与埃里克·齐默尔曼撰写的《玩乐之道》的第7章与第8章 (Rules of Play by Katie Salen and Eric Zimmerman, Chapters 7 and 8) 。这两章包含了一些关于游戏定义的值得深思的结论。</p></li><li><p>巴纳德·休茨撰写的《蝈蝈:游戏、生活与乌托邦》 (The Grasshopper: Games, Life, and Utopia by Bernard Suits ( pronounced “sweets”) 。这是一场关于游戏本质的不可思议的心理学试验。休茨对游戏的定义激怒了我,然而我却无法驳倒他。</p></li></ul><h3 id="第六章-元素支撑起主题-1"><a href="#第六章-元素支撑起主题-1" class="headerlink" title="第六章 元素支撑起主题"></a>第六章 元素支撑起主题</h3><ul><li>里奇·戈尔德撰写的《丰饶》 (The Plenitude by Rich Gold) 。在任天堂力量手套设计师的智慧宝库中,提供主题仅仅只是话题之一。</li></ul><h3 id="第七章-游戏始于一个创意-1"><a href="#第七章-游戏始于一个创意-1" class="headerlink" title="第七章 游戏始于一个创意"></a>第七章 游戏始于一个创意</h3><ul><li><p>林达·巴里撰写的《这是什么》和《设想一下》 (What It Is and PictureThis by Lynda Barry) 。这两本伟大的著作无缝整合了文字与艺术作品,它们将用创作过程中的残酷现实激励你,鞭策你。</p></li><li><p>萨尔瓦多·达利撰写的《五十个魔法技术的秘密》 (Fifty Secrets of Magic Craftsmanship by Salvador Dali) 。这本书并不出名,但它为创造天才的大脑打开了一扇新的窗户。</p></li><li><p>凯尔·加布勒,凯尔·格雷,马特·库契奇和沙林·舍第汗撰写的《怎样 在七天内完成一个游戏原型》 (Prototyping a Game in 7 Days by Kyle Gray, Kyle Gabler, Matt Kucic, and Shalin Shodhan) 。这篇短论文充满了对快速制作原型的绝妙建议。</p></li><li><p>朱利安·杰恩斯撰写的《左右脑分解中的意识起源》的第1章(The Origin of Consciousness in the Breakdown of the Bicameral Mind by Julian Jaynes Chapter 1) 。这本有争议的书会让你再次思考意识的本质以及你与潜意识的关系。</p></li><li><p>约拿·莱勒撰写的《群体思想:头脑风暴神话》 (Groupthink: The Brainstorming Myth by Jonah Lehrer in The New Yorker. January 30) 。这本书是对过去、现在和未来头脑风暴的概述。</p></li></ul><p> - 大卫·林奇撰写的《钓上大鱼》 (Catching the Big Fish by David Lynch)这本简短的书由一位电影制片人撰写,提供了一些绝佳的创意快照</p><h3 id="第八章-游戏通过迭代提高-1"><a href="#第八章-游戏通过迭代提高-1" class="headerlink" title="第八章 游戏通过迭代提高"></a>第八章 游戏通过迭代提高</h3><p> - 比尔·巴克斯顿撰写的《用户体验草图设计》 (Sketching User Experiencesby Bill Buxton)。这本书通过多元化的原理和令人嘱目的结果向我们展示了草图的概念(提示:原型就是一种草图)</p><p> - 比尔·卢卡斯撰写的《用纸设计原型》 (Have Paper, Will Prototype by BillLucas) 。这本书是一系列案例研究,关于怎样成功创造计算机界面的纸上原型。麦克·塞林格撰写的《狗头人指南之桌面游戏设计》 (The Kobold Guide to Board Game Design by Mike Selinker) 。这本非常棒的书讲述了如何制作伟大的桌面游戏。</p><p> - 超级兄弟撰写的《少说话,多做事》 (Less Talk, More Rock by Superbrothers)这篇文章认为游戏是行动的媒介,而不是语言的媒介,并坚定的认为太多的设计讨论将会是毁灭性的。</p><p> - 《敏捷软件开发》 (Agile Software Development) 。维基百科中关于敏捷软件开发的条目编写地很不错,如果你想要更多地学习敏捷,它可以提供很多参考。 </p><ul><li>杰森·范登博格撰写的《游戏设计的四个F:快速失败与跟随快乐》(The 4Fs of Game Design: Fail Faster, and Follow the Fun by Jason Vandenberghe)这篇文章(基于马克,勒布朗的一个理念)将伟大游戏设计过程的关键方面总结为清晰的基础元素</li></ul><h3 id="第九章-游戏为玩家而生-1"><a href="#第九章-游戏为玩家而生-1" class="headerlink" title="第九章 游戏为玩家而生"></a>第九章 游戏为玩家而生</h3><p> - 理查德,R·巴特尔撰写的《设计虚拟世界》 (Designing Virtual Worlds by Richard R. Bartle) 。这是一本关于虚拟世界开发历史的优秀著作。它由一位实现这种虚拟世界的深度思考者撰写。</p><ul><li>马膝.L·克林格尔巴赫与肯特,C·巴里吉共同撰写的《大脑的快乐》 (Pleasures of the Brain by Morten L. Kringelbach and Kent C. Berridge, editors) 。这是一本由心理学家与神经学家共同完成的关于寻找快乐机制的研究集合。如果你还不熟悉科学论文，这可能有点令人却步，但这对于执着的读者是一笔宝贵的财富。</li></ul><h3 id="第十章-体验在玩家的脑中-1"><a href="#第十章-体验在玩家的脑中-1" class="headerlink" title="第十章 体验在玩家的脑中"></a>第十章 体验在玩家的脑中</h3><ul><li>《Flow: The Psychology of Optimal Experience》米哈里,契克森米哈赖著。此书引人入胜,由心流领域最知名的研究者撰写,探索了心流的本质。</li></ul><h3 id="第十一章-玩家的动机驱使着玩家的脑-1"><a href="#第十一章-玩家的动机驱使着玩家的脑-1" class="headerlink" title="第十一章 玩家的动机驱使着玩家的脑"></a>第十一章 玩家的动机驱使着玩家的脑</h3><ul><li><p> 《黏上游戏(Glued to Games) 》 , Scott Rigby和Richard M. Ryan著。这本书深刻介绍了自我决定理论,以及游戏之所以为游戏的原因。</p></li><li><p>《奖赏的惩罚(Punished by Rewards) 》 Alfie Kohn著。这本书很好地概括了对外在奖励之负面影响的许多研究成果。</p></li><li><p>《理解动机与情感(Understanding Motivation and Emotion) 》Johnmarshall Reeve著。如果你不满足于粗浅的理解,预备进一步钻研动机与情感的作用机制,这本大学教材可以充分介绍对这个主题的心理学研究。</p></li></ul><h3 id="第十二章-有些元素是游戏机制-1"><a href="#第十二章-有些元素是游戏机制-1" class="headerlink" title="第十二章 有些元素是游戏机制"></a>第十二章 有些元素是游戏机制</h3><ul><li><p> 《游戏机制:高级游戏设计技术》 (Game Mechanics: Advanced Game Design) Ernest Adams和Joris Dormans合著。本书包含大量精彩翔实的细节,讲解多种游戏机制如何互相影响。并介绍了如何使用优秀的Machinations系统模拟你的游戏设计。</p></li><li><p>《The Oxford Book of Board Games》 , David Parlett著。本书包含更多有关Parlett规则分析的细节,同时介绍了一些前几个世纪优秀但不为人知的桌面游戏。</p></li><li><p> 《Uncertainty in Games》 , Greg Costikyan著。此书深刻洞见了游戏中概率与不确定性的本质,令人叹为观止。我每次阅读都有新的所得。</p></li></ul><p> - 《The Unfinished Game: Pascal, Fermat, and the Unfinished Letter that Made the World Modern》 , Keith Devlin著。如果想要更细致地了解概率论发明的故事,读此书就够了。</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220525 - Writing</title>
      <link href="2022/05/25/20220525-writing/"/>
      <url>2022/05/25/20220525-writing/</url>
      
        <content type="html"><![CDATA[<h5 id="20220525"><a href="#20220525" class="headerlink" title="20220525"></a>20220525</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220525.JPG"></p><h5 id="20220526"><a href="#20220526" class="headerlink" title="20220526"></a>20220526</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220526.JPEG"></p><h5 id="20220528"><a href="#20220528" class="headerlink" title="20220528"></a>20220528</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220528.JPG"></p><h5 id="20220601"><a href="#20220601" class="headerlink" title="20220601"></a>20220601</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220601.JPG"></p><h5 id="20220602"><a href="#20220602" class="headerlink" title="20220602"></a>20220602</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220602.JPG"></p><h5 id="20220608"><a href="#20220608" class="headerlink" title="20220608"></a>20220608</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/IMG_3993.JPG"></p><h5 id="20220707"><a href="#20220707" class="headerlink" title="20220707"></a>20220707</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/IMG_4056.JPG"></p>]]></content>
      
      
      <categories>
          
          <category> Study-Writing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220522 - GAMES104 - Lecture 4：Rendering on Game Engine</title>
      <link href="2022/05/22/20220522-games104-lecture4/"/>
      <url>2022/05/22/20220522-games104-lecture4/</url>
      
        <content type="html"><![CDATA[<h2 id="Lecture-4-Rendering-on-Game-Engine"><a href="#Lecture-4-Rendering-on-Game-Engine" class="headerlink" title="Lecture 4 Rendering on Game Engine"></a>Lecture 4 Rendering on Game Engine</h2><ul><li><a href="https://medill-east.github.io/2022/05/15/20220515-games104-toc/">GAMES104——现代游戏引擎：从入门到实践笔记</a></li><li><a href="http://games104.boomingtech.com/sc/course-list/">课程官网</a></li><li><a href="https://www.bilibili.com/video/BV14r4y1p7tt/?spm_id_from=333.788">录播地址</a></li><li><a href="https://gamess-1305814242.cos.ap-guangzhou.myqcloud.com/course/Games104/GAMES104_Lecture04.pdf">PDF</a></li></ul><h3 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h3><h4 id="Rendering-system-in-games"><a href="#Rendering-system-in-games" class="headerlink" title="Rendering system in games"></a>Rendering system in games</h4><p>Is there any game without rendering?</p><blockquote><p>有，MUD，文字游戏，通过控制台游玩</p></blockquote><h4 id="Rendering-on-Graphics-Theory"><a href="#Rendering-on-Graphics-Theory" class="headerlink" title="Rendering on Graphics Theory"></a>Rendering on Graphics Theory</h4><ul><li>图形学理论<ul><li>实现的是拥有一种效果的各种物体</li><li>关注于图形表示和数学正确性</li><li>没有严格的表现性要求（无所谓丢帧）<ul><li>Realtime (30FPS) / interactive (10 FPS)<ul><li>离线渲染</li></ul></li><li>out-of-core rendering <ul><li>多机器离散渲染</li></ul></li></ul></li></ul></li></ul><h4 id="Challenges-on-game-rendering"><a href="#Challenges-on-game-rendering" class="headerlink" title="Challenges on game rendering"></a>Challenges on game rendering</h4><ol><li><p>同时要处理拥有各种不同效果的大量对象</p><p> 非常复杂</p></li><li><p>要跑在实际硬件基础上</p><p> 需要理解现代计算机硬件架构</p></li><li><p>要保证稳定帧率</p><p> 分辨率要求也越来越高<br> 更短时间要绘制更高分辨率图像</p></li><li><p>有限资源，需要为 CPU 留余地</p><p> GPU 可以有效利用，但 CPU 不能全被耗尽，需要用于支持 game logic 等</p></li></ol><h4 id="Rendering-on-game-engine"><a href="#Rendering-on-game-engine" class="headerlink" title="Rendering on game engine"></a>Rendering on game engine</h4><p>不是理论模型，而是经过检验的工程模型</p><h5 id="outline"><a href="#outline" class="headerlink" title="outline"></a>outline</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522112207.png"></p><h5 id="what-is-not-included"><a href="#what-is-not-included" class="headerlink" title="what is not included"></a>what is not included</h5><ul><li>cartoon rendering</li><li>2d rendering engine</li><li>subsurface</li><li>hair/ fur</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522112517.png"></p><h3 id="Building-Blocks-of-Rendering"><a href="#Building-Blocks-of-Rendering" class="headerlink" title="Building Blocks of Rendering"></a>Building Blocks of Rendering</h3><h4 id="Rendering-pipeline-and-data"><a href="#Rendering-pipeline-and-data" class="headerlink" title="Rendering pipeline and data"></a>Rendering pipeline and data</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522112703.png"></p><h4 id="Computation-projection-and-rasterization"><a href="#Computation-projection-and-rasterization" class="headerlink" title="Computation - projection and rasterization"></a>Computation - projection and rasterization</h4><p>做的是躲在像素之后的事情</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522112814.png"></p><h4 id="computation-shading"><a href="#computation-shading" class="headerlink" title="computation - shading"></a>computation - shading</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522112917.png"></p><ul><li>常量/参数访问</li><li>加减乘除</li><li>纹理采样</li></ul><h4 id="computation-texture-sampling"><a href="#computation-texture-sampling" class="headerlink" title="computation - texture sampling"></a>computation - texture sampling</h4><p>离得近的时候，看得清楚<br>离得远的时候，中间其实隔了很多像素<br>    由近及远的时候，其实画面就可能会抖动（走样）<br>每张贴图会存很多层，取点采样<br>    八个采样点，七次差值</p><ol><li>使用两个最相邻的 mipmap 层级</li><li>在两个 mipmaps 中进行双线性插值</li><li>在结果间进行线性插值</li></ol><h4 id="GPU"><a href="#GPU" class="headerlink" title="GPU"></a>GPU</h4><p>专门用于解决大规模运算的硬件</p><h5 id="SIMD-SIMT"><a href="#SIMD-SIMT" class="headerlink" title="SIMD SIMT"></a>SIMD SIMT</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522113648.png"></p><p>SIMD 单指令多数据</p><ul><li>用多个运算原件同时在多个数据点处理相同运算</li></ul><p>SIMT 单指令多线程</p><ul><li>并行计算中所用的执行模型，在其中将 SIMD 与多线程结合<ul><li>把单个计算内核做小，但做很多个</li><li>进行运算时可以在多个核上做同样指令</li><li>GPU 算力比 CPU 快的原因：在做运算的时候尽可能用同样代码让大家一起跑 每个人（计算单元）分别访问自己的数据</li></ul></li></ul><h5 id="GPU-architecture"><a href="#GPU-architecture" class="headerlink" title="GPU architecture"></a>GPU architecture</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522114232.png"></p><p>费米架构<br> 一块显卡上放了很多内核，但分成一组一组（GPC，图形处理集群）<br> GPC 里面有很多 SM（流式多处理器），每个 SM 里面有很多 CUDA 核<br> CUDA 做大量数据运算<br>    有专门的纹理单元<br>    有很多专门的各种计算单元</p><p>不仅可以并行处理，也可以交换信息</p><h6 id="Data-flow-from-CPU-to-GPU"><a href="#Data-flow-from-CPU-to-GPU" class="headerlink" title="Data flow from CPU to GPU"></a>Data flow from CPU to GPU</h6><p>一开始是冯诺依曼架构，让计算与数据分开，但每个计算需要找数据，会产生大量开销</p><p>游戏引擎绘制引擎架构原则：尽可能让数据单向传输， CPU-&gt;显卡，不要从显卡里读数据</p><h6 id="be-aware-of-Cache-Efficiency"><a href="#be-aware-of-Cache-Efficiency" class="headerlink" title="be aware of Cache Efficiency"></a>be aware of Cache Efficiency</h6><ul><li>要充分利用硬件并行计算</li><li>尝试避免冯诺依曼瓶颈<ul><li>数据都在缓存上是最优的</li><li>老是 cache miss 速度就慢了</li></ul></li></ul><h5 id="GPU-bounds-and-performance"><a href="#GPU-bounds-and-performance" class="headerlink" title="GPU bounds and performance"></a>GPU bounds and performance</h5><ul><li>Application performance is limited by:<ul><li>Memory Bounds</li><li>ALU Bounds<ul><li>数学计算太多 其他都做完了 但在等数学运算结果</li></ul></li><li>TMU (Texture Mapping Unit)</li><li>Bound BW (Bandwidth) Bound</li></ul></li></ul><p>流水线：木桶的短板效应，会受限于最慢的那一环节</p><h5 id="modern-hardware-pipeline"><a href="#modern-hardware-pipeline" class="headerlink" title="modern hardware pipeline"></a>modern hardware pipeline</h5><p>硬件结构其实不停在变</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522115523.png"></p><h5 id="other-state-of-art-architectures"><a href="#other-state-of-art-architectures" class="headerlink" title="other state-of-art architectures"></a>other state-of-art architectures</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522115533.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522115606.png" alt="手游/移动端：Tile-Based Rendering"></p><h3 id="Renderable"><a href="#Renderable" class="headerlink" title="Renderable"></a>Renderable</h3><h4 id="Mesh-Render-Component"><a href="#Mesh-Render-Component" class="headerlink" title="Mesh Render Component"></a>Mesh Render Component</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522115855.png" alt="每个可见的游戏对象都需要 Mesh 组件"></p><h4 id="Building-Blocks-of-Renderable"><a href="#Building-Blocks-of-Renderable" class="headerlink" title="Building Blocks of Renderable"></a>Building Blocks of Renderable</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522120019.png"></p><h4 id="Mesh-Primitive"><a href="#Mesh-Primitive" class="headerlink" title="Mesh Primitive"></a>Mesh Primitive</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522120054.png"></p><p>包含顶点数据，法向量数据，UV 等数据</p><h4 id="Vertex-and-Index-Buffer"><a href="#Vertex-and-Index-Buffer" class="headerlink" title="Vertex and Index Buffer"></a>Vertex and Index Buffer</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522120144.png"></p><p>并不直接存储 vertex，转为存储 index，可以通过索引找到相应的 vertex 数据<br>    因为有很多顶点是共用的</p><h4 id="why-we-need-per-vertex-normal"><a href="#why-we-need-per-vertex-normal" class="headerlink" title="why we need per-vertex normal"></a>why we need per-vertex normal</h4><p>为什么每个顶点要存一个法向量</p><p>一旦表面是硬表面（有折线），两个顶点即使重合，其法向完全不同</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522120608.png"></p><h4 id="materials"><a href="#materials" class="headerlink" title="materials"></a>materials</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522120639.png"></p><p>材质决定物体看起来是什么样的<br>    只决定视觉材质</p><p>后面还有 physics material<br>    摩擦系数<br>    弹力等</p><h5 id="famous-Material-Models"><a href="#famous-Material-Models" class="headerlink" title="famous Material Models"></a>famous Material Models</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522120737.png"></p><h5 id="Various-Textures-in-Materials"><a href="#Various-Textures-in-Materials" class="headerlink" title="Various Textures in Materials"></a>Various Textures in Materials</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522120811.png"></p><p>很多时候看起来像什么是由纹理而不是材质决定的</p><h5 id="variety-of-shaders"><a href="#variety-of-shaders" class="headerlink" title="variety of shaders"></a>variety of shaders</h5><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522120850.png"></p><ul><li>数据（assets）</li><li>source code</li><li>shader（被当做数据的 code）</li></ul><h3 id="Render-Objects-in-Engine"><a href="#Render-Objects-in-Engine" class="headerlink" title="Render Objects in Engine"></a>Render Objects in Engine</h3><h4 id="Coordinate-System-and-Transformation"><a href="#Coordinate-System-and-Transformation" class="headerlink" title="Coordinate System and Transformation"></a>Coordinate System and Transformation</h4><p>类似照相机拍照：</p><ol><li>固定相机在三脚架，并让其对准场景<br> 从不同位置观察场景（视图变换）</li><li>对场景进行安排，使各个物体在期望位置<br> 移动，旋转，放大/缩小场景物体（模型变换）</li><li>选择相机镜头，调整焦距<br> 现实物体时，选择其投影方式（正交/透视）</li><li>确定照片大小，放大还是缩小照片<br> 绘制图形，是要占据整个屏幕还是屏幕的一部分（视口变换）</li></ol><h4 id="object-with-many-materials"><a href="#object-with-many-materials" class="headerlink" title="object with many materials"></a>object with many materials</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522121738.png"></p><h4 id="How-to-Display-Different-Textures-on-a-Single-Model-submesh"><a href="#How-to-Display-Different-Textures-on-a-Single-Model-submesh" class="headerlink" title="How to Display Different Textures on a Single Model - submesh"></a>How to Display Different Textures on a Single Model - submesh</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522121825.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522121939.png" alt="每个 GO 都绘制，过于浪费"></p><h4 id="Resource-Pool"><a href="#Resource-Pool" class="headerlink" title="Resource Pool"></a>Resource Pool</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522122006.png"></p><p>建立统一资源库</p><ul><li>mesh</li><li>shader</li><li>texture</li></ul><h4 id="instance-use-handle-to-reuse-resources"><a href="#instance-use-handle-to-reuse-resources" class="headerlink" title="instance: use handle to reuse resources"></a>instance: use handle to reuse resources</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522122039.png"></p><p>只需找到相应实例就可以复用相应数据</p><h4 id="sort-by-material"><a href="#sort-by-material" class="headerlink" title="sort by material"></a>sort by material</h4><p>GPU上的每一次数据交换都会导致效率下降<br>场景中的物体按照材质排序，相同材质放一起，显卡处理效率会提高</p><h4 id="GPU-Batch-Rendering"><a href="#GPU-Batch-Rendering" class="headerlink" title="GPU Batch Rendering"></a>GPU Batch Rendering</h4><p>很多物体其实是一致的，一次绘制指令为同样的物体统一绘制（如大量的树木、草等）</p><h3 id="Visibility-Culling"><a href="#Visibility-Culling" class="headerlink" title="Visibility Culling"></a>Visibility Culling</h3><p>事件锥 - 只有所见范围内的东西才有意义<br>看不见的东西可以不绘制</p><h4 id="culling-one-object"><a href="#culling-one-object" class="headerlink" title="culling one object"></a>culling one object</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522122613.png"></p><p>看物体包围盒是否在事件锥中</p><h4 id="using-the-simplest-bound-to-create-culling"><a href="#using-the-simplest-bound-to-create-culling" class="headerlink" title="using the simplest bound to create culling"></a>using the simplest bound to create culling</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522122636.png"></p><ul><li>SPHERE</li><li>AABB<ul><li>存两个端点</li></ul></li><li>OBB</li></ul><h4 id="hierarchical-view-frustum-culling"><a href="#hierarchical-view-frustum-culling" class="headerlink" title="hierarchical view frustum culling"></a>hierarchical view frustum culling</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522122830.png"></p><p>层级询问，如果最大的包围盒看不见，直接不渲染，依次向下询问</p><h4 id="construction-and-insertion-of-BVH-in-game-engine"><a href="#construction-and-insertion-of-BVH-in-game-engine" class="headerlink" title="construction and insertion of BVH in game engine"></a>construction and insertion of BVH in game engine</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522122908.png"></p><p>现代游戏引擎中 BVH 用得多：</p><ul><li>很多东西在动，对于已经建立好的树，重建树状结构会相对快</li></ul><h4 id="PVS"><a href="#PVS" class="headerlink" title="PVS"></a>PVS</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522123143.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522123321.png"></p><ul><li>先把空间分割</li><li>每个空间用 portal 连接</li><li>通过 portal 能看到的范围是固定的</li><li>只渲染可见范围内的物体</li></ul><h4 id="the-idea-of-using-PVS-in-stand-alone-games"><a href="#the-idea-of-using-PVS-in-stand-alone-games" class="headerlink" title="the idea of using PVS in stand-alone games"></a>the idea of using PVS in stand-alone games</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522123340.png"></p><p>虽然现代游戏 全用 PVS 的较少了，但思想很有用<br>游戏玩家所经过的区域为 zone，每个 zone 内的可见范围有限，这可以帮助资源的动态加载</p><h4 id="GPU-Culling"><a href="#GPU-Culling" class="headerlink" title="GPU Culling"></a>GPU Culling</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522123611.png"></p><p>现在可能更多用显卡算力来直接解决</p><p>现有的一种解决办法：先绘制场景深度，被挡住的就不绘制</p><h3 id="Texture-Compression"><a href="#Texture-Compression" class="headerlink" title="Texture Compression"></a>Texture Compression</h3><p>纹理压缩</p><p>渲染的基础是 renderable 其中重要的 component 是纹理，在游戏引擎中会将纹理压缩</p><ul><li>传统图像压缩（JPG/PNG）<ul><li>很好的压缩率</li><li>高图像质量</li><li>专门用于压缩/解压一整张图片</li></ul></li><li>游戏纹理压缩 - block-based <ul><li>解码速度快</li><li>可随机访问</li><li>保证压缩率和可见质量</li><li>编码速度快</li></ul></li></ul><h4 id="block-compression"><a href="#block-compression" class="headerlink" title="block compression"></a>block compression</h4><p>先找颜色最亮和最暗的点，将其他点视为最大最小的插值，存储一个点和最大最小点的远近关系<br>    主要用于 PC</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522124253.png"></p><p>手机上用的算法不一定再是 4 x 4，可能不能在运行中压缩</p><h3 id="Authoring-Tools-of-Modeling"><a href="#Authoring-Tools-of-Modeling" class="headerlink" title="Authoring Tools of Modeling"></a>Authoring Tools of Modeling</h3><h4 id="Modeling"><a href="#Modeling" class="headerlink" title="Modeling"></a>Modeling</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522124428.png" alt="Modeling - Polymodeling"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522124453.png" alt="Modeling - Sculpting (ZBrush)"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522124530.png" alt="Modeling - Scanning"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522124608.png" alt="Modeling - Procedural Modeling"></p><h4 id="Comparison-of-Authoring-Methods"><a href="#Comparison-of-Authoring-Methods" class="headerlink" title="Comparison of Authoring Methods"></a>Comparison of Authoring Methods</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522124651.png"></p><h3 id="Cluster-Based-Mesh-Pipeline"><a href="#Cluster-Based-Mesh-Pipeline" class="headerlink" title="Cluster-Based Mesh Pipeline"></a>Cluster-Based Mesh Pipeline</h3><h4 id="Sculpting-Tools-Create-Infinite-Details"><a href="#Sculpting-Tools-Create-Infinite-Details" class="headerlink" title="Sculpting Tools Create Infinite Details"></a>Sculpting Tools Create Infinite Details</h4><ul><li>艺术家创建的模型拥有的细节越来越多</li><li>线性 FPS 发展到 开放世界 FPS，每帧提交的复杂场景数据几乎提升十倍以上</li></ul><h4 id="Cluster-Based-Mesh-Pipeline-1"><a href="#Cluster-Based-Mesh-Pipeline-1" class="headerlink" title="Cluster-Based Mesh Pipeline"></a>Cluster-Based Mesh Pipeline</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522124947.png"></p><p>15 年育碧做刺客信条大革命的时候提出</p><p>当面对精细模型，将其分为小的 cluster（固定的 32/64 单元）<br>很多东西其实是一样的，丢给硬件自己画</p><h4 id="programmable-mesh-pipeline"><a href="#programmable-mesh-pipeline" class="headerlink" title="programmable mesh pipeline"></a>programmable mesh pipeline</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522125200.png"></p><p>可以用一个算法，基于数据，凭空生成，并且可以根据远近自动选择合适的<br>好处：可以产生无限细节</p><h4 id="GPU-Culling-in-Cluster-Based-Mesh"><a href="#GPU-Culling-in-Cluster-Based-Mesh" class="headerlink" title="GPU Culling in Cluster-Based Mesh"></a>GPU Culling in Cluster-Based Mesh</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522125359.png"></p><p>现在的裁剪可以部分裁剪</p><h4 id="Nanite"><a href="#Nanite" class="headerlink" title="Nanite"></a>Nanite</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522125440.png"></p><h3 id="Take-Away"><a href="#Take-Away" class="headerlink" title="Take Away"></a>Take Away</h3><ol><li>游戏引擎的设计是工程科学，依赖于对现代图形硬件（显卡架构）的理解</li><li>核心要解决的 Mesh、模型、材质等数据间关系</li><li>尽可能通过运算来减少绘制需求（可见性很重要，看不见的就不绘制），优化的最高境界就是 do nothing</li><li>GPU 越来越强，很多需要在 CPU 做的复杂运算都交给了 GPU：GPU-Driven</li></ol><hr><h3 id="go-through-code"><a href="#go-through-code" class="headerlink" title="go through code"></a>go through code</h3><p><code>build/Pilot.sln</code></p><blockquote><blockquote><p>Mac 下是 <code>Pilot.xcodeproj</code></p></blockquote></blockquote><p>核心是 <code>PilotRuntime</code> 文件<br><code>PilotPreCompile</code> 是自动生成的</p><ul><li>在哪里找资产<ul><li><code>../Engine/asset/level/1-1_level.json</code></li></ul></li><li>引擎如何读数据？<ul><li>找到 <code>PilotRuntime/resource/res_type/common/level.h</code><ul><li>里面包含 <code>REFLECTION_TYPE</code></li><li>包括看到 <code>ObjectInstanceRes</code>的定义也是带反射类型的 <code>REFLECTION_TYPE</code></li><li>里面的每一个变量名都会变成 json 里的一个描述文件</li></ul></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220522135346.png"></p><p>原来这里才是正式要求第一次作业的地方哈哈，还有<a href="http://games104.boomingtech.com/sc/course-list/">课程官网</a>，我就说嘛不然啥也没说，直接纯摸估计要费不少时间，还是有指导文档的嘿嘿，好评！</p><p>老师们辛苦了，致敬。</p><hr><h3 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h3><ul><li>引擎中还有其他 instance 的案例吗<ul><li>每个 GO 其实都是 instance </li><li>音乐/音效也是</li></ul></li><li>mesh shader/ clustered mesh 未来会怎么发展<ul><li>会是未来发展方向</li><li>硬件会越来越复杂 越来越高效</li><li>让每个单元处理简单运算的思想是未来的趋势</li></ul></li><li>引擎有必要自写渲染管线吗<ul><li>很多引擎会写</li><li>渲染是工业化问题 一定时间后其实发展会趋同</li><li>多学习同行中的主流方案构建方法</li></ul></li><li>图形代码有没有更好 debug 方法<ul><li>很难</li><li>很多计算在 GPU 中，只能看到结果，但不一定知道中间哪里出了问题</li><li>要小步迭代反复验证，不要一次写太多，不然不知道问题出在哪里</li></ul></li></ul><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/05/15/20220515-games104-toc/">GAMES104——现代游戏引擎：从入门到实践笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-GameEngine </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game Engine </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220521 - Meaningful Meaningless</title>
      <link href="2022/05/21/20220521-everything-everywhere-all-at-once/"/>
      <url>2022/05/21/20220521-everything-everywhere-all-at-once/</url>
      
        <content type="html"><![CDATA[<h2 id="Why"><a href="#Why" class="headerlink" title="Why"></a>Why</h2><p>今天和 WH 一起看了《瞬息全宇宙》，看的时候脑中也闪过千百念头，竟然罕有地萌生了写观影感喟的想法，于是有此寥寥千字。</p><h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><h3 id="物壮则老-抟气致柔"><a href="#物壮则老-抟气致柔" class="headerlink" title="物壮则老/抟气致柔"></a>物壮则老/抟气致柔</h3><p>依我见，片中讨论的问题其实就一个：如何对抗虚无主义，或者说，为什么而活？</p><p>片中对 Joba （后面简称为 J）的描述是：</p><blockquote><p>拥有无限力量的全能存在，能驾驭纯粹混乱，没有任何实质的动机和追求。</p></blockquote><p>但其实她有，正如她自己所说，她跨越千百宇宙，就是为了找到这个特别的 Evelyn，为什么呢，为了寻求共鸣与共识，为了寻求看尽千帆后除虚无外的可能性。</p><p>片中世界由无数抉择所促生，令我想到的是《老子》中的物壮则老：</p><blockquote><p>物壮则老，谓之不道，不道早已。</p></blockquote><p>正是因为洞悉了所有，所以才失去了一切。</p><p>而为什么这个世界中的 Evelyn（后面简称为 E） 是那么的特别呢，我想到的是《老子》中的抟气致柔如婴儿：</p><blockquote><p>专气致柔，能婴儿乎？</p></blockquote><p>正是因为这个宇宙中的 E “一事无成”，所以才让她有了无限的可能性。</p><h3 id="万物皆虚-看山还是山"><a href="#万物皆虚-看山还是山" class="headerlink" title="万物皆虚/看山还是山"></a>万物皆虚/看山还是山</h3><p>J 在体验了无限可能性后，造了 Bagel。Bagel 是放置所有之后的产物，也和上面所提物壮则老一致，有即无，everything means nothins。但有无总是相生的，Bagel 所意味的对 J 而言其实也并不是毁灭，而是虚无背后的可能性。而如何让事情“get back”（回到正轨），也便是此片要探寻的如何面对虚无。</p><p>虚无从何而来呢？是因为 J 看到<code>所做的一切都会在另一个宇宙中消失得无影无踪</code>，最终产生了一切皆虚（nothing matters）的想法。</p><p>E 当然也并没有一开始就想到如何面对虚无的答案。她也说出了“如果我以前没…那么我现在就…”这样的话。这不过是一种逃避，不是答案。其后也经历过种种挣扎：在 <code>Everwhere</code> 一篇中真正掌握了世界跃迁后，她也有过虚无沉溺、想要破坏一切的瞬间。J 向其倾诉无法停留在任何一个宇宙中的痛苦（有即无）。之后二者成为了石头。</p><p>这一阶段，J 所寻求的共鸣算是在某种程度上达到了。所谓人类，不过是大千世界中渺小而又愚蠢的一种存在罢了。J 说自己被困住很久了，也希望被说服还有新的可能性。她一直所追寻的，并不是摧毁一切，而是为了摧毁自己，想看到被摧毁后的新的可能性，想被理解之后，与能理解自己的他者共同走向虚无。</p><p>E 没有回应 J 的期待。</p><p>为什么呢？需要把时间稍微回退一些，当 E 还陷于体会了无限跃迁后的破坏和毁灭中时，丈夫 Waymond （后面简称为 W）被 E 捅了一刀，但他还是选择站在 E 身前，不愿再看到厮杀。W 的信念是什么呢，是善念（ <code>be kind</code>）。并且在 W 和 E 没有在一起，二人变得所谓更好的那个世界中（就是前面 J 所提，如果…就…的那个世界），W 给出了我认为片中给出的面对虚无的答案：</p><blockquote><p>“尽管 你一再让我心碎 我想告诉你 如果有来生 我还是会选择和你一起 报税 开洗衣店”</p></blockquote><p>说回上面，E 没有回应 J 同赴虚无的期待。J 失望，寻求无果后也不再在乎，想要自己独自步入意味毁灭与可能性的 Bagel。</p><p>E 不肯，但中间有无数人阻拦。</p><p>怎么解呢？E 给出了一种源自 W 的 <code>be kind</code> 解法：所谓投其所好也好，或者满足对方的需求也好，给予拦路人们他们所渴求的东西。</p><p>J 觉得这并无意义，因为一段时间后，终究还是会导向无意义的虚无。</p><blockquote><p>多情自古空余恨，好梦由来最易醒。</p></blockquote><p>父亲也挡在了 E 身前，但 E 不肯罢休。她这里点出了我所认为的与上面 W 给出答案相呼应的说法（E 在一个世界中向“老顽固”父亲说出了女儿 J 交了女朋友一事）：</p><blockquote><p>不喜欢，不接受，都不重要，因为这个就是我。<br>一事无成也无所谓，但她像我一样，找到了一位善良、体贴、真正爱她一切的人。</p></blockquote><p>在说出了“交女朋友”一事的世界中，J 逃了，想要离开，觉得即便此时如自己所愿地说出了交女朋友一事，也只不过是暂时的理解，母女二人的相处终究是互相伤害，所以她想要离开，让 E 放手。</p><p>E 放了。</p><p>但马上回头叫停。她把和 J 的种种可能的误会全部阐明，而后在这里给出了片中直接阐述的对于终极问题的答案：</p><blockquote><p>为什么世界上那么多地方都可以去，还是决定留在这里，这好像没有道理。<br>也许世界上有那么些东西，有那么些发现，让我们自觉自己只是无意义的垃圾。<br>也可能这些东西能解释清楚，为什么经历了这么多不愉快，你还是想找到我。<br>也能说清楚，为什么无论如何，我就想待在你身边。<br>我就想永远…永远…待在你身边。</p></blockquote><p>J 做出最后的反问：</p><blockquote><p>那又怎么样呢，别的东西都不在乎了吗？<br>可以做任何事情，去任何地方，去一个有更好境况的地方，为什么不呢？<br>反正在一起的时间，也就那么点</p></blockquote><p>E 绝杀：</p><blockquote><p>那么我将会珍惜，这么一小段时光。</p></blockquote><p>所以，总而言之，E 给出的，或者说片中最终给出的，面对万物皆虚的答案，正是知道一切可能性后，依然不变的选择，即我所谓看山还是山的本真。而其后的本源力量，正是那些所谓“让我们自觉自己只是无意义的垃圾的那么些东西，那么些发现”，所谓“爱”，所谓无意义本身。</p><hr><h3 id="个体所见-认知的片面性"><a href="#个体所见-认知的片面性" class="headerlink" title="个体所见/认知的片面性"></a>个体所见/认知的片面性</h3><p>看完后，WH 与我讨论时还引出了另一个感悟：个体所见/认知的片面性。</p><p>W 在 E 眼中的软弱，其实只是他自己的方式。他始终以自己的理念（<code>be kind</code>）来应对万千变化。</p><p>此间我还想到一点，其实虽然世界变了，各个宇宙中自身的人性貌似没有很大的差别，并且 W 与 E 在每个世界中都以不同的方式相遇了。真是 (￣▽￣)”</p><hr><h3 id="I-am-your-mother"><a href="#I-am-your-mother" class="headerlink" title="I am your mother"></a>I am your mother</h3><p>WH 还引出了另一个问题，为何均为“全知全能”，E 却没有导向虚无，还要不断拉 J 回来呢？片中给出了看似搞笑的答案：</p><blockquote><p>I am your mother.</p></blockquote><p>WH 觉得是因为多出来的经历，确实，片中有与之呼应的说法：</p><blockquote><p>我和你不一样，你还年轻，而且你的想法总是变来变去的。<br>I still know who I am</p></blockquote><p>我个人认为答案其实就是上面所提到的本源力量，是所谓“爱”。</p><hr><h3 id="联应"><a href="#联应" class="headerlink" title="联应"></a>联应</h3><p>题外话，J 对于所有世界的同时经历，在我看来其实正是联应的一种体现。</p><p>联应一词与最近所看到的荣格心理学中的共时性相关，也与道家中道即一的思想相应，这里摘一下之前的 <a href="https://medill-east.github.io/2022/05/15/20220515-comicjung-chap7/">20220515 - 漫画荣格 - 第七章：塔 伟大的自己</a> 中的相关段落：</p><blockquote><p>不久前与友人谈及因果关系，没想到几天后就读到了荣格与共时性。</p><p>这里顺便将他发予我的《西方神秘学指津》中有关联应和因果性的相关部分截取：</p><p>在前启蒙时期，可以区分三种不同观点：</p><ol><li>把宇宙看成一个宏伟的和谐有机整体，其中所有部分都彼此联应，无需中介环节或因果链···<br>  这种“联应”概念与“类比思维”（analogical thinking）、“关联思维”（correlative thinking）、“相似”（ressemblance）、“征象”（signatures）、“分有”（participation）或“共时性”（synchronicity）等类似概念密不可分···</li><li>第二种观点可见于从菲奇诺开始的许多文艺复兴时期的作者。这种观点假设，宇宙的不同部分即使相距遥远，也会通过所谓的“隐秘因果性”（occult causality）在事实上相互影响。</li><li>第三种观点称之为“工具因果性”。其最基本的形式就是人们所熟知的“机械”模型或台球模型，即一个事物通过可证实和可预测的物质因果链来影响另一个事物。</li></ol><p>第一种观点将万物视为一体，不可分；第二种观点则预示着万物间表面独立，实则都被“隐秘因果性”相连；而第三种观点可以说视万物各自独立，除非有物质因果链将其连接。</p></blockquote><p>并且片中 E 挥向 J 的一拳也打在了自己脸上，看到这一细节时，我脑中又再次浮现了道即一（第一种联应）的想法。</p><hr><p>寥寥数言，浅薄己见，看个乐 (￣▽￣)”</p>]]></content>
      
      
      <categories>
          
          <category> Thinking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Thinking </tag>
            
            <tag> Movie </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220520 - GAMES104 - Lecture 3：How to Build a Game World</title>
      <link href="2022/05/20/20220520-games104-lecture3/"/>
      <url>2022/05/20/20220520-games104-lecture3/</url>
      
        <content type="html"><![CDATA[<h2 id="Lecture-3-How-to-Build-a-Game-World"><a href="#Lecture-3-How-to-Build-a-Game-World" class="headerlink" title="Lecture 3 How to Build a Game World"></a>Lecture 3 How to Build a Game World</h2><ul><li><p><a href="https://medill-east.github.io/2022/05/15/20220515-games104-toc/">GAMES104——现代游戏引擎：从入门到实践笔记</a></p></li><li><p><a href="https://gamess-1305814242.cos.ap-guangzhou.myqcloud.com/course/Games104/GAMES104_Lecture03.pdf">PPT</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1YY4y1p74P/?spm_id_from=333.788">录播地址</a></p></li></ul><p>如何构建游戏世界</p><ul><li>游戏世界由什么组成</li><li>如何描述这些事物</li><li>这些东西怎样被组织</li></ul><h3 id="What-does-a-game-world-consist-of"><a href="#What-does-a-game-world-consist-of" class="headerlink" title="What does a game world consist of?"></a>What does a game world consist of?</h3><h4 id="Dynamic-Game-Objects"><a href="#Dynamic-Game-Objects" class="headerlink" title="Dynamic Game Objects"></a>Dynamic Game Objects</h4><p>可交互物体</p><h4 id="Static-game-object"><a href="#Static-game-object" class="headerlink" title="Static game object"></a>Static game object</h4><p>各种不可交互物体</p><h4 id="environments"><a href="#environments" class="headerlink" title="environments"></a>environments</h4><p>环境</p><ul><li>填空</li><li>植被</li><li>地形</li></ul><h4 id="Other-game-objects"><a href="#Other-game-objects" class="headerlink" title="Other game objects"></a>Other game objects</h4><p>碰撞体<br>玩法规则</p><h4 id="Everything-is-a-Game-Object-GO"><a href="#Everything-is-a-Game-Object-GO" class="headerlink" title="Everything is a Game Object (GO)"></a>Everything is a Game Object (GO)</h4><h3 id="How-to-describe-a-game-object"><a href="#How-to-describe-a-game-object" class="headerlink" title="How to describe a game object"></a>How to describe a game object</h3><ul><li>property<ul><li>shape</li><li>position</li><li>capacity of battery</li></ul></li><li>behavior<ul><li>move</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220520105958.png"></p><h4 id="game-object"><a href="#game-object" class="headerlink" title="game object"></a>game object</h4><p>定义数据和行为</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220520110048.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220520110121.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220520110155.png" alt="派生和继承无人机类"></p><p>优点：清晰直观<br>缺陷：很多东西不好归类，比如水陆两栖坦克</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220520110310.png"></p><p>解决办法：组件化 - component</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220520110331.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220520110349.png" alt="自定义也是组件化思想"></p><p>回到无人机，将其拆解为组件：</p><ul><li>transform</li><li>model</li><li>motor</li><li>ai</li><li>animation physics</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220520110431.png"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220520110531.png" alt="组件化定义"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220520110607.png" alt="只有少部分需要迭代"></p><p>现代游戏引擎原则：尽可能符合直觉，既适用于程序，也适用于设计人员</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220520110712.png" alt="现代商业游戏引擎的组件化构建"></p><p>UObject 和 Object 是对象，管理生命周期，不是上面所提到的 GO<br>GO 对应的应该是 Actor 和 GameObject </p><h4 id="Takeaways"><a href="#Takeaways" class="headerlink" title="Takeaways"></a>Takeaways</h4><ul><li>游戏世界中的所有东西都是 game object</li><li>game object 可以以组件化方式进行描述</li></ul><h3 id="How-to-make-the-world-alive"><a href="#How-to-make-the-world-alive" class="headerlink" title="How to make the world alive?"></a>How to make the world alive?</h3><p>Object-based Tick</p><p>可以视为 unity 的 update 函数</p><p>世界因 tick 而转动</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220520111241.png" alt="按功能系统进行 tick"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220520111311.png" alt="流水线 tick 具有更高的效率"></p><h3 id="How-to-Explode-an-Ammo-in-a-game"><a href="#How-to-Explode-an-Ammo-in-a-game" class="headerlink" title="How to Explode an Ammo in a game"></a>How to Explode an Ammo in a game</h3><p>世界内部的交互</p><p>Hardcode（旧，效率低，无法处理更大体量的游戏世界）</p><ul><li>子弹射出</li><li>射出路线与世界中物体有交集</li><li>触发爆炸</li><li>寻找爆炸范围内的其他物体</li><li>产生交互</li></ul><p>Events（放下邮件，让对方处理）</p><ul><li>消息发送和处理</li><li>把事件发送和处理解耦化</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220520111952.png" alt="现代商业游戏引擎的事件机制"></p><p>要做可扩展的消息系统，以供用户自定义</p><h3 id="How-to-manage-game-objects"><a href="#How-to-manage-game-objects" class="headerlink" title="How to manage game objects"></a>How to manage game objects</h3><h4 id="Scene-management"><a href="#Scene-management" class="headerlink" title="Scene management"></a>Scene management</h4><ul><li>GO 在场景中被管理</li><li>每个 GO 的标识<ul><li>有唯一编号</li><li>可通过位置</li></ul></li></ul><p>消息发送方式</p><ul><li>完全不划分区域</li><li>网格划分<ul><li>场景不均匀</li></ul></li><li>层级划分<ul><li>基于物体簇划分</li><li>层级划分</li><li>有不同的划分方式<ul><li>二叉树</li><li>八叉树</li><li>bounding volume hierarchies (BVH)<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220520112401.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220520112643.png"></li></ul></li></ul></li></ul><h4 id="takeaways"><a href="#takeaways" class="headerlink" title="takeaways"></a>takeaways</h4><ul><li>所有物体都是 object</li><li>game object 可以被组件化描述</li><li>GO 的状态在 tick 循环中更新</li><li>GO 之间通过 event 机制交互</li><li>GO 在场景中被一些高效策略来管理</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220520113021.png"></p><ul><li>tick 顺序<ul><li>父节点先 tick</li><li>并行执行的时序很重要<blockquote><blockquote><p>确实，不注重先后，协程调用会出现混乱，害</p></blockquote></blockquote></li></ul></li></ul><p>游戏录像：引擎将事件再次执行，原则上输入一定，输出一定相同，但多线程运行时顺序不一定，此时需要引入所谓邮局，会给所有“邮件”唯一时间戳</p><h3 id="Lecture-03-Contributor"><a href="#Lecture-03-Contributor" class="headerlink" title="Lecture 03 Contributor"></a>Lecture 03 Contributor</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220520113942.png"></p><p>感谢前辈们的辛勤付出</p><h3 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q &amp; A"></a>Q &amp; A</h3><ul><li>tick 时，渲染线程和逻辑线程怎么同步<ul><li>一般二者分开进行</li><li>tick logic 一般比 tick render 早一些</li></ul></li><li>空间划分怎么处理动态游戏对象<ul><li>遍历肯定是最慢的</li><li>需要根据游戏类型和需要来选择特定的划分策略 按需更新</li><li>引擎需要支持两三种以上的空间划分方法</li></ul></li><li>组件模式有什么缺点<ul><li>在数量级较低时候其实组建模式相较于直接实现效率更低<ul><li>但这也是引入 ECS 的目的，提高效率</li></ul></li><li>组件间也有通信机制，期间的频繁 query 会降低效率</li></ul></li><li>event 怎么调试比较好<ul><li>锁定 GO 把它发送的消息全部显示</li><li>最有效的 debug 就是 log<blockquote><blockquote><p>确实</p></blockquote></blockquote></li></ul></li><li>物理和动画互相影响的时候怎么处理<ul><li>比如人受击，需要播放受击动画</li><li>解决可能通过插值，先动画优先 后物理优先</li></ul></li></ul><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/05/15/20220515-games104-toc/">GAMES104——现代游戏引擎：从入门到实践笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-GameEngine </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game Engine </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220518 - GAMES104 - Assignment 1：Build and Run Pilot Engine</title>
      <link href="2022/05/18/20220518-games104-assignment1/"/>
      <url>2022/05/18/20220518-games104-assignment1/</url>
      
        <content type="html"><![CDATA[<h2 id="作业-1-编译和运行-PILOT-引擎"><a href="#作业-1-编译和运行-PILOT-引擎" class="headerlink" title="作业 1 编译和运行 PILOT 引擎"></a>作业 1 编译和运行 PILOT 引擎</h2><ul><li><a href="https://medill-east.github.io/2022/05/15/20220515-games104-toc/">GAMES104——现代游戏引擎：从入门到实践笔记</a></li></ul><p>Build and Run Pilot Engine</p><h3 id="star-fork-一条龙"><a href="#star-fork-一条龙" class="headerlink" title="star, fork 一条龙"></a>star, fork 一条龙</h3><p>首先来到 Github <a href="https://github.com/BoomingTech/Pilot">相应页面</a></p><p>右上角 Star，然后 fork 到自己仓库里</p><h3 id="尝试-build"><a href="#尝试-build" class="headerlink" title="尝试 build"></a>尝试 build</h3><p>跟随教程 先打开命令行 cd 到相应根目录</p><pre class="line-numbers language-none"><code class="language-none">cd &#x2F;...你自己的目录&#x2F;GAMES104-PilotEngine<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后利用 Xcode 来 build，还是在命令行中运行：</p><pre class="line-numbers language-none"><code class="language-none">cmake -S . -B build -G &quot;Xcode&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>有可能出现 cmake 版本不够的情况，所以来到 <a href="https://cmake.org/download/">CMake官网</a>，我下载了 3.22.4 的版本，安装后跟随其指示将其加入 PATH：</p><pre class="line-numbers language-none"><code class="language-none">PATH&#x3D;&quot;&#x2F;Applications&#x2F;CMake.app&#x2F;Contents&#x2F;bin&quot;:&quot;$PATH&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>此时可以看到 CMake 版本已经是新的了：</p><pre class="line-numbers language-none"><code class="language-none">cmake -version<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220518125042.png"></p><p>此时确保自己还在 pilot 的根目录下（我之前更新 cmake 的时候退到系统根目录了），然后跟随指令先生成 xcode 项目</p><pre class="line-numbers language-none"><code class="language-none">cmake -S . -B build -G &quot;Xcode&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后 build</p><pre class="line-numbers language-none"><code class="language-none">cmake --build build --config Release<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="进编辑器！"><a href="#进编辑器！" class="headerlink" title="进编辑器！"></a>进编辑器！</h3><p>都成功后就可以找到 pilot 目录下的 bin 文件夹，里面应该有 build 好的 可运行的 PilotEditor 文件，打开！</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220518125351.png"></p><p>之后就可以试着选中目标，进行相应操作啦！</p><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/05/15/20220515-games104-toc/">GAMES104——现代游戏引擎：从入门到实践笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-GameEngine </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game Engine </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220518 - GAMES104 - Lecture 2：Layered Architecture of Game Engine</title>
      <link href="2022/05/18/20220518-games104-lecture2/"/>
      <url>2022/05/18/20220518-games104-lecture2/</url>
      
        <content type="html"><![CDATA[<h2 id="Lecture-2-引擎架构分层与整体-Pipeline"><a href="#Lecture-2-引擎架构分层与整体-Pipeline" class="headerlink" title="Lecture 2 引擎架构分层与整体 Pipeline"></a>Lecture 2 引擎架构分层与整体 Pipeline</h2><ul><li><p><a href="https://medill-east.github.io/2022/05/15/20220515-games104-toc/">GAMES104——现代游戏引擎：从入门到实践笔记</a></p></li><li><p><a href="https://gamess-1305814242.cos.ap-guangzhou.myqcloud.com/course/Games104/GAMES104_Lecture02.pdf">PDF</a></p></li><li><p><a href="https://www.bilibili.com/video/BV12Z4y1B7th/?spm_id_from=pageDriver">录播地址</a></p></li></ul><p>Layered Architecture of Game Engine</p><h3 id="A-glance-of-game-engine-layers"><a href="#A-glance-of-game-engine-layers" class="headerlink" title="A glance of game engine layers"></a>A glance of game engine layers</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220518104945.png"></p><ul><li><p>Tool Layer</p><ul><li>Chain of Editors </li><li>编辑器中的工具链</li></ul></li><li><p>Function Layer</p><ul><li>可视化、可移动、可玩</li><li>物理</li><li>动画</li><li>渲染</li><li>摄像机、UI、输入</li><li>脚本，状态机，AI</li></ul></li><li><p>Resource Layer</p><ul><li>Data and files</li><li>建模</li><li>图形</li><li>声音</li><li>视频</li></ul></li><li><p>Core Layer</p><ul><li>swiss knife of game engine</li><li>可重用代码工具箱</li></ul></li><li><p>Platform Layer</p><ul><li>launch on different platforms</li></ul></li><li><p>middleware and 3rd party libraries</p></li></ul><h3 id="practice-is-the-best-way-to-learn"><a href="#practice-is-the-best-way-to-learn" class="headerlink" title="practice is the best way to learn"></a>practice is the best way to learn</h3><p>做一个游戏中的可移动角色</p><h4 id="Resource-how-to-access-my-data"><a href="#Resource-how-to-access-my-data" class="headerlink" title="Resource - how to access my data"></a>Resource - how to access my data</h4><p>Unify file access - meta asset 通用数据格式</p><p>importing - 将外部数据转化为引擎可用的高效数据 assets</p><p>composite asset - 将各种数据相关联</p><p>GUID - 每个资产的唯一识别号</p><h4 id="Resource-Runtime-Asset-Manager"><a href="#Resource-Runtime-Asset-Manager" class="headerlink" title="Resource - Runtime Asset Manager"></a>Resource - Runtime Asset Manager</h4><p>实时资产管理，总可以通过该系统来加载/卸载相应资源<br>通过 handle 系统管理资产生命周期</p><h4 id="Resource-Manage-Asset-Life-Cycle"><a href="#Resource-Manage-Asset-Life-Cycle" class="headerlink" title="Resource - Manage Asset Life Cycle"></a>Resource - Manage Asset Life Cycle</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220518110405.png"></p><ul><li>不同资源有不同生命周期</li><li>在（内存等）资源有限情况下要求适时加载/释放资源</li><li>垃圾回收（garbage collection） 以及 延迟加载（deferred loading）很关键</li></ul><h4 id="Function-How-to-make-the-world-alive"><a href="#Function-How-to-make-the-world-alive" class="headerlink" title="Function - How to make the world alive"></a>Function - How to make the world alive</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220518110721.png"></p><p>每 1/30 s 处理一次</p><h4 id="Function-Dive-into-ticks"><a href="#Function-Dive-into-ticks" class="headerlink" title="Function - Dive into ticks"></a>Function - Dive into ticks</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220518110931.png"></p><p>类似 unity update 函数？</p><p>tick logic - 先构建逻辑 logic<br>tick render - 再渲染 </p><h4 id="Function-tick-the-animation-and-renderer"><a href="#Function-tick-the-animation-and-renderer" class="headerlink" title="Function - tick the animation and renderer"></a>Function - tick the animation and renderer</h4><ul><li>每个 tick（经过大量简化的理想情况）<ul><li>获取角色每帧动画</li><li>驱动骨骼和皮肤</li><li>渲染器在迭代的 render tick 中处理每帧相应的渲染任务</li></ul></li></ul><h4 id="Function-heavy-duty-hotchpotch"><a href="#Function-heavy-duty-hotchpotch" class="headerlink" title="Function - heavy-duty hotchpotch"></a>Function - heavy-duty hotchpotch</h4><ul><li>功能层为游戏引擎提供了大量主要功能模块<ul><li>object 系统</li></ul></li><li>周期性 loop updates<ul><li>game loop 是读游戏引擎代码的关键</li></ul></li><li>引擎和游戏之间的界限会模糊<ul><li>相机，角色，行为</li><li>为程序员设计可扩展引擎 API</li></ul></li></ul><h4 id="Function-multi-threading"><a href="#Function-multi-threading" class="headerlink" title="Function - multi-threading"></a>Function - multi-threading</h4><p>多核架构，多线程处理</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220518112006.png"></p><p>最理想情况是完美调度 - 都有事情干</p><p>多核也是未来的方向，在架构的时候就要考虑</p><h4 id="core-math-library"><a href="#core-math-library" class="headerlink" title="core - math library"></a>core - math library</h4><ul><li>线性代数<ul><li>rotation, translation, scaling</li><li>matrix splines, quaternion</li></ul></li></ul><h4 id="core-math-efficiency"><a href="#core-math-efficiency" class="headerlink" title="core - math efficiency"></a>core - math efficiency</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220518112331.png"></p><p>单指令（一个 ALU）完成矩阵运算</p><h4 id="core-data-structure-and-containers"><a href="#core-data-structure-and-containers" class="headerlink" title="core - data structure and containers"></a>core - data structure and containers</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220518112602.png"></p><ul><li>c++ 提供的标准容器在使用时 内存不受控（多且分布不紧密）</li></ul><h4 id="core-memory-management"><a href="#core-memory-management" class="headerlink" title="core - memory management"></a>core - memory management</h4><ul><li>游戏引擎表现的主要瓶颈<ul><li>内存池分配</li><li>减少缓存丢失</li><li>内存分配</li></ul></li><li>polymorphic memory resource PMR<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220518112838.png"></li></ul><p>现代计算机本质还是图灵机，不断更新 但更快的（内存管理）秘诀就三个：</p><ul><li>把数据放在一起</li><li>按序访问数据</li><li>按块分配和释放数据</li></ul><h4 id="core-foundation-of-game-engine"><a href="#core-foundation-of-game-engine" class="headerlink" title="core - foundation of game engine"></a>core - foundation of game engine</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220518113221.png"></p><ul><li>核心层为不同功能模块提供工具箱 utilities</li><li>设计和实现都很棒</li><li>高标准的 coding</li></ul><h4 id="platform-target-on-different-platform"><a href="#platform-target-on-different-platform" class="headerlink" title="platform - target on different platform"></a>platform - target on different platform</h4><p>系统兼容性（平台无关性） - 文件系统</p><h4 id="platform-graphics-API"><a href="#platform-graphics-API" class="headerlink" title="platform - graphics API"></a>platform - graphics API</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220518113609.png"></p><p>RHI</p><ul><li>重新定义 graphics API </li><li>把各硬件 SDK 区别封装起来</li></ul><h4 id="platform-hardware-architecture"><a href="#platform-hardware-architecture" class="headerlink" title="platform - hardware architecture"></a>platform - hardware architecture</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220518113833.png"></p><h4 id="tool-allow-anyone-to-create-game"><a href="#tool-allow-anyone-to-create-game" class="headerlink" title="tool - allow anyone to create game"></a>tool - allow anyone to create game</h4><p>以地图编辑器为中心构建的编辑器系统，方便团队协作</p><p>释放创意</p><h4 id="tool-digital-content-creation"><a href="#tool-digital-content-creation" class="headerlink" title="tool - digital content creation"></a>tool - digital content creation</h4><p>别的工具生成的数字资产来创建 assets</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220518114313.png"></p><hr><h3 id="why-layered-architecture"><a href="#why-layered-architecture" class="headerlink" title="why layered architecture"></a>why layered architecture</h3><ul><li>解耦，减少复杂性<ul><li>更低层与更高层独立</li><li>更高层不需要关心低层如何构建</li></ul></li><li>对于不断更新的需求的快速回应<ul><li>高层快速更新发展，但更低层基本稳定</li></ul></li></ul><p>复杂系统是被不断封装起来的<br>碰到需求先思考是哪层的<br>一般只允许上调用下，不允许反向</p><h3 id="Neat-PILOT-Engine"><a href="#Neat-PILOT-Engine" class="headerlink" title="Neat PILOT Engine"></a>Neat PILOT Engine</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220518115153.png"></p><h4 id="release-plan"><a href="#release-plan" class="headerlink" title="release plan"></a>release plan</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220518115337.png"></p><h3 id="takeaways"><a href="#takeaways" class="headerlink" title="takeaways"></a>takeaways</h3><ul><li>引擎是分层架构的<ul><li>工具</li><li>功能</li><li>资源</li><li>核心</li><li>平台</li></ul></li><li>更低层 更稳定，更高层 更灵活 可定制</li><li>虚拟世界由 ticks 来驱动</li></ul><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/05/15/20220515-games104-toc/">GAMES104——现代游戏引擎：从入门到实践笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-GameEngine </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game Engine </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220516 - 漫画荣格 - 第八章：荣格的性格论讲座</title>
      <link href="2022/05/16/20220516-comicjung-chap8/"/>
      <url>2022/05/16/20220516-comicjung-chap8/</url>
      
        <content type="html"><![CDATA[<h2 id="第八章-荣格的性格论讲座"><a href="#第八章-荣格的性格论讲座" class="headerlink" title="第八章 荣格的性格论讲座"></a>第八章 荣格的性格论讲座</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul><h3 id="关于心理功能与心理机能分类"><a href="#关于心理功能与心理机能分类" class="headerlink" title="关于心理功能与心理机能分类"></a>关于心理功能与心理机能分类</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220516215257.png"></p><p>看到燕子的图像可能会产生联想，这其中包含了认识事物的所有能力。观察事物是从以下四个功能来认识事物的：</p><ul><li>思考（利用语言能力等把握事物）<ul><li>鸟类中的燕子</li></ul></li><li>直观（推测能力，即推测眼前的东西具有什么样的可能性）<ul><li>春天来了</li></ul></li><li>感情（自己对那件事的考虑）<ul><li>飞得很漂亮，感觉心情很好</li></ul></li><li>感觉（掌握形状与性质的能力）<ul><li>像飞机，速度很快</li></ul></li></ul><p>这一心理活动方式的差异，就叫做心理功能。</p><h3 id="关于内向型和外向型，思考型和感情型"><a href="#关于内向型和外向型，思考型和感情型" class="headerlink" title="关于内向型和外向型，思考型和感情型"></a>关于内向型和外向型，思考型和感情型</h3><p>病征：无论做什么，只要一看到父亲，就马上害怕得发抖</p><ul><li>弗洛伊德（外向型分析）：你的病是在心理上受到了父亲的创伤，知道了这个原因，病就治好了<ul><li>重视与父亲关系这一内心之外的问题</li></ul></li><li>阿德勒（内向型分析）：那是因为你想从父亲那里夺回家庭内的权利<ul><li>重视内在的问题</li></ul></li></ul><p>外向型：平时总想着与外部有关的事。</p><blockquote><p>担心人际关系的人属于外向型，不介意的人是内向型。</p></blockquote><p>思考型的人</p><ul><li>爱学习<blockquote><p>燕子的眼睛像麻雀，属于燕子科的鸟类</p></blockquote></li><li>能找出潜在可能性<blockquote><p>很想把它作为航空公司的标志</p></blockquote></li></ul><p>感情型的人</p><ul><li>抓住特征的能力敏锐<blockquote><p>翅膀很有特点啊，很快就能画出来</p></blockquote></li><li>能判断价值<blockquote><p>很可爱，很帅，很漂亮</p></blockquote></li></ul><h3 id="主要功能-低级功能"><a href="#主要功能-低级功能" class="headerlink" title="主要功能/低级功能"></a>主要功能/低级功能</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220516220436.png"></p><p>主要功能：那个人所具有的最优秀的心理功能<br>低级功能：那个人具有的最不擅长的心理功能</p><p>思考型的主要功能是思考，低级功能是情感<br>如果过于思考，被压抑的低级功能——感情就会时常爆发出来<br>思考型的人，其感情在无意识下被混沌（未分化的无意识）控制住了。即集中精力做事情的时候，就容易控制极端的感情。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220516220635.png"></p><p>外向型的人比内向型的人优越感强，也许害怕遇到意外或者看到自己的阴影。</p><p>内向型的人比外向型的人更具自卑感，自己的内心有种被压抑的感觉，性格有改变的可能性。</p><p>因为低级功能受到压抑，就容易出现暴力问题，所以人不要走极端，应该倾听无意识的声音。</p><p>自己的低级功能，就像阴影在威胁着自己，仰慕或威胁不具备自己能力的人，就是低级功能在作怪。</p><p>自己的意识中表现出来的未分化的性格，能够认识到无意识的部分。能够自我改善，克服自己的不足，使人格获得成长。</p><p>如果能够控制无意识，性格就可以改变。</p><h3 id="外向的思考型"><a href="#外向的思考型" class="headerlink" title="外向的思考型"></a>外向的思考型</h3><p>这种类型的人，在社会上交往融洽，头脑灵活。属于行动型，在工业社会中容易获得成功。这类人也是不干涉型的人。</p><p>适合的工作是官僚、政治家、经济顾问、医生等。</p><p>历史上的名人有达芬奇、克林顿等。</p><h3 id="内向的思考型"><a href="#内向的思考型" class="headerlink" title="内向的思考型"></a>内向的思考型</h3><p>这种类型的人头脑非常聪明，在物理学、哲学、数学等领域取得成就不少。</p><p>他们的聪明好奇不是为了事业的成功，而是为了满足内心的喜悦。这类人很多都比较清贫、孤僻。</p><p>德国哲学家就是这类人的典型代表。头脑很聪明，但除了散步外，对其他事情几乎不感兴趣。</p><p>在这类人看来，与地位、名利相比，自己的内心问题才是至高无上的。</p><h3 id="外向的感情型"><a href="#外向的感情型" class="headerlink" title="外向的感情型"></a>外向的感情型</h3><p>这类人善于判断周围情况，能在社会上立住脚。但内心非常冷淡。既和蔼可亲，又八面玲珑起着主角的作用。</p><p>代表人物有戴安娜王妃、梦露等。</p><p>这类人性格内向，爱思考，憧憬过多，可能还没计划好就草率辞去工作。容易相信他人的话，但没有目标盲目行动容易给自己带来麻烦。</p><p>对外界过于适应的话，反而对自己可能不利。回到家里会感到寂寞无聊。非常有理想，但要付出努力。</p><h3 id="内向的感情型"><a href="#内向的感情型" class="headerlink" title="内向的感情型"></a>内向的感情型</h3><p>这类人不会随波逐流，待人和蔼可亲。文静得就像平静的湖水。</p><p>这类人有时会成为一个冲动的决策人，被自己的阴影“外向的思考”型所俘虏。信誉所调查显示，这类人在外较风流。</p><p>这类人会满怀热情地把爱带给所有的人。比如不仅会担任护士，还在福利事业兼职。</p><p>这类人的阴影是“外向的思考型”（如性格开朗、崇拜运动）。一旦被自己的阴影左右就会很危险。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220516222139.png"></p><h3 id="外向的感觉型"><a href="#外向的感觉型" class="headerlink" title="外向的感觉型"></a>外向的感觉型</h3><p>这类人比起自己的印象，更重视他人看法，所以事业容易成功。不过也容易受他人支配，有虚荣心。</p><p>不顾忌他人，喜欢铤而走险。爱手机物料的东西，喜欢购物。</p><p>如果内向直观的阴影太大的话，容易受到骗术、神秘宗教的支配。</p><p>这种人的视觉和味觉非常灵敏，在设计和厨艺等方面才华出众。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220516222350.png"></p><h3 id="内向的感觉型"><a href="#内向的感觉型" class="headerlink" title="内向的感觉型"></a>内向的感觉型</h3><p>这类人对外界一切毫不在意。</p><p>典型人物有梵高。无论说什么，他都听不进去。</p><p>可能正因为感觉不平衡，所以造就了一些天才。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220516222533.png"></p><h3 id="外向的直观型"><a href="#外向的直观型" class="headerlink" title="外向的直观型"></a>外向的直观型</h3><p>这类人吃穿都不讲究，是能够观察到事物的本质和可能性的直观型。不过因为是低级功能的感觉，对自身的反应迟钝。</p><p>这类人容易过度疲劳不注意身体，容易患心脏病、脑溢血。或者会出现运动过量或节食过度。</p><p>才能非凡的人，在新的商机中会取得成功。</p><p>担心会输，可能会直接放弃比赛。</p><h3 id="内向的直观型"><a href="#内向的直观型" class="headerlink" title="内向的直观型"></a>内向的直观型</h3><p>这类人本人觉得非常幸福，即使有直观能力，也偏于固执己见，很难适应复杂的现代社会。</p><p>适合从事与宗教有关的事情，但要自己进行神秘的体验。</p><p>受到周围人的尊重，也许不会影响周围的人。</p><hr><p>人的成长过程，关键是能够自我理解并控制无意识。通过自我与无意识的对话，使自己不断变化、不断成长，这正是人一生的目标。</p><p>人的一生要成长，通过与不喜欢的人交往，也就是与自己的影子交往，才能不断提高自己。</p><p>人肯定是在不断变化的，变化才是人生，一定要重视自己和自身的无意识。</p><p>分为以上的 8 个类型，是为了便于判断人的性格分类。每个人的具体性格都是很复杂的，是复杂的混合型。</p><p>与其说知道自己是哪种类型的人，倒不如让自己向希望成为的那个类型的某些方面去不断发展，以实现自己的目标。</p><p>想当艺术家的话，就要磨练自己的意志，提高技艺。</p><p>低级功能是自己阴影的原型，如果这个原型被认识、被整合，就会得到成长。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220516223400.png"></p><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Psychology-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Learning Notes </tag>
            
            <tag> Psychology </tag>
            
            <tag> Carl Gustav Jung </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220516 - GAMES104 - Lecture 1：游戏引擎导论</title>
      <link href="2022/05/16/20220516-games104-lecture1/"/>
      <url>2022/05/16/20220516-games104-lecture1/</url>
      
        <content type="html"><![CDATA[<h2 id="Lecture-1：游戏引擎导论"><a href="#Lecture-1：游戏引擎导论" class="headerlink" title="Lecture 1：游戏引擎导论"></a>Lecture 1：游戏引擎导论</h2><ul><li><a href="https://medill-east.github.io/2022/05/15/20220515-games104-toc/">GAMES104——现代游戏引擎：从入门到实践笔记</a></li></ul><h3 id="Topic-1-Why-we-need-to-learn"><a href="#Topic-1-Why-we-need-to-learn" class="headerlink" title="Topic 1 Why we need to learn"></a>Topic 1 Why we need to learn</h3><p>如果把做游戏比作会开车，会做游戏引擎就是会造车。游戏引擎就是 the diamond on the crown。</p><p>游戏引擎的未来应用：</p><ul><li>Game</li><li>虚拟人</li><li>电影动画</li><li>军事模拟</li><li>数字孪生<ul><li>真实世界的虚拟化呈现/表达</li></ul></li></ul><h3 id="Topic-2-History-of-game-engine"><a href="#Topic-2-History-of-game-engine" class="headerlink" title="Topic 2 History of game engine"></a>Topic 2 History of game engine</h3><ul><li>早期<ul><li>红白机（Famicom, FC）</li><li>游戏引擎之父<ul><li>John Carmack，卡神</li><li>Wolfenstein 3D (1992)</li><li>Doom</li><li>Doom 引擎授权后做出了 ShadowCaster</li></ul></li></ul></li><li>早期现代游戏引擎<ul><li>背景：Voodoo 显卡出现</li><li>游戏：Quake</li><li>硬件发展推动游戏行业发展<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220516110923.png"></li></ul></li><li>现代游戏引擎生态<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220516111034.png"><ul><li>Middlewares, 中间件<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220516111202.png"></li></ul></li></ul><h3 id="Topic-3-What-is-game-engine"><a href="#Topic-3-What-is-game-engine" class="headerlink" title="Topic 3 What is game engine"></a>Topic 3 What is game engine</h3><ul><li>Technology Foundation of Matrix</li><li>Productivity Tools of Creation</li><li>Art of Complexity</li></ul><blockquote><p>荐书：The complexity of system，系统复杂之美</p></blockquote><h4 id="Complexity-of-Simulation-by-0-1"><a href="#Complexity-of-Simulation-by-0-1" class="headerlink" title="Complexity of Simulation by 0/1"></a>Complexity of Simulation by 0/1</h4><p>现代计算机本质：图灵机（01 变换）</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220516111900.png"></p><p>Game engine is way beyond rendering</p><blockquote><p>荐书：game engine architecture</p></blockquote><p>游戏引擎的挑战：有限算力，实时处理</p><h4 id="Toolchain-for-creators"><a href="#Toolchain-for-creators" class="headerlink" title="Toolchain for creators"></a>Toolchain for creators</h4><p>做引擎要先学会做面向广大用户（程序员，艺术家/设计师）的工具</p><ul><li>对于程序员<ul><li>提供可扩展接口</li><li>是否具有二次开发能力也是评判引擎的标准</li></ul></li><li>对于艺术家/设计师<ul><li>提供多人协作功能</li></ul></li></ul><h4 id="Update-the-engine-on-the-fly"><a href="#Update-the-engine-on-the-fly" class="headerlink" title="Update the engine on the fly"></a>Update the engine on the fly</h4><p>热更新</p><h3 id="Topic-4-How-to-study"><a href="#Topic-4-How-to-study" class="headerlink" title="Topic 4 How to study"></a>Topic 4 How to study</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220516113211.png"></p><p><a href="https://github.com/miloyip/game-programmer">A study path for game programmer</a></p><p>本课只关心主干道，建立知识体系结构，在未来在碰到问题的时候知道从何下手</p><h3 id="Topic-5-Course-content"><a href="#Topic-5-Course-content" class="headerlink" title="Topic 5 Course content"></a>Topic 5 Course content</h3><h5 id="Basic-Elements"><a href="#Basic-Elements" class="headerlink" title="Basic Elements"></a>Basic Elements</h5><ul><li>Engine Structure and Layer</li><li>Data Organization and management</li></ul><blockquote><p>take away: 打开游戏引擎，从 Update 函数开始看起，就能顺藤摸瓜看到架构</p></blockquote><h5 id="Rendering"><a href="#Rendering" class="headerlink" title="Rendering"></a>Rendering</h5><ul><li>Model, material, shader, texture</li><li>light and shadow</li><li>render pipeline</li><li>sky, terrain, etc.</li></ul><h5 id="Animation"><a href="#Animation" class="headerlink" title="Animation"></a>Animation</h5><ul><li>Basic concepts of animation</li><li>Animation structure and pipeline</li></ul><p>动画间的融合</p><h5 id="Physics"><a href="#Physics" class="headerlink" title="Physics"></a>Physics</h5><ul><li>basic concepts of physics system</li><li>gameplay applications</li><li>performance optimization</li></ul><p>前面的是视觉表达，这里要负责物理表达</p><h5 id="Gameplay"><a href="#Gameplay" class="headerlink" title="Gameplay"></a>Gameplay</h5><ul><li>event system</li><li>scripts system</li><li>graph driven</li></ul><p>如何让模拟世界变为“可玩”的游戏</p><blockquote><p>take away: 编程不意味着 scripts coding，所有逻辑构建其实在某种程度上都可以算是编程</p></blockquote><h5 id="Misc-systems"><a href="#Misc-systems" class="headerlink" title="Misc. systems"></a>Misc. systems</h5><ul><li>effects</li><li>navigation</li><li>camera</li></ul><h5 id="Tool-set"><a href="#Tool-set" class="headerlink" title="Tool set"></a>Tool set</h5><ul><li>c++ reflection</li><li>data schema</li></ul><p>如何构建工具</p><h5 id="Online-gaming"><a href="#Online-gaming" class="headerlink" title="Online gaming"></a>Online gaming</h5><ul><li>lockstep synchronization</li><li>state synchronization</li><li>consistency</li></ul><blockquote><blockquote><p>预告令人头疼的拜占庭算法和爱斯基摩人小屋再次出现！</p></blockquote></blockquote><h5 id="Advanced-technology"><a href="#Advanced-technology" class="headerlink" title="Advanced technology"></a>Advanced technology</h5><ul><li>motion matching<ul><li>动作融合匹配让其自然</li></ul></li><li>procedural content generation (PCG)<ul><li>游戏内容自动生成</li></ul></li><li>data-oriented programming (DOP)</li><li>job system</li><li>Lumen<ul><li>虚幻 5 的光照系统</li></ul></li><li>Nanite<ul><li>虚幻 5 的虚拟几何系统</li></ul></li></ul><h4 id="Topic-6-Course-logistics"><a href="#Topic-6-Course-logistics" class="headerlink" title="Topic 6 Course logistics"></a>Topic 6 Course logistics</h4><h5 id="References"><a href="#References" class="headerlink" title="References"></a>References</h5><ul><li>no required textbooks</li><li>most recommended reference<ul><li>Game Engine Architecture, Jason Gregroy</li></ul></li></ul><h4 id="Mini-Engine"><a href="#Mini-Engine" class="headerlink" title="Mini Engine"></a>Mini Engine</h4><ul><li>mini runtime framework</li><li>mini editor</li><li>building basic knowledge system of game engine</li></ul><h4 id="Assignments"><a href="#Assignments" class="headerlink" title="Assignments"></a>Assignments</h4><blockquote><p>野心：最后能做个小小的联网对战游戏</p></blockquote><h3 id="course-contributor"><a href="#course-contributor" class="headerlink" title="course contributor"></a>course contributor</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220516120041.png"></p><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/05/15/20220515-games104-toc/">GAMES104——现代游戏引擎：从入门到实践笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-GameEngine </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game Engine </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220515 - 漫画荣格 - 第七章：塔 伟大的自己</title>
      <link href="2022/05/15/20220515-comicjung-chap7/"/>
      <url>2022/05/15/20220515-comicjung-chap7/</url>
      
        <content type="html"><![CDATA[<h2 id="第七章-塔-伟大的自己"><a href="#第七章-塔-伟大的自己" class="headerlink" title="第七章 塔 伟大的自己"></a>第七章 塔 伟大的自己</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul><p>1923 年母亲去世之前，荣格在宝林根湖畔建造了一座塔。从一开始建塔时他就明白，那可能是他成熟的地方。</p><p>大女儿当时不明白荣格为何要在此安家，因为这个地方有尸骨。</p><p>听见大女儿这么说的时候，荣格确实想过会有。四年后，在补充建塔的时候，发现了尸骨。可能是 1799 年在湖边淹死的法国士兵。</p><p>荣格为士兵举行了正式的葬礼，在坟上打了 3 发吊唁礼炮。但是，尽管他们的灵魂得到了安慰，可是，以后在这座塔里还是听到了许多“声音”。</p><p>那是，荣格听见了管乐声或笑声、说话声，可是外面没有任何人。</p><p>他认为这不是幽灵，也许是一种同步现象。与预感相反，是过去的声音在现在回响。</p><p>1950 年，荣格立了一块石碑，注明了这座塔对他的意义。</p><p>在碑上，他刻上了威廉的 炼金术、阿尔诺的拉丁语诗歌、霍姆克尔斯（人像）等。</p><p>面对石碑的时候，荣格自己的心理感到特别安慰，而且，在塔内的时候也感到···</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220515222654.png"></p><p>最初建塔的时候，是在母亲去世前后，是象征性的。但这座塔对荣格来说，好像是在母亲的胎内，就像在玻璃试管中制造霍姆克尔斯那样，他的灵魂也是在母亲的胎内或圣杯中形成的。</p><p>1923 年，最初的塔象征着暖炉般的母亲。</p><p>1927 年，荣格感觉缺少了点什么，就补充建造了另一座塔。</p><p>1931 年，时隔四年，建造了由 4 个部分组成的塔，这表示四位一体。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220515222916.png"></p><p>也就是说，就像坐在母亲这个暖炉旁边打盹儿，也象征着荣格的无意识和意识知识的心理结构。</p><p>1955 年，荣格在塔边与埃玛交谈，说想再给塔赋予其它的含义。埃玛感觉身体不适，说先回家休息。过了一会儿，荣格突然感觉不妙，再回家找埃玛时，埃玛已经离世。</p><p>妻子去世后，荣格感到自己肩负着“必须成为自己自身”这一内在的义务。</p><p>他觉得不能再蹲在象征着母亲的这个塔里了，必须让自我在塔上站起来。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220515223304.png"></p><p>从此以后，荣格经常在塔里苦思冥想。他好像同时生活在了几个世纪。</p><p>在那里，他经历了他的第二个人生，从所有角度眺望生生不息的人生。</p><p>在无限的思索中，他感受到了无时间状态的忘我境地。</p><p>在冥想中，他游历了永远的意象。他的肉体虽然还在塔里，但他的心却像祈祷师那样，移到了地底和大气层外，他经历了所有的体验。</p><blockquote><p>“现在”包括着“过去”和“未来”，把心向“现在”敞开，就是像“永远”敞开。</p></blockquote><p>一天，荣格“看到”埃玛穿着海莉为她做的礼服。她的表情既不悲伤也不高兴，就像一位深思熟虑的智者，没有丝毫杂念，也没有任何感情表露。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220515223913.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220515223926.png"></p><p>由于脱离了感情冲动的贪婪，远离了她们的投影和原型支配，实现了个性化。荣格看到了她们最真实美丽的形象。</p><p>他感悟：在走完人生的青年期时，就明白了人的感情中自然包含着对对方的过分期待，如果抛开这一点并客观地认识它，才能合二为一。</p><p>但是，此后的人生是很重要的，要脱离原型的束缚，离开父母和异性的关照，有目的的生活。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220515224220.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220515224236.png"></p><p>荣格“预见”了自己的死亡。</p><p>要理解死，他知道，死并不可怕，它是通往永远的入口。作为一个人，应该面对死亡，视死亡为自然之物，这样才能成熟。</p><p>这是人生后半生的课题。是人生的伟大的智慧。人类的生存，是要打开心灵的眼睛，去认识真实的自己。</p><blockquote><blockquote><p>天下万物，无中生有，最终不过复归于无。</p></blockquote></blockquote><p>“认识”世界、把心灵向自然“意义”敞开的时候，我们就能将死亡理解为再生的入口。</p><p>但是，人生的后半生也需要再次冒险，这时的冒险不是与他人争斗，而是与自己的无意识争斗。</p><p>这是使自我走向成熟并实现自己的过程，是人类成熟期的目的，起帮助作用的是结合的神秘，是东方知识和西方知识的完美结合。</p><p>荣格看到了，考虑过的事，要证实的事，都没有错。他思考的一个个片段，在庞大的整体中，得到了整合。</p><p>人在青年时代，要勇于向原型挑战，要有英雄般的冒险精神，要离开父母而独立，要巩固作为社会成员的地位，这些都是人生前半生的课题。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220515224739.png"></p><p>物质世界和精神世界并不是各自独立的，世界史不可分的，它作为一个整体，是个“一体世界”。</p><blockquote><blockquote><p>道体，即“一”</p></blockquote></blockquote><p>决定它的是结合的神秘，明白了一体世界的意志，也就理解了共时性。</p><p>而且，也就知道，宇宙不是机械装置似的冰冷的物体。弗洛伊德是用因果规律来解释心理，荣格的后半生是通过共时性来说明心理。</p><p>1955 年，《神秘的结合》出版了。荣格晚年，忙于 UFO 的研究，1958 年发表了《空中飞碟》。1960 年成为丘斯那哈特市的名誉市民。</p><p>1961 年 6 月 6 日，荣格离世。</p><blockquote><p>所谓生仅仅是结局的一部分，是庞大秘密中的一小段插曲。死···是通向再生的入口，是一个新生。</p></blockquote><p>这个世界充满着共时性，认识到这一点，也就能发现包罗万象中所含的“意思”。</p><p>对共时性的理解，就是我们对世界的认识。当向着共时性敞开心扉的时候，我们“自己”就会充满到广袤无垠的宇宙的各个角落。</p><p>世界就是这个“伟大的自己”的体现。</p><blockquote><p>我的孩子们啊，请不要忘记。你也许信，你也许不信。你在呼唤，你没有呼唤，神灵都在。</p></blockquote><blockquote><p>最初的人来自土地，是土地的孩子，第二个人是上天的孩子。</p></blockquote><blockquote><p>请不要忘记，世界是由一个真实联系着的。我们看到宇宙的时候，心灵就敞开了。</p></blockquote><blockquote><p>所有的存在都是有意义的。<br>我们知道生的喜悦。感受到了宇宙的博大恩惠。<br>我们的诞生就是因为需要“存在”，而成为可爱的存在。<br>不管遇到怎样的苦恼、残酷、憎恨与空虚···</p></blockquote><blockquote><p>当我们感觉到共时性的存在时，我们就会被无限的存在的喜悦所包围。<br>作为天意的共时性都同样在起作用。</p></blockquote><h3 id="题外话-联应和因果性"><a href="#题外话-联应和因果性" class="headerlink" title="题外话 联应和因果性"></a>题外话 联应和因果性</h3><p>这章原文中并无短评。</p><p>这里插一句题外话，不久前与友人谈及因果关系，没想到几天后就读到了荣格与共时性。</p><p>这里顺便将他发予我的《西方神秘学指津》中有关联应和因果性的相关部分截取：</p><p>在前启蒙时期，可以区分三种不同观点：</p><ol><li>把宇宙看成一个宏伟的和谐有机整体，其中所有部分都彼此联应，无需中介环节或因果链···<br>  这种“联应”概念与“类比思维”（analogical thinking）、“关联思维”（correlative thinking）、“相似”（ressemblance）、“征象”（signatures）、“分有”（participation）或“共时性”（synchronicity）等类似概念密不可分···</li><li>第二种观点可见于从菲奇诺开始的许多文艺复兴时期的作者。这种观点假设，宇宙的不同部分即使相距遥远，也会通过所谓的“隐秘因果性”（occult causality）在事实上相互影响。</li><li>第三种观点称之为“工具因果性”。其最基本的形式就是人们所熟知的“机械”模型或台球模型，即一个事物通过可证实和可预测的物质因果链来影响另一个事物。</li></ol><p>第一种观点将万物视为一体，不可分；第二种观点则预示着万物间表面独立，实则都被“隐秘因果性”相连；而第三种观点可以说视万物各自独立，除非有物质因果链将其连接。</p><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Psychology-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Learning Notes </tag>
            
            <tag> Psychology </tag>
            
            <tag> Carl Gustav Jung </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220515-GAMES104-Modern Game Engine - From Getting Started To Practice</title>
      <link href="2022/05/15/20220515-games104-toc/"/>
      <url>2022/05/15/20220515-games104-toc/</url>
      
        <content type="html"><![CDATA[<h1 id="GAMES104——现代游戏引擎：从入门到实践笔记"><a href="#GAMES104——现代游戏引擎：从入门到实践笔记" class="headerlink" title="GAMES104——现代游戏引擎：从入门到实践笔记"></a>GAMES104——现代游戏引擎：从入门到实践笔记</h1><h2 id="Why-Note"><a href="#Why-Note" class="headerlink" title="Why Note"></a>Why Note</h2><p>最近在尝试着搞关卡，不是很顺，算是在尝试多个方向，突然看到 GAMES 又出新课了，虽然二者并不直接相关，但，学吧，学无止境！</p><h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>以下基本信息引用自<a href="https://games-cn.org/games104/">课程官网</a>：</p><ul><li><strong>课程简介</strong><ul><li>本课程将介绍现代游戏引擎所涉及的系统架构，技术点，引擎系统相关的知识。通过该课程，你能够对游戏引擎建立起一个全面且完整的了解。如果你动手能力足够强，你将能够跟随课程，<strong>从0到1搭建起一个完整的迷你游戏引擎</strong>。本课程适合相关专业领域的学生、研究者，以及所有对游戏引擎设计和开发感兴趣的人。课程会分成以下三个部分：现代引擎架构综述、各核心系统原理和开发 、前沿领域简介。在每个部分中，将通过讲解、问答、课后作业的形式，带领你学习一个现代游戏引擎背后牵涉到的计算机体系结构，软件架构，各个系统特定的知识，了解大型软件系统设计和实施背后的复杂性，以及提高自身的编程能力。在本课程中，我们会准备一段开源的引擎框架，选取部分易上手的知识点，让你能够跟随课程节奏，亲手构建一个迷你引擎，体验系统架构的乐趣。本课程的核心是让同学们构建一个开发平台，不会去侧重于讲特定引擎的使用方法，也不会深入到具体效果实现；比如：用shader实现水面效果等。</li></ul></li><li><strong>教师简介</strong><ul><li>王希，知名游戏引擎研发技术专家和布道者，BOOMING TECH创始人。本科毕业于浙江大学CAD&amp;CG实验室，硕士毕业于清华大学计算机系。前期在微软亚洲研究院进行计算机科学和图形学领域研究，发表多篇SIGGRAPH论文。后加入Bungie工作室，是《Halo》系列和《Destiny》引擎团队核心成员，专注于现代3A级游戏的引擎底层架构和工程实践。2011年，王希回国创立BOOMING TECH，十年来一直从事游戏引擎设计和研发，探索引擎在前沿领域中的应用方向，以及云原生引擎技术突破。GAMES系列课程是王希的首次对外公开课，希望以图形学研究者，和产业亲历者的视角，系统性地带大家认识和了解游戏引擎。让更多人动手体验到游戏引擎设计和开发的魅力。</li></ul></li><li><strong>直播方式</strong><ul><li>GAMES虎牙直播间 <a href="http://webinar.games-cn.org/">webinar.games-cn.org</a></li></ul></li><li><strong>课程 BBS：</strong><br><a href="https://games-cn.org/forums/forum/games104-forum/">https://games-cn.org/forums/forum/games104-forum/</a></li><li><strong>课程 PPT 和视频：</strong><br><a href="https://games-cn.org/games104-slides/">https://games-cn.org/games104-slides/</a></li><li><strong>课程作业：</strong><br><a href="http://www.smartchair.org/GAMES104">http://www.smartchair.org/GAMES104</a></li><li><strong>课程大纲：</strong><ul><li>【第一讲：2022年3月14日】游戏引擎导论</li><li>【第二讲：2022年3月21日】基础架构 1 – 引擎架构分层，整体Pipeline</li><li>【第三讲：2022年3月28日】基础架构 2 – 数据组织和管理</li><li>【第四讲：2022年4月4日】渲染系统 1 – 渲染数据组织</li><li>【第五讲：2022年4月11日】渲染系统 2 – 光照</li><li>【第六讲：2022年4月18日】渲染系统 3 – 渲染管线</li><li>【第七讲：2022年4月25日】渲染系统 4 – 天空，地形，后处理等</li><li>【第八讲：2022年5月2日】动画系统 1 – 骨骼动画</li><li>【第九讲：2022年5月9日】动画系统 2 – 动画混合</li><li>【第十讲：2022年5月16日】动画系统 3 – 高级动画</li><li>【第十一讲：2022年5月23日】物理系统 1 – 碰撞和刚体</li><li>【第十二讲：2022年5月30日】物理系统 2 – 布料模拟</li><li>【第十三讲：2022年6月6日】GamePlay 1 – 基础机制</li><li>【第十四讲：2022年6月13日】GamePlay 2 – Graph Driven</li><li>【第十五讲：2022年6月20日】特效系统</li><li>【第十六讲：2022年6月27日】其他系统 （相机，控制，寻路等）</li><li>【第十七讲：2022年7月4日】工具链 1 – 基础框架</li><li>【第十八讲：2022年7月11日】工具链 2 – 代码反射，数据打包等</li><li>【第十九讲：2022年7月18日】网络同步</li><li>【第二十讲：2022年7月25日】前沿介绍 1 – Data Oriented Programming，Job System</li><li>【第二十一讲：2022年8月1日】前沿介绍 2 – Motion Matching, Nanite, Lumen</li><li>【第二十二讲：2022年8月8日】前沿介绍 3 – Procedurally Generated Content</li></ul></li><li><strong>教材：</strong><ul><li>【非必须】：Game Engine Architecture, Jason Gregroy</li></ul></li></ul><h2 id="Content"><a href="#Content" class="headerlink" title="Content"></a>Content</h2><ul><li><a href="https://medill-east.github.io/2022/05/16/20220516-games104-lecture1/">20220516 - GAMES104 - Lecture 1：游戏引擎导论</a></li><li><a href="https://medill-east.github.io/2022/05/18/20220518-games104-lecture2/">20220518 - GAMES104 - Lecture 2：Layered Architecture of Game Engine</a></li></ul><h2 id="Assignment"><a href="#Assignment" class="headerlink" title="Assignment"></a>Assignment</h2><ul><li><a href="https://medill-east.github.io/2022/05/18/20220518-games104-assignment1/">20220518 - GAMES104 - Assignment 1: Build and Run Pilot Engine</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-GameEngine </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game Engine </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220514 - 漫画荣格 - 第六章：荣格与东方思想</title>
      <link href="2022/05/14/20220514-comicjung-chap6/"/>
      <url>2022/05/14/20220514-comicjung-chap6/</url>
      
        <content type="html"><![CDATA[<h2 id="第六章-荣格与东方思想"><a href="#第六章-荣格与东方思想" class="headerlink" title="第六章 荣格与东方思想"></a>第六章 荣格与东方思想</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul><p>每一条道路都是通往真理的无数条道路中的一条。</p><p>所有物质都是一个物质的诸多侧面，我们把心向着道路敞开的话，就会知道走哪条路。</p><p>弟子心中做好准备的时候，师傅自然就会过来。</p><p>荣格曾经在给一位女病人做心理分析时受阻，因为她总是什么都知道。因此，分析就中断了。</p><p>而有一次，女病人说昨晚做了一个梦。有人在梦中给了她一个黄金做的神圣甲虫。这时，窗外正好有一只甲虫撞到玻璃上发出声响，荣格将其拿进来，告诉女病人说“这里有你的圣甲虫”。发生这件事以后，她的合理主义出现了变化。</p><p>之后，因为她消除了原有知识的障碍，所以，对她的心理分析进展得很顺利。</p><p>是那个偶然的巧合···不，那不是偶然的。类似的事情，经常会发生。</p><p>长久以来，我们相信，只有因果关系才是真实的。因果关系才是合理主义思想的基础。但，荣格认为，也存在着与因果关系相对的，应该称为“共时性”的关系。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220514215014.png"></p><p>人类意识的根源如果只有一个的话，那些“巧合”就不会让人感到奇怪了。</p><p>荣格当时对天宫图（占星算命用的图）和历史的相关性很感兴趣，想再好好研究一下易经。</p><p>这个设想的实现花了 20 多年的时间，终于在 1952 年发表了《自然现象与心理结构》一书。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220514215231.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220514215240.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220514215320.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220514215346.png"></p><p>1938 年，荣格应印度政府的邀请到了印度。这使他有幸看到了与北非不同的高度分化了的不同性质的文明。</p><p>东方是欧洲的对照镜。原本相同的东西，在欧洲和印度却各有不同的表现。</p><p>尤其令人惊讶的是，东方人并不忌讳“恶”。有意思的是，他们认为“恶”包括在自然界当中。荣格把这件事记录在以后出版的《四位一体论》中。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220514215624.png"></p><p>荣格在释迦牟尼频繁讲经的地方，分析基督教与基督教徒。基督教徒努力寻求善。尽管将要被恶俘虏，但印度人却感到自己是在善恶的彼岸，他们从恶中逃脱了出来，并且克服了恶。</p><p>荣格认为，释迦牟尼和基督教都是自己的具体体现，但它们的意义却完全不同。</p><p>释迦牟尼理性地克服了世界，而基督教是作为受难者来客服世界。基督教是忍耐，释迦牟尼是彻悟。但是，在印度，释迦牟尼是完美的人。</p><p>基督教在基督教徒中得到了统一，人们应该感觉到基督教。可是，历史上却说“应该模仿基督教”，这就把神置于外了。因为每个人都没有把自己自身向全体敞开，所以导致自己越来越渺小。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220514215945.png"></p><blockquote><blockquote><p>图中的“自己”，应该指代的是意识和无意识的中心。</p></blockquote></blockquote><p>而意识存在于宇宙的菩萨中，菩萨按照神的意志行事。我们敞开心灵去看待神，就会使自我不断丰富并成长。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220514220120.png"></p><p>我们生存在宇宙的安排中，让偶我们的意识去认识。在理念上，只要领会到神，神就会存在与我们的心中。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220514220157.png"></p><blockquote><blockquote><p>有些像早些年看到过对于“开光既是开灵智”的解释：开光并不是某种物理意义上的措施，而是指人在看到“被开光”的物体就能够想到相应的神/品质，从而最终开灵智。</p></blockquote></blockquote><p>当然，必须要知道：认为自己=神的时候，由于骄傲自大而关闭了自己的意识：认为自我=自己，已经完全被同化了，这都是很危险的。</p><p>但对荣格来说，印度是研究过程，不是研究对象。</p><p>所有道路，都是为了让他重新塑造欧洲精神的主题。</p><p>实际上，到东方考察，对荣格来说是很有意义的经历，使他想到了对立原理的统一，这有助于他对炼金术的研究。</p><p>他觉得，释迦牟尼的内心反省确认了他的意向理论。中国道教的思维方式证实了他的共时性原理。</p><p>他觉得，自己的心灵终于向着“统一的世界”敞开了，心里很平静。</p><p>然而，1944 年，由于神志不清和骨折，荣格停止了罗马的旅行。</p><p>荣格还有很多事情想写下来，能起床的时候，他就拼命地写。</p><p>晚年的托妮，因为过量吸烟和饮酒，患上了关节炎和孤独症。</p><p>1953 年 3 月 20 日，托妮突然去世。</p><p>荣格对她的去世，没有做过任何警告梦或预知梦，感到很不安。最后，也没有出席托妮的葬礼。</p><p>但是，之后他追悼了托妮，为托妮制作了纪念碑，并立在丘斯那哈特地区的自家院子里。</p><h3 id="短评-9：荣格被东方思想吸引"><a href="#短评-9：荣格被东方思想吸引" class="headerlink" title="短评 9：荣格被东方思想吸引"></a>短评 9：荣格被东方思想吸引</h3><p>荣格对东方思想产生浓厚的兴趣，与他和汉学家里哈路特·威廉赫尔姆的会面有很大影响。</p><p>荣格通过威廉赫尔姆，对中国的《易经》、《太乙金华宗旨》产生了极大兴趣。《太乙金华宗旨》一书的内容是以冥想形式介绍了中国式的炼金术，这正与荣格关心的西方炼金术相关。荣格也亲自体验过古印度瑜伽理论的冥想法，可以说，冥想体验是感知自己人格深处的无意识的方法。</p><p>荣格被《易经》的这里所吸引，经常使用芦苇棒算卦。荣格提倡的共时性的思维，就是从易经的原理领悟出来的。</p><p>西藏佛教也对荣格影响很大，荣格画了一张代表整个心理形象的菩萨图。有一位欧洲患者在自己的无意识中发现，这张图中的菩萨和西藏佛教的菩萨一样。荣格是希望通过画菩萨图来发现心灵深处涌出的意象，进而找到探索无意识世界的钥匙。</p><p>就这样，荣格积极地把东方思想介绍到欧洲，他对很多东方经书都做了注解。因此，在东西方思想融合的过程中，荣格所起的作用不容忽视。</p><p>但是，荣格的心理学与佛教的唯心思想不同。唯心思想是大乘佛教之一，认为“所有现象都是心理产生的”，主张通过接受瑜伽思想是自己的心理转变，达到大彻大悟的境界。其将意识分为 8 大作用，其中有六觉：视觉、耳觉、嗅觉、味觉、触觉和感觉，此外，还有根本性的自我执着意识“超自然意识”、产生所有表象的根源性意识。</p><blockquote><blockquote><p>想到了 <a href="https://baike.baidu.com/item/%E3%80%8A%E5%9D%9B%E7%BB%8F%E3%80%8B/1772525">《坛经》</a>中云：“时有风吹幡动。一僧曰风动，一僧曰幡动。议论不已。惠能进曰：‘非风动，非幡动，仁者心动。”</p></blockquote></blockquote><p>根源性意识被看做与荣格心理学中的集体无意识相适应，这种观点当然不是荣格所关心的。但是，它作为研究荣格心理学的方法之一，是与东方思想相比较的研究，也是很有意思的。</p><h3 id="短评-10：共时性与道教"><a href="#短评-10：共时性与道教" class="headerlink" title="短评 10：共时性与道教"></a>短评 10：共时性与道教</h3><p>共时性是荣格提出的理论，它与因某种原因而得出某种结果的“因果关系”正好相反。荣格在实践中得出结论：“有关联性的事情容易同事或连续发生”，这就是共时性，也就是说，共时性是一定意义上的一致性，有别于单纯的同时发生。</p><p>共时性可以分为以下类型：</p><ul><li>心理想的事情与实际发生的事情相吻合。例如，看到眼前的桌子，就想桌子上要是有鲜花该多好啊，这时，正好有一个朋友拿着鲜花来拜访你。<blockquote><blockquote><p>心想事成？</p></blockquote></blockquote></li><li>梦见或幻觉到的事情同异地发生的事情一致。如，梦到有人死了，实际上那人真的在他乡去世了，这样的传闻很多。<blockquote><blockquote><p>类似预知梦</p></blockquote></blockquote></li><li>某个意象就是将来实际发生的事情，也就是所谓的预言。</li></ul><p>这些现象，用因果关系是无法解释清楚的，但经常被解释为偶然的巧合。可是，在中国的道教或《易经》中，看到这类现象就不足为奇了。另外，东方有些谚语“心想事成”、“说曹操曹操到”、“弟子心中做好准备的时候，师傅自然就会过来”等，也都包含着共时性的原理。</p><p>再如，白天虽然看不见星星，但星星白天也在闪烁。如果心灵的眼睛睁开，则可以认识到白天也在闪烁的星星。就这样，敞开心扉去认识大自然的客观现象，就会发现共时性其实并不神秘，而是很自然的事情，也可以说，这类似于道教中的道的幻觉所看到的一瞬间的事情。</p><p>道教认为，宇宙中的统一原理与世界上的万物都有关系，所有物质都可以说是“宇宙统一体”的各个侧面。因为所有物质都属于一个统一体，所以，两种以上的物质就具有关联性，这也就不奇怪了。</p><blockquote><blockquote><p>出处莫不是《庄子·知北游》？<br>东郭子问于庄子曰：“所谓道，恶乎在？”庄子曰：“无所不在。”东郭子曰：“期而后可。”庄子曰：“在<a href="https://baike.baidu.com/item/%E8%9D%BC%E8%9A%81/10141463">蝼蚁</a>。”曰：“何其下邪？”曰：“在稊稗。”曰：“何其愈下邪？”曰：“在瓦甓。”曰：“何其愈甚邪？”曰：“在屎溺。”东郭子不应。</p></blockquote></blockquote><p>荣格提出了共时性与道教的关系，描述说：“对共时性的理解，是打开研究东方思想神秘世界的钥匙。”</p><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Psychology-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Learning Notes </tag>
            
            <tag> Psychology </tag>
            
            <tag> Carl Gustav Jung </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220513 - 漫画荣格 - 第五章：炼金术时代 心理的变化与成长</title>
      <link href="2022/05/13/20220513-comicjung-chap5/"/>
      <url>2022/05/13/20220513-comicjung-chap5/</url>
      
        <content type="html"><![CDATA[<h2 id="第五章-炼金术时代-心理的变化与成长"><a href="#第五章-炼金术时代-心理的变化与成长" class="headerlink" title="第五章 炼金术时代 心理的变化与成长"></a>第五章 炼金术时代 心理的变化与成长</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul><p>1926 年，荣格做了个具有决定意义的梦：他和一个农夫被关在了某家公馆的院子里，农夫叫喊：“啊！我们被关进了 17 世纪”，但自己却一点也没有感到不安，并坚信“总有一天能出去”。</p><p>荣格从梦中得到启示：自己一生要研究的书籍，应该在 17 世纪的书籍中。</p><blockquote><blockquote><p>希望每个人都有机会做这样，理解这样的梦</p></blockquote></blockquote><p>旅行回来后，荣格贪婪地读书，埋头研究。《我的思想》一书即将完成，但画的地图还有些不足之处。</p><p>他读完了关于唯理主义宗教思想的所有书籍，之后不知该研究什么。</p><p>唯理主义归根到底是说明了弗洛伊德的可怕的父辈权威，只会让人产生绝望与苦恼。</p><p>荣格认为，一定要在心里深处找到光明的另一个侧面，研究作为人类心理变化容器的子宫的原理。</p><p>1928 年，里哈尔特·威廉赫尔姆寄来一本有关中国炼金术的书籍《太乙金华宗旨》。这本书虽然不是讲述真正的炼金术，但它告诉了荣格“菩萨”的存在，是荣格研究炼金术的重要的航标。</p><blockquote><blockquote><p>玄起来了</p></blockquote></blockquote><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220513210115.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220513210133.png"></p><p>荣格让托妮去收集有关炼金术的书籍。尽管如此，很长时间，他一致认为炼金术是莫名其妙的东西，没有去理会。</p><p>但很快，荣格就和威廉赫尔姆一起研究起了道教与菩萨。1929 年，二人完成了《黄金精华的秘密》艺术，可惜的是，书籍完成不久，威廉赫尔姆就去世了。</p><p>菩萨图和道教的太极图，在荣格以后的研究中，对他影响很大。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220513210420.png"></p><p>很长时间，道的阴阳相生成了荣格的研究主题，他感到，阴阳图说明了光明与黑暗是可以统一的。</p><p>并且他还觉得，通过研究异教，可以重新认识他一直否定的基督教。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220513210554.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220513210619.png"></p><p>荣格发现，他希望自己周围的女性们是太母的原型，他已经超越了希望她们是圣母的这一单方面的愿望。</p><p>他希望她们从一些压抑及原型的支配中解脱出来，获得自由，使自己成为一个独立的人。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220513210819.png"></p><p>在和她们和谐交往的过程中，荣格开始贪婪地阅读有关炼金术的书籍。</p><p>刚看上去，好像是一些无聊的化学反应的梦，但渐渐地，他发现，书中讲的不正是人类心理的变化吗？</p><p>无意识是一个过程，通过自我对无意识的参与，使心理产生变化并得到发展，其个性化的过程就是炼金术。</p><p>掌握炼金术，就是“神秘的结合”。</p><p>荣格在其著作中揭示：人的降生，就是为了通过改变自己的参与来改变并发展心灵这一“自己实现”的人生旅程。</p><p>荣格发现了其他学派的炼金术，日后撰写了一部题为《心理学与炼金术》的巨著，并因此创立了“个性化过程”这一荣格分析心理学中特有的理论。</p><p>而且，正是在这一研究过程中，荣格提出了“自己”这个概念。因此，荣格又自信地提出了“原型”、“集体无意识”等概念。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220513211422.png"></p><p>1933 年起，希特勒纳粹势力的抬头，正像荣格所说，是集体无意识的表现，是疯狂症。</p><p>他认为，因为没有意识到“自己”这个概念，所以，欧洲将要被集体无意识吞噬。这很危险···！</p><p>如同欧洲内部发生痉挛一样，欧洲将要再次卷入战争的旋涡。</p><p>此时，弗洛伊德由于反对迫害犹太人的运动而受到纳粹的迫害，为能帮助弗洛伊德，荣格与他取得了联系。</p><p>那时的弗洛伊德，因为<a href="https://zh.wikipedia.org/zh-hk/%E4%B8%8B%E9%A2%9A%E7%99%8C">下颚癌症</a> 做了几次手术，身体非常衰弱，但是他觉得不能接受荣格的···“敌人的帮助”。</p><p>弗洛伊德 1939 年流亡英国，第二年去世，享年 83 岁。</p><p>荣格再次失去了父亲。</p><p>荣格、埃玛、托妮都迎来了人生的晚年。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220513212135.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220513212150.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220513212208.png"></p><p>荣格后来异常活跃，1940 年在艾拉诺斯发表了《三位一体教义的心理学解释》。</p><p>1941 年和卡尔·可雷尼伊合著《神话学入门》，在艾拉诺斯发表了《弥撒的变化象征》。</p><p>此外，还和物理学家泡利·瓦尔夫甘谷甲流了对未来的展望。晚年的荣格，不仅继续进行心理学的研究，还涉及到神话学、自然科学等广泛的领域，深入研究人类的内心深处。当然，还有宗教学，尤其是积极向其他学派解释基督教。</p><p>他还在原本基督教对“神-圣灵-孩子”三位一体的神圣解释基础上融合阴阳思想进行了拓展，提出了“神-圣灵-恶魔-基督教”的四位一体说法。这个四位一体，是光明与黑暗、东方与西方，以及所有物质的结合，使得基督教展现更高水平的神圣。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220513212504.png"></p><p>荣格已经不害怕潜入意识深处了，而且还自由自在地往返于意识和无意识之间。</p><p>有一天，荣格做了这样一个梦：</p><p>家里有一栋从未进去过的房子，里面有一扇双层梦。进去一看是一个实验室。窗前有张桌子，上面放着许多玻璃容器，那是他父亲的工作间。瓶子里有各种各样的鱼。</p><p>有一位叫汉斯的年轻人拉开了窗帘。下一间是母亲的房间，顶棚上吊着 5 个箱子，分成 2 排。那间房子很宽敞，顶棚上吊着的箱子距离地面约有 60 厘米，每个箱子下面分别有两张床，就像庭院中的大亭子。这是他母亲的幽灵来访的屋子。</p><p>窗外有个大厅，管乐队在大声演奏。</p><p>他知道，母亲是为来访的幽灵布置的这个屋子。</p><p>管乐队表现出了表面的欢乐和世俗。可是，他们背后，气氛却截然不同，是沉默的亭子和实验室。</p><p>父亲房间里的鱼代表基督教，父亲关照着基督教徒的灵魂。</p><p>母亲的房间是灵魂来访时的招待会，母亲正保护着死者的灵魂。</p><p>他作为父亲和母亲的孩子，肩负的任务就是治愈灵魂。</p><p>他醒了。</p><p>他不再迷茫，他的存在，是为了将欧洲的白昼（基督教）和夜晚（神秘思想）相结合。</p><p>而且，人类的存在，是为了与没有规定要称为“神”的实体相对的···</p><p>他必须将神圣意向的明暗两面结合起来。白昼和黑夜是一个物体的不同侧面。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220513213357.png"></p><h3 id="短评-7：荣格与炼金术"><a href="#短评-7：荣格与炼金术" class="headerlink" title="短评 7：荣格与炼金术"></a>短评 7：荣格与炼金术</h3><p>炼金术是一项科学技术，是从普通金属中提炼出贵金属，尤其是指黄金提炼技术。也包括了提炼长生不老药（炼仙丹）和万能药的技术。这一技术的产生，一般都认为，是由古希腊时代的亚历山大，结合各种冶炼技术、染色技术、宗教和哲学思想而产生的。这一技术的思想在《赫尔墨斯文库》中作为赫尔墨斯思想，受到了人们的推崇，在欧洲、阿拉伯搬到得到了不断推广。</p><p>炼金术历来被认为是伪科学、迷信，在近代科学形成前就应该被摒弃，但其发展至今，却没有停留在单纯的物质生产上，而是以系统的思想和实践为基础，形成了独特的解释世界的理论框架。炼金师在进行科学作业的的同时，也注重内心体验，即心灵深处发生的变化。两个对立的物质相结合，便可以产生新的物质，荣格的这一观点，形象地解读了炼金术。</p><blockquote><blockquote><p>这倒是以前所不曾了解的部分</p></blockquote></blockquote><p>荣格认为，炼金术的工艺以及其中所含的男女特征，与人类的人生及心理变化的方式很相似，于是，就将炼金术与心理治疗相结合，把炼金工艺和技术用于精神分析，创立了自己独特的精神分析疗法。当然，荣格的炼金术与原本意义上的炼金术完全不同。</p><p>荣格研究了炼金术的分离、分析、综合与合成的过程，以此提出了精神分析的四个阶段：①叙述-②解释清楚-③教育-④变化。</p><p>最初两阶段相当于炼金术中的分离、分析，其理论相当于弗洛伊德的还原法，荣格的理论中还增加了教育和变化。荣格分析理论的目的，并不满足于通过精神分析来减轻患者的病状，而是使患者的人格得到健康成长，使心理健康发展。</p><p>当然，为了实现这一目标，精神分析医生与患者，都必须以正直的心理（如同炼金原料）进入分析状况（如同将原料装入蒸馏器中），都很认真的两者，通过相互作用，彼此都发生了变化。</p><p>的确，荣格学派的精神分析医生，在给患者进行分析的同时，自己也在不断变化、成长。无论是精神分析医生还是患者，只有在相互信任、负责的基础上，才能得到心理的变化和成长。</p><h3 id="短评-8：唯理主义"><a href="#短评-8：唯理主义" class="headerlink" title="短评 8：唯理主义"></a>短评 8：唯理主义</h3><p>唯理一词的本意在希腊语中是“知识”的意思，唯理主义不同于基督教兴起时出现的思想运动——“旧唯理教派”。旧唯理教派与历史无关，多出现在各种宗教中。应该看到，荣格的唯理研究，在很大程度上也注重认识神灵世界的旧唯理教派。</p><p>唯理主义是在罗马边境、埃及、叙利亚、巴勒斯坦等国兴起的，并出现了很多流派，有许多被认为是基督教的异端教派。</p><p>其实，它是一种独立的思想运动，它的世界观的表现形式是否定希腊以来的普遍宇宙论（星尘观），这一思想在当今已经被否定。</p><p>唯理主义认为，世界分为物质的和神灵的，而神灵世界高于物质世界。</p><p>下面简单介绍唯理主义救世论：</p><p>人类是通过神灵的某个机遇来到地球，并被投胎到并非原本就有的物质世界里，这并不是人类的本来面目。但是，如果获得了关于人类本来面目的知识，人类就会觉醒，灵魂也就会脱离肉体而进入至高无上的神灵世界，再次成为神灵。</p><p>这种观点，否定了基督教徒所倡导的上帝创造的世界。而且，如果人类本来就有神性的话，就不需要救世主耶稣基督了。实际上，唯理主义的神话世界几乎与基督教的神话世界完全对立，是对基督教价值体系的完全反驳。因此，唯理主义的各流派受到了基督教的猛烈镇压，4 世纪后就迅速衰落了。</p><p>不过，唯理主义思想中，不是依靠自身以外的神灵，而是通过自我觉醒来救助自己的观点，对于现代人来说，也是很有价值的理论。也许正是这一点，使荣格非常重视研究唯理主义。</p><p>深层心理学中认为，人的肉体内存在着本来的自己，通过唯理主义观点才可以认识到，这种思想与荣格的无意识理论是一致的。唯理主义诞生的同时，炼金术也开始在埃及出现了。所以，荣格在研究唯理主义之后，很自然地就开始了炼金术的研究。</p><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Psychology-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Learning Notes </tag>
            
            <tag> Psychology </tag>
            
            <tag> Carl Gustav Jung </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220511 - 漫画荣格 - 第四章：旅途 欧洲文明失去了什么</title>
      <link href="2022/05/11/20220511-comicjung-chap4/"/>
      <url>2022/05/11/20220511-comicjung-chap4/</url>
      
        <content type="html"><![CDATA[<h2 id="第四章-旅途-欧洲文明失去了什么"><a href="#第四章-旅途-欧洲文明失去了什么" class="headerlink" title="第四章 旅途 欧洲文明失去了什么"></a>第四章 旅途 欧洲文明失去了什么</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul><p>1923 年，荣格母亲去世。同年，他在宝林根湖畔建造了一座塔，这对他来说，是“新的人生”的开始。</p><p>母亲去世前后的一段时间里，荣格每天都在旅行中度日，这也许不是偶然的旅游观光。第一次旅行是 1920 年去了北非，1924 年到北美，然后又到了东非等地访问。</p><p>他很久以来的梦想就是从他国看欧洲，也从外在因素看待自己的人生。</p><p>他暂时离开托妮、埃玛，也在旅行途中，承受失去母亲的痛苦。</p><p>在突尼斯（非洲），他发现非洲女人几乎都戴着面罩，不戴面罩的女人被认为是妓女。而且，有很多男性相互搂抱，他心想难道就像古希腊那样，有很多同性恋吗？</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220511232853.png"></p><p>导游不像欧洲人那样轻浮，迈着坚实的脚步，脚步虽轻，但具有顽强的生命力。不知是天热的缘故，还是原始的符咒力，荣格似乎喜欢上了这个国家。</p><p>这一想法使荣格就像得了感染症。并且他还做了这样一个梦：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220511233044.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220511233118.png"></p><p>荣格在梦中被一名非洲酋长样的人（后面简称为酋长）袭击，但最终反制了他。并之后要求酋长读书，理由是“因为我战胜了你，所以，你必须读完这本书”。</p><p>荣格后来明白，酋长对他来说是影子，是与自己有关的种族的影子。梦境暗示的是荣格与北非相遇的东西。</p><p>在意识中，他感到了作为欧洲人的文明的优越感，但却畏惧非文明。北非对他来说是危险的。他以一个欧洲人的意识，遭到了北非这一无意识的激烈攻击，似乎就要被打败，那正是杀人现象的象征。</p><p>他们忘却了史前时代的最初的记忆。欧洲人失去的东西，可能就在欧洲以外的地方。或许，失去已久的神，也在那里？</p><p>在荣格即将离开北非的时候，内心深处特别渴望那位一直被他否定的神。</p><p>1924 年，荣格访问了新墨西哥的印第安人村庄普韦布洛。</p><p>美国是白人社会，但在那里却不同。他去那里的目的，是为了寻找在北非看到的“非欧洲的东西”。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220511233658.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220511233713.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220511233730.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220511233744.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220511233807.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220511233825.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220511233850.png"></p><p>1925 年，荣格到了肯尼亚和乌干达。那里的印第安人，就像普韦布洛的印第安人一样，也是那么完美和谐。女人和男人一样，都是宝贵的劳动力。而在欧洲，主张女性权利平等的结果，却失去了男女平等协作的和谐生活。</p><p>荣格在这里收到了一个解梦的请求：<br>“我以前的老医师们的梦，他们知道要爆发战争，要流行疾病，或者何时会下大雨。不过，白人来到非洲后，就没有人做梦了，现在，英国人知道这一切。”</p><p>荣格从他的话中，好像看到了欧洲人失去了与灵魂交流的能力、仙女、神灵、生命力。</p><p>当地人在早上，太阳升起的时候，会从小屋里跑出来，把唾液吐在手上，双手伸向太阳。太阳是神，唾液是包含个人生命力的实质的灵魂。这个仪式的意思，也就是说“我们把我们活着的灵魂奉献给神”。</p><p>人类基本的冲动，就是试图从原始的黑暗中挣脱出来。人类自古以来就憧憬光明。过去，我们朝拜闪烁在天空的光、拯救世界的神。</p><p>如果说欧洲的知识是光明，那么，非洲人就生活在心灵根本的黑暗中。所以，他们对神的憧憬是纯真的，而生活在光明中的欧洲人也不要害怕神。</p><p>那是，荣格知道了，神是“存在”的。</p><p>我们任何人都在平等地接受着伟大的神灵之光的恩惠。而且，荣格还认为，人类的生存都应该包含着这个“意思”。我们虽然孤独，但我们与神同在。</p><p>无论是个人还是全世界，都是有意义的存在。</p><p>荣格知道自己的意识已经不害怕无意识的黑暗了。所以他跨过尼罗河，从非洲的心脏地区到埃及的旅程，对他来说，就成了诞生光明的一个过程。</p><p>他已经不再轻易地收到无意识的支配了，他实现了崭新的自我。</p><p>这次旅程给了荣格满意的答案和经历。</p><h3 id="短评-6：关于英雄神话"><a href="#短评-6：关于英雄神话" class="headerlink" title="短评 6：关于英雄神话"></a>短评 6：关于英雄神话</h3><p>荣格非常重视研究神话世界，因为他认为，在人类的无意识中，存在着超越文化和时间的人类共有的“形成神话的”因素。</p><p>下面介绍欧洲中世纪主要流传的两个英雄神话故事。</p><p>首先介绍尼伯龙根之歌，故事的主人是齐格菲，被编成的故事有：日耳曼神话《尼伯龙根的戒指》、北欧神话《埃达》、德国的叙事诗《尼伯龙根之歌》等。</p><p>莱茵河畔的勃艮第王国，统治者是宫塔国王，他有一位漂亮的王妃，名为克里姆希尔德。荷兰国的王子——齐格菲来向王妃求婚，他降服了巨龙，身上溅上了龙血，使自己变成了不死之身。宫塔国王向齐格菲王子提出了一个要求：“如果你能帮助我取到冰岛的美女——卜隆西卢特，我就把克里姆希尔德王妃送给你。”</p><blockquote><blockquote><p>按照之前的太母原型，这里的齐格菲自带反叛母性的内核？</p></blockquote></blockquote><p>在王子的帮助下，冰岛的美女可以成为宫塔国王的妻子，可是，冰岛美女——卜隆西卢特却爱上了前来牵线搭桥的齐格菲王子。他也知道，如果自己嫁给宫塔国王，齐格菲王子就要娶克里姆希尔德王妃为妻。所以，卜隆西卢特一直拒绝嫁给宫塔国王，还是齐格菲再次出面斡旋，事情才得到圆满解决。</p><p>可是，平静的日子没有持续多久，几年后，齐格菲王子和克里姆希尔德从荷兰回到勃艮第王国，克里姆希尔德发现卜隆西卢特爱慕王子，就与她发生了激烈的口角。宫塔国王感到气氛紧张，就命令手下人——哈根暗杀齐格菲王子。虽然王子被认为是不死之身，但他的后背没有溅上龙血，所以王子被刺中后背而死去。</p><p>齐格菲死后，克里姆希尔德为了向宫塔国王和哈根复仇，嫁给了匈奴人埃泽鲁，骗出宫塔国王和哈根两人，并将他们杀死。克里姆希尔德最后也被东戈特的老将军杀死。</p><p>另外，在介绍一个中世纪欧洲文学史上最重要的亚瑟国王的传说，据说主人公亚瑟确有其人，率领凯尔特人夺回 6 世纪至 12 世纪被撒克逊人占领的国土，是一位传说中的英雄人物。</p><p>不列颠国王维瑟尔，使用魔法变成康沃尔公爵，与王妃依古雷奴交往，生下了亚瑟。亚瑟得到一把埃库斯卡里巴宝剑，当上了不列颠国王，并与古微內卜阿结婚。在他奔走于各国、踏上远征罗马的途中，听说他的外甥莫鲁多雷特夺走了王位、霸占了他的妻子，得知这一消息后，他回国杀死了外甥，自己也受了重伤。后来，在阿巴伦的埃特纳岛去世了。</p><p>以这个故事为原型，以后又出现了圆桌骑士团的故事、圣杯传说、特利斯坦和伊左都的故事等，使亚瑟王的传奇故事越传越广。</p><p>圣杯传说具有 12 世纪末欧洲兴起的基督教色彩。季度在最后的晚餐时所使用的餐具当中，被子被用来接住十字架上的基督流出的血，这个杯子就是圣杯。法国诗人克雷蒂安·德·特罗阿，把寻找这个圣杯的过程写成《裴卢斯巴卢的故事》，但克雷蒂安最终没有写完，由后人续写完成。</p><p>荣格发现这些英雄故事中含有共同的主题，列举如下：</p><p>降服大龙=脱离母亲、获得自立<br>得到宝剑等=获得男性原理<br>寻找和得到圣杯或公主=获得女性原理<br>悲剧性死去=回归子宫（回到母胎中）</p><p>此外，还有出生异常、出生后马上要被杀掉等主题。</p><p>对于这些共同的主题，荣格解释说，这不单单是流传过程中出现的现象，而是由集体无意识中的原型所产生的。</p><p>中世纪的传奇故事，尤其是在没有精炼的部分故事中，包括了民众的许多无意识的愿望和心理特征，具有很强的研究魅力。我们之所以超越时代、不断地被英雄故事所吸引，也正反映了这些故事中存在着人类心理共有的原始情感。</p><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Psychology-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Learning Notes </tag>
            
            <tag> Psychology </tag>
            
            <tag> Carl Gustav Jung </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220510 - 漫画荣格 - 第三章：冒险进入内心深处、发现集体无意识</title>
      <link href="2022/05/10/20220510-comicjung-chap3/"/>
      <url>2022/05/10/20220510-comicjung-chap3/</url>
      
        <content type="html"><![CDATA[<h2 id="第三章-冒险进入内心深处、发现集体无意识"><a href="#第三章-冒险进入内心深处、发现集体无意识" class="headerlink" title="第三章 冒险进入内心深处、发现集体无意识"></a>第三章 冒险进入内心深处、发现集体无意识</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul><p>时间转到荣格与弗洛伊德的美国之旅。</p><p>荣格很钦佩弗洛伊德的才华，也很思念他，但是，对于他的性理论，却未曾完全接受过。</p><p>弗洛伊德虽已察觉到荣格不相信他的理论，但却有意识否认这一点。也许是害怕内心意识而排斥动摇其性理论的因素。</p><p>弗洛伊德对超自然现象也感兴趣，尽管在逃避，但还是再次被吸引了，并因此感到有些绝望。这一态度表现在弗洛伊德与荣格的交往方式上。</p><p>二人在美国克拉克大学的演讲顺利结束，但值得一提的是演讲之外的事情。</p><p>荣格和威廉姆·詹姆斯的相识，使其在唯灵论问题上，与弗洛伊德的关系开始紧张。</p><p>弗洛伊德相信荣格是其真正的继承人。一天，二人在餐桌上交谈，弗洛伊德让荣格讲讲他做的梦，要进行分析，荣格反让弗洛伊德分析一下他自己的梦。弗洛伊德表示自己的工作是分析，而不是研究自己的心理，并且对自己梦的分析，在某种程度上可能会威胁自己的权威。自那时起，荣格开始失去对弗洛伊德的信任，因其似乎比起研究，更重视个人隐私。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220510232504.png"></p><p>荣格讲述了一个曾做过的梦，请弗洛伊德分析：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220510232718.png"></p><p>这个梦揭示了人类心理的双重结构图，架设了人类心理基础的“非个人的”特征。</p><p>二层表示意识，一层表示无意识的第一平面。越往里走，周围的光线就越暗。洞穴是原始人的世界，是一是几乎打不到的无法搞清楚的世界。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220510232857.png"></p><p>二人谈话继续。弗洛伊德说道，国际精神分析学会将要成立，会所准备设在苏黎世，他希望荣格担任会长。（荣格犹豫不决）</p><p>弗洛伊德表示自己不讨厌神学了，想冷静地分析超自然问题，不过，他认为荣格最近的观点不适合做自己的继承人。</p><p>奇怪的是，弗洛伊德从美国回来后，热衷于参加降灵会。荣格拜访弗洛伊德家，两人都奇怪地感受到了超自然现象。</p><p>二人爆发了争论，弗洛伊德不希望看到荣格舍弃性理论。而荣格确信了弗洛伊德恐惧神学，而且在死命维护性理论。自那时起，荣格的无意识异常活跃，他不断地做一些很形象的梦。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220510233422.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220510233454.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220510233514.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220510233528.png"></p><p>荣格不明白这个梦的意思，但他前不久做过类似的梦。</p><p>他觉得这个梦的意思，是指奥地利边境的海关职员。他认为，“国境”是他和弗洛伊德之间的分界线，是意识和无意识的界限。</p><p>在荣格的心中，弗洛伊德已经死了。</p><p>从美国回来后，荣格辞去了布尔克赫尔茨里医院的工作，在苏黎世丘斯那哈特地区自己的家中开办起了私人诊所。</p><p>工作中，对荣格影响最大的是他的一位病人托妮·博鲁芙。她第一次来到诊所时是一位忧郁症患者，而现如今作为弗洛伊德的助手，发挥着她的聪明才干。</p><p>1913 年，苏黎世会所的会议上，荣格与弗洛伊德擦肩而过。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220510234126.png"></p><p>这意味着荣格“失去了父亲”，他必须一个人继续向未知的领域挑战。</p><p>荣格在 1914 年的梦中，以可怕的速度，摔下了意识的深渊：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220510234318.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220510234334.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220510234352.png"></p><p>这时，荣格的妻子意识到荣格失去弗洛伊德，其精神踏入前人未曾涉及的领域后，自觉已经无法再支撑荣格的心灵。并且认为荣格老是把女儿阿加特看成海莉。在这样的前提下，荣格的妻子让他如果需要安慰的话，就去找托妮，不要碰女儿阿加特。她理解荣格的心理开始了不寻常的冒险，如果能为人类带来知识财富，她什么都可以原谅，觉得托妮也一定愿意成为其精神殉教者。</p><p>在妻子埃玛的建议下，托妮和荣格的情人关系真的开始了。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220510234841.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220510234915.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220510234938.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220510234957.png"></p><h3 id="短评-5：原型和集体无意识"><a href="#短评-5：原型和集体无意识" class="headerlink" title="短评 5：原型和集体无意识"></a>短评 5：原型和集体无意识</h3><p>荣格在进行心理治疗和对巫师的研究过程中，遇到过无法认为是个人无意识产生的语言和意象。通过研究，荣格认为，人类心理也许还广泛存在着远古的无意识，这种远古无意识并非来自个人体验，而是来自人类共有的心理功能，即来自遗传下来的脑组织。荣格把这种来自远古的无意识称为“集体无意识”，把人类共有的心理功能称为“原型”。</p><blockquote><blockquote><p>（集体无意识只包含来自远古的无意识吗？个人无意识会转化为集体无意识吗？）</p></blockquote></blockquote><p>荣格把意象进一步分为个体意象和根源性意象。<br>个体意象是局限在个人人生中对特定人物和现实的记忆，所以，其与个人的无意识和情综相适应。这一个体意象没有集体的含义，也没有文化的含义。</p><blockquote><blockquote><p>（复习一下情综：荣格在其“语言联想实验”中发现的，明显表露出的、潜藏在人类心理无意识下的阻碍叫做情综，是“通过感情来证实的，作为无意识下的内心内容的情感和意象”的综合体）</p></blockquote></blockquote><p>相反，根源性意象具有神话主题所表现的那种远古性格，因为这是所有民族及时代共有的特征，所以，才会在各种各样的故事与形象中反复出现。原型就是这一根源性意象。</p><p>即使在从未有过文化交流的国家之间，也会有目的类似的神话或传统，这些相似之处正是来自于原型。荣格通过对患者的分析以及解析自己的梦境，找到了根源性意象，而且他还认为，大脑中的记忆和意象不仅仅是由外在的各种条件造成的，还是通过生命中先天固有的内在形式形成的。</p><blockquote><blockquote><p>（所谓血脉？）</p></blockquote></blockquote><h4 id="代表性的原型"><a href="#代表性的原型" class="headerlink" title="代表性的原型"></a>代表性的原型</h4><p>荣格设想了各种作为意象表面的原型，这些原型尽管不能证明人类内心深处的所有意象，但还是涉及其中几个非常重要的原型。</p><p>但在荣格心理学中，没有发现与伟大的母亲这一原型相反的具有暴力特征的父亲原型。这是因为，在严父管教下长大的弗洛伊德发现了恋母情结，而荣格的母亲却非常威严。</p><blockquote><blockquote><p>（因为荣格认为其父亲不具阳刚之气，父亲形象被威严的母亲形象所消弭？）</p></blockquote></blockquote><p>（1）角色</p><p>我们生活在社会上，每人都发挥着各自的作用，扮演者人们所期望的各种人格角色。所谓角色，就有扮演的意思，比如，母亲就像母亲，父亲就像父亲，这些角色在需要时任何人都可以扮演，人们以与现实社会完全匹配的角色生存着，角色表现出的表面上的人格，不会伤害自己，也具有不伤害他人的润滑剂的作用。</p><p>因为暴露在别人面前的自己“不是真正的自己”而感到苦恼的人，也为数不少。我们有时感到自己好像是在“伪装”自己。不过，如果自己感到毫不怀疑“真正的自己”，即无法区分角色和自我的时候，自我就与无意识一致，并受到无意识的支配。</p><p>如果外在的表现太好，不知道自己的角色应该扮演成什么样时，顽固的意识态度就被定化，人在精神上就无法发展。</p><blockquote><blockquote><p>（冲突造就成长？）</p></blockquote></blockquote><p>所以，无论从外在表现保护自我，还是客观地认识无意识，都需要角色。</p><p>（2）阴影</p><p>阴影是隐藏在可以意识到的自己内在的人格的阴暗部分，也可以说是存在与我们的无意识中的未成熟的“另一个自己”。人在梦境中，有时会梦见强盗、小偷、敌人、恶魔等，有时也梦见自己身边的交往不愉快的人。如果自己感到很不顺心，或者感觉自己周围有不能愉快交往的同性，那很可能就是你自己的阴影造成的。</p><p>阴影不一定都是坏事，也蕴藏着创造性和未知的可能性。尽管人们在某种意义上难以解决自己的阴影，但是，在认识到自己阴影的同时就会有很大收获。如果再把阴影融合到意识当中，也许就会发现以前否定的东西中包含着其它的意义，可能还会弥补自己的不足，因此，认识到阴影，将对人格的发展起到非常重要的作用。</p><p>（3）女性原理、男性原理</p><p>荣格认为，一个人的心理同时存在男性特征和女性特征，其中，将内含男性特征的称为女性，将内含女性特征的称为男性，人们的异性观受到男女性原理的很大影响。</p><blockquote><blockquote><p>（所谓阴中有阳，阳中有阴）</p></blockquote></blockquote><p>人们在意识中，强调表面上的性别，即男要像男，女要像女，所以内在异性受到压抑，也就很容易趋向萎缩。所以，理论上很男子汉的男性，内心却比较脆弱，甚至有的家庭不和，出现暴力。</p><p>女性，由于内在男性特征趋于萎缩，完全远离了男性特征，使自己只有奉献、不去接受，或者过于抱怨，不能很好地处理家庭关系。</p><p>所以，要想步走极端，与异性和睦相处，关键在于认识到自己心理存在着的异性特征。</p><p>荣格认为，无论对于个人还是对于社会，都应该平衡发展女性原理和男性原理。</p><p>（4）伟大的母亲（太母）</p><p>养育万物的母性形象就是伟大的母亲（太母），这是被理想化了的母性形象。相反，她也具有吞噬万物的可怕特性，如果不离开这样的母性，自己不能获得独立，就会在不知不觉中受到太母的摆布。</p><p>可以看到这样的现象：男性永远离不开母亲，不能曾为一个具有自我独立的人；女性，支配和干涉男性，就像母亲对子女那样，给对方寄予过多期望。</p><p>太母以负面面孔出现时，就是魔鬼、女妖、母老虎等角色 ，如同神话故事中经常出现的英雄降龙的故事，表现的主题是叛逆期的少年幻想在精神上摆脱了母亲，自己获得了独立。</p><blockquote><blockquote><p>（所以勇者斗恶龙，其实内核是反叛母亲？）</p></blockquote></blockquote><p>（5）年长智者</p><p>该原型被视为男性成长过程中精神和心灵的终点的象征，是超越了一切社会野心之后的老成的男性，是仙人一般的形象。荣格非常敬重自己想象中的弗莱蒙这一人物，这是他的老智者的形象，作为派生的人物形象，有男神、谷物之神、童子（永远的少年）、闪电（雷神）的角色。</p><p>老智者如同男性的太母一样，是女性可以依赖的人物。尽管有恋父情结，但对男性来说，老智者是权威的象征，是导师。</p><blockquote><blockquote><p>（物壮则老，体现终极状态的老者形象身上却能派生出童子的形象，感觉这也是荣格受道家思想影响的其中一种体现形式？）</p></blockquote></blockquote><p>（6）自己</p><p>荣格将包括这些原型的无意识和意识相结合，设想了人类的心理中心，取名为自己。</p><p>自己是意识与无意识、善与恶、男性与女性等的对立统一。自己以象征意义出现的时候，扮演者神、佛、菩萨等的角色，人们畏惧这些形象，甚至强烈地迷信她们。</p><h4 id="个性化与自己实现"><a href="#个性化与自己实现" class="headerlink" title="个性化与自己实现"></a>个性化与自己实现</h4><p>以上介绍的原型，有时在不知不觉中会对意识产生破坏性的影响。但是，当人们意识到它们的时候，就会想方设法从原型中摆脱出来，形成独立的自由的意识，也就可以获得自己生存的“个性”。荣格将这种从集体无意识支配中的分化叫做个性化——自己实现。个性化是人格发展的非常重要的条件。</p><p>个性化的过程如下：</p><p>我们在生活中的形象与扮演的普通角色是一致的，但，稍微遇到一点挫折而脱离自己的角色时，就会看到自己的阴影。我们遇到阴影时，必须承认，这一阴影也是我们自己的一部分。</p><blockquote><blockquote><p>（即前面所提，冲突造就成长的机会）</p></blockquote></blockquote><p>进而，在阴影深处，也会看到心理内在的异性特征，或是女性特征，或是男性特征。在陷入恋爱的爱河困境时，为了摆脱出来，需要从内心深处的女性原理或男性原理这一异性特征中彻底解放出来，并且还可以看到内心深处的异性特征的太母或年长智者的形象，这是很危险的，因为这些都是离自己的人格很近的内在形象，一旦与现实角色相一致，就会坚信自己接近神了。</p><blockquote><blockquote><p>（彻底解放…所指为何呢？内心深处的异性特征的太母或年长智者的形象，是如何与现实角色相一致的呢，这可能吗？）</p></blockquote></blockquote><p>最后表现出来的是自己。不过，自我与自己的同一并不是自己实现。所谓自己实现，就是自我与自己进行对话“内在形象是我、不是我”相互协调的过程，重要的是丰富自我与自己的关系，即自我与自己的关系永远不能终结。</p><blockquote><blockquote><p>（自我是意识中心，自己是心理中心（包含意识与无意识）。碰到问题，自我看到阴影，借此机会看到部分自己，所以上面所指的内心深处的异性特征的太母或年长智者的形象与现实角色一致，指的是自我与部分自己的统一？怎么个统一法呢？有点无法想象。<br>按书中所说，自己实现所指的是碰到问题，自我看到阴影，借此机会看到部分自己，而后摆脱这部分自己的过程，或者用其话语，即将这部分原本属于集体无意识中支配的部分分化的过程。<br>所以意识到了这部分未分化的集体无意识，即原型，最终导向的是自我对原型的主观摆脱。<br>这里的主观摆脱，是因为怕其将自我吞噬？那么除了摆脱之外，有没有可能在某种程度上实现原型的主观内化呢，即这部分原本未知的集体无意识被自我有意识地纳入意识范畴，所导向的结果能想到的是意识的边界扩张，但其实际意义为何，甚至是否具有可行性，还没想清楚…）</p></blockquote></blockquote><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Psychology-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Learning Notes </tag>
            
            <tag> Psychology </tag>
            
            <tag> Carl Gustav Jung </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220509 - 漫画荣格 - 第二章：寻找失去的父亲 同弗洛伊德的相识与创造性的回忆</title>
      <link href="2022/05/09/20220509-comicjung-chap2/"/>
      <url>2022/05/09/20220509-comicjung-chap2/</url>
      
        <content type="html"><![CDATA[<h2 id="第二章-寻找失去的父亲-同弗洛伊德的相识与创造性的回忆"><a href="#第二章-寻找失去的父亲-同弗洛伊德的相识与创造性的回忆" class="headerlink" title="第二章 寻找失去的父亲 同弗洛伊德的相识与创造性的回忆"></a>第二章 寻找失去的父亲 同弗洛伊德的相识与创造性的回忆</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul><p>荣格和埃玛结婚后，每天像着迷似的埋头撰文，为患者治病。</p><p>1905 年，当时的布尔克赫尔茨里精神病院在奥根·布鲁勒的领导下开展精神性疾病的治疗和研究。</p><p>荣格进行了 3 个领域的研究：歇斯底里症、语言联想法、早期性痴呆。</p><p>当时倾向于唯灵论研究的荣格，在理论上却依赖于分析心灵现象的 P·让内、泰奥德尔·弗鲁鲁努瓦的理论。</p><p>当时弗洛伊德还没有提出明确的性理论，正受到知识界人士的极大关注。</p><p>荣格也不例外，向其寄去了自己的著作《诊断的联想研究》，并开始与弗洛伊德通信。</p><p>1907 年 3 月，荣格拜访了位于维也纳的弗洛伊德的家。二人终于见面。</p><p>那天，二人交谈了 13 个小时，彼此都对对方给予了很大的期望。</p><p>其实，荣格刚开始并不是完全赞同弗洛伊德的性理论。弗洛伊德很乐观地认为荣格将要接受自己的理论。</p><p>弗洛伊德与荣格的密切交往，使布鲁勒对荣格的感情出现了裂痕。</p><p>荣格越来越倾向于弗洛伊德。他像对待父亲一样仰慕布鲁勒，但他还是期望弗洛伊德能代替父亲。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220509231123.png"></p><p>弗洛伊德与荣格彼此间信任日益加深。但事业上却与此相反，荣格对唯灵论和神学极为关注。</p><p>在与弗洛伊德交往过程中，荣格遇到一个关键的问题，他偶尔读到一本关于太阳神的文章。他发现文章所讲的事情酷似几年前遇到的一个患者的言行。</p><p>当时患者有过一番关于风和男性生殖器的言论。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220509231345.png"></p><p>那位患者不可能读到这篇关于太阳神的文章，而且，没有文化基础的人也不可能理解文章的意思。<br>可那位患者说的话和荣格所读关于太阳神的文章内容完全一致。</p><p>“性理论中没有解决的问题是什么呢？”，荣格想“在我们的心里，隐藏着一种结构…”</p><p>此时荣格与埃玛的关系其实并不融洽。埃玛认为荣格只知道读书和给弗洛伊德写信，她心中委屈，也想要学心理学，只是为了想和荣格有共同话题。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220509231705.png"></p><p>埃玛作为后来荣格派的研究者，也留下了功绩。而使埃玛走上研究成名之路的，可能就是他们夫妻关系中一种不完美感觉的作用。</p><p>荣格身边的女性们，统称荣格·弗拉温。<br>不可思议的是，他周围的这些女性，并不是以普通女性的身份和荣格在一起，可以确切地说，她们是一些分析家，并显示了她们的才能和功绩。</p><p>其中有一位名叫扎比娜的俄罗斯犹太人上流社会女孩，她与荣格的相识，是因为她曾在 1904 年作为强迫症患者，接受过荣格的治疗。</p><p>荣格在扎比娜身上看到了海莉的影子，此后，荣格经常因为幻想海莉而感到痛苦。</p><p>荣格认为这种错投的热情，必须放弃，或者转向其他人…而彼此相谈甚欢的扎比娜不断映入荣格眼帘。</p><p>很自然，患者与分析医生之间，又是要比家庭成员更能相互理解。很快，荣格和扎比娜之间的关系就很密切了。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220509232327.png"></p><p>那时，荣格觉得扎比娜既是母亲，又是女儿阿加特，也好像看到了海莉。他认为扎比娜很危险，必须打退、戳穿她。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220509232437.png"></p><p>这时，荣格发现，他身上有某种“女”性的意象团。假设那种意象团叫灵魂，他正是被那个意象团所表现出来的海莉、母亲、扎比娜迷住了。选择埃玛就是为了选择远离灵魂的女性，为了不让她们吞掉。</p><p>荣格觉得母亲、海莉、扎比娜都是危险的女性，她们就像强大的母亲即太母那样，以莫名的感情包围着自己。那是一种无法抗拒的魅力，是一种走向死亡的危险。</p><p>扎比娜也表现出了对荣格的极大热情。荣格为了逃避这种“烈火”，必须经常到平静的湖边修养。</p><p>可是，扎比娜太爱荣格了，她心里失去了平衡，大力宣扬两人的关系，甚至写信告诉弗洛伊德。弗洛伊德并没有轻信扎比娜的一家之言，甚至觉得她可能患有神经病。</p><p>荣格没有告诉弗洛伊德实情，但是，扎比娜去见了弗洛伊德，丑闻越来越大。</p><p>荣格自觉不能永远隐瞒，试图通过见扎比娜父母见面说明情况的方式来解决。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220509233129.png"></p><p>荣格自觉已经解决了事情，并去信向弗洛伊德“报喜”：“扎比娜渐渐地把对我的爱情转向了友情，我准备帮助她取得学位”。弗洛伊德这位“父亲”，建议荣格暂时停止分析，去美国的克拉克大学旅游调整心情。</p><p>妻子曾与荣格当面对峙。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220509233545.png"></p><p>荣格 1909 年 9 月和弗洛伊德去美国克拉克大学演讲旅行。他也没有想到，这次旅行使二人产生了关键性的隔阂。</p><h3 id="短评-3：心理的结构"><a href="#短评-3：心理的结构" class="headerlink" title="短评 3：心理的结构"></a>短评 3：心理的结构</h3><p>不同的心理学家，对心理结构的解释不同。<br>弗洛伊德把心理分为自我和本我（初期分为意识和无意识）。<br>荣格提出了自我与自己的理论。无意识又进一步被分为个人无意识和集体无意识。</p><p>荣格认为的“心理”，包含无意识和有意识的全部。人类内心不仅存在着意识到的部分，还存在着没有意识到的部分。</p><p>无意识最早由弗洛伊德提出，而后荣格将弗洛伊德的个人无意识理论发展，提出了集体无意识的概念，这一理论是荣格心理学里最具特色的部分。</p><p>我们通常认为自己自身是“我”或者“自己”，这时的“我”和“自己”就是自我，不管是过去、现在，还是将来，自我都具备认为自己一直是同一个人的“自己同一性”。自我意识到的内心世界，即我们 平时感受、思考的喜怒哀乐，就是“意识”领域。自我存在于意识的中心，但自我并不是整个“心理”的中心。</p><p>关于自我的解释，荣格把包含意识和无意识在内的整体心理功能称之为“自己”。自己是心理的核心，包括我们的全部心理。</p><p>荣格从幼时就感到自身以外还应该存在着另一个自己，即“2 号我”。尽管有多种不同想法，但把“1 号我”理解成自我，把“2 号我”理解为自己，这样就容易解释了。</p><p>（哈？自己不是全部心理吗，那不是应该是 1+2 号我才是自己吗？）</p><p>荣格认为，自己超越自我，自己存在于人类内心的底层，充满着许多由神话般的因素组成的庞大的“可能性”，所以，他给患者进行精神分析时，非常重视存在与心理底层的神话般的世界。</p><p>荣格认为自我和自己的相互作用在人格发展过程中起着主要作用。他认为，人类一生的成长，是在不断地倾听无意识中的内心深处的自己的心声、不断探究同自己的关系。</p><p>荣格通过亲自体验的人生感受，研究分析了同自己的关系，将意识——自我提高到了更高的境界。</p><h3 id="短评-4：个人的无意识与情结"><a href="#短评-4：个人的无意识与情结" class="headerlink" title="短评 4：个人的无意识与情结"></a>短评 4：个人的无意识与情结</h3><p>对于情结（complex），不同心理学家有不同解释和用法。一般理解为自卑情结（inferiority complex），荣格却把情结理解为无意识中的某种有强烈感情的意象群，这里的无意识被称为个人的无意识，与个人的经历和体验有关。</p><p>（也就是说，个人无意识并非先验存在，也随着个人经历不断发展）</p><p>荣格在“语言联想实验”中，发现了有情感价值的情结。该实验中，事先规定一百个简单单词，要求被测试的人尽快说出从提到的某个单词联想到的其他单词，并记下回答的单词和时间，这一实验重复进行两次。</p><p>在反复进行的实验中，荣格发现，被测试的人对几个单词的回答速度异常迟缓，或出现奇怪的反应，或表现得很拘谨。通过分析这些单词发现：这些单词之间有着某些关联性，被测试的人展开联想的背后，存在着某种感情阻碍。</p><p>荣格把这种明显表露出来的、潜藏在人类心理无意识下的阻碍叫做情综，是“通过感情来证实的，作为无意识下的内心内容的情感和意象”的综合体。</p><p>每个人的心理都在无意识中存在着某种阻碍，这种阻碍具有独立性，有时会破坏意识的统一，有时会使意识失去理智。</p><p>情综就是意识不愿承认的心灵创伤和厌恶的感觉的反映，所以平时很少表现出来，但却极大地嘤想着人们的行为和感情。正因如此，为了避免受到情综的支配，必须意识到其存在。</p><p>如果没有完全意识到情综，就无法主动改变自己的行为。只有自己认识到自己的缺点和弱点，内心能量才有可能向着创造性的方向发展。</p><p>（这里的“创造性方向”，所指为何呢？）</p><p>所以，不要只从厌恶、痛苦的单方面去认识勤工在那个，也根本不必介意自己内心存在的情综。</p><hr><h3 id="题外话"><a href="#题外话" class="headerlink" title="题外话"></a>题外话</h3><p>有一部名为<a href="https://movie.douban.com/subject/4221515/">《危险方法》</a>的电影描绘了荣格在这一时期的种种事件，以及他与弗洛伊德最终决裂的种种过程。</p><p>俄罗斯犹太女孩扎比娜与荣格的隐秘故事，荣格妻子所进行的“语言联想实验”等种种情节在片中均有体现。看完这章再回头看一遍电影，想必会别有感受。</p><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Psychology-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Learning Notes </tag>
            
            <tag> Psychology </tag>
            
            <tag> Carl Gustav Jung </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220508 - 漫画荣格 - 第一章：青年时代 荣格与唯灵论体验</title>
      <link href="2022/05/08/20220508-comicjung-chap1/"/>
      <url>2022/05/08/20220508-comicjung-chap1/</url>
      
        <content type="html"><![CDATA[<h2 id="第一章-青年时代-荣格与唯灵论体验"><a href="#第一章-青年时代-荣格与唯灵论体验" class="headerlink" title="第一章 青年时代 荣格与唯灵论体验"></a>第一章 青年时代 荣格与唯灵论体验</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul><p>1875 年 7 月 26 日，荣格出生在瑞士博登湖畔的凯斯维尔。</p><p>小时候害怕黑夜。因为父亲是牧师，所以从小就看过人们为死者哭得痛不欲生的样子。</p><p>据说荣格小时候“见过”不久前死去的人。这时母亲会教他念祈祷从而祈求耶稣上帝让其避免伤害。所以，荣格在当时非常喜欢耶稣上帝，认为其仁慈、了不起。</p><p>可有一天，他脑海中有了新的念头：“上帝要来带走我们，该怎么办？”他在梦中看到上帝不是长着大翅膀的仁慈老人，而是头戴黑帽，身穿黑衣，一脸阴险的人。</p><p>因为总是被噩梦惊醒，荣格不知什么时候起，晚上就总和父亲一起睡。直到很大都这样，他觉得父亲一生小心敬慎，没有一点男人的阳刚之气。而且感觉父亲也穿着黑衣，要吃掉自己…</p><p>自那时起，他感觉身边出现了一个“2 号我”（后面简称为“2”），一直观察自己，直到长大，都在悄悄告诉自己许多事情。</p><p>有一次，“2”告诉自己，他看到巴赛尔大教堂上的玉座之神从玉座上起来后就在圣堂顶上随便大小便。虽然自己不断告诉自己“神是神圣的，不可随便乱猜想”，但当脑海中出现那个情境时，却感到很自然。</p><p>“即使是活神仙，也不会受教会枷锁的束缚！”这样的念头出现了。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220508222830.png"></p><p>有一天，母亲突然对他说，怀疑有神的存在，是因为眼睛被蒙住了吧？应该读一读歌德的《浮士德》了。</p><p>荣格感到在母亲或母亲的身上，有一种太母般的先知。<br>也许是因为母亲知道有关恶魔或灵魂的事情，他觉得母亲知道的事情要比崇拜神灵的父亲知道得更多。而且，母亲也可能知道自己身上有一个“2 号我”，母亲身上也许就有一个“2 号母亲”…</p><p>比起父亲，荣格更敬重、畏惧母亲。而且，感到自己有些地方很像母亲。</p><p>荣格有一个表妹叫做海莉，总是说着“看见一个金色的大火球从屋顶落在了院子里”这样的类似的话，别的人都觉得海莉在说谎话，但荣格觉得海莉的感觉没有错。</p><p>荣格为海莉解释她所看到的现象叫做“球形闪电”，是一种物理现象。也有人认为它像其他东西。</p><p>海莉告诉荣格“扎姆埃鲁爷爷常和她一起玩游戏”，但其实海莉的祖父扎姆埃鲁早已去世。</p><p>这里顺便介绍荣格和海莉的家谱：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220508223802.png"></p><p>荣格外祖父扎姆埃鲁是巴塞尔的墓室，著名的犹太民族主义者。其一生结过两次婚，前妻去世后，仍在房间里放着前妻坐过的椅子，每周都会在固定时间，对着椅子，与她“交谈”。</p><p>海莉继承了这一传统，成为擅长预言并能通灵的才女。荣格在书中所描述的 S.W. 小姐，说的就是海莉。</p><p>荣格在后来发表的《关于神秘现象的心理和病理》一文中，把海莉说成“知识贫乏、教育水平低、心理就像头盖骨得了佝偻病似的”。</p><p>童年时的海莉，预言大多准确。且，据说预言贝露塔生孩子的时间正好和实际分娩时间一致。</p><p>一天，荣格让海莉告诉自己更多事情，海莉说：“好吧，长大以后，我会和卡尔，就我们两人，乘坐白马拉着的金色马车，到巴黎去旅行”。</p><p>那时的荣格，正为自己的人生前途而苦恼，他在对基督教的反驳和父亲的期望面前，不知该如何选择学业和工作。</p><p>荣格就和海莉以及附近邻居的女孩，一起举行了降灵会。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220508224510.png"></p><p>荣格逐渐相信了灵魂的存在，倾心于唯灵论。</p><p>在降灵会开始时，海莉扮演外祖父，活灵活现地再现家族的传奇故事，后来就大谈宇宙理论体系。随后，海莉逐渐长大成人，而降灵会却还在重复那些无聊的内容。</p><p>最初信奉唯灵论的荣格，渐渐地以冷静的态度来观察海莉的能力。母亲，以及海莉的家人对举行降灵会已经颇有微词。当时，荣格父亲的病情急剧恶化。荣格也不知道自己该做什么工作，也许还在内心身处希望父亲死去。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220508224848.png"></p><p>那时，荣格确信母亲的身上存在着一个叫做“2 号母亲”的身影。</p><p>当时，神学、自然科学、医学、哲学，还有精神医学，都没有引起荣格的极大兴趣，但是在教科书中学到了“人格疾病”的内容，之后，很快被其理论所吸引。所以基本决定要研究精神医学，并告诉了要好的女朋友埃玛。她是一位稳重、有魅力的姑娘，荣格非常欣赏她。</p><p>荣格之所以决定研究“心理疾病”，实际上是因为，在其内心深处，对海莉的“神秘性”以及对其自己身上和母亲身上的“2 号”，抱有极大兴趣。</p><p>降灵会一直没有停止，但后来只有荣格和海莉两个人一起做。15 岁的海莉，正处于少女春心萌动的时期，像成熟女孩那样诱惑着荣格。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220508225426.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220508225449.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220508225512.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220508225534.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220508225554.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220508225625.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220508225639.png"></p><p>荣格放弃了海莉，同年与埃玛订婚。</p><p>1900 年，荣格励志学习精神医学。他在布尔克赫尔茨里精神病院，担任奥根·布鲁勒教授的助手。</p><p>荣格发表论文《关于神秘现象的心理和病理》，表明了其与海莉已经彻底决裂。从文章中可以看出，荣格的青春期已经过去了。</p><p>这篇论文的发表也意味着与外祖父家关系的断绝，而外祖父家曾经还资助过荣格，以让其完成学业。</p><p>但是，两年后的 1902 年，荣格在结婚前还和海莉在巴黎幽会。就在当时，海莉儿时关于二人在巴黎乘马车的预言成真：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220508230320.png"></p><p>荣格不知道自己为什么以前那么害怕这位文荣的女人，他觉得当时的海莉就像《哈姆雷特》中的奥菲利亚或亚瑟王的王妃古奥乃维亚。</p><p>当时的海莉已经患上了肺结核。</p><p>1905 年，据说荣格结婚第二年，海莉为其妻子做了一件漂亮的晚礼服。6 年后，即 1911 年，再有两天就到海莉 30 岁生日的时候，海莉却停止了呼吸。</p><p>荣格内心痛苦：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220508230918.png"><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220508230934.png"></p><p>荣格为了弥补失去的海莉，开始研究灵魂论、原型论等，创立了独特的心理分析理论。</p><h3 id="短评-2：荣格心理学的时代背景和唯灵论"><a href="#短评-2：荣格心理学的时代背景和唯灵论" class="headerlink" title="短评 2：荣格心理学的时代背景和唯灵论"></a>短评 2：荣格心理学的时代背景和唯灵论</h3><p>超心理学是研究超自然现象的学科，是将心灵感应、意念（精神冲动），即所谓第六感觉等作为研究对象，研究用自然法则无法解释的精神现象，探究人的超感觉知觉，它把具有能与死者互通信息的灵魂能力的人称为巫师。在巫师当中，能够通过意念引起物体游离等物理现象的人称为物理性巫师，能够与死者以心传心地进行交流的人被称为心理性巫师。</p><p>唯灵论是“迷信生者与死者的信息交流”，对唯灵论的研究被称为心灵研究。</p><p>巫师术早在古代就有了，而现在一般所说的巫师，是指 19 世纪中期在美国兴起的近代心灵主义运动以后出现的超能力者。另外，巫师形成的超自然现象的活动叫降灵会。降灵会上主要使用圆桌转圈的方法，人们围坐在圆桌旁，如果桌子任意倾斜，或是发出声音，就被人为是灵魂在回答问题。</p><p>近代唯灵论的信念体系，被认为是 19 世纪错综复杂的西欧社会中“危机与不安”在宗教上的反映之一。在当时，已有的宗教已经失去了活力，出现了合理主义及产业革命，人们的心理承受着特殊的紧张压力。在这样的不稳定气氛的强烈影响下，唯灵论在追求科学与宗教相结合的运动中产生了，并很快在欧美大众的心中扎下了根。</p><p>巫师与死者的交流依靠的是一种昏睡现象。在精神分析诞生之前，西欧盛行催眠术。催眠术与唯灵论的盛行是在同样的年代。</p><p>而且，当时的歇斯底里症主要在女性中流行。<br>心理疾病的特点：在不同时代，表现并流行某种特殊病症，这种病证像病毒一样，在该时代某个人群（主要是女性）中感染。就像经常有人自称巫师，类似病症就在当时流行了，这些人大都是通过暗示和模仿来表现的。</p><p>难道成为巫师就能使当时社会上出现的主要现象——<br>“内心的压抑和无意识的欲望”爆发出来吗？实际上，荣格遇见的巫师，很多人都声称是想引起周围人的注意。大多数巫师，被医学专家认为是患有“某种程度的精神疾病或某种程度的精神病”。</p><p>巫师流行的年代是在 19 世纪末：女性地位开始提高，妇女开始走出家庭、走向社会的时代。也许是因为女性将压抑在无意识中的压力，以歇斯底里症或巫师的形式发泄或表现了出来。</p><p>但，也有很多人的表现无法用病理学解释，如日本大本教的出口直子，虽然是个文盲，却能自动记录笔记，被称为“笔先”。</p><p>关于巫师的几种解释：</p><ul><li>与死者对话的“死后存在说”</li><li>与上一种相反的“超 ESP 假说”等（ESP——extrasensory perception，超感觉现象），即具有可以根据石基信息源超灵感地领悟死者信息的能力</li></ul><p>不管哪种解释，都难以证明人死后灵魂还存在的说法。1920 年后，通过超心理学的方法，人们逐渐认识到巫师不仅仅局限于本来的意思，应该是广义的心灵能力之一。</p><h4 id="唯灵论与荣格"><a href="#唯灵论与荣格" class="headerlink" title="唯灵论与荣格"></a>唯灵论与荣格</h4><p>唯灵论一词自古以来就为世界各地区所熟知，尤其是西欧，传统上就存在着唯灵论，19 世纪中叶自美国开始，出现了唯灵论运动。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220508232455.png"></p><p>荣格相信唯灵论主要是受其家庭影响。荣格外祖父是个有名的通灵能人，据说荣格的祖母、母亲，还有女儿阿加特也有通灵能力。</p><p>在心灵主义主导的环境中长大的荣格，自然而然地关注唯灵论。在传统基督教世界观和新的科学世界观之间摇摆不定的荣格，当然有可能倾向于相信心灵主义和超心理的能力。荣格在学生时代就和表妹海莉等一起组织降灵会，这使他对唯灵论愈加关注。</p><p>从荣格 1897 年发表的《关于心理学的若干考察》的论文中，可以看出学生时代的荣格就是一个心灵主义者。当时，荣格坚信灵魂是“独立于空间和时间的”不灭的实际存在。但到了 1902 年，在撰写学位论文《关于超自然现象的心理和病理》时，立场有所改变，开始怀疑心灵现象。</p><p>在论文中，荣格分析了和海莉在一起组织的降灵会，他不从相信心灵现象的角度去写，而是以无意识的自动症状（自动写字及幻觉等），甚至以认为是骗术的角度去写。荣格关注的问题已经不在心理现象范围，而是把通灵出现的灵魂看做是“无意识的部分人格”。</p><p>从这篇论文中可以看到，荣格已经摒弃心灵主义，转向精神医学。但，他在抛开心灵主义后，仍对心灵现象抱有兴趣，如果他不研究心灵现象与巫师，也许就不会产生荣格心理学中特有的原型理论和情综学说。从这个意义上说，唯灵论创造出了一个特殊的分析心理学家——荣格。</p><p>再有，荣格对心理现象的兴趣，使其在日后创立了共时性理论。共时性也是和心灵感应等超常现象相关的思维方式。也就是说，荣格在共识性理论中重新领会认识了曾经研究过的心灵问题。</p><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Psychology-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Learning Notes </tag>
            
            <tag> Psychology </tag>
            
            <tag> Carl Gustav Jung </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220508 - 漫画荣格 - 序章：精神分析的黎明</title>
      <link href="2022/05/08/20220508-comicjung-chap0/"/>
      <url>2022/05/08/20220508-comicjung-chap0/</url>
      
        <content type="html"><![CDATA[<h2 id="序章：精神分析的黎明"><a href="#序章：精神分析的黎明" class="headerlink" title="序章：精神分析的黎明"></a>序章：精神分析的黎明</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul><p>“自我”由法国哲学家笛卡尔提出，近代以来，其被理解为存在与意识的统一</p><p>“无意识”是 19 世纪法国心理学家 P.  让内及之后的奥地利心理学家弗洛伊德提出</p><p>基督教的绝对统治力量衰弱是精神医学这一新领域诞生的条件之一</p><p>mesmerize：催眠术，其名来自于 18 世纪堪称现代精神疗法鼻祖的弗朗兹·安东·梅斯梅尔，其医学博士论文《关于行星对人体疾病的影响》</p><p>推断当时医学和科学还没有从占星术和宗教中独立出来</p><p>梅斯梅尔发明了动物磁疗法成名，但这一成就并未被法国科学学术派所接受，他被迫离开法国，最后在瑞士去世，但其功绩是近代心理学发展重要基础。</p><p>梅斯梅尔功绩：</p><ul><li>从过去宗教统治中解放出来，赋予心理治疗科学性设想。指出过去认为是恶魔缠身的“疾病”的病因是“磁气”的作用</li><li>在医生和患者之间建立了相互依赖的心理治疗关系</li></ul><p>皮尤伊泽尔：继承了梅斯梅尔磁疗法的弟子，并发展形成了“催眠术”。他发现人在催眠状态下感受不到自己的意识，开始表现出另一个意识。</p><p>到 19 世纪，法国巴黎公社与德意志帝国相继成立。维也纳迎来学术、艺术鼎盛时期，德国哲学家尼采在当时提出“神灵已死”。基督教不再是知识分子精神支柱。</p><p>1885 年，弗洛伊德 29 岁，到法国巴黎萨伯居里医院留学，师从神经学家 J.M. 夏可。</p><p>在对歇斯底里症研究中，弗洛伊德发现了催眠术的局限性，提出精神分析疗法。</p><p>在这之前的十几年，荣格出生在瑞士博登湖畔。其父亲是一位耶稣教牧师，母亲是位能通灵的才女。</p><p>19 世纪是近代合理主义开始卷入混乱旋涡的时代，据说在欧洲大陆幽灵出现最多的地方是封闭的瑞士。</p><p>荣格就出生在保守的宗教（父亲）与近代神灵思想（母亲）组成的家庭中。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220508004545.png"></p><h3 id="短评-1：深层心理学的学派"><a href="#短评-1：深层心理学的学派" class="headerlink" title="短评 1：深层心理学的学派"></a>短评 1：深层心理学的学派</h3><p>心理学起源可追溯到古希腊时代，普拉东和亚里士多德的灵魂论。</p><p>近代，心理学作为独立科学，是从提倡经验论的英国人约翰洛克、大卫休谟等人的联合心理学开始的。1879 年 威廉冯特（Wilhelm Wundt）创建了世界上第一个心理学实验室，形成了研究经验性感觉、意思与情感等的现代心理学基础，并得到了不断继承与发展，出现了行为心理学、发展心理学、功能主义心理学、格式塔心理学（完型心理学）等分支。</p><p>精神分析也是心理学一个分支，是从治疗/研究神经症状和精神病的精神医学中产生。以精神异常和病症为研究对象，这一点有别于学术上的心理学。</p><p>精神分析鼻祖为弗洛伊德，再追究可以追溯到梅斯梅尔。这好像是精神病学史上的普遍说法。</p><p>梅斯梅尔（Franz Friedrich Anton Mesmer）：出生于理性的 18 世纪，将由于基督教思想束缚而患上的心理疾病，采取从宗教束缚中解脱出的治疗方法，认为恶魔缠身而患上的心病，是受到行星影响，采用磁疗法治疗取得成功。从今观之，似乎可笑，但在当时，能将宗教与疾病分开，的确是件了不起的大事。</p><p>皮尤伊泽尔：梅斯梅尔的弟子，继承其理论，并将磁疗法发展为催眠术疗法。可以说精神分析起源于催眠术。</p><p>（这里很奇怪，我尝试着去寻找这位梅斯梅尔的弟子，无果，之后也试着搜了催眠术的发展脉络，期间也并未发现有类似名字的人…书中又没有标明原名，只得作罢。关于催眠术创始人，一说是英国人 James Braid）</p><p>弗洛伊德（Sigmund Freud）：19 世纪催眠术疗法权威 Jean-Martin Charcot 弟子。在催眠术基础上，弗洛伊德设想人的内心存在着连自己都未知的部分，发现了“无意识”的存在，抛开催眠术，通过提问和对话方式减轻患者症状，创立了精神分析法。</p><p>精神分析法设想人类心理存在无意识、自我、性本能、恋母情结、爱情、死的本能等，从精神创伤中寻找精神疾病病因。患者若是认识到这一点，症状就会消失。理论重点在父亲和孩子关系上。</p><p>弗洛伊德流派和很早从弗洛伊德理论分离出来的阿德勒（Alfred Adler）的个人心理学以及荣格（Carl Gustav Jung）的分析心理学，统称为深层心理学。</p><p>阿德勒认为精神疾病不是由精神创伤引起，而是患者心中产生的“权力欲”造成。</p><p>荣格认为精神疾病不能都归咎于性欲，而是个人心理发展过程。理论重点放在和母亲的关系上。</p><p>弗洛伊德的自我研究理论，由 Anna Freud（其女儿）、Heinz Hartmann、Erik Homburger Erikson等人继承并发展，形成了自我心理学，成为美国精神分析主流。</p><p>与其对应的是新弗洛伊德学派，代表人物：<a href="https://en.wikipedia.org/wiki/Harry_Stack_Sullivan">Harry Stack Sullivan</a>、<a href="https://zh.wikipedia.org/zh-sg/%E5%8D%A1%E4%BC%A6%C2%B7%E9%9C%8D%E5%A6%AE">Karen Horney</a>、<a href="https://zh.wikipedia.org/wiki/%E5%9F%83%E9%87%8C%E5%B8%8C%C2%B7%E5%BC%97%E7%BD%97%E5%A7%86">Erich Fromm</a> 等。</p><p>在英国发展形成了对象关系论。</p><p>荣格的分析心理学，被发展为几大分支学派：发展派；古典派；原型派。</p><p>现代日本人喜爱荣格，可能是荣格心理学中有许多日本人需要的东西吧。人们不再相信：只要科学发展了，物质丰富了，就会有绝对的幸福。荣格一生追求探索“人的心理应该怎样成长”，那些对“生存”的根本发生动摇的现代人，可以从荣格的心理学中找到满意的答案。</p><p>现代人在思索“需要什么”时，翻开荣格的心理学，就会有一个寻求答案的机会了。</p><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Psychology-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Learning Notes </tag>
            
            <tag> Psychology </tag>
            
            <tag> Carl Gustav Jung </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>漫画荣格：内心深处结构的解析 摘抄/笔记</title>
      <link href="2022/05/07/20220507-comicjung-toc/"/>
      <url>2022/05/07/20220507-comicjung-toc/</url>
      
        <content type="html"><![CDATA[<h1 id="漫画荣格：内心深处结构的解析-摘抄-笔记"><a href="#漫画荣格：内心深处结构的解析-摘抄-笔记" class="headerlink" title="漫画荣格：内心深处结构的解析 摘抄/笔记"></a>漫画荣格：内心深处结构的解析 摘抄/笔记</h1><h2 id="Why-Note"><a href="#Why-Note" class="headerlink" title="Why Note"></a>Why Note</h2><p>为了解荣格理论中的集体潜意识，对《漫画荣格：内心深处结构的解析》一书进行摘抄/笔记，特此记录。</p><h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>以下基本信息引用自<a href="https://book.douban.com/subject/1020001/">豆瓣</a>：</p><blockquote><p>本书以漫画的形式，以通俗易懂的语言配以情景对话，对20世纪的心理学家——荣格的生平和他的分析心理学进行描述。重点介绍了荣格的心理历程，对其思想影响较大的人物和事件，分析了唯灵论、心理的结构、个人无意识与集体无意识、原型、共时性等荣格思想中的精华。读者可以借助漫画的魅力重新理解荣格的思想世界。本书适合对心理学感兴趣的广大读者，尤其是青少年读者。</p></blockquote><h2 id="Content"><a href="#Content" class="headerlink" title="Content"></a>Content</h2><ol start="0"><li><a href="https://medill-east.github.io/2022/05/08/20220508-comicjung-chap0/">20220508 - 漫画荣格 - 序章：精神分析的黎明</a></li><li><a href="https://medill-east.github.io/2022/05/08/20220508-comicjung-chap1/">20220508 - 漫画荣格 - 第一章：青年时代 荣格与唯灵论体验</a></li><li><a href="https://medill-east.github.io/2022/05/09/20220509-comicjung-chap2/">20220509 - 漫画荣格 - 第二章：寻找失去的父亲 同弗洛伊德的相识与创造性的回忆</a></li><li><a href="https://medill-east.github.io/2022/05/10/20220510-comicjung-chap3/">20220510 - 漫画荣格 - 第三章：冒险进入内心深处、发现集体无意识</a></li><li><a href="https://medill-east.github.io/2022/05/11/20220511-comicjung-chap4/">20220511 - 漫画荣格 - 第四章：旅途 欧洲文明失去了什么</a></li><li><a href="https://medill-east.github.io/2022/05/13/20220513-comicjung-chap5/">20220513 - 漫画荣格 - 第五章：炼金术时代 心理的变化与成长</a></li><li><a href="https://medill-east.github.io/2022/05/14/20220514-comicjung-chap6/">20220514 - 漫画荣格 - 第六章：荣格与东方思想</a></li><li><a href="https://medill-east.github.io/2022/05/15/20220515-comicjung-chap7/">20220515 - 漫画荣格 - 第七章：塔 伟大的自己</a></li><li><a href="https://medill-east.github.io/2022/05/16/20220516-comicjung-chap8/">20220516 - 漫画荣格 - 第八章：荣格的性格论讲座</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> Study-Psychology-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Learning Notes </tag>
            
            <tag> Psychology </tag>
            
            <tag> Carl Gustav Jung </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220506 - Level Design Book - BOOK 1. PROCESS - Combat - Balance</title>
      <link href="2022/05/06/20220506-leveldesignbook-combat-balance/"/>
      <url>2022/05/06/20220506-leveldesignbook-combat-balance/</url>
      
        <content type="html"><![CDATA[<h2 id="Balance"><a href="#Balance" class="headerlink" title="Balance"></a>Balance</h2><ul><li><p><a href="https://book.leveldesignbook.com/process/combat/balance">原文链接</a></p></li><li><p><a href="https://medill-east.github.io/2022/04/28/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></p></li></ul><blockquote><p>玩家在整个关卡中能做的选择，玩家可以去哪里的公平性</p></blockquote><hr><h3 id="Why-balance-a-level"><a href="#Why-balance-a-level" class="headerlink" title="Why balance a level"></a>Why balance a level</h3><p>地图平衡是贯穿整个关卡的真实的以及玩家可感知的公平性。玩家是会怪自己没有理解怎么利用关卡，还是会怪关卡设计师把他们置于绝境呢？</p><p>一个平衡良好的关卡支持多种玩法风格，也会让玩家保持对于结果的投入（保持期待与热情），平衡不佳的地图可能会促使玩家因为沮丧或挫败而退出游戏。</p><p>尽管可以说平衡适用于任何关卡，但平衡对于基于战斗的关卡和竞技性的多人地图而言最为重要。</p><h4 id="Single-player-has-no-balance"><a href="#Single-player-has-no-balance" class="headerlink" title="Single player has no balance"></a>Single player has no balance</h4><p>对于对抗 AI 的游戏而言，“平衡”其实没什么意义。几乎所有合作性的“Player vs. Enemy” （PVE）或是单人游戏都会故意不平衡以利于玩家。</p><p>敌人 AI 会故意占据有明显弱点的位置，因为这些情况下的游戏是基于完成的目标而设计的。此时，一个“公平”的关卡为玩家提供了充足信息和机会来取胜。AI 对手的目标是以一种有趣的方式输掉。从本质上讲，我们必须以玩家喜好来操纵游戏，并为玩家提供令人信服的机会来进一步操纵游戏。</p><p>所以当我们谈论地图平衡时，所指的是多人地图平衡，而不是单人/PVE。</p><p>有关单人游戏/PVE/合作战斗的更过内容，可以看<a href="https://medill-east.github.io/2022/05/05/20220505-leveldesignbook-combat-encounter/">遭遇战</a>。</p><hr><h3 id="Game-balance"><a href="#Game-balance" class="headerlink" title="Game balance"></a>Game balance</h3><p>首先，让我们回顾一下基本的游戏平衡</p><h4 id="Counters"><a href="#Counters" class="headerlink" title="Counters"></a>Counters</h4><p>在<a href="https://zh.wikipedia.org/wiki/%E7%9F%B3%E5%A4%B4%E3%80%81%E5%89%AA%E5%AD%90%E3%80%81%E5%B8%83">石头剪刀布 （RPS）</a>中每一种行为都会被另一种行为克制。<br>竞技性游戏经常依赖于一种 RPS 的隐喻来实现平衡。像是街头霸王这样的格斗游戏归结为攻击/投掷/格挡（攻击克制投掷，投掷克制格挡，格挡克制攻击）。像星际争霸这样的策略战争游戏是步兵/炮兵/骑兵（步兵克制骑兵，骑兵克制炮兵，炮兵克制步兵）。这种模式因游戏和类型而异（近战/法师/射手…霰弹枪/狙击手/步枪…坦克/辅助/伤害…核心/上路/中路/打野/辅助）</p><p>从这样的观点出发，平衡意味着克制关系。如果玩家对于对手的移动/策略没有任何可能的克制办法，那么系统就是不平衡的。任何平衡的克制系统都需要 3 个以上的可选项，因此用于克制的出招（<a href="https://www.sirlin.net/articles/game-balance-and-yomi">“yomi”</a>）是不同于自己最初始的出招且不同于敌方出招的第三选项</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220506113806.png" alt="diagram comparing Rock Paper Scissors vs Attack Throw Block (right image by David Sirlin, from https://www.sirlin.net/articles/designing-yomi)"></p><h4 id="Dilemmas-payoffs-dominant-strategies"><a href="#Dilemmas-payoffs-dominant-strategies" class="headerlink" title="Dilemmas, payoffs, dominant strategies"></a>Dilemmas, payoffs, dominant strategies</h4><p>囚徒困境是1950年代美军智库设计的思想实验，是<a href="https://en.wikipedia.org/wiki/Game_theory">博弈论</a>的核心概念：</p><blockquote><p>犯罪团伙的两名罪犯被捕。每个囚犯单独监禁，无法与他人交流。每个囚犯都有机会通过作证对方犯罪来背叛，或是沉默来与对方合作。可能的结果：</p><ul><li>AB 彼此背叛，各自服刑两年</li><li>A 背叛，B 沉默，A 将被释放，B 服刑三年</li><li>A 沉默，B 背叛，A 服刑三年，B 释放</li><li>AB 都沉默，每人服刑一年</li></ul></blockquote><p>以下是表示为回报矩阵的可能结果，其中监禁年数用负分表示，目标是最大化最高分：</p><table><thead><tr><th align="left"></th><th align="left">B 沉默（合作）</th><th align="left">B 背叛（敌对）</th></tr></thead><tbody><tr><td align="left">A 沉默（合作）</td><td align="left">A -1 B -1</td><td align="left">A -3 B 0</td></tr><tr><td align="left">A 背叛（敌对）</td><td align="left">A 0 B -3</td><td align="left">A -2 B -2</td></tr></tbody></table><p>在这个标准囚徒困境中，博弈论者认为玩家应该总是选择背叛。 为什么？ 假设你是 A，如果 B 配合，那么你应该背叛，因为 0 年的监禁比 1 年的监禁要好； 即使 B 背叛，那你也应该背叛，因为 2 年监禁比 3 年监禁要好。</p><p>囚徒困境在英国游戏节目金球奖的最后一轮“Split or Steal”中最为流行：</p><iframe width="485" height="273" src="https://www.youtube.com/embed/S0qjK3TWZE8" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>出于这个原因，背叛是一种优势策略，因为其他玩家做什么并不重要。 总是选择背叛能获得最多的胜利，最坏的情况是平局。 就成本/积分而言，如果您总是背叛其他玩家，您实际上不会输。 要了解原因，请观看英国游戏节目 Golden Balls 中最著名的时刻（上面的视频），参赛者 Nick Corrigan 使用这种优势策略对抗另一位参赛者 Ibrahim Hussein 以取胜。<p>从这个角度来看，<strong>平衡意味着在你的系统中避免出现能获得最高理论收益的优势策略</strong>。 如果存在一个优势策略，那么理论上所有理性的玩家都会选择它，这使得其余策略无关紧要，因此是不平衡的。</p><h4 id="Feedback-loops"><a href="#Feedback-loops" class="headerlink" title="Feedback loops"></a>Feedback loops</h4><p>加热器是一种简单的自平衡系统。当加热器检测到太冷时，它会加热；当加热器检测到太热时，它会停止加热。在<a href="https://en.wikipedia.org/wiki/System_dynamics">系统动力学</a>中，这个负反馈回路（negative feedback loop）是一个平衡回路，因为它稳定了系统的状态。相比之下，想象一个加热器，当变得更热时，它继续加热，最终导致着火并烧毁房子——这是一个正反馈循环（positive feedback loop），一个加强自身效果的强化循环。</p><p>在游戏中，<strong>平衡的循环给予处于劣势的玩家翻盘的机会</strong>。例如，赛车游戏通常会通过给予他们更快的速度奖励（例如 Gran Turismo 中的人工智能汽车）或更好的物品（例如马里奥赛车中的蓝色冲刺）来“左右局势”，从而使比赛感觉更刺激和有竞争性。然而，这也可能导致（对于优势玩家的）不公平，或者让人感觉像是人为制造的旷日持久的僵局。强化循环有助于更强大的玩家增加他们的优势，就像在任何资源产生更多资源的游戏中一样（例如，在反恐精英中，金钱可以买到更好的枪，这使得杀戮更容易，赚更多的钱，买更好的枪……等等。 ）。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Adoption_SFD_ANI_s.gif" alt="Dynamic stock and flow diagram of model _New product adoption_ (model from article by John Sterman (https://en.wikipedia.org/wiki/John_Sterman &quot;John Sterman&quot;) 2001)"></p><h4 id="Balancing-for-feel"><a href="#Balancing-for-feel" class="headerlink" title="Balancing for feel"></a>Balancing for feel</h4><p>游戏平衡现在看起来像是一个可以证明的数学问题——如果结合所有的克制关系、反馈循环和数字，那么你的游戏或关卡现在就完美平衡了！</p><p>看哪，标准石头剪刀布的完美平衡收益矩阵：</p><table><thead><tr><th align="left"></th><th align="left">B 出石头</th><th align="left">B 出布</th><th align="left">B 出剪刀</th></tr></thead><tbody><tr><td align="left">A 出石头</td><td align="left">A: 0  ,  B: 0</td><td align="left">A: 0  ,  B: +1</td><td align="left">A: +1  ,  B: 0</td></tr><tr><td align="left">A 出布</td><td align="left">A: +1 , B: 0</td><td align="left">A: 0 , B: 0</td><td align="left">A: 0 , B: +1</td></tr><tr><td align="left">A 出剪刀</td><td align="left">A: 0 , B: +1</td><td align="left">A: +1 , B: 0</td><td align="left">A: 0 , B: 0</td></tr></tbody></table><p>理论上，石头剪刀布是完美平衡的，所有选项有着相同胜率。 没有导致连续获胜的强化循环，过去的回合不会影响未来的回合。 这种完美的平衡是否让石头剪刀布成为有史以来最伟大的游戏？相反，有些人可能会说完美的平衡最终使它成为一个无聊的游戏！ 所有的出招感觉都是一样的，没有办法冒很大的风险来获得丰厚的回报，并且有 33% 的几率无事发生。</p><p>不平衡的克制、优势策略或失控的负反馈循环在游戏中不一定是坏事。 如果优势策略实现了我们的体验目标，那么，让它存在！即使它不那么让人难以抉择，使用优势策略仍然会让人感到戏剧性和影响力。 除非是非常明显的胜利，否则普通胜利的冲击可能并不强烈。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220506224943.png"></p><p>若想让“石头”感觉像是一个重大的戏剧性的决定：<br>| |B 出石头|B 出布|B 出剪刀|<br>|:—-|:—-|:—-|:—-|<br>|A 出石头|A: -10 , B: -10|A: 0 , B: +5|A: +15 , B: 0|<br>|A 出布|A: +5 , B: 0|A: 0 , B: 0|A: 0 , B: +1|<br>|A 出剪刀|A: 0 , B: +15|A: +1 , B: 0|A: 0 , B: 0|</p><p>Journey 是一款游戏，玩家可以在彼此附近“啁啾”以补充其他玩家的跳跃能量。 合作显然是这里的主导战略，但这就是重点：</p><table><thead><tr><th align="left"></th><th align="left">B 叽喳（合作）</th><th align="left">B 不叽喳（不合作）</th></tr></thead><tbody><tr><td align="left">A 叽喳（合作）</td><td align="left">A: +1 jump , B: +1 jump</td><td align="left">A: +0 jump , B: +1 jump</td></tr><tr><td align="left">A 不叽喳（不合作）</td><td align="left">A: +1 jump , B: +0 jump</td><td align="left">A: +0 jump , B: +0 jump</td></tr></tbody></table><p>这也意味着：一个平衡的游戏/关卡通常并不是我们所想要的</p><h4 id="Fairness"><a href="#Fairness" class="headerlink" title="Fairness"></a>Fairness</h4><p>公平是玩家对平衡的心理感知。但公平与否与是否真的平衡其实并不一定相关。通常竞技性的多人地图应为双方提供 50 % 的平均胜率。</p><p>一般优先考虑公平而不是平衡。公平并不是完美数学，而是理解玩家体验和反应。玩家就是事实的制定者，如果玩家都说 2+2=5，那就等于 5 又有何妨。</p><p>游戏设计师对“公平”的定义不同。 <a href="https://www.sirlin.net/articles/balancing-multiplayer-games-part-3-fairness">David Sirlin 将公平定义</a>为“技巧水平相同的玩家有平等的获胜机会，无论他们的开局条件如何。”</p><h5 id="Match-tournament-design"><a href="#Match-tournament-design" class="headerlink" title="Match/ tournament design"></a>Match/ tournament design</h5><p>规则和程序会影响玩家使用地图的方式，特别是在竞技性的多人游戏中。</p><ul><li>换边。当双方在比赛中切换阵营时，地图平衡的重要性会降低。</li><li>层级列表。常见于 MOBA 和格斗游戏中。将不同等级、角色、装备等进行等级分类，仅在相同等级内平衡。 Sirlin 认为所有 S 级（过于好）和 F 级（过于差）角色都该被重新设计。</li><li>锦标赛。竞技性多人锦标赛的分支设计是一门完整的科学，可以说这基本上是元关卡设计。开放式/封闭式？循环赛/淘汰赛？一支队伍在某地图上比另一只队伍更拿手怎么办？队伍可以否决地图吗？地图池怎么决定？</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220506232146.png" alt="photo of the Green Monster wall at Fenway Park by &quot;wallyg&quot; under CC-BY license (https://commons.wikimedia.org/wiki/File:Fenway_Park_Home_Plate_and_Green_Monster.jpg)"></p><p>以下是关于上图的解说，直翻：</p><blockquote><p>例如，上图是美国波士顿美国职棒大联盟芬威球场左侧场地后侧的一堵异常高大的绿墙“绿魔”。在关卡设计和地图平衡方面，绿魔在场上为防守团队提供了巨大的优势；绿魔如此高（11.3米），击球手很难击出本垒打翻墙。</p><p>但在整个棒球比赛的大背景下，球队在多局比赛中反复转换角色，这是公平的，因为两支球队都处于类似的劣势。整体游戏设计框架我们如何理解平衡，有时地图平衡甚至有些无关紧要。</p><p>（棒球书呆子争论绿色怪物是否对击球手不利。击球手可以瞄准墙壁并将球从墙上反弹，这对于左外野手来说更难接球。左撇子投手在芬威经常遭受更糟糕的统计，因为右-击球手在这些“墙球双打”中得分更多。）</p></blockquote><hr><h3 id="Map-balance"><a href="#Map-balance" class="headerlink" title="Map balance"></a>Map balance</h3><p>地图平衡涉及以下方面：</p><ul><li>实用性：该区域有用/有趣？为什么玩家到这里/在这里停留？</li><li>成本：区域是否容易到达/停留？玩家是否需要耗费大量时间/资源才能这么做？玩家在这里会让别的地方更脆弱吗？</li><li>信息：玩家知道这里存在吗？玩家必须追踪/记忆多少信息才能使用该区域？有隐藏成本吗？误解会发生什么有趣的事吗？</li></ul><p>关卡设计目标并不是最大化实用性。在关卡设计中设计一个总是有用（高实用性）、容易到达（低成本）、明显（可见信息）的“完美”区域实际上并不理想。因为所有“理性”玩家都会选这样的地区。那构建其他地区的意义何在？</p><p>理想情况下，地图的每个部分都应该有特定的用途，具体取决于游戏状态，并通过情境弱点阻止玩家停留太久，通过有限的信息过滤让玩家犯有趣的错误。</p><h4 id="Territory-map-control"><a href="#Territory-map-control" class="headerlink" title="Territory/ map control"></a>Territory/ map control</h4><p>领地：玩家可追踪，防御，且通常从中受益的区域。</p><p>拥有更多领地就有更多地图控制权。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220506233409.png" alt="map control diagram with &quot;P&quot; (player) on left, and &quot;E&quot; (enemy) territory on right -- from &quot;The Door Problem of Combat Design&quot; by Andrew Yoder"></p><h4 id="Chokepoints"><a href="#Chokepoints" class="headerlink" title="Chokepoints"></a>Chokepoints</h4><p>领土通常以阻塞点（chokepoints），即较小的区域或通道为界，这些区域可以被占领以防御敌人入侵。</p><p>在多人 PvP 地图中，在地图上分布 3-4 个阻塞点，每条路一个阻塞点。 不应该能够从一个点覆盖所有阻塞点。</p><p>例如，在 Counter-Strike 地图 de_cache 中，上车道  (A) 有两个小阻塞点，中车道有一个大阻塞点，而下车道 (B) 有一个大阻塞点。<br>反恐（CT）小组的工作是保护橙色炸弹点，这两个炸弹点在开始时都牢牢地在他们的领土内（战线左侧）。 CT 有一种安全的方式从中间迂回到 A，但 T 可以从两个阻塞点攻击 A。 B 更靠近 CT 和 Ts，但从 B 迂回需要更长的时间。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220506233744.png" alt="battle line and chokepoint breakdown on de_cache by Sal Garozzo and Shawn Snelling for Counter-Strike: Global Offensive, from GDC 2015: Community Level Design for Competitive CS:GO"></p><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/04/28/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></li></ul><hr><h2 id="暂告段落"><a href="#暂告段落" class="headerlink" title="暂告段落"></a>暂告段落</h2><p>后面有些部分感觉并未写完。毕竟本“书”还处于不断填坑过程中，暂时打算等坑再填填再来继续随译/笔记。</p><p>至目前为止其实看下来更多是一个体系梳理的感觉，但要真正落到生产设计中，感觉还需要更精细化和深入的内容。后面可能会暂时转向关卡设计的另一本书。</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-LevelDesign </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Level Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220505 - Level Design Book - BOOK 1. PROCESS - Combat - Encounter</title>
      <link href="2022/05/05/20220505-leveldesignbook-combat-encounter/"/>
      <url>2022/05/05/20220505-leveldesignbook-combat-encounter/</url>
      
        <content type="html"><![CDATA[<h2 id="Encounter"><a href="#Encounter" class="headerlink" title="Encounter"></a>Encounter</h2><ul><li><p><a href="https://book.leveldesignbook.com/process/combat/encounter">原文链接</a></p></li><li><p><a href="https://medill-east.github.io/2022/04/28/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></p></li></ul><blockquote><p>通常与 NPC 进行的连续不断的开放式挑战</p></blockquote><h3 id="What-is-an-encounter"><a href="#What-is-an-encounter" class="headerlink" title="What is an encounter?"></a>What is an encounter?</h3><p>遭遇战是一系列支持多种玩家策略的系统性挑战：</p><ul><li>序列：可以有连续多个 beats/ waves/ 挑战</li><li>系统性：使用重复游戏元素设计语言</li><li>多样性：理想情况下，不仅有一种特定解决方案或最佳策略</li><li>战术：即兴的短期玩法风格/行为</li></ul><p>许多游戏以非暴力形式来构建挑战：如谜题，对话，或是迷你游戏等。但是在关卡设计文化中，“遭遇战”通常指的是动作/射击/RPG 品类游戏中的单人战役及 PVE（player vs. enemy）</p><p>原文里没填的坑：有关更多非暴力挑战设计，请看谜题。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220505211328.png" alt="combat front diagram for a cover-based military shooter, from &quot;Creating Conflict: Combat Design for AAA Action Games&quot; by Michael Barclay, Sam Howels, Pete Ellis at GDC Europe 2016 (via GdcVault.com) (https://www.gdcvault.com/play/1023791/Creating-Conflict-Combat-Design-for)"></p><hr><h3 id="Combat-story"><a href="#Combat-story" class="headerlink" title="Combat story"></a>Combat story</h3><p>遭遇战是有关<a href="https://medill-east.github.io/2022/04/29/20220429-leveldesignbook-pre-production-pacing/">节奏</a>的艺术。何时，在哪里，发生了什么，会让玩家有何种反应？</p><p>可以把它当成一个故事，但是是通过战斗来讲述的——一场有起因，经过，结果的遭遇故事：</p><ul><li>起因，在战斗开始前：<ul><li>敌人们已经在战场中了吗，还是毫无察觉，或是在来的路上？</li><li>是否由玩家选择合适加入战斗</li><li>玩家是否知道敌人的布局和构成？</li></ul></li><li>经过，战斗中：<ul><li>短线作战还是长时作战？多少波或阶段？</li><li>有任何会影响战斗的脚本事件吗</li><li>有特别需要强调的路线或是策略吗</li></ul></li><li>结果，战斗后：<ul><li>玩家怎样知道战斗结束了</li><li>是否有多种可能结果</li></ul></li></ul><p>好的遭遇战能够帮助玩家理解发生了什么，也能讲述一个拥有清晰起因和后果的连贯故事。</p><p>这里配了龙叔电影中遭遇战的录制 233：</p><iframe width="735" height="413" src="https://www.youtube.com/embed/YX327SIoSMk" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>下面这段话直翻了：> 在上面的纪录片《成龙：我的特技》（1999）的视频片段中，成龙为大片《尖峰时刻》（1998）编排并导演了一个打斗场景。 成龙对每个演员的动作都强调了一种“身体逻辑”； 因此，当他和克里斯·塔克的行为相互影响时，这意味着他们角色的合作关系达到了情感高潮。 布雷特·拉特纳 (Brett Ratner) 经常提出的关于枪支的愚蠢问题完全没有抓住重点。 性格就是行动，行动不断流动。 枪无所谓，它只是帮助观众遵循身体逻辑的工具。<h3 id="Starting-an-encounter-footholds"><a href="#Starting-an-encounter-footholds" class="headerlink" title="Starting an encounter: footholds"></a>Starting an encounter: footholds</h3><p>对于强调掩护的单人动作射击游戏，让玩家在战斗真正开始前有机会调查竞技场：</p><ul><li>从哪里开始打</li><li>了解敌人的进攻路线</li><li>如果打不过从哪里跑</li></ul><p>如果不帮玩家理解布局，他们只会在门口毫无想象力的战斗，竞技场的设计就白做了，玩家会反过来怪游戏提供的信息不够多，不知道什么时候利用竞技场。</p><p>怎么吸引玩家进入竞技场，了解布局，而后交战？Andrew Yoder 将之称为 <a href="https://andrewyoderdesign.blog/2019/08/04/the-door-problem-of-combat-design/">战斗设计的门问题</a></p><p>让玩家找到立足点的方法：</p><h4 id="方法-1：玩家伏击敌人"><a href="#方法-1：玩家伏击敌人" class="headerlink" title="方法 1：玩家伏击敌人"></a>方法 1：玩家伏击敌人</h4><p>开始时让敌人意识不到玩家存在，玩家可从入口处进入。这让玩家有一些时间来制定计划，并在准备好时开始攻击。</p><p>玩家一开始可能会很容易消灭暴露在外的不知情敌人，但可以在拐角处隐藏/产生更多敌人，在战斗开始时引入这些敌人增援。</p><p>这种模式在开放世界游戏或任何点缀着敌人前哨的大型景观中很常见。符合这些品类行动自由的美学。</p><h4 id="方法-2：敌人包围玩家"><a href="#方法-2：敌人包围玩家" class="headerlink" title="方法 2：敌人包围玩家"></a>方法 2：敌人包围玩家</h4><p>开始时没有敌人，玩家就能够在竞技场中游荡到中央。一旦越过某些范围，或是机关，就触发遭遇战。可以放置一些东西和资源到场中作为“诱饵”。</p><p>有经验的玩家一眼就能识破这种明显的陷阱，并且一看到空旷的竞技场房间或者看到“免费”的诱饵就提高警惕。</p><p>这种伎俩其实用一次就不好使了。防止敌人保卫战很困难，因为重复死亡以及缺乏对战斗的掌控会让玩家感到后悔或不公。</p><p>这种模式常见于经典射击/恐怖游戏。玩家们通常都会对此有心理准备。</p><h4 id="方法-3：带有可选单向入口的-Vista"><a href="#方法-3：带有可选单向入口的-Vista" class="headerlink" title="方法 3：带有可选单向入口的 Vista"></a>方法 3：带有可选单向入口的 Vista</h4><p>Vista 应该指的是制高点。</p><p>设计玩家在开始时会处于一个制高点，从这里可以看到远处的竞技场内部，但不能攻击到敌人。玩家可以收集信息，制定计划，并在愿意的时候开始战斗。</p><p>可以让玩家从一个单向通道进入，在玩家进入时可以选择将其身后的门关闭，这样一旦玩家入场，敌人也知晓，类似一种“公平战斗”。</p><p>如果玩家测试的时候没有很好利用 vista，可以尝试：a. 在 vista 上放置资源；b. 使得通往 vista 的路更加顺畅；c. 一开始阻塞通往竞技场的路，并混淆入口（如 U 型转弯路，这里说实话一下子看到觉得不是很直观，没想出来指的是哪种）；d. 以上所有。</p><p>这种模式在 BOSS 战或是大型高潮编排中很常见。强迫玩家在一个故意建造的 vista 停留是一个强有力的设计暗示，警告玩家：不要草率，做好准备。</p><hr><h3 id="Encounter-design-tools"><a href="#Encounter-design-tools" class="headerlink" title="Encounter design tools"></a>Encounter design tools</h3><h4 id="Define-play-styles"><a href="#Define-play-styles" class="headerlink" title="Define play styles"></a>Define play styles</h4><p>玩家一般不会每种机制都喜欢使用，一些人会偏爱某种策略，主升某种流派，或是偏爱特定武器。这里必须区分一下玩法风格和玩家个性：</p><p>玩法风格/打法（play style）：短期的战术或是模式。玩家的模式就像天气一样，毫无预兆就可能更改。<br>玩家个性（player persona）：整体的长期行为和动机。玩家个性，是玩家整体行为的氛围，一般不会改变。</p><p>在以上前提下，建议：遭遇战应该迫使玩家改变打法，但不要挫败玩家个性。</p><p>有关定义和研究玩家的更多内容，请看<a href="https://book.leveldesignbook.com/process/blockout/playtesting/persona">玩家个性</a>。</p><p>对于每个项目，定义一些玩家打法：</p><ol><li>定义一些可能的玩家战术/行为/模式</li><li>用简短易读的名字标记它</li></ol><p>例子：</p><ul><li>平台跳跃游戏：跑者（runners）、跳者（jumpers）、滑翔者（gliders，啥意思，一直滑铲？）、游泳者（swimmers，啥意思，爱走水路不爱走陆路？）</li><li>设计游戏：狙击手（snipers），霰弹枪手（shotgunners），喷雾（spray，这…也没懂）和祈祷（pray，啥意思，这个真没懂），露营者（campers，蹲点的）</li><li>开放世界游戏：探险家（explorers）、战士（fighters）、司机（drivers，滴滴滴）、收藏家（collectors，仓鼠）</li><li>策略游戏：冲刺者（rushers）、海龟者（turtlers，疯狂保命，苟）、扩张者（expansionists）、微观/宏观（micro/macro，这啥，细节和大局观？）</li><li>所有游戏：完成者（completionists）、速通（speedrunners）、知识猎人（lore hunters，全成就吧应该是）、直播（streamers，主播）、新手（newbs）等。</li></ul><p>然后把玩法风格应用到遭遇战设计中：</p><ul><li>哪些关卡/遭遇应该支持哪些游戏风格？</li><li>你是否试图同时支持太多的游戏风格？（贪多嚼不烂啊）</li></ul><hr><h3 id="Arena-design"><a href="#Arena-design" class="headerlink" title="Arena design"></a>Arena design</h3><p>也是没填完的坑：分解 sock 的图表并单独讨论它们</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220505224014.png" alt="different floor design diagrams for encounters by Simon O&#39;Callaghan"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220505224039.png" alt="different fps encounter elements by Simon O&#39;Callaghan"></p><hr><h3 id="Example-combat-bosses-in-God-of-War-2018"><a href="#Example-combat-bosses-in-God-of-War-2018" class="headerlink" title="Example: combat bosses in God of War (2018)"></a>Example: combat bosses in God of War (2018)</h3><p>纵观第三人称动作游戏《战神》（2018），玩家可以尝试击败 9个被称为“女武神”（Valkyries）的可选 BOSS。所有女武神共享相似的角色美术、动画和招式，但在不同条件下以不同顺序使用，在构建战斗变化的同时有效重用了相同资源。</p><p>玩家游玩并解锁区域来解锁 BOSS，这种区域解锁的方式暗含了一种顺序，但并没有强制玩家按照这种顺序来进行战斗。前三个专门设计为一种松散教程（loose tutorials）供玩家来识别和学习，尽管有时候设计师也会利用这种潜在的建议顺序，通过混合以前的模式（prior patterns）来强迫玩家重新学习（已经学过的内容的）新的使用时机（relearn new timings）。</p><p>Sony 前战斗设计师 Jason de Heras <a href="https://twitter.com/jasondeheras/status/1376005093028335617">在 Twitter 上详述了战斗设计</a>:</p><p>下面直翻：</p><blockquote><p>Gunnr 有 2 次独立攻击，其作用是鼓励招架（黄色 FX）；他们的预期窗口/攻击速度相似，以允许一致的招架时间。 [它] 鼓励玩家招架，但不是必须招架。 Gunnr 的所有攻击都可以左/右/后躲避或招架，[除了] 有 1 次不可招架（红色）攻击 […] 在一系列初始攻击之后执行，因此玩家有足够的时间准备。不可阻挡的攻击几乎为零跟踪，因此玩家可以以最小的精度向右躲避。</p></blockquote><blockquote><p>Gunnr 通常会躲开以发起她的独立攻击。这给了玩家一个明显的视觉感受，但也有大量的分层预期时间，大约 2-3 秒来准备和应对随后的攻击。 […] Gunnr 在躲避然后攻击之后几乎没有停机时间（virtually no downtime after evading and then attacking，指的应该是攻击被格挡后不会下坠，玩家可以直接发起攻击？），这可以说使战斗更容易了。这减少了玩家必须制定策略的变量。设计者让战斗保持高强度，但实际上将敌人置于易受攻击的位置。</p></blockquote><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/LDB_GodOfWar_JasonDeHeras_ValkyrieTelegraph.gif" alt="animated GIF showing Gunnr&#39;s attacks with long anticipation and yellow FX to encourage parry / evade (https://twitter.com/jasondeheras/status/1376005121830658049)"></p><blockquote><p>与 Gunnr 不同，Kara 的 2 次攻击强烈迫使玩家回避/阻挡。 由于这些攻击具有相似的启动姿势，因此玩家必须识别红色 FX 以选择回避或阻挡。 […]  Kara 共享 Gunnr’s 短跑/俯冲?，但是 [如果] 玩家在招架/防守时失误，他们将很容易受到附近 Draugrs 的攻击，[增加紧张感。] Kara’s 翅膀滑击（wing swipe） 是一种独立的攻击，给了她另一种躲避并重置战斗的混招。 […] Kara’s 翅膀滑击 的范围会导致它故意 miss。 如果玩家大意或贪了，这种设计会让他们更容易错失机会（sleep）或者进行攻击。 最后一小段向前短冲使这种攻击具有欺骗性。</p></blockquote><blockquote><p>Geirdriful 分享了 Gunnr 和 Kara 的一些招式，但增加了 2 种独特的攻击来打造强大/全面的招式 […] 可以招架的攻击。 […] Geirdriful 的侧翼挥击组合与 Gunnr 的相同，但用作独立攻击（与 Gunnr 的反击相反），这是另一种使战斗更难预测的组合。 Geirdriful 共享 Gunnr 不可阻挡的翅膀冲击（wing thrust），但作为独立攻击增加了平移/速度。 如果玩家先与 Gunnr 战斗，那么在无法阻挡的翅膀冲击之前移除翅膀滑击（wing swipes）将迫使他们重新学习此攻击的节奏。<br><a href="https://twitter.com/jasondeheras/status/1376005093028335617">– Jason de Heras (@JasonDeHeras)</a></p></blockquote><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220505230700.png" alt="spreadsheet breakdown showing the moveset matrix for valkyrie bosses in God of War (2018), by Jason de Heras (via Twitter)(https://twitter.com/jasondeheras/status/1376005158656638977)"></p><hr><h3 id="Example-stealth-boss-in-Dishonored"><a href="#Example-stealth-boss-in-Dishonored" class="headerlink" title="Example: stealth boss in Dishonored"></a>Example: stealth boss in Dishonored</h3><p>在第一人称潜行游戏《耻辱》中，任务 7 “洪水区”中，玩家面对的是一个 Boss NPC。 他们可以偷偷溜过它而不被发现或试图与老板战斗。 Arkane Studios 的关卡设计师 Dana Nightingale 评论了她的设计文件：</p><blockquote><p>通常我讨厌 BOSS 战，所以设计一个规避了所有我不喜欢的部分的 BOSS 战让我感到兴奋。 […] 设计与 Daud 的相遇仍然是我最自豪的事情之一。 我喜欢看人们玩它。</p></blockquote><blockquote><p>大块的文本很适合“开发评论”（dev commentary），但如果你有一百个文档要保持最新状态，或者你是必须阅读它们的人，那么它就不能很好地工作。 更简单，但传达更多，始终是我们的目标。 这真的很难。</p></blockquote><blockquote><p><a href="https://twitter.com/DanaENight/status/1371022031886635011">– Dana Nightingale (@DanaENight)</a></p></blockquote><p>Nightingale 的原始设计文件（见下方）概述了这次遭遇战的明确设计目标，以证明异常封闭的竞技场布局是合理的。 此外，由于《耻辱》是一款具有许多不同玩家能力的“沉浸式模拟”RPG 游戏，她使用流程图格式来想象不同的玩家策略以及遭遇脚本如何优雅地处理边界情况。 然而，正如她所指出的，阅读内容很多。 在设计简介中写太多细节并不一定会改善规划或设计。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/LDB_Encounter_Daud_Dishonored_DanaNightingale.png" alt="design documents for boss encounter in Dishonored, by Dana Nightingale (https://twitter.com/DanaENight/status/1370643659792744449)"></p><p>BOSS 战的其中一个通关例子，它满足了 Nightinggale 的设计目标吗？和初始的设计意图有何不同呢？</p><p>（视频里面玩家用了类似“子弹时间”的技能来顺利偷到了东西，并且也没有触发战斗，算是满足了原始设计中的“逃课”目的，但却并非直接溜走，玩家用自己的方式做到了“雁过无痕”。）</p><iframe width="485" height="273" src="https://www.youtube.com/embed/yE3yO4zMMgg" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><hr><h3 id="Further-reading"><a href="#Further-reading" class="headerlink" title="Further reading"></a>Further reading</h3><ul><li><a href="https://www.gameaipro.com/">Game AI Pro</a> is the main game industry publication about game AI programming and techniques – professionally written and edited – and <strong>free to read.</strong> If you’re not a programmer, some of it will be difficult to understand, but try to push through it anyway. If you can understand 50% of it, it’ll still help you a lot. A valuable community resource for combat designers.</li><li><a href="https://www.youtube.com/watch?v=oB4JMy9OjKk"><strong>“Basics of Classic FPS Combat Encounter Design”</strong></a> (47 min video) by Andrew Yoder</li><li><a href="https://www.nathanielchapman.games/pedrothedagger/encounter-design-topics-rng-in-encounter-design">“Encounter Design Topics: RNG in Encounter Design”</a> by Nathaniel Chapman is about when and how to apply randomness to combat, especially in a multiplayer or MMO context.</li><li>  <a href="https://www.youtube.com/watch?v=s9bleQCTdTo">“Quake Mapping Tips: Difficulty Balance in Level Design” (8 min) video by Michael Markie</a> workshops Quake 1 combat encounters at different difficulty tiers, while offering general design commentary and advice. Markie uses different monster behavior and weapon / ammo placement to encourage different player movement within the same room layout. A great primer even if you’re not mapping for Quake.</li></ul><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/04/28/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-LevelDesign </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Level Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220504 - Level Design Book - BOOK 1. PROCESS - Combat - Enemy Design</title>
      <link href="2022/05/04/20220504-leveldesignbook-combat-enemydesign/"/>
      <url>2022/05/04/20220504-leveldesignbook-combat-enemydesign/</url>
      
        <content type="html"><![CDATA[<h2 id="Enemy-design"><a href="#Enemy-design" class="headerlink" title="Enemy design"></a>Enemy design</h2><ul><li><p><a href="https://book.leveldesignbook.com/process/combat/enemy">原文链接</a></p></li><li><p><a href="https://medill-east.github.io/2022/04/28/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></p></li></ul><blockquote><p>为具有不同行为，强弱项的 NPC 制作原型</p></blockquote><h3 id="What-is-enemy-design"><a href="#What-is-enemy-design" class="headerlink" title="What is enemy design?"></a>What is enemy design?</h3><p>以下是一些有关敌人设计的类型的行业共识/建议：</p><ul><li>多样性：与每种类型的敌人战斗时都应该有不同的感觉，避免过于相似的敌人</li><li>等级：敌人有强有弱，需要明确定义</li><li>长生命周期：敌人类型不应该存在过时的说法。一个弱小的早期敌人在游戏后期应该仍然有趣，一个中期的 BOSS 后期也可以转化为普通怪等</li><li>紧急性（也许该理解为多变性？）：不同类型的敌人组合应该造就不同的应对策略。玩家不应该存在可以应付所有情况的“万金油”/“一招鲜”</li><li>智能：敌人应该给人不同的智力和情感错觉（恐惧、愤怒等）</li><li>“聪明”的敌人应该有与之对应的生存能力，否则还没来得及展示他们有多聪明就挂了</li><li>一致性：敌人应该有清晰的模式/特征以供玩家进行识别和利用</li></ul><p>敌人设计通常是一项与 AI 设计师，程序，角色美术，动画，声效设计等团队成员共同合作的复杂工作。要注意，这并不是一本战斗设计的书。</p><p>一些敌人设计的例子，可以看<a href="https://book.leveldesignbook.com/process/blockout/metrics/doom">Doom metrics</a> 和 <a href="https://book.leveldesignbook.com/process/blockout/metrics/quake">Quake metrics</a></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220504120238.png" alt="Enemy rosters can be surprisingly complicated and varied; monster sprites from Doom 2 (1994) by id Software"></p><hr><h3 id="Enemy-roster"><a href="#Enemy-roster" class="headerlink" title="Enemy roster"></a>Enemy roster</h3><p>想象一下我们要制作一款动作游戏。以下是一些用于填充敌人名单的基本角色，包含它们的敌人类型以及相应战斗职能。<br>|角色|行为|<br>|:—-|:—-|<br>|Grunt|无脑攻击玩家，直截了当，容易搞定|<br>|Squad|轮流组团进攻，也会后退/迂回|<br>|Leader|高生存能力，会给附近的盟友增益|<br>|Tank|高生存能力，但速度慢且体积大（容易被玩家击中或躲避其攻击）|<br>|Swarm|小型快速攻击者，生命值低但近距离伤害高|<br>|Sniper|慢速远程攻击，没有队友掩护就很脆弱|</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220504121403.png" alt="different Combine soldier designs from Half-Life 2 (2004) and Half-Life: Alyx (2020) by Valve Software"></p><h3 id="Balancing-a-roster"><a href="#Balancing-a-roster" class="headerlink" title="Balancing a roster"></a>Balancing a roster</h3><p>用表格方式来组织敌人列表很直观也很有效：</p><table><thead><tr><th align="left">ROLE</th><th align="left">SPEED</th><th align="left">HEALTH</th><th align="left">RANGE</th><th align="left">DPS</th></tr></thead><tbody><tr><td align="left">Grunt</td><td align="left">Medium</td><td align="left">Weak</td><td align="left">Close</td><td align="left">Low</td></tr><tr><td align="left">Squad</td><td align="left">Medium</td><td align="left">Average</td><td align="left">Mid</td><td align="left">Low</td></tr><tr><td align="left">Leader</td><td align="left">Medium</td><td align="left">Average</td><td align="left">Mid</td><td align="left">Medium</td></tr><tr><td align="left">Tank</td><td align="left">Slow</td><td align="left">Strong</td><td align="left">Close</td><td align="left">Medium</td></tr><tr><td align="left">Swarm</td><td align="left">Fast</td><td align="left">Weak</td><td align="left">Close</td><td align="left">High</td></tr><tr><td align="left">Sniper</td><td align="left">Slow</td><td align="left">Weak</td><td align="left">Long</td><td align="left">High</td></tr></tbody></table><p>表格形式可以帮助设计师对敌人进行平衡以及定位差距。但思维不要局限于表格，对于上面的表格也许可以考虑下面这些方面：</p><ul><li>只有 1 个快速的敌人？ 也许Leader 也应该 Fast，才能感觉与Squad 更加不同？</li><li>没有高 DPS 中距离攻击范围的敌人。 应该有吗？会增添乐趣？还是作为功能型敌人来设计？</li><li>这个矩阵设计是不是太简单了？ 我们需要一个 Size 列，一个 Behavior 列吗？ 等等</li></ul><p>要分析一个已有游戏中的敌人列表：游玩多个关卡，制作自己的表格。</p><ul><li>哪种地形/布局最适合哪种敌人</li><li>哪些敌人类型可以很好地配合？为什么？</li><li>在关卡中出现了敌人的哪些组合方式？</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220504122510.png" alt="the Grunt, Elite, Jackal, and Hunter are distinctive Covenant faction enemies from Halo 1 (2001) by Bungie"></p><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/04/28/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-LevelDesign </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Level Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220503 - Level Design Book - BOOK 1. PROCESS - Combat</title>
      <link href="2022/05/03/20220503-leveldesignbook-combat/"/>
      <url>2022/05/03/20220503-leveldesignbook-combat/</url>
      
        <content type="html"><![CDATA[<h2 id="Combat"><a href="#Combat" class="headerlink" title="Combat"></a>Combat</h2><ul><li><p><a href="https://book.leveldesignbook.com/process/combat">原文链接</a></p></li><li><p><a href="https://medill-east.github.io/2022/04/28/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></p></li></ul><blockquote><p>设计玩家、NPC 之间或内部的物理冲突</p></blockquote><h3 id="What-is-combat-design"><a href="#What-is-combat-design" class="headerlink" title="What is combat design"></a>What is combat design</h3><p>战斗是游戏设计中最常见也是被探索得最为深刻的话题。一些工作室甚至有专门的战斗设计师，专门负责构建战斗系统和调整战斗。这是 2010 年代随着军事射击游戏/掩护射击游戏/黑魂等游戏的兴起才出现的行业惯例。</p><p>如果没有一些已经制作好的战斗设计，想要直接制作战斗关卡是很难的。这也是为什么建议做 mod：这样就可以直接重用游戏中已经得到验证的核心战斗系统，而不用自己重建。</p><p>如果没有选择冲突类型的游戏，可以直接学习有关<a href="https://book.leveldesignbook.com/process/layout">布局</a>的内容。</p><hr><h3 id="Combat-concepts"><a href="#Combat-concepts" class="headerlink" title="Combat concepts"></a>Combat concepts</h3><p>设计战斗系统时，考虑以下方面：</p><ul><li><a href="https://book.leveldesignbook.com/process/combat/enemy">敌人设计</a>：定义不同类型的敌对 NPC 类型<ul><li>理想情况下，每种类型都有不同的行为、优势、劣势</li><li>如果敌人类型过于重复，战斗体验会感觉枯燥单一</li></ul></li><li><a href="https://book.leveldesignbook.com/process/combat/encounter">遭遇战</a>：与 NPC 对抗的结构型战斗<ul><li>开放式战斗谜题：玩家需要即兴解决</li><li>游戏内的遭遇战通常会涉及一些<a href="https://book.leveldesignbook.com/process/scripting">脚本</a></li></ul></li><li><a href="https://book.leveldesignbook.com/process/combat/balance">平衡</a>：主观（觉得平衡）和客观（真的平衡）都要体现，通常体现在 PvP 中<ul><li>玩家可以哪里，他们能控制什么东西</li><li>平衡的关卡有能构建玩家对于布局的信任，并想着期望的目标不断加码</li></ul></li><li><a href="https://book.leveldesignbook.com/process/combat/arena">竞技场设计</a>：专门为战斗而设的空间<ul><li>设计可能的立足点，阻塞点，覆盖模式等</li><li>这部分会稍晚些提到。在理解敌人设计和遭遇战设计之前是无法很好地知道竞技场设计的需求的</li></ul></li></ul><hr><h3 id="Combat-mechanics"><a href="#Combat-mechanics" class="headerlink" title="Combat mechanics"></a>Combat mechanics</h3><p>战斗机制是玩家用于对抗敌人的可重用的动作/技能/武器。常见战斗机制有：</p><ul><li><strong>收集</strong>有关布局和敌人的信息</li><li><strong>远离</strong>危险，<strong>占领</strong>目标</li><li><strong>瞄准</strong>特定的敌人类型/弱点</li><li>当看到<strong>攻击信号</strong>（或者进攻机会时） <strong>示意</strong>攻击</li><li>将攻击/武器动作组成<strong>连招</strong></li><li><strong>阻挡</strong>敌人的攻击：在正确的时间<strong>招架</strong>/<strong>反击</strong>/<strong>闪避</strong></li><li>在敌人无法击中或看到你的地方<strong>寻找掩护</strong></li><li>管理<strong>资源</strong>，清点<strong>拾取物</strong>（血包，弹药等）</li><li>在环境中布置<strong>陷阱</strong>（爆炸桶、水、岩浆、悬崖等）</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/GodOfWar2014_CombatPrototype.gif" alt="在简单的测试地图中测试战神（2018）的战斗原型，来源为 https://80.lv/articles/evolution-of-god-of-war-from-2014-to-2018/"></p><h3 id="Weapon-design"><a href="#Weapon-design" class="headerlink" title="Weapon design"></a>Weapon design</h3><p>许多游戏为玩家提供了多种可用武器。武器设计是有关概念化、制作和平衡武器库的过程。需要考虑：</p><ul><li>武器的感觉和幻想：较大的射速较慢的枪 vs. 偷偷摸摸的刀 vs. 轰鸣电锯</li><li>关于伤害，射程，射速，弹药供应等方面的统计数据<ul><li>对于枪而言：需要考虑不同的散射度，后坐力，瞄具，穿透力，弹匣大小，装填速度等</li></ul></li><li>态势感知：挑选最合适/有效的武器</li><li>弹药经济的管理：不浪费资源</li><li>武器升级，装备升级等</li></ul><hr><h3 id="TODO-Combat-examples"><a href="#TODO-Combat-examples" class="headerlink" title="TODO: Combat examples"></a>TODO: Combat examples</h3><p>原文还没填这里的坑</p><hr><h3 id="TODO-Combat-workflow"><a href="#TODO-Combat-workflow" class="headerlink" title="TODO: Combat workflow"></a>TODO: Combat workflow</h3><ul><li>制作测试用的战斗关卡原型</li><li>怎么知道一个战斗“足够好了”</li></ul><p>原文还没填这里的坑</p><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/04/28/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-LevelDesign </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Level Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220502 - GDC2017 塞尔达：旷野之息的三角之力</title>
      <link href="2022/05/02/20220502-gdc2017-zelda/"/>
      <url>2022/05/02/20220502-gdc2017-zelda/</url>
      
        <content type="html"><![CDATA[<h2 id="塞尔达：旷野之息的三角之力"><a href="#塞尔达：旷野之息的三角之力" class="headerlink" title="塞尔达：旷野之息的三角之力"></a>塞尔达：旷野之息的三角之力</h2><p> 虽然以前已经看过一次视频，但所谓好记性不如烂笔头，这里重新复习一下最出色的开放世界的设计理念，本文基本整理自参考文章 <a href="https://cowlevel.net/article/2091350">荒野之息-用乘法打造开放世界玩法</a>，也感谢作者 <a href="https://cowlevel.net/people/ThouSun">ThouSun</a> 的辛苦整理。</p><p>原视频：<a href="https://www.youtube.com/watch?v=QyMsF31NdNc">Breaking Conventions with The Legend of Zelda: Breath of the Wild</a></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220502224332.png" alt="三角之力"></p><ul><li>the wisdom to make - Takuhiro Dohta</li><li>the power to show - Satoru Takizawa</li><li>the courage to say - Hidemaro Fujibayashi</li></ul><h2 id="P1-旷野之息设计核心-乘法式玩法"><a href="#P1-旷野之息设计核心-乘法式玩法" class="headerlink" title="P1 旷野之息设计核心-乘法式玩法"></a>P1 旷野之息设计核心-乘法式玩法</h2><p>Hidemaro Fujibayashi</p><h3 id="立项之初的两个核心问题"><a href="#立项之初的两个核心问题" class="headerlink" title="立项之初的两个核心问题"></a>立项之初的两个核心问题</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220502233204.png" alt="立项之初的核心问题"></p><ol><li><p>塞尔达系列游戏最重要的核心是什么</p><ul><li>让玩家自由选择<ul><li>自由决定去哪里</li><li>自由决定干什么</li></ul></li></ul></li><li><p>如何打破塞尔达常规，挖掘新内容</p><ul><li>之前作品中的相同点<ul><li>空气墙的存在阻碍了玩家移动</li><li>线性推进的剧情和流程</li><li>事先设计好的游戏体验</li><li>所有谜题都能在网上找到答案</li></ul></li><li>如何打破<ul><li>被动游玩 -&gt; 玩家主导的主动游玩（active game）</li></ul></li></ul></li></ol><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220502224615.png" alt="具有启发意义的地图"><br>来自地图的启发：玩家起初对整个世界是无知的，通过一步步探索，发现这个世界的美妙之处。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220502233754.png" alt="打破前作的限制"></p><h3 id="Active-Game"><a href="#Active-Game" class="headerlink" title="Active Game"></a>Active Game</h3><p>怎么做</p><ul><li>移除空气墙，并且添加攀爬能力<ul><li>原本阻碍玩家前进的墙现在成为了可选择的新道路</li><li>这样玩家在游玩时会不断问自己：你要选哪条路</li></ul></li><li>有了攀爬后，玩家爬到顶端会想干什么呢？——跳下去，所以引入滑翔能力</li></ul><h3 id="乘法式游戏"><a href="#乘法式游戏" class="headerlink" title="乘法式游戏"></a>乘法式游戏</h3><p>前作的设计</p><ul><li>使用自然理论或简单科学知识创造谜题</li><li>在每个谜题中独立运用知识作为谜题提示</li><li>很多道具/机制是专属于谜题的<ul><li>可以严格把控游戏体验细节</li><li>消耗很多开发资源</li><li>不适合开放世界</li></ul></li></ul><p>旷野之息的设计</p><ul><li><p>行为（Action） x 场景（Field）</p><ul><li><p>让每个行为在不同场景下有不同用途</p></li><li><p>玩家可以自由组合</p></li><li><p>让物品对玩家行为做出反应</p></li><li><p>物品与物品也能相互影响</p></li><li><p>例子</p><ul><li><p>攻击</p><ul><li>对敌人造成伤害</li><li>对树，砍倒</li></ul><p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/log.gif" alt="用攻击砍倒树木"></p></li><li><p>火把</p><ul><li>点燃物体</li></ul><p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/fire.gif" alt="用火点燃物体"></p></li><li><p>扇子</p><ul><li>吹飞</li></ul></li></ul></li></ul></li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/defence.gif" alt="打回怪物投掷的石块" style="zoom:70%;" /><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/timestop.gif" alt="“发射”经过时停蓄力的炸药桶"></p><p>想法验证：2D Demo</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/2d2.gif" alt = "用弓箭穿过火焰来点燃木质物品" style="zoom:90%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/2d3.gif" alt= "砍倒树木后利用浮木过河" style="zoom:90%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/2d4.gif" alt= "点燃火把后用其点燃其他可燃烧物体" style="zoom:90%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220502225648.png" alt= "动作 x 处境 x 物体的无限可能" style="zoom:105%;" /><p>Player Action x Field x Object</p><p>游戏中玩家在面对一个处境以及相应的目标时，可以充分组合自身行为以及场景物体，并基于交互逻辑自由游玩，从而实现了玩家主导（active game）</p><h2 id="P2-乘法式玩法的技术实现"><a href="#P2-乘法式玩法的技术实现" class="headerlink" title="P2 乘法式玩法的技术实现"></a>P2 乘法式玩法的技术实现</h2><p>Satoru Takizawa</p><h3 id="游戏物理"><a href="#游戏物理" class="headerlink" title="游戏物理"></a>游戏物理</h3><p>塞尔达作为一款动作游戏，其最重要的部分是什么呢？</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220502235706.png" alt="处理碰撞和移动的物理引擎"></p><p>动作游戏 = 碰撞+人物移动+物体状态</p><ul><li>游戏物理<br>碰撞和移动的核心都是物理<br>游戏中，为了得到更好的操纵性，更好的反馈以及充分满足游戏设计的需求，需要的不是真实世界中的物理，而是游戏物理。</li></ul><p> havoc 引擎为游戏物理提供了可行性</p><p>物理为塞尔达创造的行为（action）</p><ul><li>爬墙，墙的陡峭程度会影响体力消耗<ul><li>可以爬墙，那可不可以爬怪？</li><li>爬蓄力后的箱子？<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220502230231.png" alt="利用经过时停蓄力后的箱子移动到对岸"></li></ul></li><li>用磁力操纵金属物体</li><li>砍树，树会倒下变成木头</li><li>让时间停止，反复敲打以积攒能量</li></ul><p>游戏物理支撑了玩家的可能行为</p><h3 id="化学引擎"><a href="#化学引擎" class="headerlink" title="化学引擎"></a>化学引擎</h3><p>物理引擎解决了移动规则（碰撞和移动），化学引擎用于解决状态变化</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220502230406.png" alt="处理状态变化的化学引擎"></p><p>核心定义</p><ul><li>元素<ul><li>火</li><li>水</li><li>风</li><li>电</li></ul></li><li>材质<ul><li>木</li><li>铁</li><li>角色</li></ul></li></ul><p>化学引擎的三条核心规则</p><ul><li>元素可以改变材质状态<ul><li>如火将青葱大树变为光秃树干</li></ul></li><li>元素可以改变元素状态<ul><li>如水可以灭火</li></ul></li><li>材质和材质无法相互影响</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/chem1.gif" alt="火燃木，水灭火"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/chem2.gif" alt="导电现象"></p><p>化学引擎就是状态计算器，处理状态变化。之所以叫做化学引擎就是希望它能做游戏中创造“化学反应”：游戏规则由物理、化学引擎统一管理，直观理解的同时可以通过 action x field x object 创造无限可能，也希望玩家能主动发掘有趣的行为。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>如何做出乘法玩法——通过物理和化学来连接游戏中的所有东西</p><p>物体/玩家行为/元素等都经过精心设计，可以相互产生影响</p><p>物体之间的相互影响又与常见物理/化学现象相关，从而创造出旷野之息的有趣开放世界</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220502231706.png" alt="物理+化学引擎所创造的无限可能"></p><h3 id="乘法玩法在开放世界中的应用"><a href="#乘法玩法在开放世界中的应用" class="headerlink" title="乘法玩法在开放世界中的应用"></a>乘法玩法在开放世界中的应用</h3><p>旷野之息与前作不同，一般不会有明显谜题摆在玩家面前，那么如何利用乘法玩法创造谜题呢？</p><p>答案是 处境 x 目标</p><ul><li>玩家可能面对的小目标<ul><li>打败敌人</li><li>到达目的地</li></ul></li><li>玩家需要做的<ul><li>在当前处境下探索实现目标的方法</li></ul></li><li>体验目标<ul><li>无限选择</li><li>让玩家感到“我真是个天才”</li></ul></li><li>为实现体验目标所做的<ul><li>为其提供充分的物体<ul><li>河边的石头<ul><li>静止 蓄力 飞到对岸</li></ul></li><li>沟壑边的大树<ul><li>砍倒成为桥</li></ul></li><li>沟壑两旁的草<ul><li>点燃后乘风而起</li></ul></li><li>在地图上各个地方放宝箱以引导玩家到达 主动创造产生“天才”时刻的机会</li></ul></li></ul></li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/wind2.gif" alt= "乘着火焰燃烧处而生成的风起飞" style="zoom:85%;" /><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/wind.gif" alt="乘风破浪"></p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/mag.gif" alt= "电引雷" style="zoom:85%;" /><h2 id="P3-为玩法打造的艺术风格"><a href="#P3-为玩法打造的艺术风格" class="headerlink" title="P3 为玩法打造的艺术风格"></a>P3 为玩法打造的艺术风格</h2><h3 id="旷野之息艺术风格的探索"><a href="#旷野之息艺术风格的探索" class="headerlink" title="旷野之息艺术风格的探索"></a>旷野之息艺术风格的探索</h3><p>塞尔达系列一贯的标准：在充分满足玩法需求前提下，尽可能满足真实感。</p><p>这也意味着，艺术为玩法服务是第一优先级，让风格尽可能真实是次要的。</p><p>制作了历代塞尔达的高清重置 Demo 后选择了风之杖的风格：保持一定真实感的同时，可以更轻松地实现为玩法服务的动作/画面。并且这种风格也有较高独特性和辨识度。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220502232523.png" alt="塞尔达：风之杖"></p><h3 id="旷野之息画风如何满足玩法设计需要"><a href="#旷野之息画风如何满足玩法设计需要" class="headerlink" title="旷野之息画风如何满足玩法设计需要"></a>旷野之息画风如何满足玩法设计需要</h3><p>为了让玩家直观理解前面所提到的基于物理和化学变化所实现的玩法，不能在美术表现上完全不重视真实感。</p><p>风之杖的画面风格可能过于卡通画，会让玩家觉得游戏是面向小孩子的，这并非我们所愿。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220502232705.png" alt="美术风格的平衡"></p><p>于是决定取中间值：满足风之杖中的玩法易于落地的特点，同时加入更多真实感。</p><p>例子：旷野之息中将树砍倒的动作很真实，但再砍一下地上的树木，就会噗地一下变成整理好的树枝。这些是精心考虑了玩法和真实性之间的平衡之后的结果：尽可能提供直观理解的同时（充分真实性），也保障了流畅操作性（玩法）。</p><p>做饭，滑翔，滑盾等行为也同理。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/cook.gif" alt="做饭"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/fly.gif" alt="滑翔和滑盾"></p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> GDC </tag>
            
            <tag> Learning Notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220502 - Level Design Book - BOOK 1. PROCESS - Pre-production - Scope</title>
      <link href="2022/05/02/20220502-leveldesignbook-pre-production-scope/"/>
      <url>2022/05/02/20220502-leveldesignbook-pre-production-scope/</url>
      
        <content type="html"><![CDATA[<h2 id="Scope"><a href="#Scope" class="headerlink" title="Scope"></a>Scope</h2><ul><li><p><a href="https://book.leveldesignbook.com/process/preproduction/scope">原文链接</a></p></li><li><p><a href="https://medill-east.github.io/2022/04/28/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></p></li></ul><blockquote><p>项目周期代表了一个项目的规模以及复杂度，通常在原型推进过程中不断对周期进行验证。</p></blockquote><p>在 <a href="https://medill-east.github.io/2022/04/28/20220428-leveldesignbook-pre-production/">pre-production</a> 一节中，我们已经设定了最初的周期和期望。</p><p>游戏开发中的传统智慧是假设每个项目开始时都超期了。即使是小型的合理的项目也可能有隐藏问题。关卡设计也不例外，即使是很小的关卡也可能需要多次迭代和游戏测试才能验证通过。如果有疑问的话，就缩减周期以及去掉不必要的非支柱性的游戏设计吧。</p><p>随着工作经验（或是团队信任度）的提升，最终会在估计项目周期方面做得越来越好。如果是游戏开发新手，建议遵循 50% 的原则：想想尽可能小的项目，然后直接砍掉 50% 内容，这样就有 50%的机会来真正做完。</p><hr><h3 id="Feasibility"><a href="#Feasibility" class="headerlink" title="Feasibility"></a>Feasibility</h3><p>对于大型/商业项目，pre-production 其实就是可行性研究：项目能否在给定时间和资源下完成？项目是否合理还是太理想化了？其可行性到底如何？</p><p>游戏引擎和工具的选择极大地影响了机制和系统的制作可行性。 例如，使用 Doom 3 引擎制作开放世界驾驶游戏将非常困难，因为该引擎没有内置对大型景观或车辆的支持。</p><h4 id="Engine-and-tools"><a href="#Engine-and-tools" class="headerlink" title="Engine and tools"></a>Engine and tools</h4><p>可行性可不只意味着使用最喜欢的游戏引擎。每个项目都有着不同的需求和目标。</p><ul><li>所有权：依赖另一家公司是否明智？许多大型工作室使用的是自研引擎而不是 Unity 或 Unreal。</li><li>劳工：能招聘到和留住人才吗？比如小型工作室无法避免大型工作室以更高的薪资挖人，他们可能会避免使用 Unreal。（大概是技术不互通所以不好挖的意思？）</li><li>技术优先：能改变设计以契合技术吗？比如对于使用 Doom 引擎的工作，制作一个射击游戏比起平台跳跃游戏就更加可行（Doom 没有跳跃键）。</li></ul><hr><h3 id="Pipeline"><a href="#Pipeline" class="headerlink" title="Pipeline"></a>Pipeline</h3><p>游戏开发中的管线可以理解为多个不同的生产步骤。Pre-production 是搞清楚大多数管线的时候。</p><p>Build 管线可将可玩的可执行文件分发给玩家，而 art 管线会关注于将 2D 图像或 3D 模型转换为游戏引擎所支持的格式。以下这些词基本都是管线的一部分：convert，import，export，compile，bake。</p><p>关卡设计管线有一些差异。有时候可能需要单独的工具或插件来生成景观或是搭建建筑。在 2010 年前，游戏引擎在加载关卡文件之前需要对地图编译进行优化或是对其进行错误检查是很常见的步骤。</p><hr><h3 id="Prototyping"><a href="#Prototyping" class="headerlink" title="Prototyping"></a>Prototyping</h3><p>最好的验证可行性的方式就是制作原型。原型是一个小型的项目，可视其为专门回答了某一个问题。</p><p>1997 年，Apple 的研究者 Stephanie Houde 和 Charles Hill 发表了一篇名为 <a href="https://hci.stanford.edu/courses/cs247/2012/readings/WhatDoPrototypesPrototype.pdf">“What Do Prototypes Prototype?”</a> 的著名文章。Houde 和 Hill 定义了三种原型的通用分类：</p><ul><li>功能验证型，Role：它怎么来满足用户需求，在其生命周期内它扮演了什么样的角色？</li><li>技术验证型，Implementation：技术可行吗？怎么来制作？</li><li>感官验证型，Look and feel：看起来会是什么样的？感觉如何？</li></ul><p>在针对其中任何一项进行原型制作时，这一过程就被称之为概念验证（proof of concept）。原型的形式可能是纸面的，引擎的技术 demo，或是一个玩家可游玩的测试关卡。</p><p><a href="https://book.leveldesignbook.com/process/layout">Layouts</a> 和 <a href="https://book.leveldesignbook.com/process/blockout">blockouts</a> 也是用于回答设计问题的原型。</p><hr><h3 id="Vertical-Slice"><a href="#Vertical-Slice" class="headerlink" title="Vertical Slice"></a>Vertical Slice</h3><p>当尝试将多方面组合成一个更大的集成原型时就是在制作一个垂直切片——一个带有体验设计（role），音视频润色（look and feel），功能技术基础（implementation）的已完成游戏的“示例”切片。（其实就是早期演示视频）</p><p>制作垂直切片可以让团队验证管线可行性。如果能够使用当前工具盒流程制作出出色的切片，那么工具可能就够用了。如果做不出，那么可能需要对工作方式进行调整。</p><p>垂直切片还有助于衡量项目周期。如果制作 10% 的内容需要 5 个月，那么可以大概推算全部做完可能要 50 个月。（真实情况远比这复杂，但大概意思，领会精神）</p><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/04/28/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-LevelDesign </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Level Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220501 - Level Design Book - BOOK 1. PROCESS - Pre-production - Worldbuilding</title>
      <link href="2022/05/01/20220501-leveldesignbook-pre-production-worldbuilding/"/>
      <url>2022/05/01/20220501-leveldesignbook-pre-production-worldbuilding/</url>
      
        <content type="html"><![CDATA[<h2 id="Worldbuilding"><a href="#Worldbuilding" class="headerlink" title="Worldbuilding"></a>Worldbuilding</h2><ul><li><p><a href="https://book.leveldesignbook.com/process/preproduction/worldbuilding">原文链接</a></p></li><li><p><a href="https://medill-east.github.io/2022/04/28/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></p></li></ul><blockquote><p>如何概念化以及设计游戏世界中的虚构历史</p></blockquote><h3 id="What-is-worldbuilding"><a href="#What-is-worldbuilding" class="headerlink" title="What is worldbuilding?"></a>What is worldbuilding?</h3><p>这是一个在较高维度对游戏世界的虚构历史及设定进行概念化的过程。</p><p>这一过程其实沿袭自小说写作，特别是科幻或奇幻小说家们通常会构建用于详细描述背景故事、传说、人物关系的“圣经”。</p><p>在世界观文档中可以描述星球的其后、游戏事件之前所发生的的详细的政治历史，甚至是一些平凡的细节，比如每个人早上的起床时间，或是主角的母亲喜欢吃什么样的晚餐。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220501224225.png" alt="map of &quot;Dunwall&quot;(https://dishonored.fandom.com/wiki/Dunwall), the fictional city featured in Dishonored (2012) by Arkane Studios; strongly inspired by London"></p><h3 id="Worldbuilding-for-games"><a href="#Worldbuilding-for-games" class="headerlink" title="Worldbuilding for games"></a>Worldbuilding for games</h3><h4 id="Avoid-premature-worldbuilding"><a href="#Avoid-premature-worldbuilding" class="headerlink" title="Avoid premature worldbuilding"></a>Avoid premature worldbuilding</h4><p>从关卡设计，而不是从叙事设计的角度出发，要避免过早进行世界构建。世界构建也是一项工作，但是如果做得太早，那么只是非生产性的精力浪费。在最开始的时候只构建必须的部分。</p><p>在整个 pre-production 制作过程中，游戏世界的形状和内容可能会发生巨大改变。如果一开始就太早地囿于细节，那么这部分的工作很可能会被浪费。想象一下你写了 10 页关于房子历史的文档，但最终房子关卡被项目砍了。如果写了 20 页关于怪物及其文化的文档，但随后怪物都被替换为了制式的人形 NPC。不要陷入细节中，这样可以让自己免于被砍的失望，也可以让项目保持灵活。</p><p>虽然世界构建有趣也有用，但对于新手而言，这个过程通常会分散对于基本核心工作的注意力，即用角色和动作来讲述引人入胜的故事。谨记，人们所喜欢的史诗奇幻、科幻和超级英雄的世界是由数千名经验丰富的专业人士花费多年构建，并在无数次迭代中有丰厚资金支持。当我们孤身工作时，少给自己挖坑。</p><h4 id="Embrace-functional-worldbuilding"><a href="#Embrace-functional-worldbuilding" class="headerlink" title="Embrace functional worldbuilding"></a>Embrace functional worldbuilding</h4><p>克林特·霍金（Clint Hocking）创造了 <a href="https://clicknothing.typepad.com/click_nothing/2007/10/ludonarrative-d.html">ludonarrative dissonance</a> 来描述当玩家的表现（“ludo”）和设计师的预期故事（“narrative”）不合拍（“dissonance”）时的情况</p><p>但其实大部分玩家对于这种漏洞或冲突是很包容的（或是不在乎）。</p><p>所以对于游戏叙事而言，这本书中更偏爱所谓的功能性世界构建：故事是用于解决游戏中的问题和消除不连贯性的。</p><ul><li>设计问题：玩家“穿越重复的走廊和射击广场” vs. “套利外星人入侵后的巨大地下军事综合体”</li><li>技术问题：怪物“因为寻路 AI 坏了所以无法在水中游弋” vs. “怕水”</li></ul><h4 id="Minimal-worldbuilding"><a href="#Minimal-worldbuilding" class="headerlink" title="Minimal worldbuilding"></a>Minimal worldbuilding</h4><p>从最重要，不可缺少的部分开始构建，以建立关卡设定以及支撑体验目标。</p><p>建立最基本的关卡需要回答的问题：</p><ul><li>Past<ul><li>谁创造了这个地方（为什么？玩家如何知道）</li></ul></li><li>Present<ul><li>现在谁在这里活动（为什么？玩家怎么知道）</li></ul></li><li>Future<ul><li>玩家将以什么方式影响这个地方（为什么？玩家怎么知道过去发生了什么？这里的居民会作何反应）</li></ul></li></ul><p>以下是一个动作游戏关卡的最简故事：</p><ol><li>谁创造了这个地方——一个人类家庭建造了一个小木屋<ul><li>玩家怎么知道的<ul><li>看起来就是一个以人类居住习惯建造而成的小木屋，并且里面有人类家具和多张床</li></ul></li></ul></li><li>现在谁住这里——一些吃掉了人的怪兽<ul><li>玩家怎么知道<ul><li>里面有怪物，有上了年头的尸骨，没有活人</li></ul></li></ul></li><li>玩家如何影响这个地方——玩家可以杀死怪物<ul><li>玩家怎么知道<ul><li>怪物是敌对势力，会在其可见范围内攻击玩家</li></ul></li></ul></li></ol><p>即使是这样的简短故事在未来也拥有巨大的叙事潜力。什么类型的木屋？多大的家庭？为什么他们挑了这个地方定居？为什么怪物攻击人类？有没有不杀掉怪物来解决这个问题的办法？“家庭 vs. 怪物”的主题如何在关卡的其余部分或是游戏其他部分来引起共鸣？</p><hr><h3 id="Comprehensive-worldbuilding"><a href="#Comprehensive-worldbuilding" class="headerlink" title="Comprehensive worldbuilding"></a>Comprehensive worldbuilding</h3><p>对于一个大型/长期项目而言，世界观的构建就显得重要许多。世界观圣经通常由三种世界设计文档构成：地图（maps），时间线（timelines），笔记（notes）。</p><p>可以从<a href="https://book.leveldesignbook.com/appendix/tools">工具列表</a>中寻找用于维护设计文档的工具，如个人 wiki 或是笔记库。</p><h4 id="Maps"><a href="#Maps" class="headerlink" title="Maps"></a>Maps</h4><p>绘制一个不仅仅只是有可游玩区域的游戏世界地图。关卡与这个更广阔世界或宇宙的关系是什么？地图制作在虚构小说写作中非常常见，对于关卡设计师而言，地图也是最直观有效的世界构建工具。</p><p>最简单的让玩家参与的方式就是合理性。如果你刚开始学世界构建，试着从熟悉的，类似地球的东西开始入手。</p><h5 id="Terrain-climate-map"><a href="#Terrain-climate-map" class="headerlink" title="Terrain/ climate map"></a>Terrain/ climate map</h5><p>先绘制地形/气候图。为了构建像地球一样的合理性，从一些基本的地球科学原则开始：</p><ol><li>绘制大洲。模拟<a href="https://en.wikipedia.org/wiki/Continental_drift">大陆漂移</a> 并确保它们能拼在一起。</li><li>画出风和维度。<a href="https://en.wikipedia.org/wiki/Prevailing_winds">盛行风</a>随维度变化，并与陆地相互作用。</li><li>画出山和海。<a href="https://en.wikipedia.org/wiki/Mountain_formation">山脉</a>沿着断层线或是火山形成。<a href="https://en.wikipedia.org/wiki/River">河流</a>一般从山顶或湖泊流向大海。</li><li>标记气候。赤道更热，两极更冷。山脉可以阻挡/困住降雨。气候潮湿，还是刮风？下雨？暴风雨？</li></ol><p>更多有关设计地形/生物群落的信息，看<a href="https://book.leveldesignbook.com/process/blockout/massing/landscape">这里</a>。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220501233837.png" alt="example worldbuilding climate map, from &quot;Growing Your Iceberg&quot; by N. K. Jemisin (https://nkjemisin.com/2015/08/worldbuilding-101/)"></p><p>一旦有了世界的坚实基础，就可以通过夸大/极端化某些方面让其变得独特/奇幻。</p><p>在上面的示例地图中，作者 N.K. 杰米辛创造了一个世界，两个大陆略高于赤道。 随后杰米辛将目光聚焦在了两大洲之间的一段高能量赤道海域，并将其放大为一条名为“眼泪之海”的“地狱走廊”，沿岸生长着珍贵的“怒木”树。 虽然一个不断遭受海啸困扰的地区生长着魔法树木本身是不可信的，但当这样的设定融入一个更平凡的世界时，它会感觉更加合理和特别。</p><h5 id="Political-maps"><a href="#Political-maps" class="headerlink" title="Political  maps"></a>Political  maps</h5><p>在构建完自然景观之后，就可以开始构建人文景观了。人们住在哪里，为什么住在那里？对于人们来说什么是重要的东西？</p><p>在设计社会时，作者 N. K. Jemisin 强烈推荐学习一些基本的<a href="https://en.wikipedia.org/wiki/Sociology">社会学知识</a>并进行研究——并避免依赖对现有现实世界中的文化的隐晦刻板印象。</p><p>现实世界中存在的一些政治冲突和紧张氛围可能也会成为让你的世界更有趣的原因：边界争夺，区域命名，政治归属。</p><ul><li>定义地图制作者，他们是谁，制作地图的动机是什么？他们与所绘制地区的关系是什么？</li><li>对于同一个地区从不同角度绘制多种地图。同一地区 100 年前什么样，500 年前什么样？不同特征或背景的人在绘制同一地区时会不会有所不同，或是用他们单独的名字？世界中的模糊和冲突点是什么？一张“错误”的地图可能比起一张精确的地图更加有趣。</li><li>绘制没有边界和地标的非几何地图。一个城市的“社会地图”会是什么样呢？经济地图？情绪地图？</li><li>将一些区域留白。世界上的每个角落并不是在一开始都与每个人都相关的，没有神秘感，就不能驱使玩家探索和冒险。</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220501235206.png" alt="uncertainty is natural; a not-very-helpful in-game player map for mission &quot;The Sword&quot; in Thief: The Dark Project (1998)"></p><h4 id="Timelines"><a href="#Timelines" class="headerlink" title="Timelines"></a>Timelines</h4><p>构建游戏世界的历史时间线，并辅以简短标记。</p><p>这个地区或地方的历史是什么？人们发生了怎样的变化？历史和地理一样，也有浓厚政治色彩，会根据编写历史的人的立场和视角而改变。构建历史时，必须考虑历史学家及其背景，他们写给谁看，最重要的是，他们夸大了什么，隐瞒了什么？</p><p>目标并不是构建权威的史实，思考一下每一段历史所隐含的宏大主题或想法是什么。</p><p>（来自 Heaven’s Vault? 的时间线例子）</p><ul><li>定义历史学家。他们是从何时何地开始写作的？他们的时间和地点将如何影响他们的感知、记忆或所涉及的内容？</li><li>设计多个重叠的时间线。最好具有特定的相似性和矛盾性。</li><li>在每个时间轴上留下被遗忘的漏洞。想想历史学家忘记了什么或他们记错了什么。您在游戏中的部分体验可能涉及改写历史、填补这些空白，或找出没人知道的历史新漏洞。</li></ul><h4 id="Notes"><a href="#Notes" class="headerlink" title="Notes"></a>Notes</h4><p>关卡设计师可能偏爱可视化文档，但叙事设计师可能更依赖于以指引卡，私人 wiki 或其他组织过的文字性笔记，可能包括：</p><ul><li>人物传记、日常生活、家史</li><li>位置描述、旅游指南、地质或生态调查</li><li>文化入门、宗教经典、地方历史</li><li>世界内的书籍、小册子、演讲</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220502000050.png" alt="worldbuilding docs / concept art for Half-Life 2 (2004) / Episode 3; short story by Marc Laidlaw, concept art by Andrea Wicklund"></p><hr><h3 id="Examples-of-worldbuilding"><a href="#Examples-of-worldbuilding" class="headerlink" title="Examples of worldbuilding"></a>Examples of worldbuilding</h3><h4 id="The-Witness-2016"><a href="#The-Witness-2016" class="headerlink" title="The Witness (2016)"></a>The Witness (2016)</h4><p>Thekla Studio 花费六百万美刀，七年时间来构建了这个第一人称解密探险游戏的世界。</p><p><a href="https://www.fletcher.studio/blog/2017/5/26/the-witness-designing-video-game-environments">Fletcher 继续接手了这个世界的重新设计</a></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220502000423.png" alt="screenshot of the middle island area from the final released version of The Witness (2016) by Thekla Studios"></p><p>后面还有几段详细的设计过程没有写在本文中，引述自<a href="https://www.fletcher.studio/blog/2017/5/26/the-witness-designing-video-game-environments">“The Witness: Designing Video Game Environments” by Fletcher Studio, 26 May 2017</a>。有需要可以到原文中查看。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220502000656.png" alt="aerial ecological collage study conducted by architecture firm Fletcher Studio in 2011 for The Witness (https://www.fletcher.studio/blog/2017/5/26/the-witness-designing-video-game-environments)"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220502000715.png" alt="geological collage study conducted by Fletcher Studio in 2011 for The Witness (https://www.fletcher.studio/blog/2017/5/26/the-witness-designing-video-game-environments)"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220502000737.png" alt="timeline of the three fictional civilization that inhabited the island in The Witness, worldbuilding by Fletcher Studio (https://www.fletcher.studio/blog/2017/5/26/the-witness-designing-video-game-environments)"></p><hr><h3 id="To-review…"><a href="#To-review…" class="headerlink" title="To review…"></a>To review…</h3><ul><li>世界构建是关于构建整个游戏世界的历史以及概念设计的过程<ul><li>游戏中的世界构建既可能是面向开发者的（设计文档），也可能是面向玩家的（故事）</li><li>对于动作游戏的关卡设计，不要太早地做太多有关世界设计的工作。更改世界观来契合关卡要容易得多</li></ul></li><li>最小世界构建：谁建造了这个地方，谁现在住在这里，玩家在这里能干什么？对于大多数关卡，简单的答案足矣</li><li>详尽世界构建：构建地图，时间线，笔记。只有当项目足够大或是以团队方式推进的时候才需要这么做</li></ul><hr><h3 id="Further-reading-sources"><a href="#Further-reading-sources" class="headerlink" title="Further reading/ sources"></a>Further reading/ sources</h3><ul><li><p>  <a href="https://nkjemisin.com/2015/08/worldbuilding-101/"><strong><em>“Worldbuilding 101: Growing Your Iceberg”</em></strong></a> by <a href="https://nkjemisin.com/about/">N.K. Jemisin</a>, for Writer’s Digest Online Workshop 2015 is our recommended general introduction to worldbuilding. Much of the material on this page is paraphrased from Jemisin’s excellent talk.</p></li><li><p>  <a href="https://researchportal.port.ac.uk/portal/en/theses/story-as-a-function-of-gameplay-in-first-person-shooters-and-an-analysis-of-fps-diegetic-content-19982007(ae0dcf2e-43a0-4549-973f-340c88ba4815).html"><strong><em>“Story as a function of gameplay in First Person Shooters and an analysis of FPS diegetic content 1998-2007”</em></strong></a> by Dan Pinchbeck. Useful overview of academic theories applied to action game design, with focus on Gibson’s affordance, suzjet / fabula, Barthes’ functions and indices, the academic basis of this book’s stance on functional worldbuilding.</p></li><li><p>  <a href="http://twitch.tv/handeyesociety"><strong><em>“Collaborative Critical World-building in 30 Minutes or Less”</em></strong></a> by <a href="https://kaelan.online/">Kaelan Doyle Myerscough</a>, for <a href="https://www.handeyesociety.com/event/wordplay2020/">WordPlay 2020</a> explores alternative methods for worldbuilding, especially in groups.</p></li><li><p>  <a href="https://emshort.blog/2018/03/06/books-on-worldbuilding/"><strong><em>“Books on Worldbuilding”</em></strong></a> (2018) by <a href="https://emshort.blog/">Emily Short</a> is a great list of worldbuilding books and resources, along with Short’s insightful commentary on applying the methods to game narrative.</p></li><li><p>  <a href="https://www.game-cities.com/virtual-cities"><strong>“Virtual Cities: An Atlas and Exploration of Video Game Cities”</strong></a> (2020) by urban planner <a href="https://www.game-cities.com/">Konstantinos Dimopoulos</a> is a book that analyzes the urban worldbuilding in 45 different virtual cities, with a mostly Western / European urban focus.</p></li></ul><hr><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>正如文中所提到的一样，这里所涉及的世界构建，特别是详尽世界构建可能绝大部分情况下都用不到？但是在构建关卡过程中如果有与之契合的世界观架构肯定是能够更好地进行设计的。只是这种能够将一个概念“一以贯之”的团队，恐怕屈指可数（希望自己有一天也能效力于这样的团队哈哈）。</p><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/04/28/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-LevelDesign </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Level Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220430 - Level Design Book - BOOK 1. PROCESS - Pre-production - Research</title>
      <link href="2022/04/30/20220430-leveldesignbook-pre-production-research/"/>
      <url>2022/04/30/20220430-leveldesignbook-pre-production-research/</url>
      
        <content type="html"><![CDATA[<h2 id="Pre-production-Research"><a href="#Pre-production-Research" class="headerlink" title="Pre-production-Research"></a>Pre-production-Research</h2><ul><li><p><a href="https://book.leveldesignbook.com/process/preproduction/research">原文链接</a></p></li><li><p><a href="https://medill-east.github.io/2022/04/28/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></p></li></ul><blockquote><p>如何学习、分析、拆解其他的关卡/真实世界的参照</p></blockquote><h3 id="Why-do-research"><a href="#Why-do-research" class="headerlink" title="Why do research?"></a>Why do research?</h3><ul><li>设计并不是孤立存在的，有其历史，有其发展，也必然会有其依托。</li><li>有一群参考可以启发并帮助你开始设计。</li><li>收集参考，拆解细节，学习架构。并且可以自己构建一个由许多参考图像共同构建的“通用模式”（类似归纳总结）。</li></ul><p>原文中也提供了可用于以上过程的 <a href="https://book.leveldesignbook.com/appendix/tools#2d-art-tools">2D 美术工具列表</a>。</p><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p>设计并非凭空想象，想要把人画好，就要大量观察人；想绘制地标，就多看地标。没有调查，就没有设计依凭。（也是<a href="https://www.gcores.com/radios/101694">张兆弓老师所讲过的成长三步</a>中的第一步，观察）</p><p>参考的意义所在：</p><ul><li>为了创新，就要了解现有的东西，然后打破常规</li><li>为了创造奇怪的感觉，就需要先创造常规的东西，而后打破常规（有点像另一篇关卡设计文章中所讲的<a href="https://www.worldofleveldesign.com/categories/game_environments_design/silhouette-environment-design-basics.php">如何创造多样化的剪影环境设计</a>）</li></ul><h3 id="Real-world-reference"><a href="#Real-world-reference" class="headerlink" title="Real world reference"></a>Real world reference</h3><p>如果真实感和位置合理性（sense-of-place）对项目很重要，那么就要在 <a href="https://book.leveldesignbook.com/process/layout">布局</a> or <a href="https://book.leveldesignbook.com/process/blockout">白模搭建</a> 前充分调研。</p><p>真实世界调研的注意事项：</p><ul><li>（当没有发生世界灾难时）亲临现场（哈哈哈哈）</li><li>通过<a href="https://www.google.com/maps/@35.5940327,139.744906,3a,90y,62.41h,87.97t/data=!3m7!1e1!3m5!1sAF1QipOL0pvY1l6N5XUyeMzQhvP_uNACjyE6iGb2AfK5!2e10!3e12!7i10000!8i5000?hl=zh-Hans">谷歌街景</a>来虚拟造访</li><li>对于一些著名建筑或景观，可以试着在政府/建筑归档中找找蓝图或者建造计划，甚至可以在 <a href="https://sketchfab.com/">SketchFab</a> 上找找有没有 3D 扫描的模型。</li></ul><p>接下来便可以开始：</p><ul><li>创造一个永远不会出现在游戏中的原型</li><li>把布局画出来，或是搭建白模关卡，这时关注还原度，先不考虑游戏性。观察参照物本身，而不是你所想象的样子。</li></ul><p>这种类型的二次创作经验其实不仅仅意味着观察，它也会迫使你来回答关于架构本身以及一些你可能从未想过的问题。</p><p>你并不会用这个布局或是白模，他在之后它们可以让你实际的布局或白模变得更好。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220430113453.png" alt="recreating an authentic British village in Untitled Goose Game; from &quot;Google Maps, Not Greyboxes: Digital Location Scouting for Untitled Goose Game&quot; for GDC 2021 by Jake Strasser, https://www.youtube.com/watch?v=cCsMz5tUXmc"></p><h3 id="In-game-reference"><a href="#In-game-reference" class="headerlink" title="In-game reference"></a>In-game reference</h3><p>比如说你想建造一个拥有隧道/地下通道的关卡。那调研就会涵盖学习其他具有这些元素的经典关卡。比如经典 CS 地图 de_dust，好消息是<a href="https://www.johnsto.co.uk/design/making-dust/">地图创作者 Dave Johnston 写过他是如何进行设计</a>的：</p><blockquote><p>My past mapping experience was mostly creating tight interiors rather than not vast exteriors, and so I was feeling very lost. Desperate, I shoe-horned a bend in the road leading to a downward slope, and at the end of it - an underground cavern.<br>It didn’t work, of course. While the CT spawn area was light and airy, this giant room was gloomy, boxy and felt dead compared to the sunny exterior I’d already made. Observing it also lacked any gameplay potential, I swiftly deleted it. Dust would be an outdoor map.<br>[…] The shallow decline into the underpass is perhaps one of my favourite aspects, both aesthetically and as a player who spent many hours armed with a Steyr Scout at the crest popping off opponents’ heads.</p></blockquote><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220430114506.png" alt="underpass in de_dust by Dave Johnston for Counter-Strike 1.6"></p><p>他的话提供了一些思路：避免建造阴暗、像洞穴一样和死气沉沉的东西。把现有的长长的，阳光明媚的缓坡，通向未知环境的内部隧道和一开始的不成熟想法比对一下，你会发现这种<a href="https://book.leveldesignbook.com/process/combat/balance">平衡</a>创造出了一个危险的，具有微妙垂直度以及远处视野的狙击小巷。</p><p>这里的关键不是学习 de_dust 本身，让我们关注一下这个调研过程：</p><ol><li>我想知道更多关于 de_dust 地下通道的内容</li><li>我搜索了 <code>de_dust underpass</code></li><li>我阅读了设计师关于创造这个地下通道的原因和心路历程</li><li>从结果而言，我现在注意到了一些原来我没有关注的内容</li></ol><p>其他学习一个参考设计的方法：</p><ul><li>游玩关卡，自己分析，做笔记或是绘制草图</li><li>搜索网站、粉丝社群、论坛，看看其他人对此有何评论</li><li>在视频网站上搜索 gameplay 视频，看其他人是怎么游玩的</li><li>询问其他人对此设计的想法以及关注点</li></ul><hr><h3 id="Breakdown"><a href="#Breakdown" class="headerlink" title="Breakdown"></a>Breakdown</h3><p>最直接的拆解方式就是用关卡设计器或 3D 查看器进入关卡，飞来飞去，好好研究。</p><blockquote><p>注意：<br>有时候可以解包关卡文件或者下载翻录的地图几何图形，常用网站有 <a href="https://www.models-resource.com/">Models Resource</a> 或者 <a href="noclip.website">noclip.website</a>。只可以出于个人教育目的这么做，也不要重新发布或是用这些作品作为自己的作品。</p></blockquote><p>但大多数情况下，你都没法拿到地图源文件，这时候就需要利用利用照片或是截图来对其进行绘画分解。</p><p>先把截图导入你熟悉的 <a href="https://book.leveldesignbook.com/appendix/tools#2d-art-tools">2D 美术工具</a>中，把主要的线条，图形，和物体高亮。用相同的颜色来标记重复出现的部分，注意分层堆叠（tiered stacks）和对称。</p><p>比如下面的布鲁克林大桥的绘画分解，上半部分有两个尖尖的哥特式拱门，每个垂直部分都沿着高度进行了严格的切分（with strong trim segmenting each vertical division along its height）；结构的其余部分是一些四四方方的米色砖块。并且具有明显的左右对称，这意味着可以先绘图分解其中一侧，然后复制粘贴另一侧来节省时间。对于现实世界参考，还可以看设计图来更好理解形状和比例。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220430120808.png" alt="example paintover breakdown of a Brooklyn Bridge tower, with color blocks highlighting symmetry and repetition"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220430120830.png" alt="example concept art breakdown by Lea Kronenberger; concept art by Chong Fei Giap, via Beyond Extent, https://www.beyondextent.com/articles/balancing-modularity-and-uniqueness-in-environment-art"></p><h3 id="Moodboard"><a href="#Moodboard" class="headerlink" title="Moodboard"></a>Moodboard</h3><p>深度拆解某一个不是那么有用，或是拥有大量参考时，更适合的一种方式是把它们放到一起来作为一个情绪板（moodboard）。情绪板由许多拥有相似物体，体验，或感受的不同参考和图片组成。图片，电影截图，游戏截图，示意图，概念美术，任何形式的媒体都可以放进去。当对他们整体进行学习时，你会发现他们的通用模式或是趋势。</p><p>情绪版可以帮助我们确定原本模糊的体验目标。如果想制作一个令人恐惧的关卡，那么，“恐惧”意味着什么？意思是令人不安的恐惧，还是某些地方“不对劲”？还是指怪诞的僵尸？那么是什么样的僵尸呢，缓慢的蹒跚僵尸，还是那种精神错乱乱跑的？</p><p>收集参考资料来比较分析时，更容易产生有利于实现体验目标的更加具体的想法。情绪版也可以帮助你向具有不同想法的其他团队成员来解释你的想法。</p><p>![example moodboard (screenshots from Hitman), blockout, and art pass for an “Italian Villa” project <a href="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220430121621.png">by Stavaas, via Polycount, https://polycount.com/discussion/171905/ue4-italian-villa-environment</a></p><h3 id="To-review…"><a href="#To-review…" class="headerlink" title="To review…"></a>To review…</h3><p>调研能够帮助你规划和构建关卡</p><ul><li>为了调研，先搜集一堆参考材料<ul><li>为了更好地研究参照物，对其进行仔细研究——小型的二次创作/依葫芦画瓢，关注于还原度，并仔细观察</li></ul></li><li>对于某个具体的参照物进行细节拆分，视觉剖析<ul><li>绘图拆解参考图像，添加标签和笔记</li></ul></li><li>在 moodboard 中寻找多个参考间的共性</li></ul><hr><h3 id="Now-what"><a href="#Now-what" class="headerlink" title="Now what?"></a>Now what?</h3><ul><li>  Use research to inform the <a href="https://book.leveldesignbook.com/process/layout"><strong>layout</strong></a> and <a href="https://book.leveldesignbook.com/process/blockout"><strong>blockout</strong></a>.</li></ul><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/04/28/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-LevelDesign </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Level Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220429 - Level Design Book - BOOK 1. PROCESS - Pre-production - Pacing</title>
      <link href="2022/04/29/20220429-leveldesignbook-pre-production-pacing/"/>
      <url>2022/04/29/20220429-leveldesignbook-pre-production-pacing/</url>
      
        <content type="html"><![CDATA[<h2 id="Pre-production-Pacing"><a href="#Pre-production-Pacing" class="headerlink" title="Pre-production-Pacing"></a>Pre-production-Pacing</h2><ul><li><p><a href="https://book.leveldesignbook.com/process/preproduction/pacing">原文链接</a></p></li><li><p><a href="https://medill-east.github.io/2022/04/28/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></p></li></ul><blockquote><p>在一个关卡中为玩家规划多种供其体验的活动和事件</p></blockquote><h3 id="What-is-pacing"><a href="#What-is-pacing" class="headerlink" title="What is pacing?"></a>What is pacing?</h3><p>Pacing 是一个关卡中通常所说的活动和时间的顺序和节奏。</p><p>单人游戏关卡倾向于设计更强烈的 pacing。如果玩家在关卡中对于发生了什么感到迷惑，或是不知道他们该干什么，那么这可能意味着该关卡的 pacing 有问题。</p><p>一个有效的 pacing 计划应该强调下满这些方面：</p><ul><li>Scope：在每个关卡中玩家能做什么</li><li>Hierarchy：关卡的哪一部分是最重要的</li><li>Causality：为什么先做这个后做这个（活动）</li><li>Information：何时告诉玩家什么内容</li><li>Intensity：玩家该在什么时候投入更多精力，而在什么时候休息和恢复</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220429193812.png" alt="用于 Journey （2012）的好看的 pacing/叙事表，取自 GDC 2013 &quot;Designing Journey&quot; 演讲"></p><h3 id="Beats-and-variation"><a href="#Beats-and-variation" class="headerlink" title="Beats and variation"></a>Beats and variation</h3><p>在你的关卡中会发生些什么？体验是由哪些丰富的时刻和地点来定义的？</p><p>Beat 是一个关卡中自成一体的一小部分。一个单独的区域，事件，活动，或是元素。</p><p>可以把这些 beats 比作一首音乐中的节拍。当这些节拍被一起演奏时就汇聚成了音符和旋律。它们可以被单独辨明理解，但也可以作为整体的一部分。为了让节拍更加有趣，音乐作曲家们用不同的方法来排列节拍来创造变奏：</p><ul><li>pulse：为节拍创建规律的模式，就像心跳一样。参见<a href="https://zh.wikipedia.org/wiki/%E8%8A%82%E6%8B%8D">音乐中的节拍</a>。<ul><li>如每一关都会有一个单独的出口</li></ul></li><li>accent/ stress：强调或加强某些节拍。<ul><li>比如有些时候难以找到/到达的出口</li></ul></li><li>rest：加入一些较弱的节拍或是沉默，可以使听众对于节拍再次敏感起来。<ul><li>如有时出口很容易可以找到/到达</li></ul></li><li>motif：一个短暂的重复街拍序列。<ul><li>如有时玩家在到达出口前会与 BOSS 作战</li></ul></li><li>variation：以不同的旋律、节奏来重复一系列的节拍。<ul><li>如某些关卡有多个出口</li></ul></li><li>syncopation：离谱（go off-beat）节拍，也是现代流行音乐的基础。<ul><li>如 BOSS 战进行到一半时，另一个 BOSS 出现了</li><li>或者是一个其后隐藏了怪物的假的出口</li><li>有时 BOSS 会摧毁出口，从而无处可逃了</li><li>玩家获得了创造出口的能力</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220429195236.png" alt="强调音乐理论中的不同节拍（metric、rhythmic、syncopation、anticipation）来自 Jack Perricone 的“Melody in Songwriting”"></p><h3 id="Set-pieces"><a href="#Set-pieces" class="headerlink" title="Set pieces"></a>Set pieces</h3><p>布景（set piece）是一种具有独特概念或是令人难忘的活动的特别制作的节拍。</p><p>该做法通常来自电影制作，具有高预算的电影项目通常会会制作具有特殊布景和复杂计划的昂贵场景——观众会记住的刺激场面。<br>比如，好莱坞动作大片本质上就是一系列布景——精心制作的大型战斗，追逐，或反抗死亡的特技（death defying stunts）。电影中的其余部分主要是以一种半连贯的方式来将这些布景连接起来，并在紧张的布景间让观众们“得以喘息”。大型的动作游戏的思路其实也差不多。<br>但是布景并不一定意味着大型的劲爆动作片段。喜剧的一大特点就是令人尴尬的场景，浪漫故事可能会重点强调第一次约会或是婚礼，戏剧可能更倾向于催人泪下的忏悔或是背板，而谋杀之谜会以侦探对于真相的讲述而告终。<br>游戏或电影中任何感觉到重要、令人难忘或是昂贵的场景，都可能是一个布景。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220429200316.png" alt="still from the memorable Lobby shootout set piece from the action film The Matrix (1999)"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220429200340.png" alt="still from the memorable dance scene set piece from the film Pulp Fiction (1994)"></p><p>游戏中的布景通常有以下特点：</p><ul><li>昂贵。这些布景通常需要许多特制的美术及动画资源，并且经过了大量迭代。无法轻易地重制或是用于它途，所以它们的生产本就有风险。</li><li>不可跳过。这些布景和项目的核心 pillars 和体验目标紧密相连。如果存在玩家有可能因为错过了它们而反过来怪游戏制作不好的风险，为什么还费心制作呢？</li><li>脚本意味很重，并且一定程度上是线性的，以确保可靠的体验。<ul><li>如果一个布景可以以三种不同的方式被游玩/播放，它就相当于三个布景，就有三倍的制作成本。</li></ul></li></ul><hr><p>这样貌似速度太慢了，也不利于学习，后面的会转为笔记的形式。</p><p>布景的关卡设计通常包括</p><ul><li>BOSS 战，大型谜题，或是大型编排——包含大量<a href="https://book.leveldesignbook.com/process/scripting">关卡脚本</a>的东西。</li><li>竞技场战斗，玩家在完成被困在一个大房间中，直到完成挑战</li><li><a href="https://book.leveldesignbook.com/process/env-art#hero-props-landmarks">地标性建筑</a></li></ul><p>一个项目中应该至少包含一个布景。</p><p>不要人心不足蛇吞象，再好的布景想法做不出来也是白搭。</p><h3 id="“Pile-of-beats”-approach"><a href="#“Pile-of-beats”-approach" class="headerlink" title="“Pile of beats” approach"></a>“Pile of beats” approach</h3><p>可用于基于战斗或是解密游戏的布景设计流程：</p><ol><li>构思，布局，白模搭建一个独立的战斗/谜题</li><li>对白模进行测试迭代，直到玩法被验证或被证实不可行</li><li>重复上述两步骤直到有足够原型（数十个）</li><li>基于需要来安排这些原型来构建节拍</li></ol><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220429205736.png" alt="screenshot of test chamber sign in Portal 1, with icons showing the different elements present in this puzzle"></p><h3 id="Teach-test-twist"><a href="#Teach-test-twist" class="headerlink" title="Teach, test, twist"></a>Teach, test, twist</h3><ul><li>Teach：教会玩家怎么玩</li><li>Test：稍微提升难度后，看看玩家到底会玩没有</li><li>Twist：可以开始魔改了</li></ul><p>“teach” and “test” beats in Test Chamber 10 of Portal 1, walkthrough let’s play video：</p><iframe width="805" height="453" src="https://www.youtube.com/embed/ZFwxnKY7CUo" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><h3 id="Critical-path"><a href="#Critical-path" class="headerlink" title="Critical path"></a>Critical path</h3><p>关键路径的几种形式：</p><ul><li>对于遭遇战，关键路径可能是击败敌人的理想策略</li><li>对于谜题，关键路径是可能最让人满意的解题思路</li><li>对于移动/跑酷游戏，关键路径是完成关卡的理想路线，更多内容参见<a href="https://book.leveldesignbook.com/process/layout/flow">Flow</a></li></ul><h3 id="Plotting-and-documentation"><a href="#Plotting-and-documentation" class="headerlink" title="Plotting and documentation"></a>Plotting and documentation</h3><p>Beats 不同的组织/可视化方式:</p><ul><li>Beat sheet<ul><li>文字形式的列表</li></ul></li><li>Flowchart<ul><li>可以展示 beats 之间关系</li></ul></li><li>intensity plot<ul><li>配有时间线和玩家行为的柱状图</li></ul></li></ul><h4 id="Beat-sheet"><a href="#Beat-sheet" class="headerlink" title="Beat sheet"></a>Beat sheet</h4><ul><li>一些可用于团队合作的在线黑板<ul><li><a href="https://trello.com/">Trello</a>, <a href="https://www.notion.so/">Notion</a>, <a href="https://miro.com/">Miro</a>, <a href="https://www.codecks.io/">Codecks</a></li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220429210719.png" alt="internal pinboard for planning The Last Of Us (2013) by Naughty Dog from V&amp;A Videogames (2018)"></p><p>其实感觉像是 user journey？</p><h4 id="Flowchart"><a href="#Flowchart" class="headerlink" title="Flowchart"></a>Flowchart</h4><ul><li>在线 flowchart 工具<ul><li><a href="https://miro.com/">Miro</a></li></ul></li></ul><p>一些制作原则：</p><ul><li>保持简洁<ul><li>少词</li><li>省略不重要的节拍</li></ul></li><li>尽可能让其往一个方向“流”</li><li>根据 beat 类型对其进行区别着色</li><li>把大的流程图划分为多个小流程图</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220429211028.png" alt="flowchart design documentation for a stealth boss encounter in Dishonored, by Dana Nightingale"></p><h4 id="Graph"><a href="#Graph" class="headerlink" title="Graph"></a>Graph</h4><p>为了在《半条命 2》和《Left 4 Dead》中调整关卡节奏，Valve 设计师将节拍分为四类：</p><ul><li>探索、四处走动和导航空间。 通常是一个关卡的开始和结束。</li><li>战斗，与敌人战斗。</li><li>Choreo，一些对话或编排的脚本序列。 通常安排在在战斗之前或之后。</li><li>解密，找到物品藏匿处，打开一扇门。 用于分隔战斗序列。</li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220429211405.png" alt="intensity graph for White Forest Inn encounter in Half-Life 2: Episode Two, GDC China 2014"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220429211519.png" alt="internal spreadsheet for Journey (2012) by thatgamecompany, from V&amp;A Videogames (2018)... note multiple rows for different experience goals, and the intensity bars at the top"></p><h3 id="Pacing-advice"><a href="#Pacing-advice" class="headerlink" title="Pacing advice"></a>Pacing advice</h3><ul><li>开始时舒缓而静谧</li><li>高低有致（松弛有度）</li><li>避免让最终 BOSS 或遭遇战成为强度最大的部分<ul><li>这里原文引了传统叙事理论中的 <a href="https://en.wikipedia.org/wiki/Three-act_structure">Three-Act Structure</a>, <a href="https://en.wikipedia.org/wiki/Dramatic_structur">Gustav Freytag’s Five-Act Structure</a>, and <a href="https://en.wikipedia.org/wiki/Poetics_(Aristotle)">Aristotle’s Poetics</a>。</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220429212124.png" alt="diagram of a typical five act plot structure by StoryboardThat... the vertical axis is better understood as &quot;suspense&quot; rather than &quot;intensity&quot;"></p><p>经典叙事理论当然有用，但也不要被其限制，有时候这样的手法会让人感觉过于老套。</p><h3 id="Multiplayer-pacing"><a href="#Multiplayer-pacing" class="headerlink" title="Multiplayer pacing"></a>Multiplayer pacing</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220429212519.png" alt="much of the pacing in multiplayer maps like League of Legends (left) or de_dust2 (right) depends heavily on travel time, layout, and flow"></p><p>竞技游戏中尤其要考虑平衡性问题，如双方到达相同地点的时间。如 CS 中需要让双方几乎在相同的时间到达阻塞点，详见<a href="https://zhuanlan.zhihu.com/p/24324182">这篇文章</a>。</p><h3 id="Open-world-nonlinear-pacing"><a href="#Open-world-nonlinear-pacing" class="headerlink" title="Open world / nonlinear pacing"></a>Open world / nonlinear pacing</h3><p>开放世界中的节奏需要通过关卡布局以及<a href="https://book.leveldesignbook.com/process/blockout/metrics">Metrics</a> 来把控。</p><p>随着与目标的距离越来越近，通常会有更多的阻碍物出现。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220429213122.png" alt="open world mission diagram with safe observation area in green and high security objective area in red, for Assassin&#39;s Creed, by Phillippe Bergeron for GDC 2016: &quot;Level Design Workshop: 360 Approach for Open World Mission Design&quot;"></p><h3 id="Against-pacing"><a href="#Against-pacing" class="headerlink" title="Against pacing"></a>Against pacing</h3><p>规划 pacing 当然有用，但只限于早期。随着项目推进，要更关注于做出来的东西本身。</p><h3 id="To-review…"><a href="#To-review…" class="headerlink" title="To review…"></a>To review…</h3><p>Pacing 是关卡中理想的活动/事件顺序或节奏。Beat 代表着一个活动/事件.</p><ul><li>单人游戏关卡通常有清晰地关键路径和大的布景。</li><li>对于带有战斗和解密系统的“遭遇式”游戏，先创建一堆 beats 再来组合的方法通常不错。记得 teach-test-twist。</li><li>多人游戏的 pacing 更多由关卡布局调控而不是由预制事件调控。</li><li>开放世界/非线性游戏的 pacing 需要更宽松的“区域”方法。越靠近核心区域，强度越高。</li></ul><p>Pacing 的设计文档可能包括：</p><ul><li>Beat sheet<ul><li>书面性的大纲，pacing 列表</li></ul></li><li>Flowchart<ul><li>带有箭头和逻辑标识的可视化大纲</li></ul></li><li>Graph<ul><li>根据玩家指标（如 intensity）绘制图形</li></ul></li></ul><p>这些文档在开发时通常会过时，按需更新或舍弃。</p><h3 id="Further-reading-on-pacing"><a href="#Further-reading-on-pacing" class="headerlink" title="Further reading on pacing"></a>Further reading on pacing</h3><ul><li>A lot of industry theory about pacing / plotting comes from film and TV screenwriting, where <a href="https://en.wikipedia.org/wiki/Robert_McKee">Robert McKee</a>‘s influential book <em>Story: Substance, Structure, Style and the Principles of Screenwriting</em> (1997) looms large. Critics argue that McKee’s methods result in stale formulaic storytelling, but for better or worse, it’s hard to deny his influence.</li><li>  The narrative design field has spent much more time thinking about pacing than level designers. Anytime an author talks about “plot”, they’re talking about pacing, and you can relate their insights to level design.</li></ul><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/04/28/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-LevelDesign </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Level Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>案例汇总</title>
      <link href="2022/04/28/index-showcase/"/>
      <url>2022/04/28/index-showcase/</url>
      
        <content type="html"><![CDATA[<h2 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h2><ul><li><a href="https://medill-east.github.io/2022/05/29/20220529-yinyangmeseenger-demo-showcase-analysis/">Yin Yang Messenger Game Demo 展示及分析</a></li><li><a href="https://haodongliao.itch.io/my-3d-platformer">Space Jumper Game Demo</a></li><li><a href="https://medill-east.github.io/2021/10/26/for-love-demo-showcase-and-analysis/">For Love Demo 展示及分析</a></li></ul><h2 id="策划案"><a href="#策划案" class="headerlink" title="策划案"></a>策划案</h2><ul><li><a href="https://medill-east.github.io/2021/07/26/shen-jiang-san-guo-first-recharge-plan/">神将三国首充策划案</a></li></ul><h2 id="体验报告"><a href="#体验报告" class="headerlink" title="体验报告"></a>体验报告</h2><ul><li><a href="https://medill-east.github.io/2021/07/26/shen-jiang-san-guo-game-experience-report/">神将三国游戏体验报告</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Blog-Index </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Index </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏拆解/分析/设计反思汇总</title>
      <link href="2022/04/28/index-gameanalysis/"/>
      <url>2022/04/28/index-gameanalysis/</url>
      
        <content type="html"><![CDATA[<h2 id="拆解分析"><a href="#拆解分析" class="headerlink" title="拆解分析"></a>拆解分析</h2><ul><li><a href="https://medill-east.github.io/2022/03/06/teardown-analysis-diabolo/">暗黑破坏神 3 拆解分析</a></li><li><a href="https://medill-east.github.io/2021/12/12/teardown-analysis-gunfire-reborn/">枪火重生 Teardown Analysis</a></li></ul><h2 id="目标体验及设计反思"><a href="#目标体验及设计反思" class="headerlink" title="目标体验及设计反思"></a>目标体验及设计反思</h2><ul><li><a href="https://medill-east.github.io/2021/11/16/thinking-of-the-florence/">Florence 目标体验及设计反思</a></li><li><a href="https://medill-east.github.io/2021/11/06/thinking-of-the-clash-heroes/">Clash Heroes 目标体验思考及设计反思</a></li><li><a href="https://medill-east.github.io/2021/07/26/analysis-of-league-of-legends-and-glory-of-kings-players-segmented/">英雄联盟与王者荣耀玩家分段分析</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Blog-Index </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Index </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>随想汇总</title>
      <link href="2022/04/28/index-thinking/"/>
      <url>2022/04/28/index-thinking/</url>
      
        <content type="html"><![CDATA[<h2 id="读后感"><a href="#读后感" class="headerlink" title="读后感"></a>读后感</h2><ul><li>《乌合之众》<ul><li><a href="https://medill-east.github.io/2022/06/04/20220604-after-reading-the-crowd/">群体语境下无归属玩家的个人叙事是否可能</a></li></ul></li></ul><h2 id="观影感"><a href="#观影感" class="headerlink" title="观影感"></a>观影感</h2><ul><li>《瞬息全宇宙》<ul><li><a href="https://medill-east.github.io/2022/05/21/20220521-everything-everywhere-all-at-once/">Meaningful Meaningless</a></li></ul></li></ul><h2 id="随想"><a href="#随想" class="headerlink" title="随想"></a>随想</h2><ul><li><a href="https://medill-east.github.io/2021/11/02/drinking-games/">喝酒游戏列举与思考</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Blog-Index </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Index </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20220428 - Level Design Book - BOOK 1. PROCESS - Pre-production</title>
      <link href="2022/04/28/20220428-leveldesignbook-pre-production/"/>
      <url>2022/04/28/20220428-leveldesignbook-pre-production/</url>
      
        <content type="html"><![CDATA[<h2 id="Pre-production"><a href="#Pre-production" class="headerlink" title="Pre-production"></a>Pre-production</h2><ul><li><p><a href="https://book.leveldesignbook.com/process/preproduction">原文链接</a></p></li><li><p><a href="https://medill-east.github.io/2022/04/28/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></p></li></ul><blockquote><p>如何用机制（mechanics），体验目标（experience goals）和支柱（pillars）来规划游戏关卡</p></blockquote><h3 id="What-is-pre-production"><a href="#What-is-pre-production" class="headerlink" title="What is pre-production?"></a>What is pre-production?</h3><blockquote><p>计划（plans）不那么重要，但是规划这件事本身（planning）很关键。——某个人</p></blockquote><p><strong>预生产</strong>是项目的早期阶段，在这一阶段你产生想法，并且试图来弄清这个项目到底是干嘛的。这一阶段需要回答一些宏观的设计问题：</p><ul><li>你在做的是什么<ul><li>玩家们能在这里干什么（机制，体验目标，节奏（pacing））</li><li>哪一部分是最重要的（支柱）</li></ul></li><li>你要如何来进行制作<ul><li>面对同一问题时，别人是怎么解决的（research，调研）</li><li>你需要多少时间，这可行吗？（scope，周期）</li></ul></li></ul><p>你对于这些问题的答案在项目推进过程中会发生改变，这没问题。</p><p>规划是有用的，但它并不神奇。直到你真的开始动手制作之前，你不会完全理解你所做的东西。</p><hr><h3 id="Project-planning"><a href="#Project-planning" class="headerlink" title="Project planning"></a>Project planning</h3><p>“规划一个关卡”具有多种形式。一些人在真正落实到某一个概念前先制作并测试小型的原型，你也可以先写下设计目标以及限制。</p><p>为了能实现团队合作的目标，你必须制定计划以及确保不同计划之间有充分的交流，否则你会对其他人失望，项目最终会以失败告终。</p><p>但对于一个小型的、单人的、爱好性质的项目，规划没有那么重要。制定一个简单的计划，然后享受整个即兴创作和发现过程中的兴奋与刺激吧。</p><h4 id="Minimal-Checklist"><a href="#Minimal-Checklist" class="headerlink" title="Minimal Checklist"></a>Minimal Checklist</h4><p>如果你能够回答以下几个基本问题，就足以开始一个小型的单人 jam 项目了：</p><ul><li><input disabled="" type="checkbox"> 电梯演讲<ul><li>在三句话之内，描述项目概念以及什么让这个项目变得有趣</li></ul></li><li><input disabled="" type="checkbox"> 工具<ul><li>你使用什么引擎或工具？</li><li>它们适合于这个项目吗？</li><li>从功能性而言，你有什么问题吗？</li></ul></li><li><input disabled="" type="checkbox"> 粗略划定周期<ul><li>这个项目将花费多长时间</li><li>多少个关卡</li><li>关卡大小（大关卡还是小关卡）</li><li>工作量（大关卡指的是多大的关卡）</li></ul></li></ul><h4 id="Recommended-checklist"><a href="#Recommended-checklist" class="headerlink" title="Recommended checklist"></a>Recommended checklist</h4><p>但实际上，除了以上基本问题外，你还应该能够回答以下设计相关问题：</p><ul><li><input disabled="" type="checkbox"> 支柱<ul><li>这个项目最重要的 2-3 个主题/特性是什么</li></ul></li><li><input disabled="" type="checkbox"> 目标体验<ul><li>你期望玩家们在面对每个关卡时有什么样的反应</li><li>或者说期待他们有什么样的情绪或行为</li></ul></li><li><input disabled="" type="checkbox"> 机制<ul><li>玩家最常经历或使用的活动/交互/技能是什么</li></ul></li><li><input disabled="" type="checkbox"> 资源列表<ul><li>对于每一个关卡，需要什么样的模型，纹理，音效</li><li>已经准备好这些资源了吗，还是需要某人来进行制作</li></ul></li></ul><h4 id="Full-checklist"><a href="#Full-checklist" class="headerlink" title="Full checklist"></a>Full checklist</h4><p>对于一个三人以上或是预期三个月以上的项目，还需要进一步回答下列问题：</p><ul><li><input disabled="" type="checkbox"> 节奏<ul><li>在每一个关卡具体发生了什么</li><li>为什么会发生这些</li><li>关卡之间怎么连接</li></ul></li><li><input disabled="" type="checkbox"> 调研<ul><li>关卡的设计启发/来源/参考是什么</li><li>团队成员之间对于同一件事是否有相同的理解和解释</li><li>以更大的文化或者产业视角，如何看待这个项目</li></ul></li><li><input disabled="" type="checkbox"> 世界观架构<ul><li>这些关卡所在的世界/宇宙是什么样子的</li><li>是谁创造了这些地方</li><li>什么样的逻辑/情绪指导着关卡建造和使用？（不是很能理解这里的 use 使用的指代，也许指的是游玩？）</li><li>详细的周期指定<ul><li>每一周，甚至更加具体的事件段，应该在做什么</li><li>在最终发版前，什么样的特性/关卡是锦上添花，有了更好，但是却可以被砍掉的</li><li>这一过程实际非常复杂，一些商业化工作室甚至聘请一个或多个制作人来主要负责周期</li></ul></li></ul></li></ul><h3 id="Mechanics"><a href="#Mechanics" class="headerlink" title="Mechanics"></a>Mechanics</h3><p>游戏机制指的是在游戏中任何重复出现的活动，系统或策略，基本是玩家经常进行或使用的任何行为。核心机制是一个游戏最常被使用和基础的动作或是系统，而不太频繁的活动可被称为次要机制。</p><blockquote><p>何为“机制（mechanic）”有诸多讨论，本书中融合了各家意见。如果想详细了解机制之争，可以<a href="https://en.wikipedia.org/wiki/Game_mechanics">看这里</a>。</p></blockquote><p>一些讨论游戏机制的例子：</p><ul><li>超级马里奥 64 的游戏机制由在平台间奔跑跳跃以到达出口的核心机制组成。一些马里奥 64 的关卡也含有通过撞击砖块来触发的隐藏快捷通道等次要机制。</li><li>Doom 的核心机制包括奔跑和射击，几乎没有或者只含有少量的跳跃。有时玩家能够引诱怪物们互相攻击，这是一种被称为内斗（in-fighting）的次要机制。</li><li>《神偷：暗黑计划 (Thief: The Dark Project)》是一款关于避免直接冲突的潜行游戏，其核心机制是响亮、快速的脚步声会吸引守卫。和马里奥和 Doom 相反，该游戏不鼓励快速移动，奔跑也是一个次要机制。</li></ul><p>以上的三款游戏在某种程度上是类似的——都是 3D 动作游戏，都需要在不死亡的前提下到达出口。然而，它们也拥有不同于彼此的规则和游戏机制，而这些其实意味着不同的关卡设计方法。若是使用制作马里奥风格的平台跳跃关卡手法来制作 Doom 关卡可能会让其非常难，而使用制作 Doom 的关卡手法来制作神偷的关卡也会使其难得难以想象。</p><p>不要为了这些品类而设计，不要限于熟悉的模式和惯例中。要为了实际存在的游戏而进行设计，感受游戏本身。如果你是在为一个已经存在的游戏来制作 mod，至少先玩这个游戏几个小时，也玩玩其他社区作品。看看 YouTube 上的游玩视频，并注意其他玩家（应该指的是其他 modder？）如何结合不同的机制和游戏系统。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220428131527.png" alt="超级马里奥 64 游戏手册的某一页，其中详细描述了不同的动作和机制"></p><h4 id="What-if-you-haven’t-finalized-mechanics-yet"><a href="#What-if-you-haven’t-finalized-mechanics-yet" class="headerlink" title="What if you haven’t finalized mechanics yet?"></a>What if you haven’t finalized mechanics yet?</h4><p>不知道机制时，创建关卡是很难的。机制和关卡互相依存。不在关卡中测试就无法评估机制，而在确立机制前也没办法很好地评估一个关卡。</p><p>如果改变机制，你最终会做很多无用功，得到很多基于废弃机制的过时关卡。但如果没有建立足够的测试关卡来衡量机制的潜力，你最终可能会得到一个第一关后就变得无趣的无聊机制。</p><p>在游戏开发的整个过程中，你很可能会推翻或者重做关卡。你甚至可能需要重做同一关好几次。没关系，不要将这视作一种无用功，把每一个废弃的版本都视作宝贵的调研。这就是为何我们称之为游戏开发——开发是一个耗费时间的渐进过程。搞清楚什么是一个好的关卡和好的游戏是需要花费时间的。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220428143052.png" alt="大金刚（1981）的早期设计文档，其中展现了机制，控制和玩法流向。取自 Shigeru Miyamoto (from https://twitter.com/forestillusion/status/1443284433268666368/"></p><h4 id="Build-test-maps"><a href="#Build-test-maps" class="headerlink" title="Build test maps"></a>Build test maps</h4><p>作为规划过程的一部分，游戏设计师们经常需要制作简易的可玩地图——一种 blockout 风格的测试地图。这些简陋的关卡只限于开发者内部使用，并且通常不会在最终的公开版本中发布。</p><p>从我们的目的而言，这些地图基本不含任何的关卡设计，它们只是大的方形场地，填充着随机的物体和 NPC。</p><p>但这并不意味着这些地图没用。这些简单的用于测试的可玩地图对于测试游戏机制、物体表现以及游戏整体感觉是非常中啊哟的。</p><p>有关构建用于内部使用的测试地图的更多内容，可以<a href="https://book.leveldesignbook.com/process/blockout/metrics">看这里</a>。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/GodOfWar2014_CombatPrototype.gif" alt="在简单的测试地图中测试战神（2018）的战斗原型，来源为 https://80.lv/articles/evolution-of-god-of-war-from-2014-to-2018/"></p><h3 id="Experience-Goals"><a href="#Experience-Goals" class="headerlink" title="Experience Goals"></a>Experience Goals</h3><p>体验目标指的是让玩家在游玩过程中能够理解或经历的某种想法，感觉，或是活动。为了提出概念性的目标体验，可以试着补充下面的句子：“在这一关中，玩家应该【学会/感到/经历】”</p><ul><li>在这一关中，玩家应该…<ul><li>学会如何使用双跳能力（教程体验）</li></ul></li><li>在这一关中，玩家应该…<ul><li>感到脆弱，在到达安全屋后放松下来（情感体验）</li></ul></li><li>在这一关中，玩家应该<ul><li>躲避致命的陷阱并在最后解锁一条捷径。 （活动体验）</li></ul></li><li>在这一关中，玩家应该…<ul><li>感觉就像他们正在逃离中世纪的监狱。 （幻想体验）</li></ul></li></ul><h4 id="Advice-for-setting-goals"><a href="#Advice-for-setting-goals" class="headerlink" title="Advice for setting goals"></a>Advice for setting goals</h4><ul><li>要具体</li></ul><p>目标体验不必复杂或深刻，但明确而清晰的体验目标可以帮助你决定要构建的内容以及辨别哪些是不必要的。<br>比如，“玩家应该玩得高兴”，这是一个模糊的目标，这样的目标无法帮助你进行设计决策。玩家应该体会到什么类型的乐趣？轻松休闲的乐趣，还是一种深度参与的乐趣？<br>或者说，如果目标是“让玩家感到恐惧”，那么具体指的是什么类型的恐惧？有身体恐惧（body horror），存在恐惧（existential horror），对失败的恐惧，对拒绝的恐惧，中年危机等。</p><ul><li>从玩家角度思考</li></ul><p>体验目标应该避免过度抽象，试着从玩家对其进行思考。理想情况下，当玩家游玩这一关卡时，他们会有怎样的理解，或如何描述他们的感受呢？<br>比如说，“玩家应该享受非线性（non-linearity）”是一个大多数人难以把握或甚至都不会考虑到的抽象结构。这就不是一个有用的体验目标。这里所指的享受是什么意思，非线性又是什么意思呢？<br>想象一下在玩家游玩之后进行一场采访，关于这个关卡，你希望他们说些什么呢？如果他们说“感觉，很…非线性…”，你可能会觉得这是种侮辱。</p><ul><li>定义多重目标</li></ul><p>关卡通常都不止有一个体验目标。即使是一个简单直白的教程关卡，也可以从额外设定的某些叙事情节，幻想或情绪体验目标中受益。这些体验目标肯定不如教会玩家如何游玩来得重要，但它们仍然能引导设计决策。<br>比如，“玩家应该一次性面对五个敌人”是关卡中一个和战斗相关的机制目标。但是有太多的细节还有待确定。一次面对五个敌人应该是一种让玩家感到容易还是困难的体验？这一关卡该被设计在什么地方，是否需要为了可以容纳更多的敌人而设计更大的空间？</p><p>让我们尝试为其添加额外的体验设计目标：“玩家应该感到不知所措，但之后发现了一个强化道具”，“玩家应该觉得他们正在保护营地免受丧尸攻击”等等。这样就将足智多谋，防御，生存，和家园的主题引入了进来。营地的概念意味着应该有一个中等大小的户外场地，现在可以就具体的营地类型进行调研（军事营地？徒步旅行营地？冬季营地？），从而让规划更加具体。</p><h3 id="Pillars"><a href="#Pillars" class="headerlink" title="Pillars"></a>Pillars</h3><p>贯穿整个项目的最重要的目标体验就是支柱（pillars）——结构性地支撑和证明整个设计的最重要的想法。设定 pillars 可以帮助团队在项目推进过程中有一个共同视野，并且免除那些并不直接服务于主要目标的“冗余”工作。<br>对于每一个关卡或地区，pillars 是一种帮助你概念化其短期体验目标的设计规划工具。你的关卡的每一个更小的体验目标或是玩法节奏都应该某种程度上服务于你的 pillars，并最终服务于更宏观的游戏体验。<br>为了便于这些大的设计目标在团队中进行沟通（原文用的 Internalize），用简短的短语或单词来为每个 pillar 命名。比如索尼圣莫尼卡的战神（2018）的内部设计 pillars 是战斗，父/子和探索：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220428221919.png" alt="战神（2018）的核心体验目标/pillars，由 SIE Santa Monica Studio 呈现"></p><p>因为这是一个具有高额预算的 3A 游戏，他们的体验目标也包括了像是“高光学【动作捕捉】保真度”这样的生产价值目标。<br>你可能在想，这个和角色动画有关的目标与关卡设计关系不大，但想想一个让动捕角色动画看起来很糟的关卡——谁应该对此负责来改变工作呢，关卡设计师还是动画师？<br>因为整个团第都已经同意将动捕动画作为具有高优先级的 pillar，这样的实现公示意味着关卡设计师也应该调增关卡以适应已有的动画。<br>如此，pillars 能够帮助我们来定义什么才是对整个项目而言重要的东西，从而使得整个开发过程中能够做出更加一致和连贯的决策。</p><hr><h3 id="Example-“Mask-of-the-Rose”"><a href="#Example-“Mask-of-the-Rose”" class="headerlink" title="Example: “Mask of the Rose”"></a>Example: “Mask of the Rose”</h3><p>Mask of the Rose 是一个由 Failbetter Games 制作的 2D 视觉小说/基于选择的叙事游戏。尽管它并不是一个具有 3D 关卡的射击游戏，它也有一些相似的 pre-production 需求：</p><blockquote><p>“在 Failbetter，当我们从预生产全面投入生产中时，游戏必须有一个合理紧凑的设定好的周期，必须建立用于生产不同类型内容的管线，并且有关游戏本质的问题都有相应的答案。<br>什么样的问题？在 Mask of the Rose 项目中，它们包括：<br>将使用什么引擎和中间件来制作游戏？<br>制作管线是什么样的，它是自动化的吗？<br>游戏中会有哪些【玩法系统】？是否已经对这些系统进行了充分的原型设计？<br>在游戏中会出现多少个角色？制作角色的美术流程是什么？玩家如何自定义主角？”<br>—— Stuart Young, <a href="https://www.failbettergames.com/news/leaving-pre-production-on-mask-of-the-rose">“Leaving Pre-Production on Mask of the Rose”</a>, 16 August 2021</p></blockquote><h3 id="Example-Dishonored-2-“Clockwork-Mansion”"><a href="#Example-Dishonored-2-“Clockwork-Mansion”" class="headerlink" title="Example: Dishonored 2, “Clockwork Mansion”"></a>Example: Dishonored 2, “Clockwork Mansion”</h3><p>Dishonored 是一个有关探索复杂地区的 3A 品质第一人称潜行动作 RPG 游戏系列。在 耻辱 2 中，有一个“发条大厦”关卡，其中的关卡结构会动态变化。</p><p>Arkane Studios 设计师 Dana Nightingale 构建了一个概念验证预生产原型：（原文括号中为 Twitter thread，不是很理解这里所代表的含义）</p><blockquote><p>“我在 2013 年初，早在该地图被获准加入游戏中之前就创立了这个概念验证原型。当时的想法介于“它好棒”和“我还是应该继续打磨”之间。确实如此，但在地图正式确定之前，仍有超过一年的时间。<br>但可以肯定的是，我能够让一堆方块移动变形为我想要的样子。如果使用真实几何来做是不可能的，这也是我制作这个原型的原因。<br>这个原型引入了房间的概念，这些房间像货物集装箱一样移动和嵌入不同地方，让整个地图的布局完全动态，并且没有使房间产生形变。很高兴我们没有走让房间形变的那个方向。<br>…<br>在对其他原型进行了将近一年的工作后，是时候重新审视这一关卡并最终对其进行验证了。我做了一个新的版本，其中曲折的房间更少了，但是更加强调“场景背后”的区域。”<br>—— <a href="https://twitter.com/DanaENight/status/1448582302855045124">Dana Nightingale (@DanaENight), 14 October 2021</a></p></blockquote><p>这个关卡在预生产阶段花费了 7 个月，在大约 18 个月后被纳入了最终的版本中。</p><iframe width="560" height="315" src="https://www.youtube.com/embed/-BgynKsHKUo" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><hr><h3 id="To-review…"><a href="#To-review…" class="headerlink" title="To review…"></a>To review…</h3><ul><li>机制是游戏中的重复系统和重复交互<ul><li>核心机制是出现频率最高的，次要机制偶尔会丰富更有经验的玩家的游戏体验</li></ul></li><li>体验目标是整个关卡与玩家有关的设计目标</li><li>Pillars 是整个游戏的主要设计目标。想让玩家从中学习、感受或理解什么？</li><li>多大程度上需要预生产的规划？这需要具体情况具体分析：<ul><li>小型的随意项目可以几乎不需要规划<ul><li>大型的长期项目可能需要一个大型的的内部 wiki</li><li>对于从来没有一起合作过的团队，预生产的规划可以帮助合作者们相互协调和信任</li></ul></li></ul></li><li>规划可以帮助你，但不要让其限制你。一旦已经进入项目中，根据需要来改变或者重新制定计划。</li></ul><h3 id="Now-what"><a href="#Now-what" class="headerlink" title="Now what?"></a>Now what?</h3><ul><li>Pre-production in more detail:<ul><li><a href="https://medill-east.github.io/2022/04/30/20220430-leveldesignbook-pre-production-research/"><strong>Research</strong></a> is vital for projects focusing on story or realism.</li><li>Single player projects require special attention to <a href="https://medill-east.github.io/2022/04/29/20220429-leveldesignbook-pre-production-pacing/"><strong>pacing</strong></a>.</li><li>Projects often start too big and must be <a href="https://medill-east.github.io/2022/05/02/20220502-leveldesignbook-pre-production-scope/"><strong>scoped</strong></a> down.</li><li>Big narrative projects benefit from <a href="https://medill-east.github.io/2022/05/01/20220501-leveldesignbook-pre-production-worldbuilding/"><strong>worldbuilding</strong></a>.</li></ul></li><li>Or you might move on to the <a href="https://book.leveldesignbook.com/process/layout"><strong>layout</strong></a> phase of level design.</li></ul><h3 id="Further-reading-and-resources"><a href="#Further-reading-and-resources" class="headerlink" title="Further reading and resources"></a>Further reading and resources</h3><ul><li><a href="https://www.youtube.com/watch?v=R75g3elj7y4"><strong>“A Series of First Steps - Overcoming the Digital Blank Page”</strong> by Seth Marinello</a> (GDC 2014)</li><li><a href="https://www.youtube.com/watch?v=CpOoTAVeEcU"><strong>“An Approach to Holistic Level Design”</strong> by Steve Lee</a> (GDC 2017)</li><li><a href="https://www.youtube.com/watch?v=kzQDVtysXjA"><strong>“Finding Duskers: Innovation Through Better Design Pillars”</strong> by Tim Keenan</a> (GDC 2017)</li><li><a href="https://www.playfulproductionprocess.com/"><strong>“A Playful Production Process”</strong></a> (2021) by Richard Lemarchand is an approachable textbook that introduces game production methods, ideal for late high school / university students.</li><li>  <a href="https://en.wikipedia.org/wiki/Pre-production">Pre-production (Wikipedia)</a> is a formalized process for film and music industries.</li></ul><hr><h2 id="Backlink"><a href="#Backlink" class="headerlink" title="Backlink"></a>Backlink</h2><ul><li><a href="https://medill-east.github.io/2022/04/28/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-LevelDesign </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Level Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Level Design Book 随译/笔记</title>
      <link href="2022/04/28/20220428-leveldesignbook-toc/"/>
      <url>2022/04/28/20220428-leveldesignbook-toc/</url>
      
        <content type="html"><![CDATA[<h1 id="Level-Design-Book-随译-笔记"><a href="#Level-Design-Book-随译-笔记" class="headerlink" title="Level Design Book 随译/笔记"></a>Level Design Book 随译/笔记</h1><h2 id="Why-Note"><a href="#Why-Note" class="headerlink" title="Why Note"></a>Why Note</h2><p>最近在学习关卡设计有关知识，对《Level Design Book》中相关章节进行随译/笔记，特此记录。</p><h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>以下基本信息引用自<a href="https://book.leveldesignbook.com/">官网</a>：</p><blockquote><p><strong>The Level Design Book</strong> gathers level design knowledge for 3D video games in an approachable, up-to-date, and critical way. It is for level designers of all experience levels and game engines.</p></blockquote><h2 id="Content"><a href="#Content" class="headerlink" title="Content"></a>Content</h2><h3 id="BOOK-1-PROCESS"><a href="#BOOK-1-PROCESS" class="headerlink" title="BOOK 1. PROCESS"></a>BOOK 1. PROCESS</h3><h4 id="Pre-production"><a href="#Pre-production" class="headerlink" title="Pre-production"></a>Pre-production</h4><ol><li><a href="https://medill-east.github.io/2022/04/28/20220428-leveldesignbook-pre-production/">20220428 - Level Design Book - BOOK 1. PROCESS - Pre-production</a></li><li><a href="https://medill-east.github.io/2022/04/29/20220429-leveldesignbook-pre-production-pacing/">20220429 - Level Design Book - BOOK 1. PROCESS - Pre-production - Pacing</a></li><li><a href="https://medill-east.github.io/2022/04/30/20220430-leveldesignbook-pre-production-research/">20220430 - Level Design Book - BOOK 1. PROCESS - Pre-production - Research</a></li><li><a href="https://medill-east.github.io/2022/05/01/20220501-leveldesignbook-pre-production-worldbuilding/">20220501 - Level Design Book - BOOK 1. PROCESS - Pre-production - Worldbuilding</a></li><li><a href="https://medill-east.github.io/2022/05/02/20220502-leveldesignbook-pre-production-scope/">20220502 - Level Design Book - BOOK 1. PROCESS - Pre-production - Scope</a></li></ol><h4 id="Combat"><a href="#Combat" class="headerlink" title="Combat"></a>Combat</h4><ol><li><a href="https://medill-east.github.io/2022/05/03/20220503-leveldesignbook-combat/">20220503 - Level Design Book - BOOK 1. PROCESS - Combat</a></li><li><a href="https://medill-east.github.io/2022/05/04/20220504-leveldesignbook-combat-enemydesign/">20220504 - Level Design Book - BOOK 1. PROCESS - Combat - Enemy Design</a></li><li><a href="https://medill-east.github.io/2022/05/05/20220505-leveldesignbook-combat-encounter/">20220505 - Level Design Book - BOOK 1. PROCESS - Combat - Encounter</a></li><li><a href="https://medill-east.github.io/2022/05/06/20220506-leveldesignbook-combat-balance/">20220506 - Level Design Book - BOOK 1. PROCESS - Combat - Balance</a></li></ol><h2 id="暂告段落"><a href="#暂告段落" class="headerlink" title="暂告段落"></a>暂告段落</h2><p>后面有些部分感觉并未写完。毕竟本“书”还处于不断填坑过程中，暂时打算等坑再填填再来继续随译/笔记。</p><p>至目前为止其实看下来更多是一个体系梳理的感觉，但要真正落到生产设计中，感觉还需要更精细化和深入的内容。后面可能会暂时转向关卡设计的另一本书。</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-LevelDesign </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Level Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习笔记汇总</title>
      <link href="2022/04/28/index-notes/"/>
      <url>2022/04/28/index-notes/</url>
      
        <content type="html"><![CDATA[<h2 id="游戏设计相关"><a href="#游戏设计相关" class="headerlink" title="游戏设计相关"></a>游戏设计相关</h2><ul><li><a href="https://medill-east.github.io/2022/05/29/20220529-theartofgamedesign-toc/">游戏设计艺术 摘抄/笔记</a></li><li><a href="https://medill-east.github.io/2022/06/01/20220601-gcores-playbeyondthegame/">机核 游戏理论系列播客笔记</a></li><li><a href="https://medill-east.github.io/2022/05/02/20220502-gdc2017-zelda/">【GDC】GDC2017——塞尔达：旷野之息的三角之力</a></li></ul><h2 id="游戏关卡设计相关"><a href="#游戏关卡设计相关" class="headerlink" title="游戏关卡设计相关"></a>游戏关卡设计相关</h2><ul><li><a href="https://medill-east.github.io/2022/04/28/20220428-leveldesignbook-toc/">Level Design Book 随译/笔记</a></li><li><a href="https://medill-east.github.io/2022/06/17/20220617-gdc-makecognitivemap/">【GDC】用构建认知地图的方式构建关卡 Layout</a></li><li><a href="https://medill-east.github.io/2022/06/19/20220619-gmtk-ittakestwo/">【GMTK】双人成行关卡设计师分享树之章的设计心得</a></li></ul><h2 id="游戏叙事设计相关"><a href="#游戏叙事设计相关" class="headerlink" title="游戏叙事设计相关"></a>游戏叙事设计相关</h2><ul><li><a href="https://medill-east.github.io/2022/06/22/20220622-gdc-yarnspinner/">【GDC】利用 Yarn Spinner 构建叙事类游戏</a></li></ul><h2 id="游戏引擎相关"><a href="#游戏引擎相关" class="headerlink" title="游戏引擎相关"></a>游戏引擎相关</h2><ul><li><a href="https://medill-east.github.io/2022/05/15/20220515-games104-toc/">GAMES104——现代游戏引擎：从入门到实践笔记</a></li></ul><h2 id="图形学相关"><a href="#图形学相关" class="headerlink" title="图形学相关"></a>图形学相关</h2><ul><li><a href="https://medill-east.github.io/2021/07/16/games101-introduction-to-mordern-computer-graphics/">GAMES101——现代计算机图形学入门笔记</a></li></ul><h2 id="心理学相关"><a href="#心理学相关" class="headerlink" title="心理学相关"></a>心理学相关</h2><ul><li><a href="https://medill-east.github.io/2022/05/07/20220507-comicjung-toc/">漫画荣格：内心深处结构的解析 摘抄/笔记</a></li></ul><h2 id="练字"><a href="#练字" class="headerlink" title="练字"></a>练字</h2><ul><li><a href="https://medill-east.github.io/2022/05/25/20220525-writing/">随便写写</a></li></ul><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul><li><a href="https://medill-east.github.io/2022/07/03/20220703-toolsoflife/">对《人生艰难，如何才能过得好一点》一文的摘录</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Blog-Index </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Index </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>暗黑破坏神 3 拆解分析</title>
      <link href="2022/03/06/teardown-analysis-diabolo/"/>
      <url>2022/03/06/teardown-analysis-diabolo/</url>
      
        <content type="html"><![CDATA[<h2 id="《-暗黑破坏神-3》-Teardown-Analysis"><a href="#《-暗黑破坏神-3》-Teardown-Analysis" class="headerlink" title="《 暗黑破坏神 3》 Teardown Analysis"></a>《 暗黑破坏神 3》 Teardown Analysis</h2><h3 id="游戏概况"><a href="#游戏概况" class="headerlink" title="游戏概况"></a>游戏概况</h3><ul><li>开发公司：暴雪</li><li>上线时间：2012 年 5 月 15 日</li><li>类型：RPG + PVE 刷宝</li><li>特色：<ul><li>多种职业+套装+技能组合可供选择</li><li>几乎无尽的难度可供挑战</li><li>鲜明的装备阶梯</li><li>不断变强的可能性（巅峰等级系统）</li><li>有趣的隐藏机制（藏宝秘窟、奶牛关等）</li></ul></li></ul><h3 id="游戏截图展示"><a href="#游戏截图展示" class="headerlink" title="游戏截图展示"></a>游戏截图展示</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/screenshot.jpg" style="zoom: 50%;" /><h3 id="Core-Loop-展示"><a href="#Core-Loop-展示" class="headerlink" title="Core Loop 展示"></a>Core Loop 展示</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/CoreLoopDiablo202203061208.jpeg"  /><p>这次的拆解分析会采用和上次稍不同的方式来进行。首先会从玩家视角出发对其需求进行分析，而后会从策划视角出发对一些拆解过程中所思所想的设计问题进行分析思考。</p><h3 id="玩家视角-需求分析"><a href="#玩家视角-需求分析" class="headerlink" title="玩家视角 - 需求分析"></a>玩家视角 - 需求分析</h3><p>从 Coreloop 中可以看出，玩家追求基本分为三大方面，即观看新剧情、角色能力提升，以及天梯排名提升。其中观看新剧情的需求主要是满级前的基础需求，而角色能力提升是满级后的进阶需求，最终的天梯排名提升算是玩家的最终需求，三种需求分别对应基础玩家，进阶玩家和顶级玩家。</p><h4 id="玩家基础需求-观看新剧情"><a href="#玩家基础需求-观看新剧情" class="headerlink" title="玩家基础需求 - 观看新剧情"></a>玩家基础需求 - 观看新剧情</h4><p>可以从 Coreloop 中看到，新剧情的解锁需要完成剧情任务。而剧情任务完成后一般可以获得经验奖励以及可能的普通装备奖励。这一阶段的基础需求完成后，玩家便会产生更高层级的角色能力提升需求。</p><h4 id="玩家进阶需求-角色能力提升"><a href="#玩家进阶需求-角色能力提升" class="headerlink" title="玩家进阶需求 - 角色能力提升"></a>玩家进阶需求 - 角色能力提升</h4><p>在主线剧情通关后，玩家等级基本会达到接近满级的水平，此时可以选择通过以下几种方式来升到满级：</p><ul><li>完成悬赏任务</li><li>到普通地图中杀怪</li><li>到秘境地图中杀怪</li></ul><p>而升到满级之后，玩家的技能和天赋也会全部解锁，此时算是正式开始了下一阶段，渴望提升角色能力。</p><p>可以从 Coreloop 中看到，玩家角色能力的提升有两大途径，即装备增强和角色增强，下面会分别对两种途径进行梳理。</p><h5 id="角色能力提升-装备增强"><a href="#角色能力提升-装备增强" class="headerlink" title="角色能力提升 - 装备增强"></a>角色能力提升 - 装备增强</h5><p>游戏中的装备分为次级(灰色)/高等(白色)/魔法(蓝色)/稀有(黄色)/传奇/ 5种，其中传奇为橙色，套装为绿色。不同装备带有不同的词缀以及数值。后文中会主要使用颜色对装备进行指代，普通装备包括了灰色，白色，蓝色和黄色装备。传奇装备包括了橙色和绿色装备。</p><ul><li>新普通装备</li></ul><p>从 Coreloop 中可以看到，新普通装备的获取可以通过以下途径：1. 完成剧情任务；2. 地图中击杀掉落；3. 血岩碎片抽取。<br>普通装备主要服务于满级前的阶段，属于过渡装备，所以其淘汰率很高，后期可能会有两种用途：1. 分解之后获取材料；2. 黄色品质装备可在卡奈模仿处消耗材料升级为同类传奇品质装备。</p><ul><li>新传奇装备</li></ul><p>如前所述，传奇装备包含了橙色传奇装备和绿色套装装备。不仅如此，传奇品质之上还有更高品质的远古传奇和太古传奇装备。传奇装备也是角色能力提升的核心。这里一并将剩余几个装备增强机制介绍后统一梳理玩家通过装备增强角色的思路。</p><ul><li><p>装备附魔（洗装备属性）<br>装备附魔是一种通过重置现有装备的其中一条属性来实现的装备增强方式，即所谓的“洗装备属性”。同一件装备只能洗一条属性，并且每一条原属性可洗出的属性类型是预设的（但数值随机）。</p></li><li><p>宝石镶嵌<br>宝石镶嵌是一种通过将宝石镶嵌到有孔装备中来达到增强装备目的的方式，不同的宝石镶嵌到不同部位中会有不同的效果。</p></li><li><p>卡奈魔方能力<br>卡奈魔方是游戏中的一种特殊道具，其获取需要通过在特定普通地图中完成特殊任务。最常用的卡奈魔方能力可能涉及：1. 属性萃取；2. 套装转换；3. 稀有物品升级。</p></li></ul><p><em>属性萃取</em>：传奇物品本身可能会带有特殊属性（橙字描述），但由于身上可装备物品的数量限制，很有可能出现想要 A 和 B 装备的特殊属性，但是只能装备一件装备的情况。可以通过卡奈魔方萃取 A 的特殊属性（A 在被萃取后会被毁坏）并装备该词条，此时相当于共同拥有了 A 和 B 两件装备的特殊属性。</p><p><em>套装转换</em>：游戏过程中很可能出现的情况是一个套装的相同部件重复爆出了，此时可以通过卡奈魔方的套装转换功能，通过消耗材料将该部件转换为同一套装下的其它部件（有可能还是会转换出相同部件）。</p><p><em>稀有物品升级</em>：该功能可以通过消耗材料对稀有物品进行品质升级。但因为消耗材料较多，所以并不是一种性价比很高的方式，玩家通常在缺少特定传奇装备情况下才会使用该功能来获取传奇物品。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220306232538.png" style="zoom: 33%;" /><p>玩家的装备增强大致分为两个路线：1. 基于套装的装备增强思路；2. 基于散件的装备增强思路。无论哪种路线，其装备获取和增强方式都是一样的：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Equip202203061235.jpeg"></p><p>这里主要关注新传奇装备。从图中可以看到，新传奇装备的获取可以通过以下途径：1. 地图中击杀掉落；2. 完成悬赏任务；3. 血岩碎片抽取。</p><ul><li><p>地图击杀掉落<br>如图所示，普通地图的爆率较低，玩家一般会选择通关秘境地图（以下简称小秘境）和宏伟秘境（以下简称大秘境）来获取新传奇装备。其中小秘境的怪物和普通怪物一样，会正常掉落物品，即玩家在通关小秘境过程中就可以有几率获取新传奇装备，在击杀小秘境最终 BOSS 也有较高几率获取新传奇装备。而大秘境的区别在于，其中除最终 BOSS 之外的怪物是不会掉落物品的，所以玩家只有成功击杀大秘境的最终 BOSS 才能有几率获取新传奇装备。</p></li><li><p>完成悬赏任务<br>玩家完成悬赏任务一般是为了获取特殊的悬赏材料用于卡奈魔方。完成悬赏任务虽然有几率获取新传奇装备，但因为其出货率不稳定，且不确定具体会拿到什么装备，所以一般玩家可能不会将悬赏任务作为获取新传奇装备的主要途径。除非是为了某些具有特殊出货率的装备，如完成第一章的悬赏任务有较高的几率获得降低一件套装所需件数效果的皇家华戒。</p></li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220306232622.png" style="zoom:50%;" /><ul><li>血岩碎片抽取<br>血岩碎片的获取方式有如下几种：1. 通关秘境（大或小均可）；2. 完成悬赏任务；3. 击杀血岩盗宝贼（小几率出现的特殊宝箱怪）。玩家可以通过花费血岩碎片抽取特定部位的装备，不同部位的抽取费用不同（武器（75）&gt;首饰（50）&gt;其他饰品（25））。该方式也是获取新传奇装备的常用方式之一。</li></ul><p>在获取到心仪装备后，玩家便可根据需要，使用装备附魔（洗装备属性），宝石镶嵌来对装备属性进行提升。</p><h5 id="角色能力提升-角色增强"><a href="#角色能力提升-角色增强" class="headerlink" title="角色能力提升 - 角色增强"></a>角色能力提升 - 角色增强</h5><p>角色增强主要包括了以下几个方面：1. 新技能/天赋的获取；2. 巅峰属性提升；3. 特殊能力提升。</p><p>其中新技能/天赋的获取需要依托于英雄等级，而玩家的技能和天赋搭配通常需要结合装备属性（如套装对某个技能有特殊加成情况下就会专门点出与之相关的技能与天赋）。</p><p>巅峰属性的提升依托于玩家的巅峰等级，巅峰等级与玩家账号绑定，其升级消耗的是角色满级之后所获得的经验值。巅峰等级每提升一级就可以获得一点巅峰属性。玩家可以根据自己的需求进行加点。其中部分属性是有加成上限的（50 点），但主属性的加点是没有上限的。这意味着只要能够不断提高巅峰等级，就能够不断增加主属性，实现角色增强的目的。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/peakattribute.jpg" style="zoom:50%;" /><p>角色增强的最后一部分和特殊能力有关。这里的特殊能力指的是通关宏伟秘境之后能够获取的特殊宝石上的能力，通过宝石镶嵌机制可以将宝石镶嵌到特定部位（我所玩的秘法师职业的特殊宝石镶嵌部位通常为戒指）的装备中来得到这些特殊能力加成。一共 22 枚传奇宝石，在全部获取前，每次限时通关大秘境都能获取一枚新的传奇宝石，直到全部获取。且每次限时通关大秘境之后都能获得 3 次（如果在进入大秘境前选择加强大秘境则可以获得 4 次）传奇宝石的升级机会。每枚传奇宝石的效果都不一样，且升级到 25 级之后会解锁特殊能力。每次升级传奇宝石都可以对特殊宝石能力词条中的数值进行提升。</p><h4 id="玩家最终需求-天梯排名提升"><a href="#玩家最终需求-天梯排名提升" class="headerlink" title="玩家最终需求 - 天梯排名提升"></a>玩家最终需求 - 天梯排名提升</h4><p>大部分玩家其实会停留在前一阶段，而有这一阶段需求的玩家基本可以称为该游戏的最核心玩家。玩家在这一阶段的追求是在尽可能短的时间内通关更高等级的大秘境，从而获得更高的天梯排名（基于大秘境等级，同等级则用时少的排名高），收获荣誉与游戏内奖励。</p><h3 id="策划视角-相关设计反思"><a href="#策划视角-相关设计反思" class="headerlink" title="策划视角 - 相关设计反思"></a>策划视角 - 相关设计反思</h3><p>这里对拆解过程及游玩过程中所想到的一些点从策划视角进行设计反思。</p><h4 id="游戏的核心目标体验是什么？游戏通过哪些手段来实现核心目标体验？"><a href="#游戏的核心目标体验是什么？游戏通过哪些手段来实现核心目标体验？" class="headerlink" title="游戏的核心目标体验是什么？游戏通过哪些手段来实现核心目标体验？"></a>游戏的核心目标体验是什么？游戏通过哪些手段来实现核心目标体验？</h4><p>我个人认为暗黑破坏神 3 的目标体验有以下几方面：1. 爽快感；2. 挑战感；3. 目标感。</p><ol><li>爽快感<br>何为爽快：这里的爽快主要有两方面，即装备掉落时的获得感以及造成伤害时的满足感。<br>何以爽快：如上所言，爽快感主要体现在装备掉落和伤害机制。</li></ol><p>设计师通过视觉和听觉两方面加强了装备掉落时的获得感。<br>视觉层面上，传奇物品掉落时会有相应的橙色或绿色光柱冲天而立，十分抓眼。而听觉层面上，物品掉落时会有金属坠地的声音，这也在另一方面加强了玩家“出货了”的心理预期，令人满足。此外，玩家在 NPC 处消耗血岩碎片抽取物品时也会有“大量出货”的兴奋感。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/equip.jpg" style="zoom:50%;" /><p>而造成伤害的满足感主要通过视觉层面和机制层面得以加强。<br>视觉层面上，在玩家打开伤害显示后（默认打开），玩家的每一次伤害都通过飘字形式得以显现，暴击伤害还会以橙色字体突出显示。这样的即时视觉反馈很好地满足了玩家“造成了成吨输出”的心理预期，令人满足。而机制层面主要指的是玩家借助套装或特殊装备可以实现的伤害质变。套装在完全组装之后其伤害提升是质变的，玩家在套装组成前和组成后能够体会到明显的伤害变化，非常爽快。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220306232710.png" style="zoom:50%;" /><ol start="2"><li>挑战感<br>何为挑战：这里的挑战主要有两方面，即角色装备提升的困难感和通关更高难度秘境的困难感。<br>何以挑战：角色装备提升的困难感主要是通过装备掉落几率体现的，而限时通关秘境的困难感主要通过相关机制体现。</li></ol><ul><li>装备提升的困难感</li></ul><p>游戏进行到中后期，基本能够凑齐所玩英雄的所有套装以及大部分传奇物品，再之后想要提升需要靠以下几种方式： 1. 通过装备附魔对装备属性进行提升；2. 继续刷图来获取同一装备的更高品质装备。</p><p>其中通过装备附魔对装备属性进行提升的方式只能在一定程度上实现伤害的量变提升，无法达到质变提升。并且前面也提到过，附魔时能够“洗”的属性是基于物品原本的属性类型的，并不能“洗”出所有的属性，所以这一方式对于角色装备的提升其实较小。</p><p>前面已经大致提过游戏中的装备阶层是次级(灰色)/高等(白色)/魔法(蓝色)/稀有(黄色)/传奇/ 5种，其中传奇为橙色，套装为绿色。而传奇物品中也有更细的品级分类，从低到高依次是传奇，远古传奇，太古传奇。远古和太古物品和传奇物品大致相同，但基础属性（伤害或护甲）以及非百分比词缀的上下限数值都较高。</p><p>只有达到70级的角色，才能在苦痛难度下获得远古物品，掉落在地时，远古物品的橙色光效和普通传奇物品相同，只有在辨识后才能确定是否是远古物品。在经过辨识后，远古物品的物品图标会有橙色的边框（套装物品为绿色边框），物品描述中也会标明“远古”。它们会通过全部途径掉落，包括怪物、宝箱、卡达拉、赫拉迪姆宝箱、卡奈魔盒，或者由铁匠与珠宝匠制造。</p><p>太古物品掉落在地时会带有闪亮的红色光柱，游戏中任何产出传奇物品的途径都可能掉落，包括赫拉迪姆宝箱、卡达拉和卡奈魔盒，但你必须先单人成功完成一个最低70层的大秘境才有获取太古物品的资格。太古物品比远古更加稀有，并且所有词缀都呈现完美的远古级别数值，包括物品的传奇威能。</p><p>在查找相关资料时正好找到了暴雪官方新闻中对于太古物品与开发理念的解读，这里直接引用过来：</p><blockquote><p>太古物品主要面向基本完成了角色技能配置或赛季旅程，但还想要继续玩下去的玩家。装备很好并且将大部分时间花在升级巅峰和传奇宝石的非赛季玩家也能通过太古物品中获得乐趣。在每个部位都得到远古物品以后，我们希望延续玩家看到装备掉落、在卡达拉处消耗血岩碎片时的兴奋感。太古为专注型玩家提供了完成一整套完美配置的途径，不再需要去升级。</p></blockquote><p>可以看到官方对于太古物品的描述基本将其作为了游戏的最终阶层物品。在这样的前提下，其爆率其实也极低（据说是 1%，即 100 件传奇物品中能出一件）。越往后其实能用的新装备的获取也越来越困难，符合心理预期，但也确实令人挫败。</p><ul><li>通关更高难度秘境的困难</li></ul><p>这一点主要是通过以下几种机制实现的：1. 限时通关；2. 难度倍增；3. 死亡后复活时长延长；4. 装备损毁；</p><p><em>限时通关</em>：小秘境的通关是不限时的，玩家只需要击杀足量怪物便可通关，但大秘境的通关是限时的，这一机制其实大大增大了通关大秘境的难度。<br><em>难度倍增</em>：这个主要是通过数值调整实现的，高难度秘境每高一个等级，其怪物属性会成倍提升，玩家在游玩时会面临“你打怪物在磨血，怪物打你就一刀”的局面。<br><em>死亡后复活时长延长</em>：玩家每在秘境中死亡一次，复活时间就会延长五秒（至多三十秒）。而在限时机制下，每分每秒都显得格外珍贵。<br><em>装备损毁</em>：游戏中的装备是具备耐久度属性的，除去日常情况下的损耗，玩家每次死亡都会使得装备耐久度整体下降 10%，也就是说如果你以装备满耐久度进入秘境，但在其中死亡达到十次，装备就会损毁（不会消失，但需要回到城镇找铁匠修复后才能恢复），这样的机制也增强了通关秘境的难度。</p><ol start="3"><li>目标感<br>何为目标：即玩家游玩时对于变强的追求。<br>何以目标：游戏目标感依靠装备和巅峰等级系统塑造。</li></ol><p>玩家在游戏中的目标简言之是让自己变得更强，而实现这一目标的途径会随着角色的不断增强最终聚焦到装备属性和巅峰等级的提升。<br>如前所述，游戏中的高级装备会有颜色和词条的区分，前中期会让玩家产生一种绿色强于橙色的颜色偏见，但随着角色不断增强，也随着玩家获得了远古和太古物品的获取资格，这种颜色偏见会逐渐消失，也让玩家一直有“更强的装备”能够追求。<br>变强的另一途径是不断获取经验，提升巅峰等级，从而提升巅峰属性。不设上限的巅峰等级使得玩家永远可以变强。</p><h4 id="作为一款刷宝游戏，其重复可玩性如何保证？"><a href="#作为一款刷宝游戏，其重复可玩性如何保证？" class="headerlink" title="作为一款刷宝游戏，其重复可玩性如何保证？"></a>作为一款刷宝游戏，其重复可玩性如何保证？</h4><p>暗黑三的重复可玩性主要通过以下三方面的机制来保证：</p><ol><li>装备可提升性</li><li>难度增长非线性</li><li>等级可提升性</li></ol><ol><li>装备可提升性<br>如前所述，暗黑 3 中透明的装备阶层使得绝大部分情况下玩家总有更高等级的装备可以追求，此种情况下会促使玩家通过不断刷图来获取可能的新装备。</li><li>难度增长非线性<br>暗黑 3 中的难度提升是非线性的，越往后难度会越来越高，这意味着玩家在后期想要通关更高等级的秘境不是一件容易的事情，此种情况会促使玩家选择通关更低等级的秘境来获取可能的新装备以及增长角色等级。</li><li>等级可提升性<br>巅峰等级系统的引入使得玩家永远都有变强的机会，面对难以打过的高等级秘境，设计师为玩家保留了一丝只要不断刷图，即使无法获取心仪装备，也能变强从而通关的可能性。</li></ol><h4 id="巅峰等级系统的设计意图"><a href="#巅峰等级系统的设计意图" class="headerlink" title="巅峰等级系统的设计意图"></a>巅峰等级系统的设计意图</h4><ol><li><p>降低游戏挫败感<br>如前所述，巅峰系统的引入为玩家保留了 一条永远能够变强的道路，若是没有巅峰系统，在面对无法攻克的高等级秘境时，能做的只有刷出更好的装备这一条路，在后期心仪装备出货率极低的情况下无疑会让玩家产生挫败感。而巅峰等级系统的引入带来的另一条变强之路会让这样的挫败感减少。</p></li><li><p>保障老玩家利益的同时利于引入赛制机制<br>巅峰等级系统的出现可以使得一直游玩的老玩家始终在装备和角色属性上领先于后面进入游戏的新玩家。若是没有巅峰等级系统，那么新老角色的差距便只有装备属性，即使只有较低概率，但是新玩家很可能会在短时间内就“赶上”玩了很久的老玩家，这不利于保障老玩家的利益。但正因如此，为了让新老玩家有机会“同台竞技”，赛制机制的引入使得玩家均需“从零开始”。如此一来，巅峰等级系统的引入便实现了保障老玩家利益的同时利于引入赛制机制的双赢局面。</p></li></ol><h4 id="为什么一开始提升游戏难度时金币和经验涨幅一致，但难度越高，经验涨幅大大高于金币涨幅了？"><a href="#为什么一开始提升游戏难度时金币和经验涨幅一致，但难度越高，经验涨幅大大高于金币涨幅了？" class="headerlink" title="为什么一开始提升游戏难度时金币和经验涨幅一致，但难度越高，经验涨幅大大高于金币涨幅了？"></a>为什么一开始提升游戏难度时金币和经验涨幅一致，但难度越高，经验涨幅大大高于金币涨幅了？</h4><p>从现象出发，即越往后设计师将经验的比重视为比金币更高。从 Coreloop 中可知，经验的流向只有一个地方，即用于提高巅峰等级，属于角色增强，而金币的流向却有很多，但主要都是用于装备增强。结合前面对于巅峰等级系统的分析，从现象出发可知到后期玩家能够实现的装备增强较少，所以对金币的需求会减少，但是巅峰属性作为能够在后期增强玩家的唯二途径之一，其增长需要依靠巅峰等级的提升。该设计强化了巅峰等级系统的作用，保障了玩家不断变强的可能性。</p><h4 id="宝箱怪物，宝箱关，奶牛关的设计意图"><a href="#宝箱怪物，宝箱关，奶牛关的设计意图" class="headerlink" title="宝箱怪物，宝箱关，奶牛关的设计意图"></a>宝箱怪物，宝箱关，奶牛关的设计意图</h4><p>宝箱怪物，即游戏中的各式盗宝地精，击杀后通常会有丰厚奖励（装备/血岩碎片/宝石/金币/材料），玩家周围有宝箱怪物时可以听到其笑声的特殊音效。宝箱关，即拥有多个宝箱怪物的藏宝秘窟，可以通过在卡奈魔方中放入连环戒并直接转化来打开通往藏宝秘窟的传送门。奶牛关，是另一个特殊地图，可以通过在卡奈魔方中放入牛王戟斧并直接转化来打开通往奶牛关的传送门。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220306232750.png" style="zoom:50%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220306211538.png" style="zoom:50%;" /><p>虽然无论是击杀宝箱怪物，通关藏宝秘窟或是奶牛关中能获得较多的软货币或是材料，甚至是好的装备，但因为碰见宝箱怪物的几率较低，以及刷出这两件特殊装备的概率也不高，所以这些机制的设计其实偏向于游戏中的调节机制。</p><p>玩家在进行大量刷图后肯定会感到疲惫，而这些调节机制的引入可以在很大程度上增强游戏乐趣性以及缓解玩家疲劳。盗宝贼特殊音效的出彩设计也形成了一种操作性条件反射，即让玩家一听到盗宝贼的笑声就会兴奋地在周遭寻找它的身影。</p><h4 id="拆解系统的设计目的"><a href="#拆解系统的设计目的" class="headerlink" title="拆解系统的设计目的"></a>拆解系统的设计目的</h4><p>和大多数游戏中的拆解系统一样，其设计是为了提升无用装备的价值，让玩家即使进行到中后期不再需要这些较低级装备时也能让它们派上用场。但暗黑 3 的拆解系统有两点值得一提：1. 白装拆解材料；2. 连环戒。</p><ol><li>白装，即次级装备，在游戏中属于很早期的装备，一些游戏中虽然也设计了拆解系统，但玩家看到白装也会直接忽视。但暗黑 3  中白装能够拆解出其它品质装备无法拆解获得的<code>万用材料</code>，其他途径要获取该材料较为困难（开地图中的箱子有较小几率获得）或性价比较低（通过卡奈魔方消耗高级材料转换）。这一设计使得白装的被拾取率和价值大大提高。</li><li>连环戒，即上面分析宝箱关时的特殊装备，其特殊属性是能够召唤一只盗宝地精为你拾取普通装备，并在拾取一定件数后掉落一件稀有装备，这一特殊属性的设计很好地增添了游戏性。</li></ol><h3 id="发现的潜在问题和思考"><a href="#发现的潜在问题和思考" class="headerlink" title="发现的潜在问题和思考"></a>发现的潜在问题和思考</h3><ol><li>后期提升乏力，目标感不足</li></ol><p>虽然前面分析过，游戏的目标感是不断变强，而不断变强的手段便是追求可知的更高阶装备或是不断提升巅峰等级和属性。但我作为玩家在后期基本完成配装后，想要限时通关更高等级大秘境确实非常困难，而除获取更好装备的另一种增强途径就只有重复刷图提升巅峰等级，疲倦的同时提升也较小，这就导致在中后期会产生乏力和目标感不足的情况。</p><p>针对这种情况其实能做的不多，只能为玩家提升路上做一些锦上添花的小机制，以作为玩家不断提升的鼓励。游戏本身已经设计了类似的机制，即当玩家巅峰等级不断提升时，可以获取到更加炫酷的头像框。与之类似的，我个人认为可以为宠物也添加这样的机制，即随着玩家巅峰等级不断提升，宠物的形态也会发生进化。这样的机制设计能在不改变游戏本身的情况下作为玩家不断提升的潜在动力。</p><ol start="2"><li>部分套装可用性不高</li></ol><p>从玩家角度出发，我个人较为熟悉的是秘法师角色，而在游戏进行到中后期时发现部分套装的可用性其实并不高的这一现象。和玩了多个赛季的老玩家聊过之后了解到其实随着赛季更迭，不同套装的强度是在不断变化的。另一方面，游戏本身的天梯系统其实为这一问题也算是设计了相应的解决方案：即为穿戴不同套装（或是只穿戴散件）的玩家单独设计天梯排行，这样的设计使得每一种装备搭配都有其发挥的舞台，在某种层面上实现了“百花齐放”。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>这次的拆解分析除了 Coreloop 之外，从玩家视角和策划视角分别对玩家需求和相关设计进行了分析和反思。期间确实也加深了一些对于游戏的理解。在和友人聊天过程中还了解到了暗黑 3 中的宠物掉落机制：宠物会作为白装掉落，玩家即使爆出宠物之后也很有可能会发生忽视不捡取或是直接将其分解的情况。这样的机制虽免不了发生玩家不小心“错失”宠物的情况，但却无形之中调动了玩家的游戏参与感以及保障了游玩新鲜度，不得不说是一个出色的设计。</p><p>综上，本文借助 Teardown Analysis 方法对游戏《暗黑破坏神 3》进行了分析，而后阐述了此次分析期间发现的潜在问题和思考。</p><p>感谢您的阅读，欢迎大家批评指正！</p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul><li><a href="https://news.blz.cn/zh-cn/diablo3/17900086/%E4%BC%A0%E5%A5%87%E7%89%A9%E5%93%81%EF%BC%9A%E8%BF%9C%E5%8F%A4%E4%B8%8E%E5%A4%AA%E5%8F%A4%E6%8C%87%E5%8D%97">传奇物品：远古与太古指南</a></li><li><a href="http://games.sina.com.cn/o/z/diablo3/2015-09-01/fxhkafa9529522.shtml">看图识怪：暗黑3盗宝地精家族怪物图鉴</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Analysis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>枪火重生 Teardown Analysis</title>
      <link href="2021/12/12/teardown-analysis-gunfire-reborn/"/>
      <url>2021/12/12/teardown-analysis-gunfire-reborn/</url>
      
        <content type="html"><![CDATA[<h2 id="《枪火重生》-Teardown-Analysis"><a href="#《枪火重生》-Teardown-Analysis" class="headerlink" title="《枪火重生》 Teardown Analysis"></a>《枪火重生》 Teardown Analysis</h2><p>最近在 B 站上看 <a href="https://space.bilibili.com/618369?spm_id_from=333.788.b_765f7570696e666f.1">鱼一元 001</a> 大大的相关视频，并在 <a href="https://space.bilibili.com/618369/channel/detail?cid=96395">挺进游戏公司</a> 系列下学到了 <a href="https://www.bilibili.com/video/BV1GJ411y7fj?spm_id_from=333.999.0.0">Teardown Analysis</a> 这一游戏拆解方法，现动手实践之！</p><h3 id="Keynote-展示"><a href="#Keynote-展示" class="headerlink" title="Keynote 展示"></a>Keynote 展示</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/TeardownAnalysis-GunfireReborn.001.jpeg"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/TeardownAnalysis-GunfireReborn.002.jpeg"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/TeardownAnalysis-GunfireReborn.003.jpeg"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/TeardownAnalysis-GunfireReborn.004.jpeg"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/TeardownAnalysis-GunfireReborn.005.jpeg"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/TeardownAnalysis-GunfireReborn.006.jpeg"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/TeardownAnalysis-GunfireReborn.007.jpeg"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/TeardownAnalysis-GunfireReborn.008.jpeg"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/TeardownAnalysis-GunfireReborn.009.jpeg"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/TeardownAnalysis-GunfireReborn.010.jpeg"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/TeardownAnalysis-GunfireReborn.011.jpeg"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/TeardownAnalysis-GunfireReborn.012.jpeg"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/TeardownAnalysis-GunfireReborn.013.jpeg"></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/TeardownAnalysis-GunfireReborn.014.jpeg"></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>第一次做 Teardown Analysis，全部算下来应该花了快有十二个小时左右…推翻重画了好几次，期间也有一些疑惑、反思或是延伸思考：</p><ul><li>Core Loop 按理来说应该是围绕资源进行绘制，但总会牵涉到一些无法进行资源展示的系统，如何合理引入是一个需要考虑的问题</li><li>Teardown Analysis 的目的应该是为了帮助我们更好理解游戏资源流向及设计目的，本次分析中其实在 Core Loop 之后更多是对于系统的描述以及设计概述，对设计目的的反思还不够深入</li><li>一开始直接在 PPT/Keynote 上对线框图进行绘制，后觉麻烦，改用飞书云文档中的流程图工具（我将其当做免费版的  ProcessOn）进行绘制，顺畅许多</li><li>感觉下次再分析的时候，可以将目标体验作为设计反思的重点，但届时势必会出现更加纷繁的走线，需要好好思考如何合理结合</li></ul><p>综上，本文借助 Teardown Analysis 方法对游戏《枪火重生》进行了分析，而后阐述了此次分析期间的一些疑惑、反思、延伸思考。</p><p>感谢您的阅读，欢迎大家批评指正！</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Analysis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Florence 目标体验及设计反思</title>
      <link href="2021/11/16/thinking-of-the-florence/"/>
      <url>2021/11/16/thinking-of-the-florence/</url>
      
        <content type="html"><![CDATA[<h2 id="《Florence》目标体验及设计反思"><a href="#《Florence》目标体验及设计反思" class="headerlink" title="《Florence》目标体验及设计反思"></a>《Florence》目标体验及设计反思</h2><blockquote><p>全文约 4 千字，预计需要 13 分钟阅读。配合背景音乐阅读体验更佳哦 (￣▽￣)”</p></blockquote><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=571339489&auto=1&height=66"></iframe><h3 id="游戏概述"><a href="#游戏概述" class="headerlink" title="游戏概述"></a>游戏概述</h3><p>作为一款精简的互动小说类游戏，你将在这短短的三十分钟里和主角一起经历一段平凡、起伏但也温暖的时光。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211116172206.png" style="zoom:50%;" /><h3 id="目标、路径、挑战、体验分析"><a href="#目标、路径、挑战、体验分析" class="headerlink" title="目标、路径、挑战、体验分析"></a>目标、路径、挑战、体验分析</h3><p>基于 PC 端的手柄游玩体验，以下将从目标、路径、挑战、体验四个方面对游戏进行整体概述：</p><h5 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h5><p>即游戏的结束条件：玩家需要跟随主角一起推动故事，直至结局。</p><h5 id="路径"><a href="#路径" class="headerlink" title="路径"></a>路径</h5><p>即玩家达到目标的手段：玩家需要通过点击按键、操纵遥感等方式进行交互，以推进故事。</p><p>其中涉及的元素包括但不仅限于：</p><ul><li>【按键点击】</li><li>【遥感滑动】</li></ul><table><tr> <center>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211116173140.png" alt="按键点击" style="zoom:70%; align:middle;" border=0></td>     <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211116173346.png" alt="遥感滑动" style="zoom:70%; align:middle;" border=0></td> </center></tr></table><h5 id="挑战"><a href="#挑战" class="headerlink" title="挑战"></a>挑战</h5><p>即玩家在实现目标的路径中可能碰到的障碍。</p><p>在 Florence 中，也许可以为挑战换一种说法，即任务，或事件。玩家需要在游玩过程中作为主角完成一些事情，从而推进故事的进行。</p><p>其中涉及的事件包括但不仅限于：</p><ul><li>【刷社交媒体】</li><li>【上班】</li><li>【涂色】</li></ul><table><tr> <center>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211116174206.png" alt="刷社交媒体" style="zoom:50%; align:middle;" border=0></td>     <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211116174240.png" alt="上班" style="zoom:50%; align:middle;" border=0></td>     <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211116174322.png" alt="涂色" style="zoom:50%; align:middle;" border=0></td> </center></tr></table><h5 id="体验"><a href="#体验" class="headerlink" title="体验"></a>体验</h5><p>即期望玩家在游玩时获得的情感体验。<br>在后面部分会展开描述，这里只进行列举：</p><ul><li>轻快</li><li>代入</li><li>温暖</li></ul><h3 id="目标体验反思"><a href="#目标体验反思" class="headerlink" title="目标体验反思"></a>目标体验反思</h3><h4 id="轻快"><a href="#轻快" class="headerlink" title="轻快"></a>轻快</h4><p>何为轻快：玩得没有负担，没有压力。<br>何以轻快：游戏从美学、交互机制和流程设计三方面共同构建了最终的轻快体验。</p><ul><li>美学</li></ul><p>这里提到的美学，主要指的是音乐、画面和色彩。</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=571339489&auto=1&height=66"></iframe><p><strong>音乐：</strong> 上面所提供的便是开头呈现的背景音乐，进入游戏后会自动播放。该曲明快的音调能让还未开始正式游玩的玩家一听到音乐就不由自主地放松下来。在故事不断推进的过程中，除冲突部分外，其余部分的音乐都给人一种轻松愉悦的感觉，整体呈现出的音乐营造了一种明快的氛围。</p><p><strong>画面和色彩：</strong> 【开局画面】中 Florence Yeoh（女主）以微笑姿态映入眼帘，头发不停摇曳，给人一种微风拂面的清爽感。而以色彩中代表着光明、积极和温暖的黄色作为主色，也能舒缓玩家游玩时的心绪。在游玩过程中，极简风格的画面和笔触产生了大量留白，结合【局部色彩】的使用来突出画面主体，同时也起到了视线引导的作用。最终构建了玩家没有负担，没有压力的轻快游玩体验。</p><table><tr> <center>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211116172206.png" alt="开局画面" style="zoom:40%; align:middle;" border=0></td>     <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211116185109.png" alt="局部色彩" style="zoom:60%; align:middle;" border=0></td> </center></tr></table><ul><li>交互机制</li></ul><p>这里提到的交互机制，主要指的是以手柄操作的【按钮点击】和【遥感滑动】。<br>简单的交互操作既减少了玩家对于操控方式的记忆需求，也减少了玩家需要熟练操作的需要，这些“省下来”的认知资源让玩家可以毫无负担和压力地专注到故事中。</p><table><tr> <center>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117133727.png" alt="按键点击" style="zoom:70%; align:middle;" border=0></td>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117133802.png" alt="遥感滑动" style="zoom:70%; align:middle;" border=0></td> </center></tr></table><ul><li>流程设计</li></ul><p>这里指的流程设计，主要指的是没有失败和故事简练。</p><p><strong>没有失败：</strong> 通常在进行游戏过程中，难免会遇到因操作失败等因素导致的“非理想结局”，从而产生挫败感。但在游玩 Florence 的时候，这样的挫败感几乎是不存在的，玩家唯一有可能“犯错”的点是在进行【计算】和【工作】时，即使在这样的事件中，其成功难度也是很低的，所以几乎不会出现失败的挫败感。</p><table><tr> <center>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117134509.png" alt="计算" style="zoom:70%; align:middle;" border=0></td>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117134533.png" alt="工作" style="zoom:70%; align:middle;" border=0></td> </center></tr></table><p>在除此之外的其他游玩过程中，玩家可以随意选择决策顺序，甚至可以选择【放弃决策】，任凭其自由发展。如此设计使得玩家在决策时的心理负担降到最低，从而构建玩家游玩时的轻快体验。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117134946.png" alt="放弃决策"></p><p><strong>故事简练：</strong> 这里的故事简练指的不仅是游戏总体的游玩时长较短，也体现在其分段化的叙事手法中。游戏中采用了【按事件划分章节】的方式来进行整体情节推进，如此一来，将关卡设计细化为了事件设计，一方面能够很清晰地呈现出游戏整体的起承转合的变化，另一方面也使得玩家能以很快地速度在不觉间就推进了故事的进行，从而构建游戏整体的轻快感。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117135329.png" alt="按事件划分章节" style="zoom: 67%;" /><h4 id="代入"><a href="#代入" class="headerlink" title="代入"></a>代入</h4><blockquote><p>注意：此部分存在明显剧透，请小心食用！</p></blockquote><p>何为代入：体验主角的故事时，也想到了自己。<br>何以代入：游戏主要从整体故事设计，细节设计和美学呈现的角度来构建玩家代入感。</p><ul><li>整体故事设计</li></ul><p>如前所述，Florence 采用按事件划分章节的方式来推进故事，从其章节名其实便可一窥其代入感设计的精髓。游戏中将几个连续的章节归为一幕，但没有为每一幕起名，我将在这里尝试为其命名，便于分析其代入感设计：</p><ul><li>幕一：无聊生活中的回忆之甜和乍见之欢</li><li>幕二：再见，再见，“怦然”相撞的再次相见</li><li>幕三：趁年轻，去探索，去追梦</li><li>幕四：唇齿也会打架，但我们同居啦！</li><li>幕五：生活终将归于平淡，而我们彼此可能也只能陪伴人生中的一段</li><li>幕六：收拾心情再出发，不知道明天的我又会遇见什么颜色呢</li></ul><p>从我蹩脚的文字中也可窥见，这样的故事每天都在发生，而我们自己，可能就是那个故事中的人。特别是在最后一章中，主角 Florence 成功办了画展，其间人来人往，而此时的分镜中出现了【让我无比期待的转身】这样的画面，当时在游玩的我也在不断想“那个当时鼓励我追梦的他会不会突然出现呢”。但是，他最终没有出现，设计者并没有选择呈现完美结局，难免失望，总会释然，生活如此，这样的设计极大地增强了玩家的代入感。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117143703.png" alt="让我无比期待的转身" style="zoom:67%;" /><ul><li>细节设计</li></ul><p>这里的细节设计主要指的是在游玩过程中，一些很细微的用户体验和情节细节。如【叫不醒的闹钟】，【自己不接电话就不断打来的妈妈】，【时光流逝，物是人非】等等，再辅以恰当的手柄震动，这些能够引起玩家共鸣的细节设计极大地增强了玩家的代入感。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117160811.png" alt="叫不醒的闹钟" style="zoom:67%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117160836.png" alt="自己不接电话就不断打来的妈妈" style="zoom:67%;" /><table><tr> <center>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117160928.png" alt="时光流逝" style="zoom:70%; align:middle;" border=0></td>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117161018.png" alt="物是人非" style="zoom:70%; align:middle;" border=0></td> </center></tr></table><ul><li>美学呈现</li></ul><p>这里的美学呈现主要指的是色彩和形状的呈现。</p><p><strong>色彩：</strong> 这里的色彩主要指的是游戏中对于色彩的运用：如【枯燥乏味的上班】，【多姿多彩的朋友圈】，【充满想象力的涂色】，【令人气愤的争吵】，【破碎的记忆】以及【对新生活的憧憬】等画面，都用了恰当的色彩来凸显了人物主体，也渲染了相应的氛围，从而最终增强了玩家的代入感。</p><table><tr> <center>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117150542.png" alt="枯燥乏味的上班" style="zoom:70%; align:middle;" border=0></td>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117150613.png" alt="多姿多彩的朋友圈" style="zoom:70%; align:middle;" border=0></td> </center></tr></table><table><tr> <center>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117152116.png" alt="充满想象力的涂色" style="zoom:70%; align:middle;" border=0></td>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117152202.png" alt="令人气愤的争吵" style="zoom:70%; align:middle;" border=0></td> </center></tr></table><table><tr> <center>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117152249.png" alt="破碎的记忆" style="zoom:70%; align:middle;" border=0></td>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117152408.png" alt="对新生活的憧憬" style="zoom:70%; align:middle;" border=0></td> </center></tr></table><p><strong>形状：</strong> 这里的形状主要指的是游戏中对于特定场景下的形状的运用。特别让人印象深刻的是【争吵升温】这一画面中，将二人的对话转化为了拼图，而且在升温过程中，拼图的形状由一开始的【圆滑】，变得【有棱角】，最后甚至变得【尖锐】，这一非常优秀的设计让人眼前一亮，很好地增强了玩家的代入感。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117155959.png" alt="圆滑" style="zoom:67%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117160037.png" alt="棱角" style="zoom:67%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117160144.png" alt="尖锐" style="zoom:67%;" /><h4 id="温暖"><a href="#温暖" class="headerlink" title="温暖"></a>温暖</h4><p>何为温暖：在最终游玩结束之后，会心一笑，心中微暖。<br>何以温暖：游戏主要从情节设计，交互节奏和美学呈现的角度为玩家营造温暖感。</p><ul><li>情节设计</li></ul><p>如前所述，游戏最终并没有给玩家呈现一种完美结局，主角 Florence 也并不是如超人一般，受到打击之后能立马释怀，放步前行。她也经历了任何普通如你我的人都会经历的痛苦与迷茫，通过旅行来放空自我。但她并没有停步于此，她最终走出来了，重新积攒了力量，重新拾起画笔，做自己想做的事，【在乎身边的人】，努力向前。所谓“不完美”的结局也正是生活的常态，这样的情节设计最终也予人以温暖和希望。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117161813.png" alt="在乎身边的人" style="zoom:67%;" /><ul><li>交互节奏</li></ul><p>这里的交互节奏指的是游戏中的交互方式和交互频率。玩家在游玩过程中大可以不紧不慢地轻轻点击，【慢慢滑动】，而不用担心错过什么，或做错什么，这样舒缓的交互节奏最终给玩家营造了温暖的游玩体验。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117162220.png" alt="慢慢滑动" style="zoom:67%;" /><ul><li>美学呈现</li></ul><p>这里的美学呈现主要指的是色彩和音乐。<br>除去特殊的争吵场景外，游戏整体以低对比度的【温暖色系】来进行画面着色，如此设计使得玩家在游玩过程中始终能以舒缓的心情来进行游戏。此外，再搭配游戏出色的配乐，最终予人以温暖。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117162626.png" alt="温暖色系" style="zoom:67%;" /><p>以上对游戏的目标体验及其设计进行了一些反思，下面会对其他的一些出彩设计进行分析和反思。</p><h3 id="其余出彩设计分析与反思"><a href="#其余出彩设计分析与反思" class="headerlink" title="其余出彩设计分析与反思"></a>其余出彩设计分析与反思</h3><p>以下部分的分析与反思主要设计交互机制，美学呈现等方面。</p><h4 id="交互机制"><a href="#交互机制" class="headerlink" title="交互机制"></a>交互机制</h4><ul><li>【形象有趣的聚焦方式】</li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117165710.png" alt="形象有趣的聚焦方式" style="zoom:67%;" /><p>如图所示，这里采用了可左右调整的不同的聚焦尺来模拟摔倒之后重新聚焦的这一过程，既表现了看见中意的人时因为小鹿乱撞而跌得七荤八素的狼狈，又很好地为双方交换了联系方式这一情节做了铺垫，十分形象有趣。</p><p>延伸思考：在未来，如果可能的话，在跌倒之后使双摇杆随机晃动，以模拟被摔得七荤八素的感觉，而玩家需要努力将其恢复到“平静”状态，从而模拟努力按住头来重新聚焦的过程，这样的交互方式应该也很有趣！</p><ul><li>【摇晃拍立得！】</li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117171417.png" alt="摇晃拍立得！" style="zoom:67%;" /><p>如图所示，设计者需要玩家在点开相片后通过晃动摇杆来模拟现实中人们真实的甩底片动作，确实很有意思。</p><p>延伸思考：在这里其实可以考虑引入手柄体感机制，让玩家真正地甩起来！<br>题外话：甩底片这一操作其实源自早期的老式拍立得时期，当时拍完之后需要将附有显像药剂的纸材快速与底片分离，通过甩动可以让药剂快速边干，但随着技术的发展和进步，现在的拍立得所拍出的照片其实已经可以不用甩啦，用力过猛甚至有可能会出现显像错误哦！（不过轻轻甩底片的动作也确实别有一番趣味(￣▽￣)”）</p><ul><li>【不进则退】</li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117172810.png" alt="不进则退" style="zoom:67%;" /><p>如图所示，这里需要玩家不断点击，以模拟不断向前推男主人公的动作。有趣的是如果在推了一半的时候不再继续点击，男主人公就会不断退缩回到原地，这样的设计十分真实的同时也让我们切实体会到了有人能在这时推自己一把是多么不容易而又令人温暖的事情。</p><p>延伸思考：在这里的反馈呈现其实是不变的，也就是说玩家每次按键能够推动的距离是一定的，也许可以为其引入非线性的反馈机制，即一开始的时候一次按键点击就能推动很多，但越往后越难推动，临门一脚的时候需要玩家更努力地来进行点击才能最终实现鼓励男主人公报名的目的，如果在前面鼓励的时候中途放弃了，下一次重新鼓励的时候的阻力就会更大。这样的设计也许能让玩家最终实现目标的时候有更强的获得感和成就感。</p><h4 id="美学呈现"><a href="#美学呈现" class="headerlink" title="美学呈现"></a>美学呈现</h4><ul><li>【以色彩进行画面引导】</li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117165418.png" alt="以色彩进行画面引导" style="zoom:67%;" /><p>如图所示，这里采用了显式的音符及音乐流向来引导玩家向前，十分自然。</p><p>延伸思考：这里让我想到的其实是好奇心、探索欲以及有限操作空间下的强制性选择。设计师采用了局部色彩的方式来突出了主体与可交互性，当画面出现如此抓眼的元素时玩家会不自主地想要进行探索，但凡事有例外，这里的交互空间有限，玩家能做的只有向右前进这一个选项，这里并不是想要反驳设计师对于操作空间的限制，因为有时确实需要做这样的决策以让玩家推进，只是一个题外话，如何在放开交互可能性的情况下更好地让玩家“正常推进”，特别对于线性叙事类游戏而言，这可能是一个需要关注的点。</p><ul><li>以色彩和形状反映心情</li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117175435.png" alt="组织语言" style="zoom:67%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117175404.png" alt="相谈甚欢" style="zoom:67%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211117175958.png" alt="激烈争吵" style="zoom:67%;" /><p>如图所示，在前两个图中，设计师很好地用恰当的颜色和形状很好地反映了恋爱开始时仔细组织语言的小心翼翼，到相恋之时相谈甚欢的不谋而合。前面的颜色温暖而含蓄，后面的颜色温馨而幸福；前面的形状多样且需要多次拼接，后面的形状彼此相配，且拖拽一个时，另一个也会自然靠近。色彩、形状、再辅以恰当的交互，很好地体现了主角，甚至是玩家当时的心境。<br>而在最后的图中，刺眼的红色以及都不用再组织的语言让人也直观感受到了争吵之时的激烈与口不择言，不断变快的话语速度也反映了二人心中激荡的情绪。真实，而又心疼。</p><p>延伸思考：又是一个题外延伸，有没有可能，未来可以结合音频输入设备来进行交互呢？这里指的并不是真的让玩家参与到争吵当中（当然了也不失为一种选择 (￣▽￣)”），而是识别玩家声音中的情绪，从而让画面产生相应的一些变化，包括玩家发声的频次，音调等，都以另一种方式来组成了主角的语言。（甚至能延伸出“骂爽 TA”的奇怪玩法哈哈…）</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>综上，本文从目标、路径、挑战、体验的角度对游戏《Florence》进行了整体分析，而后又对游戏轻快、代入、和温暖的目标体验进行了反思，最后对游戏中其余的出彩设计进行了分析和反思。</p><p>总的而言，如概述中所言，这是一个平凡、起伏而又温暖的故事。<br>感谢您的阅读，欢迎大家批评指正！</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Analysis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Clash Heroes 目标体验思考及设计反思</title>
      <link href="2021/11/06/thinking-of-the-clash-heroes/"/>
      <url>2021/11/06/thinking-of-the-clash-heroes/</url>
      
        <content type="html"><![CDATA[<h3 id="视频展示"><a href="#视频展示" class="headerlink" title="视频展示"></a>视频展示</h3><p>不知道为何 Youtube 的视频无法在这里嵌套展示，所以在这里提供视频传送门：<a href="https://youtube.com/clip/UgkxFq-TIaDR8SPzRPFo4lYH-Tv9vCs9dWsH">点击访问视频</a></p><h3 id="Gif-展示"><a href="#Gif-展示" class="headerlink" title="Gif 展示"></a>Gif 展示</h3><table><tr> <center>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/冲撞技能与地形的交互.gif" alt="冲撞技能与地形的交互" style="zoom: 33%; text-align: center; align:middle;" border=0></td>     <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/InteractiveObject.gif" alt="可交互道具" style="zoom: 50%; text-align: center; align:middle;" border=0></td>     <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/interactiveTerrain.gif" alt="可交互地形" style="zoom:33%; align:middle;" border=0></td> </center></tr></table><table><tr> <center>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/fight.gif" alt="战斗场景" style="zoom:33%; align:middle;" border=0></td>     <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/object collection.gif" alt="物品拾取" style="zoom:33%; align:middle;" border=0></td>         <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/貌似 BOSS 战斗.gif" alt="精英怪物" style="zoom:33%; align:middle;" border=0></td> </center></tr></table><h2 id="《Clash-Heroes》目标体验思考及设计反思"><a href="#《Clash-Heroes》目标体验思考及设计反思" class="headerlink" title="《Clash Heroes》目标体验思考及设计反思"></a>《Clash Heroes》目标体验思考及设计反思</h2><h3 id="游戏概述"><a href="#游戏概述" class="headerlink" title="游戏概述"></a>游戏概述</h3><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/cooperation.gif"></p><p>从目前放出的一些预览视频来看，《Clash Heroes》 是一款合作类的角色扮演闯关手游，玩家将以俯视角操纵英雄进行实时游玩。每个游戏角色都有独立的角色特性和技能。</p><h4 id="目标、路径、挑战、体验分析"><a href="#目标、路径、挑战、体验分析" class="headerlink" title="目标、路径、挑战、体验分析"></a>目标、路径、挑战、体验分析</h4><p>基于视频，以下将从目标、路径、挑战、体验四个方面对游戏进行整体设想：</p><h5 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h5><p>即游戏的结束条件：玩家需要带领角色冲破重重关卡，直至通关</p><h5 id="路径"><a href="#路径" class="headerlink" title="路径"></a>路径</h5><p>即玩家达到目标的手段：玩家需要通过不断杀敌，从而不断向前。<br>其中涉及的元素有：</p><ul><li><p>杀敌</p></li><li><p>收集</p><table><tr> <center>  <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/object collection.gif" alt="掉落资源收集" style="zoom:45%; align:middle;" border=0></td>   <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/fight.gif" alt="场景（右上方）宝箱收集" style="zoom:45%; align:middle;" border=0></td> </center></tr></table></li><li><p>场景道具交互</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/InteractiveObject.gif" style="zoom:60%;" /></li><li><p>地形交互</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/interactiveTerrain.gif" style="zoom:30%;" /></li></ul><h5 id="挑战"><a href="#挑战" class="headerlink" title="挑战"></a>挑战</h5><p>即玩家在实现目标的路径中可能碰到的障碍。<br>目前视频中所反映出的障碍基本有以下几种：</p><ol><li>怪物障碍：即通关过程中会不断遭遇的怪物<br>怪物类型：</li></ol><ul><li>普通怪物<img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/fight.gif" style="zoom: 30%;" /></li><li>精英怪物<img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/貌似 BOSS 战斗.gif" style="zoom:30%;" /></li><li>BOSS<img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Boss.gif" style="zoom:70%;" /></li></ul><ol start="2"><li>陷阱/建筑障碍：即会对玩家造成直接或间接伤害的地图陷阱/建筑<br>陷阱/建筑类型：</li></ol><ul><li>防御塔：如下图 Gif 中出现的会对角色进行攻击的防御塔</li><li>兵工厂：如下图 Gif 中右上角出现的会不断产生新怪物的兵工厂<table><tr> <center>  <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/characterArrow.gif" alt="防御塔" style="zoom: 80%; align:middle;" border=0></td>   <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/characterWorrior.gif" alt="兵工厂" style="zoom:80%; align:middle;" border=0></td> </center></tr></table></li></ul><ol start="3"><li>地形障碍：即通关过程中需要跨越地形<br>地形类型：沟壑 - 需要借助地形交互<img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/interactiveTerrain.gif" style="zoom:40%;" /></li></ol><h5 id="体验"><a href="#体验" class="headerlink" title="体验"></a>体验</h5><p>即期望玩家在游玩时获得的情感体验。<br>在后面部分会展开描述，这里只进行列举：</p><ul><li>爽快感</li><li>合作感</li><li>策略感</li></ul><h3 id="目标体验反思"><a href="#目标体验反思" class="headerlink" title="目标体验反思"></a>目标体验反思</h3><h4 id="爽快感"><a href="#爽快感" class="headerlink" title="爽快感"></a>爽快感</h4><p>爽快感解析：换言之我觉得也可以称之为顺畅感、割草感<br>爽快感实现方式：</p><ol><li>系统角度</li></ol><ul><li><p>操作简单：采用了市面通行的左右摇杆机制，让玩家几乎没有学习和适应成本</p></li><li><p>攻击机制简单：每个角色只有一个普攻按键和一个技能按键</p></li><li><p>怒气积累机制直观：角色每次成功攻击都能积累一档怒气（即生命条下方的紫色状态条），当怒气集满之后不同角色会有独特的状态：</p><ul><li><p>战士是会进入狂暴状态，应该是能得到攻击加成</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Boss.gif" alt="战士" style="zoom:70%;" /></li><li><p>弓箭手和炸弹师都是能在下次普攻时自动发动一次强力攻击</p><table><tr> <center>  <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/characterArrow2.gif" alt="弓箭手" style="zoom:70%; align:middle;" border=0></td>   <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/characterbomb.gif" alt="炸弹师" style="zoom:70%; align:middle;" border=0></td> </center></tr></table></li><li><p>自动选择攻击单位（参见上方炸弹师 Gif）：在进行普通攻击时，玩家不需要选择供给单位，系统会自动选择离自己最近的敌方单位进行攻击</p></li><li><p>技能方向选择简单（参见上方炸弹师 Gif）：对于需要选择攻击方向的技能，采用了以玩家自身为锚点的方式，玩家只需要根据按钮方向对攻击方向进行选择</p></li></ul></li><li><p>交互机制简单</p><ul><li>攻击即可触发道具交互<img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/InteractiveObject.gif" style="zoom: 60%;" /></li><li>移动到特殊地形即可触发地形交互<img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/interactiveTerrain.gif" style="zoom:40%;" /></li><li>移动到一定范围内即可对掉落物进行自动收集<img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/objectCollection.gif" style="zoom:40%;" /></li></ul></li></ul><ol start="2"><li>UX 角度</li></ol><ul><li>美学呈现（以视觉举例）<ul><li>卡通风格简明：卡通风格既能保证战斗体验，也不会耗费玩家太多的注意力资源</li><li>攻击飘字颜色简单：如图所示，目前的飘字一共有两种，己方造成的伤害是白色，敌方造成的伤害是红色，这样的飘字呈现方式简单直白  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/fight.gif" style="zoom:40%;" /></li><li>范围呈现明显：无论是敌方的攻击范围，还是所控制角色的技能释放范围，都有很明显的视觉辅助，从而能让玩家产生爽快的战斗体验  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Boss.gif" style="zoom:80%;" />  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/characterbomb.gif" style="zoom:80%;" /></li></ul></li><li>即时交互：即时交互机制能让玩家很容易进入全神贯注的心流状态</li></ul><h4 id="合作感"><a href="#合作感" class="headerlink" title="合作感"></a>合作感</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/coop.gif" alt="合作杀敌"></p><p>合作感解析：即需要与玩家配合杀敌通关<br>合作感实现：在所展示的 Gif 中，不同玩家操纵着不同角色在同一地图中共同作战，但从目前放出的资料来看，合作感还有待加强，本文后续部分也会再次提到这部分内容。</p><h4 id="策略感"><a href="#策略感" class="headerlink" title="策略感"></a>策略感</h4><p>策略感解析：这里的策略感指的是玩家可以以多种方式进行游玩和参与到游戏中<br>策略感实现：</p><ol><li>角色设计<br>如图所示，目前放出的视频中一共有三种角色，我称之为战士，弓箭手和炸弹师。<img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/Boss.gif" alt="战士" style="zoom:80%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/characterArrow2.gif" alt="弓箭手" style="zoom:80%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/characterbomb.gif" alt="炸弹师" style="zoom:80%;" /></li></ol><p>据称还会有更多职业放出，多样化的职业为玩家提供了更多的游玩可能性<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/characters.jpg" alt="角色造型" style="zoom: 33%;" /></p><ol start="2"><li><p>可交互地形设计<br>如图所示，目前的除了有可交互的特殊区域可以帮助进行地形跨越外，还增加了令人眼前一亮的技能与地形的交互，这样的交互可能性会极大增强可玩性和策略性（但想必实现难度不低，BUG 也会很多哈哈）</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/interactiveTerrain.gif" alt="可交互地形" style="zoom:40%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/冲撞技能与地形的交互.gif" alt="技能与地形的交互" style="zoom:40%;" /></li><li><p>道具设计<br>如图所示，目前放出的视频中，地图中也有可供玩家交互的道具，这些道具的出现势必会丰富玩家的策略空间</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/InteractiveObject.gif" alt="可交互道具" style="zoom: 67%;" /></li></ol><p>以上对目前所放出的视频中的目标体验进行了一些反思，下面我会对未来可能的一些设计方向提出一些自己的思考。</p><h3 id="对未来可能的设计方向的思考"><a href="#对未来可能的设计方向的思考" class="headerlink" title="对未来可能的设计方向的思考"></a>对未来可能的设计方向的思考</h3><p>以下将从战斗、养成、社交的经典三元素出发，对未来可能的设计方向进行一些思考。</p><h4 id="战斗"><a href="#战斗" class="headerlink" title="战斗"></a>战斗</h4><ol><li>丰富战斗交互空间<br>这里的战斗交互空间主要指的是玩家的可操作空间。丰富战斗交互空间可以增强玩家【策略感】。<br>目前只为玩家提供了普通攻击、怒气攻击和一个技能，玩家可操作空间较少，所以也许可以考虑以下的几种方式丰富战斗交互空间：</li></ol><ul><li>丰富技能<ul><li>即为各个角色增加更多的技能选项</li></ul></li><li>丰富攻击方式<ul><li>其中一种丰富攻击方式的方法是引入武器系统，并且为每种武器赋予独特的攻击方式和技能系统</li></ul></li><li>丰富攻击属性<br>  从下面的图中我们可以看到目前已经拥有冰属性和雷属性的攻击，在未来也许可以考虑以下的方式来丰富攻击属性：<ul><li>武器附魔</li><li>利用不同的技能/道具状态改变攻击属性<table><tr> <center>  <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/characterArrow2.gif" alt="冰属性攻击" style="zoom:80%; align:middle;" border=0></td>   <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/cooperation.gif" alt="雷属性攻击" style="zoom:80%; align:middle;" border=0></td> </center></tr></table></li></ul></li></ul><ol start="2"><li>丰富场景道具<img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/InteractiveObject.gif" alt="可交互道具" style="zoom:67%;" />如上所示，目前已经有可供交互的道具，未来也许可以考虑以下的方式来丰富场景道具：</li></ol><ul><li>丰富道具功能<ul><li>如交互后可为角色带来不同的状态改变：<ul><li>生命恢复</li><li>攻击提升</li><li>攻击属性授予</li><li>防御提升</li><li>一段时间内不消耗怒气等</li></ul></li></ul></li><li>丰富道具属性<ul><li>图中所示的为一次性交互道具，也许可以考虑为其增加可重复使用的可携带道具，可设计为同账号不同角色间通用道具，也可为不同角色设计专属道具，如为弓箭手角色设计专属道具【翎羽】，效果为可几率触发普攻连发等。</li></ul></li></ul><ol start="3"><li>丰富视觉效果<br>这里的视觉效果主要指场景中的可见元素的效果。丰富视觉效果可以增强玩家战斗【爽快感】。</li></ol><ul><li>丰富飘字效果<ul><li>目前放出的版本中只有两种飘字，即己方伤害为白色，敌方伤害为红色，未来可丰富飘字效果，如暴击则飘字为黄色等。</li></ul></li></ul><ol start="4"><li>丰富职业/角色<br>目前已经放出的角色有三种，我称之为战士、弓箭手和炸弹师，未来可考虑对角色进行丰富。丰富角色可以增强玩家【策略感】。<br>也许可以考虑增加以下职业/角色：</li></ol><ul><li>召唤师：可召唤宝宝辅助进行战斗</li><li>陷阱师：可设置陷阱诱捕敌人/对敌人造成伤害</li><li>工程师：可建造炮塔等设施辅助进行战斗</li><li>法师：可利用强大的法术进行战斗</li><li>诅咒师：可利用诅咒辅助进行战斗，如施加负面效果或造成伤害</li><li>盗贼：如拥有隐身和背刺等技能，背后攻击会有攻击加成</li><li>狼人：可拥有变身技能，变身后提供状态加成，且攻击方式、攻击技能改变</li><li>魅惑师：可利用魅惑技能让敌方单位反为己用等</li></ul><ol start="5"><li><p>丰富地形的同时提供反悔的选项，此举可以增强玩家【爽快感】。<br>如图所示，当前版本为玩家提供了地形交互选项，我想到的是可能还得为玩家提供反悔的选择，如设置为可返回前一地形，或者添加位移技能，防止出现玩家想要返回前一地形却无计可施，从而产生挫败感的情况。</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/interactiveTerrain.gif" alt="可交互地形" style="zoom: 40%;" /></li><li><p>丰富玩法<br>这里的玩法主要指的是游戏中的各种交互机制，玩法的丰富可以增加玩家的【策略感】。<br>可以考虑如下的方式来丰富玩法：</p></li></ol><ul><li>增加解密元素：目前放出的资料中基本只涉及战斗，所以可以考虑增加解谜元素以丰富玩法，同时不断给玩家带来新鲜感。</li><li>引入天气系统：目前放出的资料中并不涉及天气系统，所以可以考虑增加天气系统，并且将其与战斗系统挂钩，如雨天环境下，雷属性攻击的范围变大，且攻击力变强等。</li><li>引入时间系统：目前放出的资料中并不涉及时间系统，所以可以考虑增加时间系统，并且将其与战斗系统挂钩，如黑夜环境下，玩家视野变小，但也更不容易被敌人发现；其上所提到的狼人角色，其在黑夜状态下的变身时间会延长等。</li></ul><h4 id="养成"><a href="#养成" class="headerlink" title="养成"></a>养成</h4><p>即丰富养成空间：这里的养成空间主要指的是可让角色提升的方方面面，养成空间的丰富可以增强玩家的【策略感】。<br>目前所体现的角色变化只有怒气值的变化：<br>虽然怒气集满后可持续时间增长了，但是积累所需的攻击次数也变多了，如此使得养成系统的体现并不明显，也会降低玩家提升的动力。<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/fight.gif" alt="三档怒气" style="zoom: 40%;" /><br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/characterWorrior.gif" alt="五档怒气" style="zoom: 80%;" /></p><p>目前资料中还体现了收集元素，应该也是服务于养成系统的：<br>    <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/object collection.gif" alt="掉落元素收集" style="zoom:40%;" /></p><p>可以考虑如下的方式来丰富养成空间：</p><ol><li>个人养成</li></ol><ul><li>属性养成：这里的属性养成指的是各个角色自身的属性，如可以对角色的以下属性进行提升：<ul><li>攻击力</li><li>防御力</li><li>暴击率</li><li>攻击属性</li><li>耐性：用于抵抗倒地等</li></ul></li><li>技能/熟练度养成：玩家在不断使用技能过程中，也许可以考虑为技能引入熟练度，从而对技能达到以下效果的提升：<ul><li>攻击力</li><li>攻击范围</li><li>冷却速率等</li></ul></li><li>装备养成：这里的装备指的是可以对玩家属性造成影响的装备</li><li>装饰养成：这里的装饰指的是不会对玩家属性造成影响，只会影响角色外观的装备</li></ul><ol start="2"><li>道具养成：这里的道具养成指的是对玩家在游戏中可交互道具的养成，如</li></ol><ul><li>增加道具增益状态的持续时间</li><li>增加道具效果等</li></ul><h4 id="社交"><a href="#社交" class="headerlink" title="社交"></a>社交</h4><p>即丰富社交空间：这里的社交空间指的是游戏中需要与其他玩家共同达成的事件，社交空间的丰富可以增强玩家【合作感】。<br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/cooperation.gif" alt="合作作战"></p><p>如图所示，个人认为目前版本中玩家之间的合作感还不强，只是各自为战，未来也许可以考虑如下的方式来丰富社交空间：</p><ul><li>增加合作任务：可以考虑增加合作任务，并为合作任务设置奖励加成甚至是专属奖励（如只有在合作模式下才有几率掉落）</li><li>增加合击技：可以考虑为不同职业之间增加合击技，或者是为不同攻击属性之间增加交互可能性，如火属性攻击和水属性攻击会互相减弱伤害，但先施加水属性攻击后施加雷属性攻击会带来伤害加成等。</li></ul><p>以上是基于战斗、养成、社交角度对未来可能的设计方向的一些思考，但需要明确的是在未来的设计中还是要围绕目标体验出发，达到合理的取舍与平衡。</p><h2 id="《Clash-Heroes》官方网站"><a href="#《Clash-Heroes》官方网站" class="headerlink" title="《Clash Heroes》官方网站"></a>《Clash Heroes》官方网站</h2><p><a href="https://clash.com/en">Clash</a></p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Analysis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>喝酒游戏列举与思考</title>
      <link href="2021/11/02/drinking-games/"/>
      <url>2021/11/02/drinking-games/</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p><span id="jump"></span></p><p>最近在看《游戏设计、原型与开发》一书，第一章中提到了对一个牌类游戏 Bartok 进行规则更改以达到不同的游玩体验一事，于是想到了可以把平时在玩喝酒游戏时的一些“突发奇想”也记录在此，同时也算是锻炼自己的游戏设计思维，遂有此文。</p><h2 id="喝酒游戏列举（及可能的设计反思）"><a href="#喝酒游戏列举（及可能的设计反思）" class="headerlink" title="喝酒游戏列举（及可能的设计反思）"></a>喝酒游戏列举（及可能的设计反思）</h2><p>虽然说是喝酒游戏，但其实也可以用于平时打发时间，以下会列举一些我所知的此类游戏，也会从更改目标游戏体验的角度出发，对部分游戏提出一些设计反思。</p><h3 id="1-Bartok"><a href="#1-Bartok" class="headerlink" title="1. Bartok"></a>1. Bartok</h3><p>这便是在【背景】中所提到的牌类游戏。</p><h4 id="1-1-规则列举"><a href="#1-1-规则列举" class="headerlink" title="1.1 规则列举"></a>1.1 规则列举</h4><ul><li>游戏目标<ul><li>第一个出完手牌的玩家获胜</li></ul></li><li>游戏规则<ul><li>一副标准扑克牌，去掉大小王，剩余 52 张</li><li>洗牌后向每个玩家发牌 7 张</li><li>其余牌反扣作为抽牌堆</li><li>从抽牌堆顶上抽牌，明牌，作为弃牌堆</li><li>玩家顺时针参与游戏，如果可以出牌，必须出一张牌到弃牌堆，若不能出，必须从抽牌堆抽取一张牌加入手牌</li><li>出牌规则：玩家的手牌若与当前明牌满足如下关系，则可以出一张牌：<ul><li>花色一致</li><li>数字一致</li></ul></li><li>第一个出完手牌的获胜</li></ul></li></ul><h4 id="1-2-Demo-体验"><a href="#1-2-Demo-体验" class="headerlink" title="1.2 Demo 体验"></a>1.2 Demo 体验</h4><p>该 Demo 来自 <a href="https://book.prototools.net/">Introduction to Game Design, Prototyping, and Development</a> 一书的官方网站，点击<a href="https://book.prototools.net/BartokWebBuild/BartokWebBuild.html">跳转进行体验</a>。</p><h3 id="2-21-点半买牌"><a href="#2-21-点半买牌" class="headerlink" title="2. 21 点半买牌"></a>2. 21 点半买牌</h3><h4 id="2-1-原始规则列举"><a href="#2-1-原始规则列举" class="headerlink" title="2.1 原始规则列举"></a>2.1 原始规则列举</h4><ul><li>游戏目标<ul><li>第一个将手牌凑齐 21 点半的玩家胜出</li></ul></li><li>游戏规则<ul><li>一副标准扑克牌，共 54 张牌<ul><li>其中 A<del>10 分别代表数字 1</del>10，共 40 张</li><li>J，Q，K，以及大小王都代表数字 0.5，共 14 张</li></ul></li><li>洗牌后将所有牌都作为抽牌堆</li><li>从抽牌堆顶上抽牌进行明牌公示，每次抽一张</li><li>以拍卖形式对当前明牌进行拍卖，玩家以任意顺序参与喊价，筹码自定（如酒）<ul><li>价高者支付筹码（如喝掉喊出量的酒），并获得当前明牌</li></ul></li><li>第一个凑齐 21 点半的玩家胜出，其余玩家都需要支付一定筹码</li></ul></li></ul><h4 id="2-2-规则反思与迭代-增加未知性"><a href="#2-2-规则反思与迭代-增加未知性" class="headerlink" title="2.2 规则反思与迭代 - 增加未知性"></a>2.2 规则反思与迭代 - 增加未知性</h4><p>在原始规则条件下，所有玩家的当前点数都是公示的，导致游戏缺少了未知性与刺激性，玩家能直接知道其余玩家还需多少点数才能胜利。</p><p>基于此，添加一条新的规则：<br>为每位玩家都添加一张其余人不可见的初始手牌</p><p>引入此规则后，参与者只能看到其余玩家场上的明牌点数，但并不能直接知道玩家还需多少点数才能胜利，从而增加了未知性和可玩性。</p><p>当前完整规则如下：</p><ul><li>一副标准扑克牌，共 54 张牌<ul><li>其中 A-10 分别代表数字 1-10，共 40 张</li><li>J，Q，K，以及大小王都代表数字 0.5，共 14 张</li></ul></li><li>洗牌后向每位玩家发牌 1 张</li><li>将其余牌都作为抽牌堆</li><li>从抽牌堆顶上抽牌进行明牌公示，每次抽一张</li><li>以拍卖形式对当前明牌进行拍卖，玩家以任意顺序参与喊价，筹码自定（如酒）<ul><li>价高者支付筹码（如喝掉喊出量的酒），并获得当前明牌</li></ul></li><li>第一个凑齐 21 点半的玩家胜出，其余玩家都需要支付一定筹码</li></ul><h4 id="2-3-规则反思与迭代-增加随机性与不可控性"><a href="#2-3-规则反思与迭代-增加随机性与不可控性" class="headerlink" title="2.3 规则反思与迭代 - 增加随机性与不可控性"></a>2.3 规则反思与迭代 - 增加随机性与不可控性</h4><p>在【2.2】版本的基础上，是否还可以增加一些随机性与不可控性呢？<br>基于此，添加一条新的规则：</p><ul><li>为参与者分配号数，在当前轮次拍卖结束后，从抽牌堆中抽出 1 张牌，若颜色为红色，则拍卖者成功获取当前拍卖牌，若颜色为黑色，则从包含参与者号数中的号数牌堆中抽出一张，将当前拍卖牌给予相应号数的玩家</li></ul><p>此规则的引入增加了游戏的随机性与不可控性，若是想要获取当前明牌就需要参与拍卖，但即使价格最高，支付了筹码，最终也有可能无法获取当前明牌，而为他人作嫁衣裳，或是为其他玩家制造“飞来横祸”，从而输掉游戏。</p><hr><h2 id="Roadmap"><a href="#Roadmap" class="headerlink" title="Roadmap"></a>Roadmap</h2><ul><li>待列举游戏<ul><li>青蛙跳水</li><li>瞄炮</li><li>柳树</li><li>十五的月亮十六圆</li><li>捞腌菜</li><li>牛肉面刀削面直升机</li><li>金字塔</li><li>游戏牌</li><li>七上八下</li><li>梦幻 3P</li><li>干瞪眼</li><li>斗牛</li><li>抢数字</li></ul></li><li>未来计划<ul><li>也许以后可以把这篇帖子的内容汇总成为一个喝酒游戏推荐软件，根据用户所需的游戏性、参与度、运气所占比例等指标为其推荐合适的喝酒游戏，谁知道呢 (￣▽￣)”</li></ul></li></ul><h2 id="Credit"><a href="#Credit" class="headerlink" title="Credit"></a>Credit</h2><p>封面图片由 <a href="https://unsplash.com/@no_noe?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Noémie Cauchon</a> 拍摄，取自 <a href="https://unsplash.com/">Unsplash</a></p>]]></content>
      
      
      <categories>
          
          <category> Thinking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Thinking </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>For Love Demo 展示及分析</title>
      <link href="2021/10/26/for-love-demo-showcase-and-analysis/"/>
      <url>2021/10/26/for-love-demo-showcase-and-analysis/</url>
      
        <content type="html"><![CDATA[<h2 id="《For-Love》Demo-展示"><a href="#《For-Love》Demo-展示" class="headerlink" title="《For Love》Demo 展示"></a>《For Love》Demo 展示</h2><h3 id="视频展示"><a href="#视频展示" class="headerlink" title="视频展示"></a>视频展示</h3><video width="480" height="270" controls>  <source src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/ForLoveCompression.mp4" type="video/mp4"></video><h3 id="截图展示"><a href="#截图展示" class="headerlink" title="截图展示"></a>截图展示</h3><table><tr> <center>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211026223000.png" alt="开始画面" style="zoom: 33%; text-align: center; align:middle;" border=0></td>     <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211026223154.png" alt="蓄力" style="zoom:33%; align:middle;" border=0></td>     <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211026223222.png" alt="发射" style="zoom:33%; align:middle;" border=0></td> </center></tr></table><table><tr> <center>    <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211026223248.png" alt="通过点击进行避障" style="zoom:33%; align:middle;" border=0></td>     <td><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211026223333.png" alt="通关" style="zoom:33%; align:middle;" border=0></td> </center></tr></table><h2 id="《For-Love》Demo-设计思路分析"><a href="#《For-Love》Demo-设计思路分析" class="headerlink" title="《For Love》Demo 设计思路分析"></a>《For Love》Demo 设计思路分析</h2><h3 id="灵感来源"><a href="#灵感来源" class="headerlink" title="灵感来源"></a>灵感来源</h3><p>此次 Gamejam 的关键词为 Transmission，头脑风暴后后最终将立意确定为【生命的传递】，基于此将游戏故事定为了对<strong>受孕过程的模拟</strong>，最终其实也希望玩家能在游玩之后体会到生命诞生的不易与伟大。</p><h3 id="游戏整体说明"><a href="#游戏整体说明" class="headerlink" title="游戏整体说明"></a>游戏整体说明</h3><p>以下将从目标、路径、挑战、体验四个方面对游戏进行整体说明：</p><ul><li>目标<ul><li>即游戏的结束条件</li><li>玩家需要通过操作，操纵尽可能多的生命体规避障碍，到达终点</li></ul></li><li>路径<ul><li>即玩家达到目标的手段</li><li>玩家需要通过不断点击屏幕产生反向推力，从而推动生命体不断向前</li></ul></li><li>挑战<ul><li>即玩家在实现目标的路径中可能碰到的障碍</li><li>游戏中设计的障碍结合受孕生理背景共有以下几种：<ul><li>屏幕滚动<ul><li>说明<ul><li>即屏幕会自动向上滚动，超出屏幕范围内的生命体便会消失</li></ul></li><li>寓意<ul><li>想要孕育新的生命需要不断向上，停滞便会被淘汰</li></ul></li></ul></li><li>边界<ul><li>说明<ul><li>生命体碰到边界便会消失</li></ul></li><li>寓意<ul><li>模仿子宫壁，若是生命体在不恰当的位置停留，便会被淘汰<img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211027132838.png" alt="子宫壁" style="zoom:67%;" /></li></ul></li></ul></li><li>隔断<ul><li>说明<ul><li>即路径中可能出现的粉色阻隔，生命体碰到便会消失</li></ul></li><li>寓意<ul><li>用绒毛的形象代替受孕生理过程中的阻碍，生命体若碰到便会消失<img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211027131926.png" alt="地图中随机生成的绒毛" style="zoom:80%;" /></li></ul></li></ul></li><li>掉落物<ul><li>说明<ul><li>即路径中可能掉落的白色球状物，生命体碰到便会消失</li></ul></li><li>寓意<ul><li>模仿白细胞，若是生命体碰到便会消失<img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211027132940.png" alt="随机掉落的白细胞" style="zoom:80%;" /></li></ul></li></ul></li></ul></li></ul></li><li>体验<ul><li>即期望玩家在游玩时获得的情感体验</li><li>在后面部分会展开描述，这里只进行列举<ul><li>生命诞生的不易</li><li>生命诞生的伟大</li><li>恍然大悟</li></ul></li></ul></li></ul><h3 id="目标体验分析"><a href="#目标体验分析" class="headerlink" title="目标体验分析"></a>目标体验分析</h3><p>前面提到了期望玩家能在游玩时获得的目标体验为生命诞生的不易和生命诞生的伟大，以下将对两种目标体验及实现手段进行分析。</p><ul><li>生命诞生的不易<ul><li>理解<ul><li>若想让玩家体会生命诞生的不易，便需要让其<strong>难以轻易通关</strong>，换言之便是会为玩家设计较高的游戏难度</li></ul></li><li>实现手段<ul><li>关卡难度<ul><li>地图设计<ul><li>整体的地图设计虽然简易，但也体现了<strong>先宽后窄</strong>的设计思想，目的是为了让玩家越往后的操作难度越大</li><li>而通过地图中最后的最窄部分也是玩家非线性体验的最高点  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211027150313.png" alt="最难通过的部分" style="zoom:80%;" /></li></ul></li><li>障碍设计<ul><li>不管是在地图中随机生成的阻挡物（绒毛），还是在行进过程中随机掉落的白色球状物（白细胞），其目的都是为了增加玩家通关难度</li></ul></li></ul></li><li>操作难度<ul><li>生命机制<ul><li>最开始有很多生命，但只有一次发射机会，之后只能通过不断操作来操控生命体不断向前，一旦生命体被全部淘汰，整局游戏便结束。</li></ul></li><li>操作机制<ul><li>游戏采取的是反作用力机制<ul><li>即以玩家点击点为中心，会向周围施加反向推力</li></ul></li><li>单次点击所能施加的力很小<ul><li>单次点击所能施加的力很小，这就要求玩家需要高频次地点击屏幕，相对的，也对玩家的<em>微操</em>能力提出了更高的要求</li></ul></li></ul></li><li>这样的生命和操作机制使得想要操控的生命体越多，操作难度便越大。</li></ul></li></ul></li></ul></li><li>生命诞生的伟大<ul><li>理解<ul><li>若想让玩家体会生命诞生的伟大，考虑从量方面入手，一为<strong>增强生命诞生的不易感</strong>，二为<strong>增强通关的获得感和成就感</strong></li></ul></li><li>实现手段<ul><li>增强生命诞生的不易感<ul><li>这一点可以参考上一部分【生命诞生的不易】中的内容</li></ul></li><li>增强通关的获得感和成就感<ul><li>分别从视觉和听觉层面来强化该体验<ul><li>视觉层面<ul><li>即用数字明显标识最终通关的生命体的数量</li></ul></li><li>听觉层面<ul><li>在通关视觉信息呈现的同时，也呈现<strong>婴儿哭声</strong>作为听觉刺激，从而强化通关的获得感和成就感，目的也是为了让玩家体会“自己真的带来了新生命”的感觉<img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211027135400.png" alt="通关" style="zoom: 50%;" /></li></ul></li></ul></li></ul></li></ul></li></ul></li><li>恍然大悟<ul><li>解释<ul><li>玩家在开始游玩时其实并不知道整个游戏过程是对于受孕过程的模拟，只有最后通关后看到通关文字以及听到婴儿哭声后才反应过来，从而产生恍然大悟的感觉</li></ul></li><li>实现手段<ul><li>恍然前<ul><li>即揭晓游戏本身的背景是受孕模拟前，需要以尽可能隐喻的方式对游戏元素进行呈现</li></ul></li><li>恍然<ul><li>即揭晓游戏本身是对受孕过程的模拟，这需要强有力的刺激才能让玩家感受到恍然大悟，所以以视觉（文字）+听觉（婴儿哭声）刺激的形式共同呈现</li></ul></li></ul></li></ul></li></ul><h3 id="其他设计细节"><a href="#其他设计细节" class="headerlink" title="其他设计细节"></a>其他设计细节</h3><h4 id="反作用力机制"><a href="#反作用力机制" class="headerlink" title="反作用力机制"></a>反作用力机制</h4><ul><li>设计背景<ul><li>目标平台是手机，所以玩家的可选操作空间较少</li></ul></li><li>设计思考<ul><li>反作用力机制带来的操作不习惯<ul><li>和传统的“指哪儿打哪儿”的操作不同，反作用力机制下，玩家的操作会带来反作用力，一开始可能需要一些时间适应</li></ul></li><li>Fat Fingers Problem（胖手指问题）<ul><li>解释<ul><li>即人们在使用移动设备时因为设备和视觉的限制，导致人们无法直接看到自己所点击的位置，从而出现的误触（想点击的位置和真实被点击的位置不一致）问题</li></ul></li><li>解决<ul><li>视觉呈现<ul><li>通过为玩家点击位置添加【波纹】，来帮助玩家确定所点击的位置，此举同时也可以视作力的一种具象化<img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211027142958.png" alt="通过呈现波纹来缓解 Fat Fingers Problem" style="zoom:80%;" /></li></ul></li><li>全局机制<ul><li>玩家通过点击所造成的影响是全局的，即在屏幕中任意位置都可以对生命体施加反作用力，其中会涉及的两个变量是力的源头和力的大小<ul><li>力的源头<ul><li>以点击点为圆心，向周围方向施加反作用力</li></ul></li><li>力的大小<ul><li>为反作用力设计了衰减机制，距离生命体越远，则生命体最终受到的力便越小</li></ul></li></ul></li></ul></li></ul></li></ul></li><li>反作用力的大小思考<ul><li>背景<ul><li>因为游戏是对着床这一生理现象的模拟，所以需要尽可能还原其自然选择和自由游动的状态</li></ul></li><li>反作用力大小的对比<ul><li>如果反作用力过大，那么会带来以下问题<ul><li>对自由游动这一状态的人为干预过大，对自然状态的还原度下降</li><li>反作用力过大会导致玩家操作难度极大上升，难以实现对生命体的微操</li><li>如果反作用力过大，那么即使是在有波纹的视觉辅助缓解了 Fat Fingers Problem，但是反而会产生的问题是玩家点击位置和最终的反馈点距离过远，即增大了玩家理解其操作所造成影响（系统反馈）的难度，导致玩家的操控感降低，这就是所谓的 Gulf of Evaluation 问题</li></ul></li><li>反之，反作用力小所带来的好处有<ul><li>更好地还原了“需要不断努力向前游动”这一生理过程</li><li>结合波纹，可以更好地感受到反馈</li><li>可以更好地进行微操</li></ul></li></ul></li></ul></li></ul></li></ul><h2 id="可能的扩展思路"><a href="#可能的扩展思路" class="headerlink" title="可能的扩展思路"></a>可能的扩展思路</h2><ul><li>关卡优化<ul><li>操作手感调整<ul><li>对力的大小进行调整，越往后的力越小，以凸显“力竭”的状态</li></ul></li><li>障碍物调整<ul><li>随着关卡的不断推进，可以在后期逐渐增多障碍物和掉落物，以增大通关游戏难度</li></ul></li><li>关卡拓展<ul><li>如为最后通关前增加【破壁】环节，以模拟进入卵巢的过程</li></ul></li></ul></li><li>增加社交元素<ul><li>如增加排行榜，以对比玩家表现</li></ul></li></ul><h2 id="可能的商业化思路"><a href="#可能的商业化思路" class="headerlink" title="可能的商业化思路"></a>可能的商业化思路</h2><p>如前所说，该游戏的目标平台是手机，所以最终预期成品的商业化思路是一次性买断制游戏。</p><h2 id="Gamejam-作品官方外链"><a href="#Gamejam-作品官方外链" class="headerlink" title="Gamejam 作品官方外链"></a>Gamejam 作品官方外链</h2><p><a href="https://v3.globalgamejam.org/2018/games/love-0">For Love</a></p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Demo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Portfolio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 第一章 太初之时 有设计师</title>
      <link href="2021/08/13/20210813-theartofgamedesign-chap1/"/>
      <url>2021/08/13/20210813-theartofgamedesign-chap1/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="第一章-太初之时，有设计师"><a href="#第一章-太初之时，有设计师" class="headerlink" title="第一章 太初之时，有设计师"></a>第一章 太初之时，有设计师</h2><h3 id="咒语"><a href="#咒语" class="headerlink" title="咒语"></a>咒语</h3><blockquote><p>我是游戏设计师</p></blockquote><h3 id="游戏设计师需要什么技能"><a href="#游戏设计师需要什么技能" class="headerlink" title="游戏设计师需要什么技能"></a>游戏设计师需要什么技能</h3><ul><li>动画</li><li>人类学<ul><li>了解受众</li></ul></li><li>建筑学<ul><li>世界的建造</li><li>人与空间的关系</li></ul></li><li>头脑风暴<ul><li>新想法的产生</li></ul></li><li>商业</li><li>电影制作方法<ul><li>镜头语言</li><li>有冲击力的情感</li></ul></li><li>沟通<ul><li>平息争论</li><li>了解彼此对于游戏的真实感受</li></ul></li><li>创意写作<ul><li>创造完整的虚拟世界及其中的住民</li><li>决定其中发生的一切</li></ul></li><li>经济学<ul><li>经济系统</li></ul></li><li>工程学<ul><li>有创意的设计师必须了解技术的局限和能力</li></ul></li><li>玩游戏<ul><li>相互借鉴</li></ul></li><li>历史<ul><li>汲取灵感</li></ul></li><li>管理<ul><li>共同目标</li><li>向上管理</li></ul></li><li>数学<ul><li>不能有所畏惧</li></ul></li><li>音乐<ul><li>触达灵魂</li></ul></li><li>心理学<ul><li>目标是令人感到幸福</li><li>了解心理运作机制</li></ul></li><li>公开演讲<ul><li>向人展示想法</li><li>自信、清晰、自然而有趣</li></ul></li><li>声音设计<ul><li>耳闻为实</li></ul></li><li>技术协作<ul><li>技术文档</li><li>不留遗漏</li></ul></li><li>视觉艺术<ul><li>熟练运用图形设计语言创造想要的感觉</li></ul></li></ul><h3 id="最重要的技能"><a href="#最重要的技能" class="headerlink" title="最重要的技能"></a>最重要的技能</h3><ul><li>倾听<ul><li>团队</li><li>受众</li><li>游戏</li><li>客户</li><li>自己</li></ul></li></ul><blockquote><p>需要经过思考来倾听</p></blockquote><blockquote><p>当我们倾听时,我们也将自己置于险境,接受这样的可能性:接下来听到的事情可能让我们心神倾覆,与我们的一切知识龃龉。这是开放思想的终极形式。这是了解真相的唯一途经。你必须像孩子一样看待一切,不带假设,观察全部,像赫尔曼·黑塞(Hermann Hesse)在《悉达多》中描述的那样:</p><blockquote><p>以一颗宁静的心灵、一种期盼而又宽容的心境去倾听,抛弃一切欲望和激情，抛弃一切评判与见解。</p></blockquote></blockquote><h4 id="五种倾听"><a href="#五种倾听" class="headerlink" title="五种倾听"></a>五种倾听</h4><ul><li>团队的声音<ul><li>互补</li><li>共享技能</li></ul></li><li>受众的声音<ul><li>了解他们的想法</li><li>胜于他们自身</li></ul></li><li>游戏的声音<ul><li>了解游戏的方方面面</li><li>知道哪里出了问题</li></ul></li><li>客户的声音<ul><li>辨别他们真正的需求</li></ul></li><li>自己的声音<ul><li>创意来源</li></ul></li></ul><h3 id="天才的秘密"><a href="#天才的秘密" class="headerlink" title="天才的秘密"></a>天才的秘密</h3><ul><li>天赋<ul><li>小天赋<ul><li>先天擅长</li></ul></li><li>大天赋<ul><li>对工作的爱</li></ul></li></ul></li></ul><hr><h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><h3 id="第一章-太初之时，有设计师-1"><a href="#第一章-太初之时，有设计师-1" class="headerlink" title="第一章 太初之时，有设计师"></a>第一章 太初之时，有设计师</h3><ul><li><p>《太阳马戏团:火花-点燃我们心中的创意之火》 (Cirque du Soleil: The Spark-Igniting the Creative Fire that Lives within Us All) 约翰.U.培根 (John U. Bacon) 、琳恩·休厄德(Lyn Heward)著。这是一本很棒的小书,教你怎么找到自己的道路。</p></li><li><p>【游戏设计师修炼秘笈》 (Challenges for Game Designers) , Brenda Brathwaite、施雷伯(lan Schreiber)著。这是一套非常出色的习题集,当你想要锻炼游戏设计肌肉时可以做。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 第三章 体验发生与场景</title>
      <link href="2021/08/13/20210813-theartofgamedesign-chap3/"/>
      <url>2021/08/13/20210813-theartofgamedesign-chap3/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="第三章-体验发生于场景"><a href="#第三章-体验发生于场景" class="headerlink" title="第三章 体验发生于场景"></a>第三章 体验发生于场景</h2><h3 id="流沙般的平台"><a href="#流沙般的平台" class="headerlink" title="流沙般的平台"></a>流沙般的平台</h3><ul><li><p>我们把生活中使用技术的地方称之为场景</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210813122146.png" style="zoom: 67%;" /></li></ul><h3 id="私人场景"><a href="#私人场景" class="headerlink" title="私人场景"></a>私人场景</h3><ul><li>游戏玩法常常具有私密性<ul><li>家<ul><li>安全</li><li>不孤单</li><li>不被人们包围</li></ul></li></ul></li></ul><h4 id="炉边"><a href="#炉边" class="headerlink" title="炉边"></a>炉边</h4><ul><li><p>人类定义的一个方面就是与火的关系</p><ul><li>光线</li><li>温暖</li><li>安全感</li></ul></li><li><p>例子</p><ul><li>任天堂 Wii<ul><li>为炉边设计</li><li>能让整个家庭一起玩</li><li>能在虚拟世界使用体感<ul><li>仅仅观赏游戏就能带来足够的快乐</li></ul></li></ul></li><li>舞力全开<ul><li>炉边跳舞</li></ul></li></ul></li></ul><h4 id="工作台"><a href="#工作台" class="headerlink" title="工作台"></a>工作台</h4><ul><li><p>感觉</p><ul><li>孤独</li><li>安静</li><li>有些凌乱</li></ul></li><li><p>工作台游戏</p><ul><li>难度更高</li><li>更紧张</li><li>持续时间长</li></ul></li><li><p>例子</p><ul><li>Valve Steam</li><li>魔兽世界和其他 MMORPG</li></ul></li></ul><h4 id="读书角"><a href="#读书角" class="headerlink" title="读书角"></a>读书角</h4><ul><li><p>典型读书角</p><ul><li>后仰姿势远离电视</li></ul></li><li><p>例子</p><ul><li>iPad 抓住了读书角的游戏机会</li></ul></li><li><p>读书角游戏 - 与读书体验类似</p><ul><li>难度更低</li><li>更简单</li><li>更放松</li></ul></li></ul><h3 id="公共场合"><a href="#公共场合" class="headerlink" title="公共场合"></a>公共场合</h3><ul><li>给予玩家在家中无法得到的体验</li></ul><h4 id="剧场"><a href="#剧场" class="headerlink" title="剧场"></a>剧场</h4><ul><li>特点<ul><li>大量人聚集</li><li>共同见证某事</li></ul></li></ul><blockquote><p>我们的潜意识能够感觉到其他人对这场表演的感受。这帮助我们专注于自己的感受。<br>这可能就是为什么电视秀总是播放哈哈大笑的声音——共同参与一种体验能够带来满足感</p></blockquote><ul><li>问题<ul><li>人太多了</li><li>游戏需要交互，想要成为每个玩家独特的体验<ul><li>交互的换了被大量座位打了折扣<ul><li>可能是因为人们容易感到疲倦</li><li>可能因为剧院太小而无法体现</li></ul></li></ul></li></ul></li></ul><h4 id="竞技场"><a href="#竞技场" class="headerlink" title="竞技场"></a>竞技场</h4><ul><li>特点<ul><li>庞大</li><li>露天</li><li>专为游戏玩法设计</li><li>输赢公开</li></ul></li></ul><blockquote><p>既然人们能够对他们所看到的游戏产生很强的兴奋感，许多<strong>竞技场的外围就是剧院</strong>，在一个地点创造了两种场景！</p></blockquote><ul><li>例子<ul><li>多人 FPS<ul><li>技术在工作台/炉边</li><li>大脑在竞技场</li></ul></li></ul></li></ul><h4 id="博物馆"><a href="#博物馆" class="headerlink" title="博物馆"></a>博物馆</h4><ul><li><p>特点</p><ul><li>从日常生活解放</li><li>观赏外来事物/浏览新的地点带来全新变化</li><li>拓宽知识</li><li>带回新观念 让家中熟悉事物焕然一新</li></ul></li><li><p>例子</p><ul><li>成都游戏展 GAMEON</li></ul></li></ul><h3 id="半公开-半私人场景"><a href="#半公开-半私人场景" class="headerlink" title="半公开/半私人场景"></a>半公开/半私人场景</h3><h4 id="游戏桌"><a href="#游戏桌" class="headerlink" title="游戏桌"></a>游戏桌</h4><ul><li>例子<ul><li>木板游戏</li><li>卡片游戏</li><li>骰子游戏</li></ul></li></ul><h4 id="操场"><a href="#操场" class="headerlink" title="操场"></a>操场</h4><ul><li>孩子们很喜欢</li><li>目前被忽视</li></ul><h4 id="随时随地"><a href="#随时随地" class="headerlink" title="随时随地"></a>随时随地</h4><ul><li><p>例子</p><ul><li>字谜</li><li>数独</li><li>找词语</li></ul></li><li><p>特点</p><ul><li>较低可玩性</li><li>简单互动和故事</li><li>只是为了填补碎片时间<ul><li>玩家并不倾向消费很多 可以的话希望免费</li></ul></li></ul></li></ul><h3 id="场景之间的混合与搭配"><a href="#场景之间的混合与搭配" class="headerlink" title="场景之间的混合与搭配"></a>场景之间的混合与搭配</h3><h4 id="3-号透镜：场景"><a href="#3-号透镜：场景" class="headerlink" title="3 号透镜：场景"></a>3 号透镜：场景</h4><ul><li>3号透镜:场景<ul><li>在我们的游戏设计中,我们玩游戏的场景对游戏会产生巨大的影响。为了确定你没有凭空设计游戏,问你自己这几个问题:<ul><li>我想要制作的游戏最适合哪种场景?</li><li>我的场景中是否有一些特殊的属性会影响到我的游戏?</li><li>我的游戏中有哪些元素能够与场景和谐共处?哪些元素不行?</li></ul></li></ul></li></ul><hr><h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><h3 id="第三章-体验发生与场景"><a href="#第三章-体验发生与场景" class="headerlink" title="第三章 体验发生与场景"></a>第三章 体验发生与场景</h3><ul><li>克里斯多弗·亚历山大等人撰写的《模式语言》 (A Pattern Language by Christopher Alexander et al)。这是一本令人深思的著作,讲述了人类与居住空间的关系。我们将会在第21章《空间》中再次介绍这本书。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 第二章 设计师创造体验</title>
      <link href="2021/08/13/20210813-theartofgamedesign-chap2/"/>
      <url>2021/08/13/20210813-theartofgamedesign-chap2/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="第二章-设计师创造体验"><a href="#第二章-设计师创造体验" class="headerlink" title="第二章 设计师创造体验"></a>第二章 设计师创造体验</h2><blockquote><p>游戏设计师真正关注的就是创造体验。</p></blockquote><h3 id="游戏不等于体验"><a href="#游戏不等于体验" class="headerlink" title="游戏不等于体验"></a>游戏不等于体验</h3><blockquote><p>游戏能够带来体验，但它并不是体验本身。</p></blockquote><blockquote><p>游戏设计师的能力需要通过想象体验的品质来衡量，因为这就是人们玩游戏的目的。</p></blockquote><h3 id="游戏特有于其他艺术形式的体验"><a href="#游戏特有于其他艺术形式的体验" class="headerlink" title="游戏特有于其他艺术形式的体验"></a>游戏特有于其他艺术形式的体验</h3><ul><li>书籍或剧本<ul><li>线性体验</li></ul></li><li>游戏<ul><li>非线性体验<ul><li>赋予玩家很强的控制能力</li><li>可以改变体验节奏/事件顺序</li><li>加入随机事件</li></ul></li></ul></li></ul><h3 id="追寻彩虹的三种途径"><a href="#追寻彩虹的三种途径" class="headerlink" title="追寻彩虹的三种途径"></a>追寻彩虹的三种途径</h3><ul><li>目标<ul><li>制作一种能够带来美妙和难忘体验的游戏</li></ul></li><li>三个学科<ul><li>心理学<ul><li>了解人类作出某种行为的机制</li></ul></li><li>人类学<ul><li>在人类层面上了解人们</li></ul></li><li>设计学<ul><li>让人们变得开心</li></ul></li></ul></li></ul><h4 id="心理学"><a href="#心理学" class="headerlink" title="心理学"></a>心理学</h4><ul><li>研究<ul><li>控制人类大脑的机制</li></ul></li><li>二十世纪早期分类<ul><li>行为学家<ul><li>只关注可量化行为</li><li>采用黑盒方式进行思维探究</li><li>主要工具是客观可控实验</li></ul></li><li>现象学家<ul><li>研究人类体验的本质和对事物的感受</li><li>主要工具是反思——在事情发生后感受自己的体验</li></ul></li></ul></li></ul><blockquote><p>游戏设计师不需要被科学的严谨责任感束缚,我们能够同时使用行为主义的实验和现象主义的反思学习我们想要了解的知识。因为<strong>作为设计师,我们并不关注客观现实世界中的绝对正确,而只关注在主观体验世界中的相对正确。</strong></p></blockquote><h4 id="人类学"><a href="#人类学" class="headerlink" title="人类学"></a>人类学</h4><ul><li><p>研究</p><ul><li>人类及其思想行为</li><li>采用比心理学更综合的方式观察人类<ul><li>身体</li><li>精神</li><li>文化</li></ul></li><li>研究世界上各种人群的相同点和不同点<ul><li>贯穿人类历史</li></ul></li></ul></li><li><p>方法</p><ul><li>field study<ul><li>居住在他们研究课题的所在地，尝试把自己完全融入到目标人群的世界中</li><li>努力客观地观察文化并进行实践，同时不断反思，将自己放在实验对象的位置。帮助人类学家 更好地想象实验对象的感受</li></ul></li></ul></li><li><p>与玩家交谈，学习他们的一切，把自己放到他们的位置，获得客观观点中没有的洞察力</p></li></ul><h4 id="设计学"><a href="#设计学" class="headerlink" title="设计学"></a>设计学</h4><ul><li><p>研究</p><ul><li>人类体验</li></ul></li><li><p>所有的设计原则都源于人类大脑，我们在理想情况下能够通过相同的心理学和人类学基础找到连接所有设计原则的方法。</p></li><li><p>我们必须开放四位并且勇于实践——优秀的创意能够来源于任何地方，但只有帮助提升游戏体验的创意才是好创意。</p></li></ul><h3 id="反思：力量、风险和实践"><a href="#反思：力量、风险和实践" class="headerlink" title="反思：力量、风险和实践"></a>反思：力量、风险和实践</h3><blockquote><p>通过深刻地体会自身的感受,观察评估和描述自己的体验,你能够对你的游戏做出迅速地判断:哪些地方做得不错,而哪些地方没有达到目标以及为什么。</p></blockquote><h4 id="危险-1：反思可能导致对事实的错误结论"><a href="#危险-1：反思可能导致对事实的错误结论" class="headerlink" title="危险 1：反思可能导致对事实的错误结论"></a>危险 1：反思可能导致对事实的错误结论</h4><blockquote><p>这一教训很简单:当处理人们的内心思维、尝试理解体验、感受事物时,反思是一种强有力且可信赖的工具。作为游戏设计师,我们不需要担忧这第一个危险。<strong>我们应当更加关注事物的感受而不是真实的正确。这样我们就能够更加信任自己的感受和本能去决定体验的品质。</strong></p></blockquote><h4 id="危险-2：自己的体验不一定适用于其他人"><a href="#危险-2：自己的体验不一定适用于其他人" class="headerlink" title="危险 2：自己的体验不一定适用于其他人"></a>危险 2：自己的体验不一定适用于其他人</h4><ul><li><p>“我只为与我一样的玩家设计游戏”有这些问题:</p><ul><li>游戏设计师更倾向于有特殊的偏好。也许与你一样的玩家的数量不足以让你的游戏具有投资价值。</li><li>你很难一个人设计或者开发游戏。如果团队中的不同成员对于最佳设计有不同的想法,你将很难与他们达成一致。</li><li>许多类型的游戏和受众都在你可接触的范围之外。</li></ul></li><li><p>“不能相信个人的观点”有这些问题:</p><ul><li>你无法用游戏测试解决所有的问题,尤其是在早期的设计阶段,你根本没有可供测试的游戏。这时候必须用“个人观点”的方法判定游戏设计的好坏。</li><li>在一个游戏完全成型之前,测试者也许难以接受一个非同寻常的创意。也许直到完成整个游戏时,他们才会欣赏这种想法。如果你不相信自己关于游戏好坏的感受,也许你的游戏本可以成为美丽的天鹅,但测试者认为只是个“丑小鸭”</li><li>游戏测试只能偶尔进行,但你每天都需要做出重要的游戏设计决定。</li></ul></li></ul><blockquote><ul><li>倾听！发掘自己的体验和其他人体验间的差异，把自己放到他们的位置上</li></ul></blockquote><h3 id="仔细分析想法"><a href="#仔细分析想法" class="headerlink" title="仔细分析想法"></a>仔细分析想法</h3><ul><li>想法需要具体<ul><li>是什么导致了感受</li><li>是什么让你思考</li><li>是什么让你做这件事</li></ul></li><li>你应该能分析任何可能产生的体验</li></ul><h4 id="1-号透镜：情感"><a href="#1-号透镜：情感" class="headerlink" title="1 号透镜：情感"></a>1 号透镜：情感</h4><ul><li><p>人们可能忘掉你的言语,但他们永远不会忘掉他们对你的感受。 一玛雅·安杰洛(Maya Angelou)</p></li><li><p>为了确定你创造的情感是正确的,问自己这几个问题:</p><ul><li>我希望玩家能够体验到怎样的情感?为什么?</li><li>当人们(包括我自己)玩游戏时,他们产生了怎样的情感?为什么?</li><li>我怎样缩小人们的实际体验与我的设想之间的距离?</li></ul></li></ul><h3 id="战胜海森堡原理"><a href="#战胜海森堡原理" class="headerlink" title="战胜海森堡原理"></a>战胜海森堡原理</h3><ul><li>反思仍然有一个巨大的挑战。我们怎样才能获得不受干扰的体验?由于观测行为本身就是一种体验。我们往往会面临这样一个问题。当你尝试观察自己打字时,你会发现你的打字速度减慢了,并且会产生很多错误。</li><li>在享受一个游戏或者电影时尝试观察你自己,享受感会很快消失殆尽。有人把这称作“分析的无奈”,也有人把这比作“海森堡原理”。<ul><li>这条原理引用自量子力学中的“海森堡不确定原理” 。</li><li>这个原理指出,无法在不干扰一个物体运动的情况下测量这个物体的运动。</li><li>类似的,体验的本质无法在不被干扰的情况下获得。</li></ul></li></ul><h4 id="分析记忆"><a href="#分析记忆" class="headerlink" title="分析记忆"></a>分析记忆</h4><ul><li>我们很难在体验发生时分析记忆</li><li>最好选择强有力的体验（通常会带来最好的灵感）和清晰的记忆进行分析<blockquote><ul><li>不要刻意抱着分析的目的玩游戏，而是等游戏结束之后，立即分析这段游戏的体验。</li><li>带着分析的目的能够帮助你记忆更多体验的细节而不会干涉体验本身。</li></ul></blockquote></li></ul><h4 id="两次经历"><a href="#两次经历" class="headerlink" title="两次经历"></a>两次经历</h4><ul><li><p>分析的另一个方法就是重复你的体验</p><ul><li>第一次不要停下来分析 —— 仅注重体验</li><li>第二次要分析所有的体验 <ul><li>甚至可以停下来记笔记</li></ul></li></ul></li><li><p>第二次经历体验会让脑海中一些纯粹的新鲜体验释放，让你有机会停下来思考体验的感觉和原因</p></li></ul><h4 id="暗中一瞥"><a href="#暗中一瞥" class="headerlink" title="暗中一瞥"></a>暗中一瞥</h4><ul><li><p>有没有可能观察体验而不破坏它</p><ul><li>偷偷的快速一瞥</li><li>在脑海中质疑并回答太多问题时，体验就毁了</li></ul></li><li><p>一个快速一瞥更像是</p><ul><li>“刺激吗” “是的” 这样的过程</li><li>立即停止分析回到体验中，直到下一次暗中一瞥</li></ul></li></ul><h4 id="默默观察"><a href="#默默观察" class="headerlink" title="默默观察"></a>默默观察</h4><ul><li>类似禅道自我审视</li><li>听从内心，理解人类本质</li></ul><h3 id="本质体验"><a href="#本质体验" class="headerlink" title="本质体验"></a>本质体验</h3><blockquote><p>一个优秀的游戏不需要你完美复制真实地体验。你需要做的是<strong>为你的游戏找出这种体验的精髓</strong>。</p></blockquote><ul><li><p>寻找能够定义所想要的体验的基本元素，并想办法让他们成为游戏中的一部分</p><ul><li>本质体验能够通过一种形式传递，这与真实的体验不同</li></ul></li><li><p>例子</p><ul><li>打雪仗<ul><li>天气很冷<ul><li>美术效果<ul><li>呼吸白气</li><li>动作颤抖</li></ul></li><li>音效<ul><li>呼啸寒风</li></ul></li><li>先关游戏规则<ul><li>脱去手套能够制造更好的雪球</li><li>手太冷就必须把手套穿上</li></ul></li></ul></li></ul></li></ul></li></ul><h4 id="2-号透镜：本质体验"><a href="#2-号透镜：本质体验" class="headerlink" title="2 号透镜：本质体验"></a>2 号透镜：本质体验</h4><ul><li><p>要想使用这个透镜,你需要停止你的游戏,开始思考游戏给玩家的体验。问你自己这几个问题：</p><ul><li>我想要让玩家获得怎样的体验?</li><li>这种体验的本质是什么?</li><li>我应该如何让我的游戏抓住这种体验的本质?</li></ul></li><li><p>需要清晰地表明想要创造的体验，找出尽可能多的方法把这种体验放入游戏中</p></li><li><p>例子</p><ul><li>will sports 棒球游戏<ul><li>本质体验：挥棒</li></ul></li><li>James Bond 007<ul><li>本质体验：风险行为</li><li>游戏机制：英雄点</li></ul></li></ul></li></ul><blockquote><ul><li>游戏设计师的终极目标是<strong>传达体验</strong></li></ul></blockquote><h3 id="你的感受都是真实的"><a href="#你的感受都是真实的" class="headerlink" title="你的感受都是真实的"></a>你的感受都是真实的</h3><blockquote><p>实际上所有对体验的讨论都会带来一个很奇怪的想法。我们所能了解的现实都是现实的体验。我们又知道我们的体验“并不是真的现实”。我们会用自己的意识和大脑过滤现实。<strong>我们实际体验到的意识是一种幻觉–一点也不真切。但这种幻觉是我们所能拥有的最真实的东西。因为这就是我们自己。</strong>这是个让哲学家头痛的问题,但是对游戏设计师是一件好事。这意味着<strong>我们的游戏创造了所设计的体验,并且这种体验可能比日常体验更真实,更有意义。</strong></p></blockquote><hr>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 第四章 体验从游戏中诞生</title>
      <link href="2021/08/13/20210813-theartofgamedesign-chap4/"/>
      <url>2021/08/13/20210813-theartofgamedesign-chap4/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="第四章-体验从游戏中诞生"><a href="#第四章-体验从游戏中诞生" class="headerlink" title="第四章 体验从游戏中诞生"></a>第四章 体验从游戏中诞生</h2><ul><li>所有类型的游戏都可以被视为一种<ul><li>桌面</li><li>卡牌</li><li>体育</li><li>操场</li><li>聚会</li><li>赌博</li><li>解密</li><li>街机</li><li>电子</li><li>电脑</li><li>视频</li><li>…</li></ul></li></ul><h3 id="定义的争吵"><a href="#定义的争吵" class="headerlink" title="定义的争吵"></a>定义的争吵</h3><blockquote><ul><li>我们面临的真正问题并不是缺少描述游戏设计元素的单词——而是对这些想法的真正含义缺少清晰的思考。</li><li>当你评判一个设计是好是坏以及原因的时候，你需要清楚地陈述你想要表达的意思</li><li>是否知道游戏设计的词汇并不重要——重要的是知道游戏设计的理念——我们认为这些词汇都无关紧要</li></ul></blockquote><blockquote><ul><li>定义术语能够让你清晰简洁并有分析性地进行思考</li></ul></blockquote><h3 id="什么是游戏"><a href="#什么是游戏" class="headerlink" title="什么是游戏"></a>什么是游戏</h3><ul><li><p>游戏是一种玩的东西</p></li><li><p>玩具是一些你可以玩的东西</p></li><li><p>玩具是一种可以玩的物品</p></li><li><p>好的玩具是一件玩起来很有乐趣的物品</p></li><li><p>乐趣是一种带有惊喜的愉悦感</p></li><li><p>什么是玩</p><blockquote><ul><li>玩耍就是漫无目的地浪费旺盛的精力。 -弗兰德里奇·席勒( Friedrich Schiller)</li><li>玩耍是指那些伴有愉悦、兴奋、力量和自我认知感的活动。 -.巴纳德·吉尔摩(J. Barnard Gilmore )</li><li>玩耍就是在一个更加坚固的结构中的自由移动。 -凯蒂·赛伦和埃里克·齐默尔曼( Katie Salen and Eric Zimmerman )《玩乐之道》（Rules of Play）</li><li>玩耍是那些自发的并且<strong>纯粹</strong>为此的活动。 –乔治·桑塔亚那(George Santayana )</li></ul></blockquote></li></ul><blockquote><p>我发现当我想要定义一个人类的活动时,减少关注这个活动本身而更多关注驱动这个活动的想法和感受会很有用。</p></blockquote><blockquote><ul><li>玩耍是沉迷于好奇心的活动</li></ul></blockquote><h4 id="4-号透镜：惊喜"><a href="#4-号透镜：惊喜" class="headerlink" title="4 号透镜：惊喜"></a>4 号透镜：惊喜</h4><ul><li>惊喜是一种我们很容易忘记的基础情绪。使用这个透镜来提醒你自己让你的游戏充满惊喜。问你自己这几个问题:<ul><li>当玩家们玩我的游戏时,什么会让他们感到惊喜?</li><li>我的游戏中的故事有惊喜吗?或者规则呢?或者艺术呢?或者技术呢？</li><li>你的规则能够让玩家之间互相带来惊喜吗?</li><li>你的规则能够让玩家们给自己带来惊喜吗?</li><li>惊喜是所有娱乐活动的重要组成部分–它是幽默、策略和解决问题的基础。我们的大脑很容易感受到惊喜。在一个实验中,测试者将糖水或者普通水喷到参与者的口中,获得随机模式喷雾的参与者会比获得固定模式喷雾的参与者有更好的体验,即使他们获得了同样数量的糖水。在另外的实验中,大脑扫描显示了即使在不愉快的惊喜中,大脑的愉悦中心也会被触发。</li></ul></li></ul><h4 id="5-号透镜：乐趣"><a href="#5-号透镜：乐趣" class="headerlink" title="5 号透镜：乐趣"></a>5 号透镜：乐趣</h4><ul><li>尽管有时候乐趣无法被分析,但在几乎所有的游戏中乐趣都是令人喜爱的。为了最大化游戏的乐趣,问你自己这几个问题:<ul><li>我的游戏中的哪个部分很有趣,为什么?</li><li>哪个部分需要变得更加有趣?</li></ul></li></ul><h4 id="6-号透镜：好奇心"><a href="#6-号透镜：好奇心" class="headerlink" title="6 号透镜：好奇心"></a>6 号透镜：好奇心</h4><ul><li>要使用这个透镜,思考玩家的真的动机-不是游戏的目标,而是玩家想要完成目标的真正原因。问你自己这几个问题:<ul><li>我的游戏给玩家的大脑提出了怎样的问题?</li><li>我正在做哪些努力让他们在意这些问题?</li><li>我能做什么来使他们提出更多的问题?</li><li>比如,一个解谜电子游戏在每一关中都可能有一个时间限定的目标。玩家们尝试回答这样一个问题: “我能在30秒之内找到过关的方法吗? ”一个让他们更加在意的方法是,当他们解决了任意一个谜题后播放一段有趣的动画,那么玩家就会问这样一个问题: “我想知道下一个动画是什么吗? ”</li></ul></li></ul><h3 id="不，认真一些，什么才是游戏呢"><a href="#不，认真一些，什么才是游戏呢" class="headerlink" title="不，认真一些，什么才是游戏呢"></a>不，认真一些，什么才是游戏呢</h3><ul><li>游戏<ul><li>游戏是一种对自主控制系统的练习,其中包含了力量的竞争,被规则限制以产生一个不平衡的结果。一艾略特·埃夫登和布莱恩·萨顿·史密斯 (Elliot Avedon and Brian Sutton-Smith)<ul><li>对自主控制系统的练习<ul><li>游戏与玩耍一样，是完全的自主行为</li></ul></li><li>力量的竞争<ul><li>游戏有目标</li><li>游戏也有冲突</li></ul></li><li>被规则限制<ul><li>游戏有其规则</li></ul></li><li>不平衡的结果<ul><li>游戏从平衡开始，最后有人获得了胜利</li></ul></li></ul></li><li>(游戏是)一个拥有内在意义的交互结构，需要玩家们努力完成目标。 —格雷格·科斯蒂基安(Greg Costikyan )<ul><li>交互结构<ul><li> 玩家是主动的</li><li> 游戏有一种结构（被规则定义），你可以与之交互，它也能与你交互</li></ul></li><li>努力完成目标<ul><li> 优秀的游戏的挑战恰到好处</li></ul></li><li>内生意义<ul><li> 内生：由器官或者系统的内部因素引起，或者内在发生</li><li>在游戏中有价值的部分也仅仅在游戏中才有价值<ul><li> 是游戏本身给了它这种意义</li><li> 游戏越吸引人，游戏中产生的内生价值就越大</li></ul></li><li>例子<ul><li>《大笨猫》 Bubsy<ul><li> 标准平台类游戏</li><li> 闯关 + 收集纱线球获得分数（分数只与收集了多少物品有关）</li><li> 玩家开始还会去收集 但后来完全忽视了纱线球 因为更高的分数并没有任何效果 即纱线球没有内在价值</li></ul></li><li>《刺客索尼克 2》 sonic the hedgehog 2<ul><li> 相似的平台游戏</li><li>可以收集戒指<ul><li> 携带截止能够保护避免被打败，每当收集到 100 个戒指就能获得新的生命，这增加了通关机会</li><li> 戒指有很强的内生价值</li></ul></li></ul></li></ul></li></ul></li></ul></li><li>游戏是一个封闭的正式系统,会给玩家带来结构化的冲突,并产生一个不平衡的结果。一特雷西·富勒顿、克里斯·斯维因和史蒂文·霍夫曼 (Tracy Fullerton, Chris Swain, and Steven Hoffman)<ul><li>吸引玩家</li><li>一个封闭的正式系统<ul><li>系统<ul><li>游戏由相互关联并协同工作的元素构成</li></ul></li><li>正式<ul><li>系统被清晰地定义了，有其自己的规则</li></ul></li><li>封闭<ul><li>说明了系统边界</li></ul></li></ul></li></ul></li></ul></li></ul><h4 id="7-号透镜：内生价值"><a href="#7-号透镜：内生价值" class="headerlink" title="7 号透镜：内生价值"></a>7 号透镜：内生价值</h4><ul><li>7号透镜:内生价值<ul><li>一个游戏的成功与玩家认为它是否重要紧密相关。要使用这个透镜来思考一下,在你的游戏中,玩家对道具、目标和分数的感受。问你自己这几个问题:<ul><li>在我的游戏中哪些东西对玩家很有价值?</li><li>怎样让这些东西对玩家更有价值?</li><li>游戏中的价值与玩家的动机之间有怎样的关系?</li><li>记住,道具的价值和游戏的比分直观地反映了玩家想要在游戏中获胜的程度。通过思考玩家真正关心的事物及其原因,你就知道应该怎样改进你的游戏了。</li></ul></li></ul></li></ul><h4 id="游戏特性列表"><a href="#游戏特性列表" class="headerlink" title="游戏特性列表"></a>游戏特性列表</h4><ul><li><p>Q1 游戏是完全自主的</p></li><li><p>Q2 游戏有目标</p></li><li><p>Q3 游戏有冲突</p></li><li><p>Q4 游戏有规则</p></li><li><p>Q5 游戏有输赢</p></li><li><p>Q6 游戏是可交互的</p></li><li><p>Q7 游戏具有挑战性</p></li><li><p>Q8 游戏能够创造他自己的内在价值</p></li><li><p>Q9 游戏能吸引玩家</p></li><li><p>Q10 游戏是封闭的正式系统</p></li><li><p>人们为什么这么喜欢游戏</p><ul><li>喜欢解决问题</li></ul></li></ul><h3 id="解决问题的入门"><a href="#解决问题的入门" class="headerlink" title="解决问题的入门"></a>解决问题的入门</h3><ul><li>我们在解决问题时做了什么，怎样与游戏特性列表联系起来<ul><li>第一件事就是描述我们想要解决的问题<ul><li>Q2 游戏有目标</li></ul></li><li>为问题构建框架，确定其范围和问题空间的本质，也要确定可以用哪些方法来解决问题<ul><li>Q4 游戏有规则</li></ul></li><li>我们很难描述应该怎样去做。这并不是一个完整的口头进程。我们仿佛在大脑中建立了一个内在的最小简化版本的现实世界,这个世界只包含了一些用于解决问题的必要关系。它就像是一个更干净的微型现实世界环境,让我们可以更轻松地在其中思考、操作或者交互(Q6)。<ul><li>Q6 游戏是可交互的</li></ul></li><li>在某种意义上,我们确立了一个带有目标的封闭的正式系统(Q10) 。<ul><li>Q10 游戏是封闭的正式系统</li></ul></li><li>在我们努力完成目标时,会遇到许多挑战(Q7) ,因为这个系统包含了一些冲突(Q3) 。<ul><li>Q7 游戏具有挑战性</li><li>Q3 游戏有冲突</li></ul></li><li>如果我们在意这个问题,我们会很快沉浸到解决问题之中(Q9) 。<ul><li>Q9 游戏能吸引玩家</li></ul></li><li>这个时候,由于我们专注于内在的问题空间,我们会有些忘记现实世界。既然问题空间只是现实世界的一个简化版本,而解决问题对我们又很重要,那么如果问题空间中的元素能让我们更接近于解决问题的目标,这些元素很快就会获得一种内在的重要性,这种重要性不需要被关联到问题内容的外部(Q8) 。<ul><li>Q8 游戏能够创造他自己的内在价值</li></ul></li><li>最终,我们击败了这个问题或者被这个问题击败,这就是胜利或者失败(Q5)<ul><li>Q5 游戏有输赢</li></ul></li></ul></li></ul><blockquote><ul><li>游戏是一种解决问题的活动 —— 缺少 Q1</li><li>游戏是一种以嬉戏的态度进行的解决问题的活动</li></ul></blockquote><h4 id="8-号透镜：解决的问题"><a href="#8-号透镜：解决的问题" class="headerlink" title="8 号透镜：解决的问题"></a>8 号透镜：解决的问题</h4><ul><li>8号透镜：解决的问题<ul><li>要使用这个透镜,需要思考一下游戏中的问题。由于每个游戏都有一些等待解决的问题,在你的游戏中,玩家需要解决那些问题才能在游戏中获胜。问你自己这几个问题：<ul><li>我的游戏要求玩家解决哪些问题?</li><li>是否有一些隐藏的问题作为玩法的一部分出现?</li><li>在我的游戏中,怎样产生新的问题来对玩家保持吸引力?</li></ul></li></ul></li></ul><h3 id="我们努力的成果"><a href="#我们努力的成果" class="headerlink" title="我们努力的成果"></a>我们努力的成果</h3><ul><li>快乐是一种带有惊喜的满足感。</li><li>玩耍是一种满足好奇心的行为。</li><li>玩具是你玩耍的对象。</li><li>优秀的玩具是一个能够带来乐趣的物品。</li><li>游戏是一种以嬉戏的态度进行的解决问题的活动。</li></ul><blockquote><p>定义这些属于最终的目的是获得新的视角——这些视角才是我们努力的成果，而不是定义本身</p></blockquote><blockquote><p>我们无法在洞悉生命本身的全部事实之前了解玩乐的全部事实。 一雷曼和威蒂(Lehman and Witty)</p></blockquote><hr><h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><h3 id="第四章-体验从游戏中诞生-1"><a href="#第四章-体验从游戏中诞生-1" class="headerlink" title="第四章 体验从游戏中诞生"></a>第四章 体验从游戏中诞生</h3><ul><li><p>罗格·卡洛伊斯撰写的《男人、玩乐与游戏》 (Man, Play, and Games byRoger Callois)。这本写于1961年的书长久以来都是学者们研究游戏的最爱。不仅如此,这本书对游戏玩法的本质有许多与众不同的观点,读起来让人爱不释手。</p></li><li><p>詹姆斯·P.卡斯撰写的《有限与无限的游戏》 (Finite and Infinite GamesbyJames P. Carse)。这是一本简短而令人鼓舞的书,它对游戏与生活的关系有着迷人的哲学陈述。</p></li><li><p>尼科尔·拉扎罗撰写的《我们为什么玩游戏:故事以外情感的四个关键要素》 (Why We Play Games: Four Keys to Emotion without Story by NicoleLazzaro) 。这是一次对乐趣维度的激进探索。</p></li><li><p>卡蒂·萨伦与埃里克·齐默尔曼撰写的《玩乐之道》的第7章与第8章 (Rules of Play by Katie Salen and Eric Zimmerman, Chapters 7 and 8) 。这两章包含了一些关于游戏定义的值得深思的结论。</p></li><li><p>巴纳德·休茨撰写的《蝈蝈:游戏、生活与乌托邦》 (The Grasshopper: Games, Life, and Utopia by Bernard Suits ( pronounced “sweets”) 。这是一场关于游戏本质的不可思议的心理学试验。休茨对游戏的定义激怒了我,然而我却无法驳倒他。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 第五章 游戏由元素构成</title>
      <link href="2021/08/13/20210813-theartofgamedesign-chap5/"/>
      <url>2021/08/13/20210813-theartofgamedesign-chap5/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="第五章-游戏由元素构成"><a href="#第五章-游戏由元素构成" class="headerlink" title="第五章 游戏由元素构成"></a>第五章 游戏由元素构成</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210813200614.png" style="zoom: 50%;" /><h3 id="什么组成了小游戏"><a href="#什么组成了小游戏" class="headerlink" title="什么组成了小游戏"></a>什么组成了小游戏</h3><h3 id="四种基本元素"><a href="#四种基本元素" class="headerlink" title="四种基本元素"></a>四种基本元素</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210813200747.png" style="zoom:67%;" /><ol><li>机制<ul><li>定义<ul><li>游戏中的过程和规则</li><li>机制描述了玩家怎样才能完成你的游戏目标，当他们尝试时，会发生什么。</li></ul></li><li>对比<ul><li>线性体验（小说、电影）并不包含机制，是机制让游戏成为了游戏</li></ul></li><li>与其他元素的关系<ul><li>当你选择了一系列对玩法有重要作用的机制时，需要选择技术来支持；需要选择美学来呈现；需要故事来让（有时很奇怪）机制吸引玩家</li></ul></li></ul></li><li>故事<ul><li>定义<ul><li>是游戏中事件展开的顺序</li><li>可能是线性/预先设定的；也可能是有分支/随机发生的</li></ul></li><li>与其他元素的关系<ul><li>当想通过游戏讲述故事</li><li>需要合适的机制来推动故事发展，让故事浮出水面</li><li>通过美学来加强故事表现力</li><li>通过技术来配合游戏中将要出现的特定故事</li></ul></li></ul></li><li>美学<ul><li>定义<ul><li>是游戏的外观、声音、气味、味道和感觉</li><li>对玩家体验有最直接影响，因而是游戏设计中非常重要的一个方面</li></ul></li><li>与其他元素的关系<ul><li>如果想让玩家体验到特定的外观、语音并让玩家沉浸其中</li><li>需要选择技术，不仅能够将美学表达出来，而且能够放大它们</li><li>需要选择一种机制让玩家们感受到游戏世界中的美学已经被确定了</li><li>需要一个有一系列事件的故事让美学在合适的时机凸显出来，展现出最强的影响力</li><li>美学能够强化其他游戏元素，创造一个更有纪念意义的体验</li></ul></li></ul></li><li>技术<ul><li>定义<ul><li>不是特指高科技</li><li>对于任何让你游戏实现的材质和交互，就像纸和铅笔，塑料原型或者高能激光一样，你选择的技术英爱能让你的游戏完成特定目标，并禁止它完成其他事情</li></ul></li><li>与其他元素的关系<ul><li>技术从本质上来讲是一种媒介</li><li>美学通过它展现</li><li>机制通过它产生作用</li><li>故事通过它被讲述</li></ul></li></ul></li></ol><blockquote><p>没有任何一种元素比其他的更重要</p></blockquote><h4 id="9-号透镜：四种元素"><a href="#9-号透镜：四种元素" class="headerlink" title="9 号透镜：四种元素"></a>9 号透镜：四种元素</h4><ul><li><p>9号透镜:四种元素</p><ul><li>要使用这个透镜,观察你的游戏实际上是由什么构成的,单独考虑各种元素然后将它们统一看待,问你自己这几个问题:<ul><li>我的游戏设计使用了全部的四种元素吗?</li><li>我的设计能够通过增强一种或者多种分类的元素来获得提高吗?</li><li>四种元素是否和谐,互相作用并向同一个主题努力?</li></ul></li></ul></li><li><p>例子</p><ul><li>太空侵入者<ul><li>技术:<ul><li>所有的新游戏在某种程度上都有所革新。《太空入侵者》背后的技术是为这款游戏量身定做的。这是第一款允许玩家与不断逼近的军队战斗的视频游戏。这个设计只有通过为它特地定制的主板才可以实现。通过这项技术,一系列新的游戏机制能够展现出来。这项技术也为这个目的而产生。</li></ul></li><li>机制: <ul><li>《太空入侵者》的游戏机制是崭新的,非常刺激。更重要的是,这很有趣并且是平衡的。玩家不仅能与外星人互相射击,还能躲在可被摧毁的盾牌之后(玩家自己也可以选择摧毁) 。不仅如此,通过设计神秘的飞碟,玩家还能获得额外的分数奖励。没有时间限制,因为游戏能够通过2种方式结束:玩家的飞船被外星人摧毁,或者外星人抵达玩家的星球。外星人靠得越近,就越容易射击,但是分数也越低。远处的外星人拥有更高的分数。另一个有趣的机制是,你每击落48个外星人,外星人的入侵就会加速。这带来了兴奋感,让有趣的故事体现出来。从根本上说, 《太空入侵者》背后的机制在当时十分坚固、平衡,而充满了革新。</li></ul></li><li>故事:<ul><li>这个游戏不需要故事。它本可以是个抽象的游戏,玩家操纵三角形向方块射击。但是故事能够让游戏更加令人兴奋并且更容易理解。《太空入侵者》的故事最初并不是一个关于外星人入侵的故事。它原本是这样一个游戏,你向逼近的人类军队开火。据说太东公司认为这会传达一种不好的信息,所以故事就改变了。一个关于外星人的新故事会更有效,理由如下:<ul><li>市面上已经发布了一些战争主题的游戏(例如, 1976年发布的《海狼》 (Sea Wolf) ) ,但当时关于外太空战争的游戏却十分新颖。</li><li>一些人对于在游戏中向人类射击感到恶心(1976年发布的《死亡竞速》 (Death Race)已经让暴力成为了视频游戏中的敏感问题)</li><li>高科技的电脑绘图技术让他们能够创造未来主题。</li><li>进攻的战士需要在地上跑步,这意味着游戏必须有一个从上至下的视角。《太空入侵者》给你这样一种感觉:外星人正在向你的行星表面降落,你正在朝上向他们射击。从某种程度上,悬停飞行的外星人是可信的,并让这个故事更有戏剧性。如果他们降落了,我们的末日就到了。故事的改变带来了摄像视角的改变。这对美术的变化也是戏剧性的。</li></ul></li></ul></li><li>美学:<ul><li>有人嘲笑它的视觉表现看起来很原始。但是设计师在游戏中设计了许多细节。外星人并不完全相同,他们有3种不同的设计,每一种都拥有不同的分数。他们有2帧效果不错的行进动画。它原本并不能显示颜色-但一种基本技术的改变解决了这个问题!既然玩家被限制在屏幕的底部,外星人在中部而飞碟在顶部,设计师设置了透明的彩色塑料条来分割屏幕,你地飞船和护盾是绿色的,外星人是白色的,飞碟是红色的。因为游戏的机制极大的增强了美术表现,这改变了游戏中的技术。声音是美学中一个重要的组成部分。行进的入侵者会产生一种心跳声。当它们加速时,心跳声也会加速,让玩家觉得身临其境。游戏中还有其他音效帮助讲述这个故事。最有纪念意义的是,当你的飞船被外星人的导弹击中时,会有惩罚性的嗡嗡声。但不是所有的美学都被禁锢在游戏本身里面,在《外星人入侵者》的街机筐体上,有一个引人注目的招贴画,简单地表现了外星人入侵者的故事。</li></ul></li><li>《太空入侵者》的成功的关键在一定程度上可以归功于这四种基本元素,它们都向同一个目标努力-让玩家体验到与外星人之间绚丽的太空战斗。每一种元素会兼顾其他的元素,一种元素的不足会激发设计师的灵感来调整其他元素。在通过元素四分透镜看待你的设计时,你需要拥有一些敏锐的洞察力。</li></ul></li></ul></li></ul><h3 id="皮肤与骨骼"><a href="#皮肤与骨骼" class="headerlink" title="皮肤与骨骼"></a>皮肤与骨骼</h3><ul><li><p>游戏的皮肤</p><ul><li>玩家体验</li></ul></li><li><p>游戏的骨骼</p><ul><li>组成游戏的元素</li></ul></li><li><p>游戏设计中的巨大挑战</p><ul><li>在理解元素及其关系是如何产生体验的同时感受游戏体验</li><li>你必须同时看到皮肤和骨骼<ul><li>如果只专注于皮肤<ul><li>会思考体验的感受</li><li>却不理解为什么会有这样的感受或者怎样提高这种感受</li></ul></li><li>如果只关注骨骼<ul><li>可能让一个游戏结构在理论上十分完美</li><li>而在实践中十分糟糕</li></ul></li><li>同时专注于这两件事<ul><li>就能在看到游戏运行的方式的同时感受到游戏体验的力量</li></ul></li></ul></li></ul></li></ul><h4 id="10-号透镜：全息设计"><a href="#10-号透镜：全息设计" class="headerlink" title="10 号透镜：全息设计"></a>10 号透镜：全息设计</h4><ul><li>10号透镜:全息设计<ul><li>要使用这个透镜,你必须一次性看到游戏的全部:四种元素和玩家体验,以及它们是怎样关联起来的。你可以把注意力从皮肤转移到骨骼再到皮肤,但更好的方法是全息观察游戏和体验。</li><li>问你自己这几个问题：<ul><li>游戏中的哪一种元素产生了令人享受的体验?</li><li>游戏中的哪一种元素会让玩家在体验中分心?</li><li>怎样改变游戏元素来提高游戏体验?</li></ul></li></ul></li></ul><hr>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 第七章 游戏始于一个创意</title>
      <link href="2021/08/13/20210813-theartofgamedesign-chap7/"/>
      <url>2021/08/13/20210813-theartofgamedesign-chap7/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="第七章-游戏始于一个创意"><a href="#第七章-游戏始于一个创意" class="headerlink" title="第七章 游戏始于一个创意"></a>第七章 游戏始于一个创意</h2><h3 id="灵感"><a href="#灵感" class="headerlink" title="灵感"></a>灵感</h3><blockquote><p>秘密就是：不要从其他杂技演员那里寻找灵感——到其他地方去看看。</p></blockquote><h4 id="13-号透镜：无尽灵感"><a href="#13-号透镜：无尽灵感" class="headerlink" title="13 号透镜：无尽灵感"></a>13 号透镜：无尽灵感</h4><ul><li>13 号透镜：无尽灵感<ul><li>当你知道如何倾听时，每个人都可以成为大师。——拉姆·达斯（Ram Dass）</li><li>要使用这个透镜，不要思考你的游戏，也不要观察那些看起来差不多的游戏。正相反，你要四处看看。</li><li>问你自己这几个问题<ul><li>我的生活中有怎样的体验想要与他人分享？</li><li>有哪些小技巧可以让我捕捉到体验的本质，并把它纳入我的游戏中？</li></ul></li><li>使用这个透镜需要开放的心态和强大的想象力。你需要了解自己的感受，观察周围发生的一切事物。你必须尝试一些不可能的事——一场比武不可能用掷骰子的方式来获得兴奋感，一个电子游戏也无法让玩家害怕黑暗。使用这个透镜寻找一些非游戏体验，为你的游戏提供灵感。四个不同的元素（技术、机制、故事和美学）能够被一个单纯的灵感组合起来，也能构筑不同的灵感，你应该将它们混合起来创造一些崭新的游戏。当你以现实生活为基础作为方向指导你的决定时，你的体验将会获得无可匹敌的力量和独一无二的特点。</li><li>这个透镜与体验本质透镜（2 号透镜）能够结合起来。使用无尽灵感透镜来寻找美妙的体验，使用体验本质透镜将它们纳入你的游戏中。</li></ul></li></ul><p>灵感是最优秀的游戏背后隐藏的秘密之一。怎样才能将一个灵感变为一个伟大的游戏设计？</p><p>第一步就是承认你遇到了一个难题。</p><h3 id="陈述问题"><a href="#陈述问题" class="headerlink" title="陈述问题"></a>陈述问题</h3><p>设计的目的就是解决问题。想出创意之前，需要确定为什么要做这件事。好的问题描述能体现目标与约束。</p><blockquote><blockquote><p>“为什么”这件事实在是致命而重要</p></blockquote></blockquote><p>最初的问题描述可能是：</p><blockquote><p>怎样制作一款基于网页的，能让孩子们真正喜欢的游戏呢</p></blockquote><p>目标：孩子们真正喜欢的游戏<br>约束：web-based</p><p>这里其实并没有限定只能做游戏，所以可能需要用更宽泛的术语来重新描述问题：</p><blockquote><p>怎样才能创造出一种让孩子们喜欢的，基于网页的体验呢</p></blockquote><p>正确的问题描述很重要</p><ul><li>太宽泛：会想到不符合目标的设计</li><li>太狭窄：可能拒绝潜在的明智解决方案，因为认定只有特定类型解决方案才适用</li></ul><p>清晰陈述问题的优势：</p><ol><li>更广阔的的创造空间。</li><li>更清晰地评估。</li><li>更顺畅的交流。</li></ol><p>一个完整游戏设计将会覆盖所有四种基本元素：技术、机制、故事和美学。问题陈述往往会把你约束在一个或多个已确立元素之上。尝试陈述问题时，用四维度观点来检视陈述。</p><p>比如：</p><ol><li>怎样制作一个利用磁铁特性（机制限制）的有趣的桌面游戏（技术限制）</li><li>怎样制作一个能够讲述奇幻森林历险记（故事限制）的电子游戏（技术限制）</li><li>怎样制作一个感觉像超现实主义绘画（美学限制）的游戏</li><li>怎样改进俄罗斯方块（算是 故事限制吧？）</li></ol><p>把游戏看作问题的解决方案，这是一种有用的视角，也是 14 号透镜。</p><h4 id="14-号透镜：问题陈述"><a href="#14-号透镜：问题陈述" class="headerlink" title="14 号透镜：问题陈述"></a>14 号透镜：问题陈述</h4><p>要是用这个透镜，需要把你的游戏当做解决问题的方案。</p><p>问你自己这几个问题：</p><ul><li>我真正想要解决什么问题？</li><li>我是否做过一些与真正目标无关的游戏设定？</li><li>游戏是不是这个问题最好的解决方案？为什么？</li><li>我将怎样分辨出问题是否已经解决了？</li></ul><p>为游戏定义好约束条件和目标，并把这些作为问题陈述，这能帮助你更快地进入清晰的游戏设计中。</p><h3 id="如何睡眠"><a href="#如何睡眠" class="headerlink" title="如何睡眠"></a>如何睡眠</h3><blockquote><p>睡眠是产生创意的重要组成部分——优秀的设计师会最大化地利用睡眠的力量。</p></blockquote><p>接下来的部分（达利的秘密 3）是从超现实主义画家萨尔瓦多·达利（Salvador Dali）的书《五十个魔法技术的秘密》（Fifty Secrets of Magic Craftsmanship）中的摘录：</p><blockquote><p>利用睡眠的关键是你必须坐在一张扶手椅上，最好是西班牙风格的。让你的头后仰，靠在拉伸的皮革背面。把你的双手放置在椅子的扶手处。让你自己进入一个完全放松的状态。<br>在这种姿势下，你必须用左手的拇指与食指抓住一把沉重的钥匙并保持悬空的状态。在钥匙的下方事先放置好一个翻过来盘子。完成这些准备工作后，你只要等待午间的睡意轻轻袭来，仿佛你身体的方糖中凝结出了一滴精神上的美酒。钥匙从你的指尖滑落时，你会被掉落到盘子上的声音惊醒。你同样也能肯定，这个小憩在你无法获得真正的睡眠时是完全足够的，因为你知道通过这样的休息，你的整个身心都再次恢复了活力。</p></blockquote><h4 id="你的无声伙伴"><a href="#你的无声伙伴" class="headerlink" title="你的无声伙伴"></a>你的无声伙伴</h4><blockquote><p>我们被自己的潜意识迷惑和纠缠，以至于忘记了很久以来的事实，上帝主要在睡梦与幻觉中出现。 —— 卡尔·荣格（Carl Jung）</p></blockquote><blockquote><blockquote><p>确实，这些看似无意义的放松瞬间很多时候是创意与灵感真正涌出的时刻。</p></blockquote></blockquote><p>在梦中解决重要问题的实例：化学家凯库勒（Friedrich Von Kekule）在梦中想出了苯环的结构。</p><p>在某种层面上，潜意识就是我们的一部分：但在另一种层面上，它看起来又是分离的。一些人很不喜欢把潜意识当做另一个人的观点。<br>大多数人的创造性潜意识都有一些共同的特点：</p><ul><li>无法交谈。或者至少不选择用语言交流。它也不会通过文字交流，而倾向于通过想象力和情感交流。</li><li>冲动。不会提前做好规划，想要活在当下。</li><li>情绪化。会扫过你所有的感受，潜意识对事物的感受看起来比显意识（用荣格的话来说应该是自我）更加深刻和强大</li><li>贪玩。总是充满好奇心，喜欢玩文字游戏和恶作剧</li><li>荒谬的。不被逻辑和理性约束，潜意识带来的想法经常毫无意义。</li></ul><p>你如果正在做关于游戏的头脑风暴，你无声的伙伴会比你更强大！</p><h5 id="潜意识建议"><a href="#潜意识建议" class="headerlink" title="潜意识建议"></a>潜意识建议</h5><ol><li>潜意识建议 1：给予关注</li></ol><blockquote><p>“我们应该留意梦境吗？”约瑟夫问到，“我们能解读它们吗？”<br>大师看着他的眼睛，说到：“我们应该留意任何事，因为我们可以解读所有的事。” ——赫尔曼·海塞，《玻璃念珠游戏》<br>（Herman Hesse, The Glass Bead Game）</p></blockquote><p>与往常一样，倾听是关键，这一次是倾听你自己（的一部分）。<br>潜意识和其他人没有区别：若常被忽视，它会停止提供建议；若你习惯于倾听它，认真考虑它的想法，当它为你提供了一个优秀创意时感谢它，它就会开始给予更多更好的建议。</p><p>怎样倾听？<br>对你的思想、你的感受、你的情感以及你的梦境给予更多的关注，因为这些都是潜意识与你交流的方式。你对潜意识所表达的关注越多，它就会为你完成越多的工作。</p><blockquote><blockquote><p>最近的梦确实多了起来，谢谢你啊无声的朋友。</p></blockquote></blockquote><ol start="2"><li>潜意识建议 2：记录你的创意</li></ol><p>记下你的所有创意，会发生两件事。</p><ul><li>如果不记下来，你会把许多创意统统忘掉</li><li>你会清空你的大脑来思考其他事情</li></ul><blockquote><blockquote><p>别忘了重要的 5 ± 2 原则，认知容量，也就是人脑中能暂存的东西可是有限的 (￣▽￣)”</p></blockquote></blockquote><p>日本人把“记下想法从而清空大脑”这一过程称为“mizu no kokoro”，经常被翻译为“如水一般清澈的思维”。</p><p>便宜的录音机或录音应用也能发挥作用</p><blockquote><blockquote><p>但后面还得整理，可以的话还是直接记下来比较好。合适的手机软件或者随身带纸笔！</p></blockquote></blockquote><ol start="3"><li>潜意识建议 3：（明智地）满足它的欲望</li></ol><p>潜意识有其欲望，其中一些很原始。这些欲望看起来是它工作的一部分，就好像理性大脑的工作是决定哪些欲望可以被放心的满足和怎样去满足。</p><p>如果潜意识的某些欲望过于强烈，就会陷于其中。当它沉迷于此，就无法完成漂亮的创意工作了。</p><p>解决好那些让你分心的思想，它们可能来源于潜意识！<br>有选择地满足潜意识，不要听之任之。</p><ol start="4"><li>潜意识建议 4：睡眠</li></ol><blockquote><p>常识就是，晚上的难题在第二天早上会被解决，因为睡眠已经把它解决了。 —— 约翰·斯坦贝克（John Steinbeck）</p></blockquote><p>睡眠很重要，主要是为了大脑。</p><p>没有得到充足睡眠时，潜意识也会罢工。</p><ol start="5"><li>潜意识建议 5：尽力而为</li></ol><blockquote><p>那么现在，你必须开动你的脑筋，克制自己的活动，然后看看会出现怎样伟大的灵魂。 —— 拉尔夫·沃尔多·艾默生（Ralph Waldo Emerson）</p></blockquote><blockquote><p>我没有任何创意——它们准备好时才会让你知道。 —— 史蒂芬·莫法特（Stephen Moffat）</p></blockquote><p>到了嘴边的话说不出来？本来记得的东西突然想不起来了？放一放，一会儿自然会想起来。“自然”不是别的，是潜意识在帮你呢。</p><h4 id="个人关系"><a href="#个人关系" class="headerlink" title="个人关系"></a>个人关系</h4><p>每个人和潜意识的关系可能并不相同，重要的是找到适合自己的方法。<br>跟随直觉（被潜意识暗示）找到什么才是最有创造力的，然后不断尝试和实验。<br>探索吧！找到和潜意识的良好相处方式！</p><h3 id="十六个关键的头脑风暴建议"><a href="#十六个关键的头脑风暴建议" class="headerlink" title="十六个关键的头脑风暴建议"></a>十六个关键的头脑风暴建议</h3><blockquote><p>创造力就是为了那些不能再第一时间想到优秀创意的人准备的。—— 佚名</p></blockquote><ol><li>头脑风暴建议 1：记下答案</li></ol><p>记下来可以清空大脑，解放认知负载，让它更好的工作！为新创意腾出空间！</p><ol start="2"><li>头脑风暴建议 2：写字还是打字</li></ol><p>选择合适自己的就好</p><blockquote><blockquote><p>我觉得写在一张平面上（ipad 上也可以）其实效果会好一些</p></blockquote></blockquote><p>书中也写到他喜欢在没有线条的纸上书写，这样可以圈画，可以连线。最后再把有用的部分导入电脑。</p><ol start="3"><li>头脑风暴建议 3：草图</li></ol><p>不要怕画得不好，尽量尝试！<br>如果能生动表达创意，不仅会更容易记得，图画还会激发更多创意！</p><ol start="4"><li>头脑风暴建议 4：玩具</li></ol><p>选择一些和问题有关的玩具，再选一些无关玩具放到桌上！<br>玩具不只是通过外形，还通过触觉方式促进创造力<br>黏土！橡皮泥！为创意制作小小雕塑！</p><ol start="5"><li>头脑风暴建议 5：改变视角</li></ol><p>从另一个角度看待你的游戏。<br>不要只是坐在椅子上，试着站在椅子上！<br>尝试在在公交车上、海滩边、商场中，玩具店里头脑风暴！<br>任何能带来想象力或思考新事物的方法都值得一试——倒立！</p><ol start="6"><li>头脑风暴建议 6：沉浸自己</li></ol><p>已经陈述了自己的问题，现在将自己沉浸其中！<br>在商场中找到目标受众，他们在买什么？为什么？去偷听他们——他们在谈论什么？什么对他们很重要？你需要密切关注这些人。</p><p>你已经设定了一项技术了吗？学习关于它的一切——在你的墙上写满它的规则——找出它从未有人注意到的秘密。</p><p>你已经锁定了一个主题或故事线吗？找出其他相似的改变故事然后阅读他们。</p><p>你需要将一些古老的玩法机制推陈出新吗？找到所有运用这套机制的游戏，尽可能多地玩——还要玩一些不使用这套机制的游戏！</p><blockquote><blockquote><p>争取把以后家里的墙面做成可以写写画画的材质哈哈哈</p></blockquote></blockquote><ol start="7"><li>头脑风暴建议 7：开几个玩笑</li></ol><p>在头脑风暴过程中，一些笑话能够帮助你完成工作。<br>笑话能够放松我们的大脑，然后让我们从之前错过的角度看待事物，新角度就是新创意的源头！<br>笑话可能会让你们跑题，但要记得拉回正轨。</p><p>头脑风暴应该遵循一条规则：谁先跑题，就要负责将话题引回正轨。</p><ol start="8"><li>头脑风暴建议 8：不要节约</li></ol><p>头脑风暴不是节约的时候，不要让纸张和墨水成为创意的阻碍。</p><p>写大字！平铺纸面与想法！这样甚至可以有机会远距离地思考所有想法。</p><p>头脑风暴时需要做你认为感觉不错的事——任何你做的让你更有创造力的小事都能增加你想出伟大创意的机会。</p><p>找到合适自己的方式，找不到也不要纠结，不要忘了还有工作没有完成！</p><ol start="9"><li>头脑风暴建议 9：写在墙上</li></ol><p>墙上的方案可以让所有人能立刻看到</p><p>大的可以粘贴的纸也可以！（方便收纳，且易于复现）</p><blockquote><blockquote><p>刚说什么来着 (￣▽￣)”</p></blockquote></blockquote><ol start="10"><li>头脑风暴建议 10：空间记忆</li></ol><p>把创意放置在墙上的另一个理由是：我们对清单的记忆很糟糕，但我们对身边事物位置的记忆却很优秀。通过把围绕着你的创意放置在房间中，你能更清楚地记住它们的位置。</p><p>这很重要，因为你将要试着找到几十种创意之间的联系，你需要获得任何可能的帮助——尤其是如果要进行多个环节的头脑风暴。这样做的效果很显著。</p><ol start="11"><li>头脑风暴建议 11：记下所有东西</li></ol><blockquote><p>获得优秀创意的最佳方法就是先获得一大堆创意。 —— 莱纳斯·鲍林（Linus Pauling）</p></blockquote><p>已经有了钢笔、纸张、咖啡、玩具、黏土，所有你认为能让你富有创造力的东西。</p><p>写下一切觉得与问题隐隐相关的想法，愚蠢也无所谓！不要检查，写就完了！</p><ol start="12"><li>头脑风暴建议 12：为清单计数</li></ol><p>制作清单时，为它们标号，好处有二：</p><ol><li>让清单讨论起来更方便</li><li>标上数字后，清单条目就有了优先级</li></ol><p>有数字的清单在某种程度上看起来更重要，若是其中之一消失，会更容易让人察觉，这能让所有人更严肃地对待清单上的创意。</p><ol start="13"><li>头脑风暴建议 13：颠覆你的设定</li></ol><p>从设计师罗伯·达维奥（Rob Daviau）学到了这个建议</p><p>列出关于游戏的清单，包含认为假定正确的项目，如：</p><ul><li>假设游戏要在室内玩</li><li>假设玩家们将会看着屏幕</li><li>假设玩家只用一个手指触摸屏幕</li></ul><p>清单可能很长，一旦完成，浏览每一个条目，仔细思考如果这条假设是错的，游戏会怎样</p><p>大多情况，假设必须成立，但打破假设会给你带来深刻洞察力</p><ol start="14"><li>头脑风暴建议 14：组合和搭配分类</li></ol><p>一个帮助聚集创意的好办法：按照分类进行头脑风暴</p><p>四个基本元素（技术、美学、机制、故事）在这里很合适</p><p>假如决定为少女制作一款游戏，列出清单，开始互相组合搭配。一些清单如下：</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220529013236.png" style="zoom:25%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220529013303.png" style="zoom:25%;" /><p>一旦有了几份清单，自由组合搭配</p><ul><li>以类似俄罗斯方块的智能手机游戏</li><li>以动物为角色的医院主题游戏<br>有需要也可以设定其它分类</li></ul><ol start="15"><li>头脑风暴建议 15：自言自语</li></ol><p>独自进行头脑风暴时，有些人觉得自言自语很有帮助——大声说出一些事物比只在大脑中思考更实际。</p><p>找个合适地方，放心自言自语！</p><p>另一个技巧，如果在公共场合，假装打电话然后自言自语！</p><blockquote><blockquote><p>这也太搞笑了 </p></blockquote></blockquote><ol start="16"><li>头脑风暴建议 16：找一个搭档</li></ol><p>与其他人一起头脑风暴和自己单独头脑风暴完全不同<br>合适的头脑风暴搭档能为彼此创意互补</p><p>找一些人大声谈论，即使他们什么也没有说，有时也能让进展变得更快</p><p>一般来说，不多于四人的小团体最合适</p><p>记得限定头脑风暴范围</p><p>对于刚刚组建的团队，更好的解决方案可能是先独立进行头脑风暴，然后聚集在一起分享、交换和匹配创意</p><p>远离不好的（挑刺/偏好狭隘）头脑风暴搭档</p><h3 id="看看这些创意！接下来该怎么办"><a href="#看看这些创意！接下来该怎么办" class="headerlink" title="看看这些创意！接下来该怎么办"></a>看看这些创意！接下来该怎么办</h3><p>下一步是缩小宽泛的创意清单，用这些创意做一些有用的事</p><hr><h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><h3 id="第七章-游戏始于一个创意-1"><a href="#第七章-游戏始于一个创意-1" class="headerlink" title="第七章 游戏始于一个创意"></a>第七章 游戏始于一个创意</h3><ul><li><p>林达·巴里撰写的《这是什么》和《设想一下》 (What It Is and PictureThis by Lynda Barry) 。这两本伟大的著作无缝整合了文字与艺术作品,它们将用创作过程中的残酷现实激励你,鞭策你。</p></li><li><p>萨尔瓦多·达利撰写的《五十个魔法技术的秘密》 (Fifty Secrets of Magic Craftsmanship by Salvador Dali) 。这本书并不出名,但它为创造天才的大脑打开了一扇新的窗户。</p></li><li><p>凯尔·加布勒,凯尔·格雷,马特·库契奇和沙林·舍第汗撰写的《怎样 在七天内完成一个游戏原型》 (Prototyping a Game in 7 Days by Kyle Gray, Kyle Gabler, Matt Kucic, and Shalin Shodhan) 。这篇短论文充满了对快速制作原型的绝妙建议。</p></li><li><p>朱利安·杰恩斯撰写的《左右脑分解中的意识起源》的第1章(The Origin of Consciousness in the Breakdown of the Bicameral Mind by Julian Jaynes Chapter 1) 。这本有争议的书会让你再次思考意识的本质以及你与潜意识的关系。</p></li><li><p>约拿·莱勒撰写的《群体思想:头脑风暴神话》 (Groupthink: The Brainstorming Myth by Jonah Lehrer in The New Yorker. January 30) 。这本书是对过去、现在和未来头脑风暴的概述。</p></li></ul><p> - 大卫·林奇撰写的《钓上大鱼》 (Catching the Big Fish by David Lynch)这本简短的书由一位电影制片人撰写,提供了一些绝佳的创意快照</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏设计艺术 第六章 元素支撑起主题</title>
      <link href="2021/08/13/20210813-theartofgamedesign-chap6/"/>
      <url>2021/08/13/20210813-theartofgamedesign-chap6/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏设计艺术-摘抄-笔记"><a href="#游戏设计艺术-摘抄-笔记" class="headerlink" title="游戏设计艺术 摘抄/笔记"></a>游戏设计艺术 摘抄/笔记</h1><h2 id="第六章-元素支撑起主题"><a href="#第六章-元素支撑起主题" class="headerlink" title="第六章 元素支撑起主题"></a>第六章 元素支撑起主题</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210813203012.png" style="zoom:50%;" /><blockquote><p>一部伟大的著作必然有一个伟大的主题。—— 赫尔曼·梅尔維尔</p></blockquote><h3 id="微不足道的游戏"><a href="#微不足道的游戏" class="headerlink" title="微不足道的游戏"></a>微不足道的游戏</h3><ul><li><p>痛苦的现实</p><ul><li>在许多人的观念中，游戏只是一种毫无意义的消遣活动</li><li>一些人认为游戏，尤其是电子游戏，不可能具有深刻的意义，因为它们是粗制滥造的<ul><li>如 20 世纪初对于电影的争论</li><li>媒体技术的更新会让这种争论烟消云散</li></ul></li></ul></li><li><p>游戏的问题在于它是在最近才作为不严肃的表达媒介产生的。</p></li><li><p>我们的目标不是艺术化的表达，而是创造伟大的体验。</p></li></ul><h3 id="统一主题"><a href="#统一主题" class="headerlink" title="统一主题"></a>统一主题</h3><blockquote><p>如果你的设计围绕了一个单一的主题,那么它最大的优势就是<strong>游戏中的所有元素将互相强化,因为它们向着一个共同的目标发挥作用</strong>。在你制作游戏的过程中形成主题是再好不过的。你越快确定一个主题,接下来的制作将会越简单,因为你能够用一个简单的方式来<strong>决定哪些元素应该或者不该出现在你的游戏中</strong>:如果这个元素能够强化主题,就留下,反之就从游戏中去掉。</p></blockquote><ul><li><p>利用主题增强游戏体验的步骤</p><ul><li>步骤一<ul><li>确定你的主题是什么</li></ul></li><li>步骤二<ul><li>采用所有可能的方法来强化这个主题</li></ul></li></ul></li><li><p>什么是主题</p><ul><li>主题就是你的游戏是关于什么的<ul><li>这是一种能把整个游戏联系起来的创意——一种所有元素都必须支撑的创意</li></ul></li><li>大多数游戏的主题都基于体验<ul><li>设计的目标是给玩家传达必要的体验</li></ul></li></ul></li></ul><ul><li>例子<ul><li>大象<ul><li>设计师里奇·戈尔德(Rich Gold)在他的著作《丰饶》 (The Plenitude)中阐述了一个确定主题的简单案例。<ul><li>当他还是个孩子时,他拿起了一本关于大象的书。这本书的想法很简单:给孩子们传达一种体验,让他们能够理解大象是什么。在某种意义上,你会说这个主题就是“大象是什么?”那么,步骤1已经完成了。这把我们带到了步骤2:采用所有可能的方法来强化这个主题。作者很明显地这么做了-这本书包含了关于大象的各种各样的问题和图片。另外,他们把整本书包括封面和内页都裁剪为大象的形状。在每一次翻页中,你都需要寻找机会用更聪明和难以预期的方式来强化你的主题。</li></ul></li></ul></li><li>加勒比海盗：海盗宝藏之战<ul><li>让我们给出一个更详细的案例,这个案例是基于一个我为迪士尼制作的虚拟现实的游戏,它的名字叫作《加勒比海盗:海盗宝藏之战》 (Pirates of the Caribbean: Battle for the Buccaneer Gold) 。<ul><li>我们的团队(迪士尼VR工作室)被赋予了一项任务:为广受欢迎的加勒比海盗主题公园中的游乐设施制作一个交互改编的版本,让它可以出现在所有的迪士尼公园中。我们知道要把 它放入一个计算机增强虚拟环境中(Computer Augmented Virtual Environment,CAVE) ,这是一个位于迪士尼探索世界(迪士尼世界中的虚拟现实中心)中的带有3D投射的小房间,体验大约需要持续五分钟,但我们还没有设定故事线或者特定的游戏目标。</li><li>主题的确定<ul><li>主题开端：主题的吸引力将是关于海盗的</li><li>想要用哪种视角来看待海盗？<ul><li>可能的创意<ul><li>一步关于海盗的历史纪录片</li><li>一场海盗船之间的海战</li><li>一起搜寻海盗财宝的行动</li><li>海盗们是必须被打败的坏人</li></ul></li><li>艰难探索<ul><li>加勒比海盗的游乐设施并不是关于海盗本身，而是关于海盗的生活</li><li>整个游乐设施的目标就是满足人们的幻想：把社会规则泡在一边，开始成为一名真正的海盗！</li></ul></li><li>最终定题<ul><li>这不是历史的再现</li><li>也不是一个关于击败海盗的故事</li><li>而是在每个人内心中涌动的，成为海盗之梦</li></ul></li><li>主题<ul><li>海盗梦</li></ul></li></ul></li></ul></li><li>采用所有可能的方法来强化这个主题<ul><li>CAVE外形:<ul><li>过去我们通常使用正方形或六边形的CAVE。但这一次为了适合模拟一条海盗船,我们创造了一个全新的、带有四块屏幕的CAVE.</li></ul></li><li>立体投影:<ul><li>不是每个CAVE体验都会使用立体投影。但是我们选择这么做,因为立体投影能够带来纵深感。让你的眼睛聚焦于远方能够帮助你产生海上的感觉。</li></ul></li><li>定制的3D眼镜:<ul><li>许多剧院使用现成的3D眼镜。这种眼镜在侧边有遮挡物,会在看电影的时候分散人们的注意力。我们知道一个人的运动感在很大程度上会被周边的视野影响,所以这种遮挡物就是个问题了-由于玩家们无法获得足够的航海感,主题对他们的影响就减少了。我们与制造商达成了协议,定制了不带遮挡的3D眼镜。</li></ul></li><li>运动平台:<ul><li>我们想要让玩家感觉身处摇晃的船只上,一个运动平台看起来是个好主意,但是应该选用哪种类型呢?最终我们定制了一个充气的平台,因为它很像一艘船。</li></ul></li><li>操作界面:<ul><li>海盗梦的一部分是驾驶海盗船,而另一部分是发射大炮。原本我们能够使用控制手柄或者其他现成的硬件设施,但与主题并不搭配。最后,我们用舵轮驱动整艘船只,玩家能够操作一个真实的金属大炮瞄准和射击。</li></ul></li><li>视觉表现:<ul><li>我们需要把每个物体都变得漂亮。游乐设施的特性是一种“超现实”的外观,这完美地适合我们的主题。我们使用高端的图像硬件、大量的纹理和模型来完成相似的外观。</li></ul></li><li>音乐:<ul><li>尽管有些麻烦,我们获得了使用游乐设施中音乐的许可。它能够完美地衬托出主题并用一种怀旧的方式把游戏与游乐设施联系起来。</li></ul></li><li>音效:<ul><li>我们的音效设计师定制了一套包含十个扬声器的音效系统,这个系统能够从任意一个方向播放声音,让你感觉仿佛就在大海之上。一些扬声器的设计为只播放大炮爆炸声,它们被精确地设置在距离船只合适的位置上。这样大炮的音波就可以震撼你,你不仅能听到而且能感受到大炮的轰鸣。</li></ul></li><li>自由感:<ul><li>海盗是自由的代表。我们把游戏机制设计为让玩家能够航行到他们选择的任何海域,同时保证玩家获得兴奋的体验。我们将在第18章《空间控制》中详细讨论如何完成这一点。</li></ul></li><li>死人不会泄密:<ul><li>在游戏中处理死亡是一大难题。一些人建议既然这是个电子游戏,我们应该像传统的电子游戏一样处理这个问题:如果你死了,就会有一些惩罚,然后你就可以再次复活回归到游戏中。但但这并不适合海盗梦这样的主题-在海盗梦中,你不会死。即使你死了,也会以一个戏剧性的方式离开,而且你无法复活。更进一步地说,既然戏剧性是海盗梦的一部分,我们就要努力尝试为我们的五分钟体验保持戏剧兴趣曲线(将在第16章解释) 。如果玩家在游戏过程中突然死亡,就会毁了这种体验。我们的解决方案是让玩家们毫发无损地通过大部分的游戏,但是如果他们在体验过程中受到了太多的攻击,在最终的战斗结束时,他们的船只就会以戏剧性的方式沉没。虽然这打破了电子游戏的传统,但主题显然比传统更重要。</li></ul></li><li>宝藏:<ul><li>收集各种各样的部落宝藏是海盗梦的基本组成部分。不幸的是,在电子游戏中很难渲染出大堆真实的金子。我们使用了一项特殊的技术,可以让手绘的平面财宝看起来像是固态的三维物体,并把这些财宝放置在船的甲板上。</li></ul></li><li>灯光:<ul><li>我们需要点亮玩家所在的房间。怎样才能把灯光与主题结合起来?我们在灯上使用了特殊的滤镜,让光线上看起来好像是从水中反射而出的。</li></ul></li><li>摆放物品的地方:<ul><li>在人们玩游戏的时候,他们需要一个地方来放置他们的背包、钱包等。我们原本只需要制作一个架子,但我们没有这么做,而是用渔网制作了一个包,渔网看起来仿佛本身就属于这艘船。</li></ul></li><li>空调：<ul><li>场地上主管器材的人问我们,是否考虑过在游戏房间的何处放置空调的出风口。我们的第一想法是“谁在意呢? ”但是我们之后想到了“我们怎样利用空调加强我们的主题? ”最后,出风口被放置在船的前端向后吹风,所以玩家们会感觉到微风拂过,就像他们在船上航行一样</li></ul></li><li>蓝胡子的眼睛:<ul><li>我们无法找到让3D眼镜符合主题的好方法。我们试验过让它们看起来像是海盗帽和头巾,但效果并不好。一个机智的绅士提议道应该让玩家都带上眼罩,这样3D效果就没必要了。最终,我们放弃了这些想法。当游戏被装载进迪士尼世界时,我们亲自去尝试了一下。让我们惊讶的是,带领我们去甲板的角色成员预先声明道:“在登上甲板之前,你们必须戴上蓝胡子的眼睛。”这太令人惊奇了,因为这并不包含在给角色成员的“官方剧本”中。游乐设施的工作人员弥补了我们的失败设计。这是个简单有效的方式把一个从我们手中逃脱的细节主题化。这也有力地说明了当你有一个很强的统一主题时,团队中的任何人都能够更加简便地做出贡献。</li></ul></li></ul></li></ul></li></ul></li></ul></li></ul><h4 id="11-号透镜：统一"><a href="#11-号透镜：统一" class="headerlink" title="11 号透镜：统一"></a>11 号透镜：统一</h4><ul><li>11号透镜:统一<ul><li>要使用这个透镜,就要尽可能地考虑这背后所有的原因。问你自己这几个问题：<ul><li><p>我的主题是什么?</p></li><li><p>我已经采用了所有可能的方法来强化这个主题吗?</p></li><li><p>统一透镜与9号透镜元素四分透镜很搭配。使用元素四分透镜从你的游戏中分割出元素,你就能够从统一主题的角度更方便地研究它们。</p></li></ul></li></ul></li></ul><h3 id="共鸣"><a href="#共鸣" class="headerlink" title="共鸣"></a>共鸣</h3><ul><li><p>最好的主题能够引起玩家的共鸣——这些主题能够触碰到玩家的内心深处</p></li><li><p>海盗梦</p><ul><li>一个有力的主题</li><li>因为每个人一度想要</li><li>在某种程度上，它与我们想要的自由欲望产生了共鸣——把我们从义务中解放出来，从担忧和关心中解放出来，让我们自由地做任何想做的事</li></ul></li><li><p>基于本质体验的主题和基于真相的主题</p><blockquote><p>当你设法触及某一共鸣性主题时,你就有了一些深刻而有力的东西——这些东西有一种真正的能力,能够让人们感动并给予他们一个卓越和革新的体验。我们之前讨论过的一些主题是基于体验的,传达一种本质的体验。当这种体验能够与玩家的幻想和欲望产生共鸣时,它就能迅速转变为对他们重要的体验。还有另外一种主题能够像基于体验的主题一样产生共鸣,有时甚至更加有力,这就是基于真相的主题。</p></blockquote></li><li><p>例子</p><ul><li>泰坦尼克号<ul><li>想一想电影《泰坦尼克号》。这部电影深深地打动了全世界的观众。为什么?</li><li>当然它拍摄得很好,有很棒的特效和甜蜜的(尽管有时过分感伤)爱情故事。但大多数电影都有这些元素。</li><li>特殊的是,电影中所有的元素都强化了一个深刻而能引起共鸣的主题。<ul><li>那么它的主题是什么?最初,你可能会认为它的主题就是泰坦尼克本身和它的悲剧事故。这当然是电影的一个重要组成部分。事实上,你可能争论说这是一个电影的主题之一,但并不是最重要的主题。</li><li>实际上最重要的主题不是基于体验的。相反的,它只是基于一个陈述,</li><li>我能够用一些像<strong>“爱情比生命更重要,比死亡更强大”</strong>这样的短语。</li><li>这是个有力的陈述,也是我们很多人在心中都深信不疑的陈述。</li><li>当然这不是一个科学真理,但对很多人来说,这是一个深埋心底,很少表达的个人真理。</li></ul></li><li>很多好莱坞的内部人员都不相信这个电影能够成功:因为观众们已经知道了电影的结局。但是你能找到一个比这艘会杀死几乎所有人的船更好的地方来讲述一个有着如此有力主题的故事吗?昂贵的特效不是毫无理由的——这些特效能够紧紧抓住主题的入口,我们一定觉得所有的都像是真的一样,就像我们身临其境,就像我们自己就要死了。</li></ul></li><li>魔女嘉莉<ul><li>史蒂芬·金(Stephen King)</li><li>他在写第二遍草稿时才意识到这是一个关于鲜血的小说<ul><li>不仅是恐怖电影的鲜血</li><li>而且是一种对鲜血的含义的探索<ul><li>从受伤到家庭羁绊到成年</li></ul></li><li>当他意识到这些时，他知道可以通过很多方式调整和强化这个故事</li></ul></li></ul></li><li>危机·遗产<ul><li>罗伯·达维奥(Rob Daviau)的奇幻桌面游戏《危机:遗产》 (Risk:Legacy)就是一个优秀的基于真相主题的案例。</li><li>在这个不同寻常的游戏中,达维奥完成了一些世界上其他桌面游戏从未有过的尝试——他创造了一种游戏机制,比如当你玩的时候,你的抉择总会永久地改变游戏。</li><li>这个规则坚持让你用不可移动的贴纸改变游戏板,用永久的马克笔在游戏板上书写来主张领地,扯掉和丢弃游戏卡片,甚至对游戏规则书做出永久性的改变。这些不同寻常的游戏机制很新颖,让人着迷,但是更重要的是,它们都强化了游戏的中心主题:“战争改变了世界。”</li></ul></li><li>海格力斯 hercules 的故事<ul><li>故事被再传播时会有偏差，但这些故事都有一个共同的元素。在每个故事中，海格力斯都非常高尚，所以他战胜了死亡。这个真理如此神课以至于它成为了很多信仰的核心：<strong>如果你足够高尚，你就能战胜死亡。</strong></li><li>迪士尼动画家在海格力斯和冥界之主哈迪斯 hades 冲突中体现了这个主题</li><li>我们继续把这个主题放到游戏中<ul><li>大部分故事发生在冥界</li><li>直到最后，你成功进入生者世界，并在空中与哈德斯战斗</li></ul></li></ul></li><li>卡通城 Online<ul><li>迪士尼首款大型多人游戏</li><li>无法确定主题<ul><li>卡通城虽然强大，但并不在任何一个地方有明确定义<ul><li>每个人对卡通城都有一个先入为主的印象——好像他们知道一直有一个特殊的地方，当卡通角色不在屏幕上时，都住在那里</li><li>这个事实有点令人惊悚</li><li>我们正在触及一些基本和隐藏的要素</li></ul></li><li>理想中卡通城样子的列表<ol><li>与朋友们开心地玩耍<ul><li>适合在线网络游戏</li></ul></li><li>逃离现实生活<ul><li>有很多层含义——卡通是一种优秀的逃离现实的形式</li></ul></li><li>天真的和超然的<ul><li>卡通城比现实世界更单纯，你在卡通城也比在现实世界中更强大</li></ul></li></ol></li><li>所有的这些都帮助我们阐明了我们想要在游戏中看到的事物,但是没有一个能告诉我们一个明确的主题。这些看起来更像是子主题。在某种程度上,我们意识到这三个特点一起增强了其中一些我们已经在第4章中讨论过的细节:<strong>玩</strong>。玩是关于获得快乐并与你的朋友们逃离现实,一个游戏世界比现实世界更单纯,而且你有更多的力量。但我们并不认为玩本身能够作为一个有力的主题。我们需要一些更加有冲突的元素。这就引导我们找到了<strong>游戏本质的反面:工作</strong>。这就很清楚-“<strong>工作vs.玩</strong>”将会是个强有力的主题。更详细的描述是, “<strong>工作试图消灭玩,但玩耍必须生存</strong>”,这就是我们找到的基于真理的主题。就像我们在第4章做的那样,<strong>把工作和玩换成“奴役”和“自由”,这个主题的力量就更加清晰了</strong>。这感觉就真的对了。我们想要创造一个孩子们和他们的父母能够一起玩的游戏,他们能够通过玩联系在一起——还有比探索他们生活中的主要冲突更好玩的事情吗?我们就这么做了。</li><li>《卡通城Online》就是这样一个故事:机器人管理员(齿轮们)想要把彩色的卡通城变为昏暗的办公室。卡通人物联合起来用笑话和恶作剧反抗这些齿轮,齿轮们则用办公用品反击。这个故事很奇怪,以至于它在公司中吸引了一些注意力,但我们对这个故事的成功有信心,因为我们知道它表达的主题能够引起观众的共鸣。</li></ul></li></ul></li></ul></li></ul><blockquote><ul><li>共鸣主题能把你的作品升华为艺术。艺术家会引领你进入无法独自到达的领域，而主题就是让你前行的工具。</li><li>当你找到一个深刻的共鸣主题，就值得你好好利用它。</li><li>这些主题中一些是基于体验的</li><li>另一些是基于真相的</li></ul></blockquote><h4 id="12-号透镜：共鸣"><a href="#12-号透镜：共鸣" class="headerlink" title="12 号透镜：共鸣"></a>12 号透镜：共鸣</h4><ul><li><p>12号透镜:共鸣</p><ul><li><p>要使用这个透镜,你必须去寻找隐藏的力量,问你自己这几个问题:</p><ul><li>在我的游戏中,能感觉到哪些有力的或者特殊的元素?</li><li>将我的游戏描述给他人听时,那些创意能让他们真的兴奋吗?</li><li>如果没有任何限制,这个游戏将会变成怎样?</li><li>我对这个游戏的方向有特定的直觉,那到底是什么在驱动这种直觉呢?</li></ul></li><li><p>共鸣透镜是一件安静美妙的乐器,也是一件倾听自己和他人的工具。我们把重要的事物都埋藏在内心的深处,当某些东西引起了它们的共鸣时,就会触动我们的内心。事实上这些隐藏的特性给了它们力量,也让我们难以寻找。</p></li></ul></li></ul><blockquote><p>共鸣主题能够为你的作品增加巨大的力量。但即使没有引发共鸣的特性，一个统一的主题依然能欧股通过集中的体验强化游戏</p></blockquote><hr><h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><h3 id="第六章-元素支撑起主题-1"><a href="#第六章-元素支撑起主题-1" class="headerlink" title="第六章 元素支撑起主题"></a>第六章 元素支撑起主题</h3><ul><li>里奇·戈尔德撰写的《丰饶》 (The Plenitude by Rich Gold) 。在任天堂力量手套设计师的智慧宝库中,提供主题仅仅只是话题之一。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英雄联盟与王者荣耀玩家分段分析</title>
      <link href="2021/07/26/analysis-of-league-of-legends-and-glory-of-kings-players-segmented/"/>
      <url>2021/07/26/analysis-of-league-of-legends-and-glory-of-kings-players-segmented/</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>据统计：</p><ul><li>《王者荣耀》玩家段位分布<ul><li>青铜 5.22% </li><li>白银 1.97% </li><li>黄金 10.37% </li><li>铂金 17.48%</li><li>钻石 20.24% </li><li>星耀 28.67%</li><li>最强王者 12.16%</li><li>荣耀王者 3.89% </li></ul></li><li>《英雄联盟》玩家段位分布<ul><li>黑铁 3.3% </li><li>青铜 19.0% </li><li>白银 32.0% </li><li>黄金 29.0% </li><li>铂金 11.0%</li><li>钻石 2.4% </li><li>钻石以上 3.3%</li></ul></li></ul><p>本文希望从该现象出发，分析其出现原因及各自优劣。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/%E5%88%86%E6%AE%B5%E6%8A%98%E7%BA%BF%E5%9B%BE.png"></p><p>首先以折线图形式看一下二者的分段分布情况，可以看到二者基本呈现正态分布，差异点主要在于英雄联盟玩家的段位分布高峰主要在白银（超过 42.86% 的段位），位居中游；而王者荣耀玩家的段位分布高峰主要在星耀（超过 75 % 的段位），接近最高段位。基于此观察回答进行如下分析：</p><h2 id="为什么存在段位分布上的差异"><a href="#为什么存在段位分布上的差异" class="headerlink" title="为什么存在段位分布上的差异"></a>为什么存在段位分布上的差异</h2><p>首先需要明确的是分段差异出现的原因是因为设计者的设计，个人认为产生分段差异的原因有以下几点：</p><ol><li><p>游玩门槛导致的玩家基数不同</p><ul><li>英雄联盟作为一款 PC 端游，其游玩需要特定的环境与设备支持，存在游玩门槛。</li><li>王者荣耀作为一款手游，与英雄联盟相比，其游玩的门槛大大降低。</li><li>由此导致的结果是王者荣耀的玩家数量远超英雄联盟。设计师需要为大多数玩家带来良好的游戏体验，而在大玩家基数的基础之上，设计师需要为更多不同背景的玩家设计契合的玩法机制。</li></ul></li><li><p>想要打造的游戏体验不同</p><ul><li>英雄联盟想要打造的游戏体验是竞技感<ul><li>作为一款成功的 MOBA 类端游，每一局游戏的胜利都需要玩家投入时间与精力到每一个小细节上，玩家所期待的就是辛苦经营之后的酣畅胜利。整体强调的是有来有回的竞技感、博弈感。所以玩家对于越往后，受到的阻力越大，升段就越难是有心理准备的。</li></ul></li><li>王者荣耀则更加注重娱乐性和满足感<ul><li>作为一款希望玩家能够随时随地掏出手机就能玩的大众手游，玩家所追求的就是时间短、频率高的爽快体验。从玩家角度而言，在爽快娱乐的心理预期下若是花费了时间与精力却总是受挫是不可接受的。设计师需要保障绝大部分玩家都呈现一个段位整体上升的趋势。虽然玩家对于升段有难度一事有心理准备，但要尽可能避免因为玩家产生“本来玩的时间也不多，过了这么久了还总是在原地踏步”这样的挫败感而带来的留存率下降问题。</li></ul></li></ul></li></ol><h2 id="什么系统设计导致了这样的差距"><a href="#什么系统设计导致了这样的差距" class="headerlink" title="什么系统设计导致了这样的差距"></a>什么系统设计导致了这样的差距</h2><p>从策划角度考虑该问题，即设计师为了达到目标体验而设计的不同路径与挑战。</p><ol><li><p>排位机制的不同</p><ul><li>英雄联盟中存在隐藏分机制，隐藏分机制的设置是为了让玩家的段位尽可能地体现出其真实水平，所以存在胜负之后的加减分波动很大的情况。这一点也和目标游戏体验有关，英雄联盟的目标游戏体验就是竞技感，而这一机制的设定也是为了体现竞技场上强者为尊的思想，所以在隐藏分和显示段位接近情况下，基本不可能出现低段位战胜高段位的情况。</li><li>王者荣耀中存在段位保护机制，并且不存在隐藏分机制，玩家的升降段直接由胜负场决定，并且可以显式看到。还是可以从目标游戏体验分析，王者荣耀的目标游戏体验是娱乐性和爽快感，在这过程中应该尽量减少玩家的挫败感，所以王者荣耀甚至为首次到达钻石/星耀的玩家提供了排位保护卡，目的也是为了能够让持续游玩的玩家的段位达到稳定上升的目的。</li></ul></li><li><p>操作复杂度的不同导致的操作上限</p><ul><li>英雄联盟作为 PC 端游，其操作依托键鼠，通常而言左手涉及十六个按键（QWER、ASDF、1234、Tab、Ctrl、Alt、空格），右手需要操控鼠标。</li><li>而王者荣耀作为手游，其操作依托屏幕，通常涉及几个手指。</li><li>由此带来了操作熟练度的上限，对于操作而言，英雄联盟中更高的段位通常意味着对于操作的更高要求，段位越高的玩家通常也越是能“突破极限”。而王者荣耀中由于操作复杂度被简化，更高段位的玩家的操作可能与段位稍低的玩家的操作之间不会有天壤之别，由此减小了玩家之间的差距，从而增加了王者荣耀玩家的升段可能性。</li></ul></li><li><p>其余细节设计</p><ul><li>以下几种机制都加速了王者荣耀的整体游戏进度，使得玩家所控英雄能在更短时间内成型，从而推进游戏进程，使得单位时间内玩家的游戏局数增加，从而增加了王者荣耀玩家的升段可能性。<ul><li>等级机制<ul><li>英雄联盟中满级为 18 级，升到满级基本需要 30 分钟。</li><li>王者荣耀中满级为 15 级，升到满级基本只需要 10 分钟。</li><li>王者荣耀中快速的升级机制使得整体游戏进度加快。</li></ul></li><li>补刀机制<ul><li>英雄联盟中存在补刀机制，即玩家需要对目标进行最后一击达成击杀，如此才可以获取经验和经济。否则只能获取到经验（需在一定范围内）。</li><li>王者荣耀中不存在补刀机制，只要玩家在死亡单位的一定范围内就可以获取经验和经济。</li><li>如此设计同样可以从目标游戏体验出发，结合上面提到的操作复杂度，此设计使得王者荣耀的操作要求变低，玩家更容易获得满足感。这也对英雄联盟玩家的对线操作及专注度提出了更高的要求。</li></ul></li><li>补给机制<ul><li>英雄联盟中，玩家所控制英雄只能通过泉水回复效果、辅助技能效果、物品效果（补给品或者装备特效）三种途径进行回复。</li><li>王者荣耀中，除以上途径外，还有塔后补给包机制以供玩家回复。</li><li>从王者荣耀的目标游戏体验出发，该设计增长了玩家的“作战”时间，从而减少由于“无聊”的回城时间带来的阻滞感。</li></ul></li><li>装备购买机制<ul><li>英雄联盟中，玩家只能在泉水一定范围内进行装备购买。</li><li>王者荣耀中，玩家可在任意位置购买装备。</li><li>从王者荣耀目标游戏体验出发，和补给机制一样，增加了玩家的“作战”时间，降低操作复杂度，目的也是为了降低操作门槛与阻滞感。</li></ul></li><li>地图设计的不同导致战斗爆发频率高<ul><li>英雄联盟中的地图很大，除使用冷却时间很长的传送技能（并且需要在单局游戏开始前选择携带）外只能选择步行，如果爆发战斗的地点太远，很难及时进行支援，这对玩家意识就有了更高的要求，同时也增加了战斗的策略性。</li><li>王者荣耀中的地图较小，这意味着只要进行短时间的周旋就能等到队友的支援。</li><li>如此设计使得王者荣耀中战斗爆发频率更高，从而加快了游戏进程。</li></ul></li></ul></li></ul></li></ol><h2 id="各自的优缺点"><a href="#各自的优缺点" class="headerlink" title="各自的优缺点"></a>各自的优缺点</h2><p>作为各自领域的成功之作，二者的优缺点都是在服务于目标游戏人群及其体验情况下的取舍。</p><ul><li>英雄联盟在玩家分段设计方面的优点<ul><li>很好地服务于竞技感这一目标游戏体验</li><li>能力至上，强者为尊</li></ul></li><li>英雄联盟在玩家分段设计方面的缺点<ul><li>对于普通玩家而言，由于各方面能力差距导致的失败很容易产生挫败感</li></ul></li><li>王者荣耀在玩家分段设计方面的优点<ul><li>很好地服务于娱乐性与满足感的目标游戏体验</li><li>尽可能地满足了更多玩家群体的游戏需要</li></ul></li><li>王者荣耀在玩家分段设计方面的缺点<ul><li>在连胜场数过高情况下出现的胜率制裁等机制，可能使得玩家体验受到影响</li></ul></li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>综上，英雄联盟与王者荣耀的玩家分段不同主要是由于不同的玩家基数与目标游戏体验不同，导致设计师针对目标玩家群体及其游戏体验设计了包括排位、补刀、补给、装备购买、地图设计等不同机制，目的都是为了给玩家们带来更好的游戏体验。</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Analysis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Portfolio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>神将三国游戏体验报告</title>
      <link href="2021/07/26/shen-jiang-san-guo-game-experience-report/"/>
      <url>2021/07/26/shen-jiang-san-guo-game-experience-report/</url>
      
        <content type="html"><![CDATA[<h1 id="神将三国游戏体验报告"><a href="#神将三国游戏体验报告" class="headerlink" title="神将三国游戏体验报告"></a>神将三国游戏体验报告</h1><h2 id="1-报告基础信息"><a href="#1-报告基础信息" class="headerlink" title="1. 报告基础信息"></a>1. 报告基础信息</h2><h3 id="1-1-游戏名称：神将三国"><a href="#1-1-游戏名称：神将三国" class="headerlink" title="1.1 游戏名称：神将三国"></a>1.1 游戏名称：神将三国</h3><h3 id="1-2-游戏版本：1-17-1"><a href="#1-2-游戏版本：1-17-1" class="headerlink" title="1.2 游戏版本：1.17.1"></a>1.2 游戏版本：1.17.1</h3><h3 id="1-3-体验设备：iPhone-SE2"><a href="#1-3-体验设备：iPhone-SE2" class="headerlink" title="1.3 体验设备：iPhone SE2"></a>1.3 体验设备：iPhone SE2</h3><h3 id="1-4-系统版本：iOS-14-6"><a href="#1-4-系统版本：iOS-14-6" class="headerlink" title="1.4 系统版本：iOS 14.6"></a>1.4 系统版本：iOS 14.6</h3><h3 id="1-5-体验时间：2021-7-19-2021-7-25"><a href="#1-5-体验时间：2021-7-19-2021-7-25" class="headerlink" title="1.5 体验时间：2021.7.19 - 2021.7.25"></a>1.5 体验时间：2021.7.19 - 2021.7.25</h3><h2 id="2-报告目的"><a href="#2-报告目的" class="headerlink" title="2. 报告目的"></a>2. 报告目的</h2><p>体验下载-注册-游玩的全流程，对游戏进行整体体验，分析其游戏定位、整体目标感、核心玩法定位，发掘其设计闪光点及可优化点。</p><h2 id="3-游戏进程及游戏整体分析"><a href="#3-游戏进程及游戏整体分析" class="headerlink" title="3. 游戏进程及游戏整体分析"></a>3. 游戏进程及游戏整体分析</h2><h3 id="3-1-游戏进程"><a href="#3-1-游戏进程" class="headerlink" title="3.1 游戏进程"></a>3.1 游戏进程</h3><p>截止完成报告时，主线任务推进到第七章，势力值达到 354。</p><p>阵营中盟主【贞德】的贡献为 132733，战功为 572，势力值为 21172。</p><ul><li>阵营贡献<ul><li>  主公通过攻占资源地、击败敌对阵营主攻部队、击杀城池守军、攻打城池、捐献资源和预备兵可获得贡献；近侍官职还可通过建设军旗、拒马、箭塔获得贡献</li><li>  每个途径可获得贡献有上限，达到上限后该途径不再获得贡献，每个纪年（8 天）重置一次上限</li></ul></li><li>官职晋升条件<ul><li>  阵营贡献达到官职要求时，可申请晋升官职</li><li>  六阶以上官职将分为武将、文丞、近侍三类，每一类有独立的晋升通道和官职特权</li><li>  同一级不同类的官职可进行调任，调任后一纪年内不可再次调任</li></ul></li><li>服务器中不同官阶玩家贡献及势力值一览<style type="text/css">.tg  {border-collapse:collapse;border-spacing:0;}.tg td{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;overflow:hidden;padding:10px 5px;word-break:normal;}.tg th{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}.tg .tg-1wig{font-weight:bold;text-align:left;vertical-align:top}.tg .tg-baqh{text-align:center;vertical-align:top}.tg .tg-fymr{border-color:inherit;font-weight:bold;text-align:left;vertical-align:top}.tg .tg-0lax{text-align:left;vertical-align:top}</style><table class="tg"><thead><tr>  <th class="tg-fymr">描述 </th>  <th class="tg-1wig">主线进度 </th>  <th class="tg-1wig">官阶 </th>  <th class="tg-0lax"> 贡献需求 </th>  <th class="tg-1wig"> 本年贡献 </th>  <th class="tg-1wig">势力值 </th></tr></thead><tbody><tr>  <td class="tg-0lax">个人进展 </td>  <td class="tg-0lax">第七章 </td>  <td class="tg-0lax">布衣 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">0 </td>  <td class="tg-0lax">354 </td></tr><tr>  <td class="tg-0lax">布衣中贡献最高 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">布衣 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">62913 </td>  <td class="tg-0lax">15322 </td></tr><tr>  <td class="tg-0lax">伍长中贡献最低 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">九阶-伍长 </td>  <td class="tg-baqh" rowspan="2">2000 </td>  <td class="tg-0lax">3595 </td>  <td class="tg-0lax">1257 </td></tr><tr>  <td class="tg-0lax">伍长中贡献最高 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">九阶-伍长 </td>  <td class="tg-0lax">8032 </td>  <td class="tg-0lax">3322 </td></tr><tr>  <td class="tg-0lax">什长中贡献最低 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">八阶-什长 </td>  <td class="tg-baqh" rowspan="2">5000 </td>  <td class="tg-0lax">7076 </td>  <td class="tg-0lax">5227 </td></tr><tr>  <td class="tg-0lax">什长中贡献最高 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">八阶-什长 </td>  <td class="tg-0lax">17050 </td>  <td class="tg-0lax">5077 </td></tr><tr>  <td class="tg-0lax">百人将中贡献最低 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">七阶-百人将 </td>  <td class="tg-baqh" rowspan="2">10000 </td>  <td class="tg-0lax">13259 </td>  <td class="tg-0lax">4644 </td></tr><tr>  <td class="tg-0lax">百人将中贡献最高 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">七阶-百人将 </td>  <td class="tg-0lax">20990 </td>  <td class="tg-0lax">5090 </td></tr><tr>  <td class="tg-0lax">六阶官职中贡献最低 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">六阶-牙门将 </td>  <td class="tg-baqh" rowspan="2">20000 <br> </td>  <td class="tg-0lax">35290 </td>  <td class="tg-0lax">8920 </td></tr><tr>  <td class="tg-0lax">六阶官职中贡献最高 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">六阶-牙门将 </td>  <td class="tg-0lax">49699 </td>  <td class="tg-0lax">14095 </td></tr><tr>  <td class="tg-0lax">五阶官职中贡献最低 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">五阶-虎卫 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">50209 </td>  <td class="tg-0lax">21227 </td></tr><tr>  <td class="tg-0lax">五阶官职中贡献最高 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">五阶-虎卫 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">90978 </td>  <td class="tg-0lax">25773 </td></tr><tr>  <td class="tg-0lax">四阶官职中贡献最低 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">四阶-虎贲骁骑 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">142638 </td>  <td class="tg-0lax">25123 </td></tr><tr>  <td class="tg-0lax">四阶官职中贡献最高 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">四阶- 先登骁骑 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">102613 </td>  <td class="tg-0lax">18063 </td></tr><tr>  <td class="tg-0lax">三阶官职中贡献最低 </td>  <td class="tg-0lax" colspan="5" rowspan="8">空缺 <br> <br> </td></tr><tr>  <td class="tg-0lax">三阶官职中贡献最高 </td></tr><tr>  <td class="tg-0lax">二阶官职中贡献最低 </td></tr><tr>  <td class="tg-0lax">二阶官职中贡献最高 </td></tr><tr>  <td class="tg-0lax">从一阶官职中贡献最低 </td></tr><tr>  <td class="tg-0lax">从一阶官职中贡献最高 </td></tr><tr>  <td class="tg-0lax">一阶官职中贡献最低 </td></tr><tr>  <td class="tg-0lax">一阶官职中贡献最高 </td></tr><tr>  <td class="tg-0lax">盟主 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">盟主 </td>  <td class="tg-0lax"> </td>  <td class="tg-0lax">132733 </td>  <td class="tg-0lax">21172 </td></tr></tbody></table></li></ul><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210726143343.png"></p><h3 id="3-2-玩家目标分析"><a href="#3-2-玩家目标分析" class="headerlink" title="3.2 玩家目标分析"></a>3.2 玩家目标分析</h3><p>从上表中可以看出，整体而言，官阶越高，则贡献/势力值越高。玩家目标可从以下两方面进行划分：</p><ul><li>战斗+养成目标<ul><li>  势力值不断提高</li></ul></li><li>社交目标<ul><li>  贡献值不断提高</li><li>  官阶不断提高</li></ul></li></ul><h3 id="3-3-差距点设计"><a href="#3-3-差距点设计" class="headerlink" title="3.3 差距点设计"></a>3.3 差距点设计</h3><p>从图中可以看出，整体而言，随着官阶提升，相应贡献有显著提升，但是势力值上涨趋于平缓。</p><ul><li><p>设计者希望玩家拉开差距的地方 - 贡献</p><ul><li><p>原因</p><ul><li><p>贡献可看作玩家在社交+养成系统的投入，如此设计是为了</p><ol><li> 调动玩家社交积极性，鼓励玩家持续游戏</li><li> 调动玩家自豪感+阵营归属感，鼓励阵营内部合作竞争</li></ol></li></ul></li></ul></li><li><p>设计者不希望玩家拉开差距的地方 - 势力</p><ul><li><p>原因</p><ul><li><p>势力可看作玩家战力值的体现，如此设计是为了</p><ol><li> 让玩家的战力最终趋同，使不同阵营间的高等战力有相较之力</li><li> 防止头部玩家对其他玩家形成不可控的碾压局势</li></ol></li></ul></li></ul></li></ul><h3 id="3-4-游戏时长-amp-进度分布"><a href="#3-4-游戏时长-amp-进度分布" class="headerlink" title="3.4 游戏时长 &amp; 进度分布"></a>3.4 游戏时长 &amp; 进度分布</h3><p>以我个人为例，我的有效游戏时间接近 2 小时，物理时间为 7 天，势力值为 354，花费金额为 6 元。以最简单的线性函数来算要达到四阶官阶的时间：</p><ul><li>计算过程<ul><li>  取四阶官阶的势力值均值 = 21593</li><li>计算单位有效时间<ul><li>  2 小时 / 7 天 = 0.2857 小时/天</li></ul></li><li>计算单位有效时间的势力值增长<ul><li>  354 / 单位有效时间 = 1239 势力值 / 小时</li></ul></li><li>计算达到四阶官阶所需的有效时间<ul><li>  21593 / 单位有效时间的势力值增长 = 17.42776 小时</li></ul></li><li>计算物理天数<ul><li>  有效时间 / 单位有效时间 = 60.997 天</li></ul></li></ul></li><li>  也就是以最简单的线性函数估计玩家若是需要到达一个服务器的第一梯队约需要两个月的时间，而根据版本更新记录可知一个赛季时长约为 3-4 个月，计算与实际相符，即玩家在达到第一梯队后还有很长一段时间可以深度参与阵营间的合作竞争。</li></ul><h3 id="3-5-游戏未来设计趋势"><a href="#3-5-游戏未来设计趋势" class="headerlink" title="3.5 游戏未来设计趋势"></a>3.5 游戏未来设计趋势</h3><ul><li>游戏未来设计趋势为<ul><li>加强服务器间竞争<ul><li>  未来服务器合并后，同服务器玩家需要共同对抗外服务器玩家</li></ul></li><li>丰富已有机制<ul><li>  地图</li><li>  资源类型</li><li>  建筑类型</li><li>  兵种</li><li>  副本</li><li>  战役</li></ul></li></ul></li><li>推测依据<ul><li>  更多-天下大势-天下大势-阵营合作+竞争</li><li>  更多-天下大势-赛季说明-阵营竞争</li><li>  版本更新记录</li></ul></li></ul><h2 id="4-详细体验流程"><a href="#4-详细体验流程" class="headerlink" title="4. 详细体验流程"></a>4. 详细体验流程</h2><h3 id="4-1-下载"><a href="#4-1-下载" class="headerlink" title="4.1 下载"></a>4.1 下载</h3><h4 id="搜索情况"><a href="#搜索情况" class="headerlink" title="搜索情况"></a>搜索情况</h4><ul><li>  在 App Store 中搜索神将三国，第一个便是目标游戏。</li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210726143444.png" style="zoom:25%;" /><h4 id="游戏定位"><a href="#游戏定位" class="headerlink" title="游戏定位"></a>游戏定位</h4><ul><li>  搜索后可看到其名称中已经标注了游戏定位：<code>国战策略 slg 攻城手游</code>。</li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210726143507.png" style="zoom:25%;" /><h4 id="评分情况"><a href="#评分情况" class="headerlink" title="评分情况"></a>评分情况</h4><ul><li><p>  可以看到其拥有 4301 个评分，总评分高达 4.4/5，在模拟类排行榜中排行 83，是不错的成绩。</p></li><li><p>从截取的最有帮助的和差评中可以提取出以下负面评价关键词，可以为版本迭代提供一些思路</p><ul><li><p>  bug</p></li><li><p>闪退</p></li><li><p>卡顿</p></li><li><p>平衡性太差</p></li><li><p>  工作室太多</p></li></ul></li></ul><blockquote><p>玩家的评价是版本迭代的重要参考之一，既会影响潜在玩家的游玩可能性，也可以提示策划们可以对玩家哪方面的游戏体验进行优化</p></blockquote><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/%E8%AF%84%E5%88%86%E5%8F%8A%E8%AF%84%E8%AE%BA.jpg" style="zoom:25%;" /><h4 id="版本历史记录"><a href="#版本历史记录" class="headerlink" title="版本历史记录"></a>版本历史记录</h4><ul><li><p>  可以看到最早的版本 1.0.0 发布于六个月之前，之后的一个月进行了四次更新，之后的更新频率约为一个月一次，最近一次更新在一周前。</p></li><li><p>  整体更新频率较高，说明项目组活跃程度较高</p></li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210726143934.png" style="zoom:25%;" /><h4 id="语言"><a href="#语言" class="headerlink" title="语言"></a>语言</h4><ul><li>  该游戏共提供了俄文、日文、泰文、简体中文、繁体中文、英文、越南文、韩文共 8 种语言，可见其在海外市场也有布局。</li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210726143955.png" style="zoom:25%;" /><h4 id="游戏大小"><a href="#游戏大小" class="headerlink" title="游戏大小"></a>游戏大小</h4><ul><li><p>  542.5 MB</p></li><li><p>  比起动辄 10G+的手游，该大小让用户不需要太久地等待便可开始游玩。</p></li></ul><h3 id="4-2-注册"><a href="#4-2-注册" class="headerlink" title="4.2 注册"></a>4.2 注册</h3><h4 id="一键试玩"><a href="#一键试玩" class="headerlink" title="一键试玩"></a>一键试玩</h4><ul><li>  可以看到游戏中提供了一键试玩机制，可以让玩家直接进行体验，别有新意</li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210726144014.png" style="zoom:25%;" /><h4 id="登录方式"><a href="#登录方式" class="headerlink" title="登录方式"></a>登录方式</h4><ul><li>  登录方式为手机短信验证，输入验证码后还需设置密码，并且此处设置密码时的默认状态是可见的</li></ul><blockquote><p>迭代建议：将此处密码输入时设置为默认不可见模式，以保护用户隐私。</p></blockquote><h4 id="登录界面"><a href="#登录界面" class="headerlink" title="登录界面"></a>登录界面</h4><ul><li><p>  画面精美，且有火焰纷飞动效，但不知道为何左上角适龄提示为 12+，在下载页面的适龄提示却是 9+</p></li><li><p>服务器信息</p><ul><li>  会自动进行选择，免去了玩家手动选择的繁琐操作</li></ul></li><li><p>用户服务协议和隐私保护协议</p><ul><li>  需要用户手动勾选，强化用户知情权</li></ul></li><li><p>点击效果</p><ul><li>  有波纹特效，方便用户获知点击位置</li></ul></li></ul><blockquote><p>迭代建议：建议统一 App Store 中与登录界面中的适龄提示信息</p></blockquote><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210726144033.png" style="zoom:25%;" /><h4 id="意外情况"><a href="#意外情况" class="headerlink" title="意外情况"></a>意外情况</h4><ul><li><p>  点击开始游戏后提示登录失败</p></li><li><p>  有可能是因为在登录界面停留时间过长导致的</p></li></ul><h3 id="4-3-游玩"><a href="#4-3-游玩" class="headerlink" title="4.3 游玩"></a>4.3 游玩</h3><h4 id="4-3-1-角色创建"><a href="#4-3-1-角色创建" class="headerlink" title="4.3.1 角色创建"></a>4.3.1 角色创建</h4><ul><li>角色选择<ul><li>性别选择<ul><li>进入游戏后首先是性别选择，并且在切换时伴有角色声效，增强玩家代入感<ul><li>男：大丈夫生于乱世，当带三尺之剑，立无世之功</li><li>  女：当窗理红妆，对镜贴花黄，也无碍小女子驰骋沙场</li></ul></li></ul></li><li><code>请留下大名</code><ul><li>  会有随机生成的名称，且都具有几分古韵，增强了玩家代入感</li></ul></li></ul></li></ul><h4 id="4-3-2-新手教程-此时注意到是竖版游戏"><a href="#4-3-2-新手教程-此时注意到是竖版游戏" class="headerlink" title="4.3.2 新手教程 - 此时注意到是竖版游戏"></a>4.3.2 新手教程 - 此时注意到是竖版游戏</h4><ul><li>涉及系统<ul><li>战斗<ul><li>队伍配置（上阵）</li><li>征兵（分配兵力）</li><li>下阵</li><li>招募武将（单次可无限重复）</li><li>强调兵种克制机制</li><li>引入战斗资源<ul><li>  消耗体力</li></ul></li><li>到达士气</li><li>行军时间</li><li>行军路线</li><li>路线选择</li><li>  上阵部队</li></ul></li></ul></li><li>社交<ul><li>阵营选择<ul><li>魏国曹操<ul><li>骑兵加伤害 <code>2%</code></li><li>铁矿产量加 <code>300</code></li></ul></li><li>蜀国刘备<ul><li><p>  枪兵加伤害 <code>2%</code></p></li><li><p>  粮草产量加 <code>300</code></p></li></ul></li><li>东吴孙权<ul><li>  弓兵加伤害 <code>2%</code></li><li>  木材产量加 <code>300</code></li><li>  水战伤害提升 <code>15%</code></li></ul></li></ul></li></ul></li><li>养成<ul><li>引入不同资源类型<ul><li>铜币</li><li>木材</li><li>铁矿</li><li>粮草</li></ul></li><li>攻占资源点及领土相关规则介绍</li><li>引入内政升级机制</li><li>引入任务机制</li></ul></li><li>评价<ul><li>  总体而言若中间不停顿，新手教程整体流程在五分钟左右，节奏较快，其中基本涵盖了前期所需所有操作，便于玩家上手。</li></ul></li></ul><h4 id="4-3-3-部分游戏系统体验"><a href="#4-3-3-部分游戏系统体验" class="headerlink" title="4.3.3 部分游戏系统体验"></a>4.3.3 部分游戏系统体验</h4><h5 id="4-3-3-1-阵营重置及深夜保护"><a href="#4-3-3-1-阵营重置及深夜保护" class="headerlink" title="4.3.3.1 阵营重置及深夜保护"></a>4.3.3.1 阵营重置及深夜保护</h5><ul><li><p>情况说明</p><ul><li><p>  第一天下午因为有事出去了没有继续，等晚上重新登录游戏的时候进度回退到了阵营选择阶段，并且此时选择阵营时的推荐阵营奖励已经消失了，这次选择东吴阵营继续。</p></li><li><p>中间有两天没有登录，此时再登录游戏发现又可以重选阵营，为玩家提供了多次阵营选择的设计很人性化。</p></li></ul></li><li><p>深夜保护</p><ul><li><p>  北京时间凌晨 2 点 - 6 点会有深夜保护机制，此时体力消耗翻倍（引出了体力机制）</p></li><li><p>  因为我本人在欧洲时区，所以会稍微受到一点影响</p></li></ul></li></ul><blockquote><p>深夜保护机制还是挺人性化的，防止玩家过度沉迷。</p></blockquote><blockquote><p>但既然游戏语言中有多国语言，说明应该有海外版本，海外版本中应该考虑和当地时区同步的问题</p></blockquote><h5 id="4-3-3-2-签到系统"><a href="#4-3-3-2-签到系统" class="headerlink" title="4.3.3.2 签到系统"></a>4.3.3.2 签到系统</h5><ul><li><p>签到奖励出现时机</p><ul><li>  在完成议政殿任务之后，自动弹出了今日签到奖励，并提示<code>再签到 1 天可获得：孙策（橙）</code></li></ul></li><li><p>目的</p><ul><li>  提高玩家留存率</li></ul></li></ul><h5 id="4-3-3-3-离线收益"><a href="#4-3-3-3-离线收益" class="headerlink" title="4.3.3.3 离线收益"></a>4.3.3.3 离线收益</h5><ul><li>上线后会有离线收益的汇总<ul><li>  让玩家感觉非游戏时间也有所收获</li></ul></li></ul><h5 id="4-3-3-4-任务系统（部分）"><a href="#4-3-3-4-任务系统（部分）" class="headerlink" title="4.3.3.4 任务系统（部分）"></a>4.3.3.4 任务系统（部分）</h5><h6 id="4-3-3-4-1-第一章-展土开疆"><a href="#4-3-3-4-1-第一章-展土开疆" class="headerlink" title="4.3.3.4.1 第一章 展土开疆"></a>4.3.3.4.1 第一章 展土开疆</h6><h6 id="武将招募"><a href="#武将招募" class="headerlink" title="武将招募"></a>武将招募</h6><ul><li><p>任务描述</p><ul><li><p>  这是新手教程后的首个任务，点开后可以发现此时处在第一章 展土开疆</p></li><li><p>并且有三种任务类型</p><ul><li><p>  主线任务</p></li><li><p>支线任务</p></li><li><p>阵营任务</p></li></ul></li><li><p>  此处选择完成主线任务中的招募一名新武将</p></li></ul></li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210726144133.png" style="zoom:25%;" /><ul><li>武将招募<ul><li>招募类型<ul><li>可以发现一共有四类招募<ul><li>忠诚名将<ul><li>可招募类型<ul><li>可招募名将（紫色）、良将（蓝色）、偏将（绿色）</li></ul></li><li>招募方式<ul><li><p>  300 铜币招募一次</p></li><li><p>  可连续招募（10 次起底）</p></li></ul></li></ul></li><li>神将群集（默认进入）<ul><li>可招募类型<ul><li>招募 5 次必得<strong>神将（橙）</strong>或<strong>名将（紫）</strong></li></ul></li><li>招募方式<ul><li><p>  首次招募免费（免费机会用掉 11 小时 30 分钟之后会再次有免费机会）</p></li><li><p>  768 金币招募五次（新手教程到此共有 530 金币）</p></li></ul></li></ul></li><li>王佐之才<ul><li>可招募类型<ul><li>招募 5 次必得<strong>神将（橙）</strong>或<strong>名将（紫）</strong></li></ul></li><li>招募方式<ul><li><p>  158 金币招募一次（但是左上角有倒计时显示，预计是倒计时之后会有免费招募一次的机会）</p></li><li><p>  768 金币招募五次（新手教程到此共有 530 金币）</p></li></ul></li></ul></li><li>混世魔王<ul><li>可招募类型<ul><li>招募 5 次必得<strong>神将（橙）</strong>或<strong>名将（紫）</strong></li></ul></li><li>招募方式<ul><li><p>  158 金币招募一次（但是左上角有倒计时显示，预计是倒计时之后会有免费招募一次的机会）</p></li><li><p>  768 金币招募五次（新手教程到此共有 530 金币）</p></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210726144151.png" style="zoom:25%;" /><ul><li><p>充值元素</p><ul><li><p>  这里首次明显出现了充值诱导元素，即再招募 5 次必得<strong>神将（橙）</strong>或<strong>名将（紫）</strong>，并且第一次注意到了金币和铜币的区别</p></li><li><p>这里选择使用一次免费的招募机会</p></li><li><p>  招募过程与前面的一致</p></li></ul></li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210726144209.png" style="zoom:25%;" /><ul><li>  获得了四星名将（紫）王朗</li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210726144328.png" style="zoom:25%;" /><ul><li><p>  返回发现任务已经完成</p></li><li><p>  领取任务奖励</p></li></ul><h6 id="内政系统"><a href="#内政系统" class="headerlink" title="内政系统"></a>内政系统</h6><p>升级内政【议政殿】</p><ul><li><p>任务描述</p><ul><li>  这是第一章 展土开疆中最后一个未完成的主线任务</li></ul></li><li><p>任务流程</p><ul><li>  点击【前往】按钮后会回到主页面</li></ul></li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210726144352.png" style="zoom:25%;" /><ul><li><p>此时主城有高亮提示</p><ul><li><p>  但是任务部分也有箭头提示</p></li><li><p>  会让玩家产生不知道该点哪个的错觉</p></li></ul></li></ul><blockquote><p>迭代建议：将此处任务部分的提示箭头去除</p></blockquote><ul><li><p>任务流程（接上）</p><ul><li><p>  点击主城</p></li><li><p>点击入城</p></li><li><p>点击内政</p></li><li><p>选择议政殿</p></li><li><p>点击【研究】按钮</p></li><li><p>  共需要 10 秒完成</p></li></ul></li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210726144409.png" style="zoom:25%;" /><ul><li><p>充值引导</p><ul><li>  此处发现可以通过使用金币来立即完成研究</li></ul></li><li><p>任务流程（接上）</p><ul><li><p>  升级之后发现二级议政殿下级有了<code>仓库</code>和<code>粮草</code>的可升级选项</p></li><li><p>此时返回主界面发现议政殿任务已完成</p></li><li><p>点击相应任务领取奖励</p></li><li><p>完成之前的步骤之后，此时箭头已经提示可以领取展土开疆任务以完成第一章节所有任务</p></li><li><p>  点击领取之后可直接完成</p></li></ul></li></ul><h6 id="4-3-3-4-2-第二章-大兴土木"><a href="#4-3-3-4-2-第二章-大兴土木" class="headerlink" title="4.3.3.4.2 第二章 大兴土木"></a>4.3.3.4.2 第二章 大兴土木</h6><ul><li><p>蔡文姬任务引导</p><ul><li>  蔡文姬发言引出当前阶段应以<strong>内政</strong>发展为重，而<strong>议政殿</strong>又为提升其他内政建筑的基础，应先行修缮。并且修缮需要资源，拓土可以增收，修筑内政建筑可以增收资源</li></ul></li><li><p>完成主线任务</p><ul><li>任务<ul><li>升级粮草</li><li>升级仓库</li><li>升级议政殿</li><li>攻占 2 个一级或更高级资源点<ul><li><p>提示</p><ul><li><p>  主公实力充沛，挑战低级资源点收益不高，浪费体力！</p></li><li><p>更多攻略请前往好友系统——百晓生</p><ul><li>  引出官方问答机制百晓生</li></ul></li><li><p>  胜利之后还需要时间进行占领</p></li></ul></li></ul></li></ul></li></ul></li></ul><blockquote><p>为什么要引入占领机制？</p></blockquote><blockquote><p>从目标游戏体验分析，原因有以下几点：</p><ol><li>增加真实感</li><li>增加节制感，由下方游戏整体目标感分析可知，此举使得玩家只需要间歇性游玩就可以不断实现实力上涨，另一方面也使得持续在线变得没有必要，从而增加了游戏节制感</li></ol></blockquote><h6 id="4-3-3-4-3-第三章-裹粮策马"><a href="#4-3-3-4-3-第三章-裹粮策马" class="headerlink" title="4.3.3.4.3 第三章 裹粮策马"></a>4.3.3.4.3 第三章 裹粮策马</h6><ul><li>主线任务类型<ul><li>外敌<ul><li>攻占敌营时引入了战场场景，存在阶段性胜利</li></ul></li><li>问答</li><li>内政</li><li>占领</li><li>  征兵</li></ul></li></ul><h6 id="4-3-3-4-4-第四章-仓箱可期"><a href="#4-3-3-4-4-第四章-仓箱可期" class="headerlink" title="4.3.3.4.4 第四章 仓箱可期"></a>4.3.3.4.4 第四章 仓箱可期</h6><ul><li>主线任务类型<ul><li>  引入了势力任务</li></ul></li></ul><h6 id="4-3-3-4-6-第六章-青出于蓝"><a href="#4-3-3-4-6-第六章-青出于蓝" class="headerlink" title="4.3.3.4.6 第六章 青出于蓝"></a>4.3.3.4.6 第六章 青出于蓝</h6><ul><li>主线任务类型<ul><li>  引入武技系统</li></ul></li></ul><h6 id="4-3-3-4-6-第七章-休养生息"><a href="#4-3-3-4-6-第七章-休养生息" class="headerlink" title="4.3.3.4.6 第七章 休养生息"></a>4.3.3.4.6 第七章 休养生息</h6><ul><li><p>主线任务类型</p><ul><li><p>  引入战役机制</p></li><li><p>  引入阵营任务</p></li></ul></li></ul><h2 id="5-游戏部分机制-系统拆解"><a href="#5-游戏部分机制-系统拆解" class="headerlink" title="5. 游戏部分机制/系统拆解"></a>5. 游戏部分机制/系统拆解</h2><h3 id="5-1-新手指引系统拆解"><a href="#5-1-新手指引系统拆解" class="headerlink" title="5.1 新手指引系统拆解"></a>5.1 新手指引系统拆解</h3><h4 id="5-1-1-玩法拆解"><a href="#5-1-1-玩法拆解" class="headerlink" title="5.1.1 玩法拆解"></a>5.1.1 玩法拆解</h4><ul><li><p>玩法规则：角色，能力+限制</p><ul><li>角色<ul><li>玩家自己</li><li>单人参与</li></ul></li><li>能力<ul><li>  跟随系统进行指定区域的点击</li></ul></li><li>限制<ul><li><p>  只能点击限定位置</p></li><li><p>只有一次新手指引教程</p></li></ul></li><li>玩法目标：终点+量化指标<ul><li>终点<ul><li>  完成新手指引相关任务</li></ul></li></ul></li></ul><h4 id="5-1-2-设计拆解"><a href="#5-1-2-设计拆解" class="headerlink" title="5.1.2 设计拆解"></a>5.1.2 设计拆解</h4></li><li><p>期望体验</p><ul><li><p>掌控感</p><ul><li>新手指引的目的就是为了让玩家尽可能快速地熟悉游戏基本系统，要让玩家有一种 <em><strong>这个我熟，以后我也知道怎么做了</strong></em> 的掌控感</li></ul></li><li><p>新鲜感和差异感</p><ul><li>  作为玩家游玩的第一部分，新手教程需要让玩家迅速体会到与同类游戏的差异点与新鲜点，从而吸引玩家继续游戏</li></ul></li><li><p>快速</p><ul><li>  新手指引系统需要玩家能尽可能快地完成，因为该过程中玩家可做操作有限，需要防止因为新手流程过长，玩家感到无聊而造成的玩家流失</li></ul></li></ul></li><li><p>目标</p><ul><li><p>  让玩家尽可能短的时间内熟悉游戏基本玩法机制</p></li><li><p>  吸引玩家继续游戏</p></li></ul></li><li><p>路径/挑战</p><ul><li>路径<ul><li>跟随系统进行特定位置的点击</li></ul></li><li>挑战<ul><li>  玩家很容易感到无聊</li></ul></li></ul></li></ul><h3 id="5-2-阵营机制拆解"><a href="#5-2-阵营机制拆解" class="headerlink" title="5.2 阵营机制拆解"></a>5.2 阵营机制拆解</h3><h4 id="5-2-1-玩法拆解"><a href="#5-2-1-玩法拆解" class="headerlink" title="5.2.1 玩法拆解"></a>5.2.1 玩法拆解</h4><ul><li>玩法规则：角色，能力+限制<ul><li>角色<ul><li>同服务器玩家</li><li>多人参与</li></ul></li><li>能力<ul><li><p>  同阵营玩家达成的成就自己也能享受相应奖励</p></li><li><p>与非己方阵营玩家进行作战</p></li></ul></li><li>限制<ul><li><p>  不能与同阵营玩家进行作战</p></li><li><p>作战失败会有资源损失</p></li></ul></li><li>玩法目标：终点+量化指标<ul><li>终点<ul><li>  完成赛季最终阵营任务</li></ul></li></ul></li></ul></li></ul><h4 id="5-2-2-设计拆解"><a href="#5-2-2-设计拆解" class="headerlink" title="5.2.2 设计拆解"></a>5.2.2 设计拆解</h4><ul><li><p>期望体验</p><ul><li>合作感<ul><li>阵营机制设计的期望之一就是让同阵营玩家能够荣辱与共，同阵营玩家达成成就后玩家自己也可以领取相应奖励，如此能够增强玩家的合作感</li></ul></li><li>竞争感<ul><li>  阵营机制设计的另一个期望就是让不同阵营玩家间互相竞争，此举不但能吸引玩家保持游戏积极性，并且也能促进玩家消费</li></ul></li></ul></li><li><p>目标</p><ul><li><p>  让同阵营玩家不断合作，荣辱与共</p></li><li><p>让非己方阵营玩家互相竞争，促进玩家游戏活跃度，刺激玩家消费欲望</p></li></ul></li><li><p>路径/挑战</p><ul><li>路径<ul><li>攻城略池</li></ul></li><li>挑战<ul><li>  失败后玩家可能会产生挫败感</li></ul></li></ul></li></ul><h3 id="5-3-问答系统拆解"><a href="#5-3-问答系统拆解" class="headerlink" title="5.3 问答系统拆解"></a>5.3 问答系统拆解</h3><h4 id="5-3-1-玩法拆解"><a href="#5-3-1-玩法拆解" class="headerlink" title="5.3.1 玩法拆解"></a>5.3.1 玩法拆解</h4><ul><li><p>玩法规则：角色，能力+限制</p><ul><li>角色<ul><li>玩家自己</li><li>  单人参与</li></ul></li></ul></li><li><p>能力</p><ul><li>  可以从备选答案中挑选答案</li></ul></li><li><p>限制</p><ul><li>只能做一次选择<ul><li>  答错了不能再次回答</li></ul></li></ul></li><li><p>玩法目标：终点+量化指标</p><ul><li>终点<ul><li>选择备选答案后无论答案正确与否都会结束</li></ul></li><li>量化指标<ul><li>  答案的正确性</li></ul></li></ul></li></ul><h4 id="5-3-2-设计拆解"><a href="#5-3-2-设计拆解" class="headerlink" title="5.3.2 设计拆解"></a>5.3.2 设计拆解</h4><ul><li><p>期望体验</p><ul><li>不紧张地答题<ul><li>不是设计为紧张的、有排名的、竞争性强的答题</li><li>设计为答对了很好，答错了也不会有什么严重后果的方式<ul><li><p>  减轻玩家答题负担</p></li><li><p>  增加玩家参与度</p></li></ul></li></ul></li><li>意犹未尽<ul><li>  答题机会是随机出现的，并且只有一次错误机会，题量通常小于 5 道，玩家基本能很快答完，无论是答对了还是答错了，都让人有一种意犹未尽的感觉，让玩家有种意犹未尽的感觉，增加玩家对下次答题的期待</li></ul></li><li>收获<ul><li><p>  既能收获游戏内的资源奖励</p></li><li><p>  又能丰富游戏内的玩法知识，从而增进玩家对于游戏的了解，丰富玩法路径</p></li></ul></li></ul></li><li><p>目标</p><ul><li>  通过正确回答问题获取资源</li></ul></li><li><p>路径/挑战</p><ul><li>路径<ul><li>从备选答案中做出选择</li></ul></li><li>挑战<ul><li>  存在错误答案</li></ul></li></ul></li></ul><h2 id="6-报告总结"><a href="#6-报告总结" class="headerlink" title="6. 报告总结"></a>6. 报告总结</h2><h3 id="6-1-游戏定位"><a href="#6-1-游戏定位" class="headerlink" title="6.1 游戏定位"></a>6.1 游戏定位</h3><ul><li>  <code>国战策略 slg 攻城手游</code></li></ul><h3 id="6-2-游戏整体目标感分析"><a href="#6-2-游戏整体目标感分析" class="headerlink" title="6.2 游戏整体目标感分析"></a>6.2 游戏整体目标感分析</h3><p>作为一款三国题材的 SLG 国战手游，游戏的整体目标感可归结为以下几点：</p><ul><li>掌控感<ul><li>调兵遣将<ul><li>  玩家需要作为一方首领来参与到游戏当中，无论是将领的配置还是兵种的选择都让玩家有一种_<strong>自己说了算</strong>_ 的爽快掌控感</li></ul></li><li>攻城略池<ul><li>  作为一方诸侯，玩家需要攻城略池以进行资源补给以及势力/贡献提升，此间对于目标地点的选择也增强了掌控感</li></ul></li></ul></li><li>策略感<ul><li>合纵连横<ul><li>  玩家需要作为阵营中的势力之一来共同影响天下大势，无论是对己方势力的驰援还是对敌对势力的攻占都是阵营内外合作竞争的重要抉择</li></ul></li></ul></li><li>节制感<ul><li>以下几种机制的引入使得玩家只需要间歇性游玩就可以不断实现实力上涨，另一方面也使得持续在线变得没有必要，从而增加了游戏节制感<ul><li>  占领时间</li><li>  研发种类上限</li><li>  深夜保护</li><li>  体力上限</li></ul></li></ul></li></ul><h3 id="6-3-核心玩法定位"><a href="#6-3-核心玩法定位" class="headerlink" title="6.3 核心玩法定位"></a>6.3 核心玩法定位</h3><h4 id="6-3-1-三元素分析"><a href="#6-3-1-三元素分析" class="headerlink" title="6.3.1 三元素分析"></a>6.3.1 三元素分析</h4><ul><li>  从战斗、养成、社交三元素进行分析，本游戏前期偏重战斗与养成，从其游戏定位看后期会偏重养成与社交</li></ul><h5 id="6-3-1-1-战斗"><a href="#6-3-1-1-战斗" class="headerlink" title="6.3.1.1 战斗"></a>6.3.1.1 战斗</h5><ul><li>偏重<ul><li>指令类型<ul><li>去哪儿<ul><li>选择要攻占的地方<ul><li>  涉及体力消耗及胜负</li></ul></li></ul></li><li>怎么打<ul><li><p>  武将的选择</p></li><li><p>兵种的选择</p><ul><li>  涉及兵种克制</li></ul></li></ul></li></ul></li></ul></li></ul><h5 id="6-3-1-2-养成"><a href="#6-3-1-2-养成" class="headerlink" title="6.3.1.2 养成"></a>6.3.1.2 养成</h5><ul><li>主要涉及<ul><li>武将的获取和培养<ul><li>升星<ul><li>抽到同一卡牌之后才能融合升星</li><li>最高为五星</li></ul></li><li>进阶</li><li>装备</li><li>缘分</li><li>武将技能</li></ul></li><li>科技（内政）的升级<ul><li>  快速升级需要消耗金币</li></ul></li><li>资源的获取和消耗<ul><li>  木材</li><li>  铁矿</li><li>  石料</li><li>  粮草</li></ul></li></ul></li></ul><h5 id="6-3-1-3-社交"><a href="#6-3-1-3-社交" class="headerlink" title="6.3.1.3 社交"></a>6.3.1.3 社交</h5><ul><li><p>主要涉及</p><ul><li><p>  势力值的提升</p></li><li><p>贡献度的提升</p></li></ul></li><li><p>  游玩过程中该元素还未较多体现</p></li><li><p>  但从其游戏定位中的<code>国战</code>属性中可知最终肯定会涉及到对抗型 PVP、GVG 元素</p></li></ul><h4 id="6-3-2-围绕核心玩法做了什么"><a href="#6-3-2-围绕核心玩法做了什么" class="headerlink" title="6.3.2 围绕核心玩法做了什么"></a>6.3.2 围绕核心玩法做了什么</h4><ul><li><p>新手引导</p><ul><li>  涵盖武将招募/选择，兵力分配，资源点攻占，兵种克制，土地开拓，任务机制，用户可快速上手</li></ul></li><li><p>主线剧情</p><ul><li>主线剧情的推进使得玩家渐渐熟悉游戏中的各类事务和系统<ul><li>战斗<ul><li>英雄及兵种选择</li></ul></li><li>养成<ul><li>资源获取<ul><li>攻城略池</li></ul></li><li>以战养战<ul><li>  内政升级</li></ul></li></ul></li><li>社交<ul><li><p>  阵营任务</p></li><li><p>  势力提升任务</p></li></ul></li></ul></li></ul></li></ul><h4 id="6-3-3-主要哪些系统为核心玩法服务"><a href="#6-3-3-主要哪些系统为核心玩法服务" class="headerlink" title="6.3.3 主要哪些系统为核心玩法服务"></a>6.3.3 主要哪些系统为核心玩法服务</h4><ul><li><p>战斗相关</p><ol><li><p>武将系统</p><ul><li>  通过抽卡获取（前期盈利点之一）</li></ul></li><li><p> 征兵系统</p></li><li><p> 武技系统</p></li></ol></li><li><p>养成相关</p><ol><li><p>内政系统</p><ul><li>  快速完成需要金币（消费点之一）</li></ul></li><li><p>资源系统</p><ul><li>思路<ul><li>  拓土-获取资源-提升实力</li></ul></li></ul></li><li><p>战役（副本）系统</p><ul><li>  用于获取材料/资源</li></ul></li></ol></li><li><p>社交相关</p><ol><li><p> 贡献系统</p></li><li><p> 势力系统</p></li><li><p>聊天系统</p><ul><li><p>分类</p><ul><li><p>阵营</p><ul><li>  辅助攻略型 PVE 的展开</li></ul></li><li><p>世界</p><ul><li>  辅助攻略型 PVE 、对抗型 PVP 的展开</li></ul></li><li><p>系统</p><ul><li>  了解世界玩家的高光时刻，以对游戏系统有更深地了解</li></ul></li></ul></li></ul></li></ol></li></ul><h4 id="6-3-4-基于核心玩法的设计细节进行拆分"><a href="#6-3-4-基于核心玩法的设计细节进行拆分" class="headerlink" title="6.3.4 基于核心玩法的设计细节进行拆分"></a>6.3.4 基于核心玩法的设计细节进行拆分</h4><ul><li><p>战斗前的战力分析</p><ul><li>  会有文字提示敌我差距，方便玩家进行判断</li></ul></li><li><p>战场场景的引入</p><ul><li>  在进行较大规模战斗（如攻占营地）时会有战场场景的引入，引入阶段性胜利，营造战斗氛围，增强玩家心流及代入感</li></ul></li></ul><h3 id="6-4-分析好不好玩"><a href="#6-4-分析好不好玩" class="headerlink" title="6.4 分析好不好玩"></a>6.4 分析好不好玩</h3><h4 id="6-4-1-上手难易度"><a href="#6-4-1-上手难易度" class="headerlink" title="6.4.1 上手难易度"></a>6.4.1 上手难易度</h4><ul><li><p>从操作分析</p><ul><li><p>  新手引导友好</p></li><li><p>  自动战斗省心</p></li></ul></li><li><p>从表现分析</p><ul><li><p>表现</p><ul><li><p>动作特效</p><ul><li>  形象帅气</li></ul></li><li><p>打击节奏</p><ul><li><p>  自动战斗</p></li><li><p>  频率固定</p></li></ul></li><li><p>打击反馈</p><ul><li>  飘字直观</li></ul></li><li><p>音效</p><ul><li><p>  较为真实</p></li><li><p>  战斗时定期播放</p></li></ul></li></ul></li></ul></li><li><p>从策略分析</p><ul><li><p>广度</p><ul><li><p>  所有武将共有 500 名</p></li><li><p>  所有兵种共有 7 种</p></li></ul></li><li><p>  深度</p></li><li><p>  容错</p></li></ul></li></ul><h4 id="6-4-2-耐玩程度"><a href="#6-4-2-耐玩程度" class="headerlink" title="6.4.2 耐玩程度"></a>6.4.2 耐玩程度</h4><ul><li><p>以下机制的引入使得策略要素大大加强，需要玩家选择_更高性价比_的操作方案</p><ul><li><p>  体力机制</p></li><li><p>  兵种克制</p></li></ul></li><li><p>此外还存在很多机制，玩家拥有很高的定制自由度</p><ul><li><p>城池</p><ul><li><p>内政</p><ul><li><p>  内务</p></li><li><p>  军务</p></li><li><p>  战略</p></li></ul></li><li><p>  马厩</p></li><li><p>  锻造</p></li><li><p>任命</p><ul><li><p>  主政官</p></li><li><p>  巡察使</p></li><li><p>  驯马使</p></li><li><p>  税收官</p></li><li><p>  木材官</p></li><li><p>  冶铁官</p></li><li><p>  …</p></li></ul></li><li><p>  鉴宝</p></li><li><p>  巡查</p></li></ul></li></ul></li></ul><h4 id="6-4-3-额外机制"><a href="#6-4-3-额外机制" class="headerlink" title="6.4.3 额外机制"></a>6.4.3 额外机制</h4><ol><li><p>问答机制</p><ul><li><p>触发</p><ul><li>  随机</li></ul></li><li><p>机制</p><ul><li>  回答问题，答对有奖励</li></ul></li><li><p>引入目的</p><ul><li>  增加额外获取资源的手段，并且可以在玩家没有体力时依然有事可做，从而增加玩家游戏时长</li></ul></li></ul></li><li><p>离线收益机制</p><ul><li><p>触发</p><ul><li>  离线</li></ul></li><li><p>机制</p><ul><li>  离线仍可自动运营，上线后可获取离线时间内自动运营得到的资源</li></ul></li><li><p>引入目的</p><ul><li><p>  使游戏整体呈现碎片化游玩趋势，增强目标游戏体验的节制感</p></li><li><p>  便于玩家安排时间，让玩家在非游戏时间也有参与感</p></li></ul></li></ul></li><li><p>体力机制</p><ul><li>触发<ul><li>  攻城略池时需要驱动部队前往</li></ul></li><li>机制<ul><li>  驱动部队前往城外地点时，根据距离会对体力进行相应扣减</li></ul></li><li>引入目的<ul><li>  控制玩家在线时长，突出目标游戏体验中的节制感</li><li>  要求玩家谨慎操作，增加策略性和真实感</li></ul></li></ul></li><li><p>资源过量机制</p><ul><li>触发<ul><li>  已有资源超出可负载资源上限</li></ul></li><li>机制<ul><li>  即使资源过量，但系统仍会保留该部分资源</li></ul></li><li>引入目的<ul><li>  减轻玩家因未能及时上线而导致过量资源损耗的挫败感</li><li>  强化目标游戏体验中的节制感</li></ul></li></ul></li></ol><h3 id="6-5-优点"><a href="#6-5-优点" class="headerlink" title="6.5 优点"></a>6.5 优点</h3><ul><li><p>表现层</p><ul><li><p>画面</p><ul><li>  精美，且伴有动效</li></ul></li><li><p>音效</p><ul><li>  与画面和文案相契合，较为贴切</li></ul></li><li><p>文案</p><ul><li>  古风古韵，较为贴切</li></ul></li></ul></li><li><p>操作</p><ul><li><p>竖屏显示</p><ul><li>  降低玩家操作负累感</li></ul></li><li><p>自动战斗</p><ul><li>  可让玩家把精力都放在排兵布阵以及攻城略池的策略安排中</li></ul></li></ul></li><li><p>系统设计</p><ul><li><p>深夜保护机制</p><ul><li>  人性化，防沉迷</li></ul></li><li><p>阵营重置机制</p><ul><li>  人性化</li></ul></li><li><p>离线收益</p><ul><li>  可以让玩家充分利用碎片化时间进行游戏，并且不玩游戏时也有参与感</li></ul></li></ul></li></ul><h3 id="6-6-可迭代点"><a href="#6-6-可迭代点" class="headerlink" title="6.6 可迭代点"></a>6.6 可迭代点</h3><ul><li><p>  游戏评价中所提及的问题</p></li><li><p>当前进度示意</p><ul><li>  主线任务中只有当前所在章节，如果能有总的章节提示，将帮助玩家更好地了解目前游戏进度</li></ul></li><li><p>  注册时的密码输入</p></li></ul><blockquote><p>迭代建议：将此处密码输入时设置为默认不可见模式，以保护用户隐私。</p></blockquote><ul><li>  登录界面信息</li></ul><blockquote><p>迭代建议：建议统一 App Store 中与登录界面中的适龄提示信息</p></blockquote><ul><li>  新手引导中升级内政议政殿的提示</li></ul><blockquote><p>迭代建议：将此处任务部分的提示箭头去除</p></blockquote><h3 id="6-7-结语"><a href="#6-7-结语" class="headerlink" title="6.7 结语"></a>6.7 结语</h3><p>总的而言，游戏上手容易，前期玩法较为直观，引导充足，不会让玩家产生_不知道该干什么_的想法，新手教程过度自然，但是由于缺少当前进度与总体进度的对比示意，会让玩家产生_不知道进行到什么程度_，<em>还有多久才算正式脱离新手教程</em> 的感觉。</p><p>整体画面贴图精度不是非常高，放大后还是会有些许模糊的感觉，但动态特效及自然声效的引入使得玩家未操作时也能有良好的观感。</p><p>除主界面中闪光的_首充_标志外，其余付费元素并没有在游戏中进行特别强调，需要玩家自己进行发掘。</p><p>但游戏中的占领机制、体力机制和离线收益等机制使得玩家能够更好地利用碎片化时间进行游玩。竖屏显示也降低了玩家的操作负累感。同一阵营内只要有玩家达成高等级成就则同阵营玩家皆可获利增强了阵营归属感以及荣辱感，并且无论己方阵营处于三大阵营中任意位置都有相应赛季结局，减轻了玩家的挫败感。游戏定位中的国战、SLG、攻城元素都得到了很好地体现，目标游戏体验的掌控感，策略感和节制感也实现得较好。</p><p>以上便是本体验报告的全部内容。</p>]]></content>
      
      
      <categories>
          
          <category> Study-Game-ExperienceReport </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Portfolio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>神将三国首充策划案</title>
      <link href="2021/07/26/shen-jiang-san-guo-first-recharge-plan/"/>
      <url>2021/07/26/shen-jiang-san-guo-first-recharge-plan/</url>
      
        <content type="html"><![CDATA[<h1 id="神将三国首充策划案"><a href="#神将三国首充策划案" class="headerlink" title="神将三国首充策划案"></a>神将三国首充策划案</h1><h2 id="版本更新记录"><a href="#版本更新记录" class="headerlink" title="版本更新记录"></a>版本更新记录</h2><table><thead><tr><th>日期</th><th>版本</th><th>说明</th></tr></thead><tbody><tr><td>20210725</td><td>1.0</td><td>初版策划案</td></tr></tbody></table><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>通过让玩家完成首充，体会到充值带来的能力提升，从而培养玩家付费习惯。</p><h2 id="需求定位"><a href="#需求定位" class="headerlink" title="需求定位"></a>需求定位</h2><ul><li>需要达成的目标<ul><li>  使玩家付费</li><li>  让首充玩家体会到充值带来的提升/拉开与非付费玩家的差距</li><li>  培养玩家付费习惯</li></ul></li><li>需要考虑的因素<ul><li>  如何让玩家发现并愿意花钱</li><li>奖励设定<ul><li>  高性价比</li></ul></li><li>  如何培养玩家付费习惯</li></ul></li></ul><h2 id="功能需求"><a href="#功能需求" class="headerlink" title="功能需求"></a>功能需求</h2><h3 id="规则"><a href="#规则" class="headerlink" title="规则"></a>规则</h3><ul><li>  玩家需要从未进行过充值。</li><li>  在游戏主界面中显示【首充】按钮，点击后将进入【首充】系统页面，点击【首充】页面中的【前往充值】按钮后进入【充值】系统页面。</li><li>  完成首充后获取相应充值奖励。</li><li>  完成首充后根据条件可获取首充奖励。</li><li>  完成首充后根据限制条件（如只能购买一次）对相应系统状态进行更新。</li></ul><h3 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210726123351.png" style="zoom: 67%;" /><h3 id="配置表"><a href="#配置表" class="headerlink" title="配置表"></a>配置表</h3><style type="text/css">.tg  {border-collapse:collapse;border-spacing:0;}.tg td{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;  overflow:hidden;padding:10px 5px;word-break:normal;}.tg th{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;  font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}.tg .tg-1wig{font-weight:bold;text-align:left;vertical-align:top}.tg .tg-baqh{text-align:center;vertical-align:top}.tg .tg-fymr{border-color:inherit;font-weight:bold;text-align:left;vertical-align:top}.tg .tg-0lax{text-align:left;vertical-align:top}</style><table class="tg"><thead>  <tr>    <th class="tg-fymr">涉及页面 </th>    <th class="tg-1wig">元素名称 </th>    <th class="tg-1wig">元素命名 </th>    <th class="tg-1wig">属性名称 </th>    <th class="tg-1wig">属性命名举例 </th>    <th class="tg-1wig">值举例（对应 ICON 的美术字） </th>  </tr></thead><tbody>  <tr>    <td class="tg-0lax" rowspan="2">游戏主界面 </td>    <td class="tg-0lax" rowspan="2">【首充】按钮 </td>    <td class="tg-baqh" rowspan="2">butt_firstRecharge </td>    <td class="tg-0lax">名称 </td>    <td class="tg-0lax">text_firstRecharge </td>    <td class="tg-0lax">首充 </td>  </tr>  <tr>    <td class="tg-0lax">图标 </td>    <td class="tg-0lax">icon_firstRecharge </td>    <td class="tg-0lax"> </td>  </tr>  <tr>    <td class="tg-0lax" rowspan="2">【首充】页面 </td>    <td class="tg-0lax">【X】按钮 </td>    <td class="tg-0lax">butt_FRreturn </td>    <td class="tg-0lax">图标 </td>    <td class="tg-0lax">icon_FRreturn </td>    <td class="tg-0lax"> </td>  </tr>  <tr>    <td class="tg-0lax">【前往充值】按钮 </td>    <td class="tg-0lax">butt_ FRrecharge </td>    <td class="tg-0lax">名称 </td>    <td class="tg-0lax">text_FRrecharge </td>    <td class="tg-0lax">前往充值 </td>  </tr>  <tr>    <td class="tg-0lax" rowspan="9">【充值页面-新手特惠】页面 </td>    <td class="tg-0lax">【X】按钮 </td>    <td class="tg-0lax">butt_rechargeReturn </td>    <td class="tg-0lax">图标 </td>    <td class="tg-0lax">icon_rechargeReturn </td>    <td class="tg-0lax"> </td>  </tr>  <tr>    <td class="tg-0lax" rowspan="3">对应奖励 </td>    <td class="tg-0lax" rowspan="3">elem_rechargeRewards </td>    <td class="tg-0lax">名称 </td>    <td class="tg-0lax">text_rechargeRewards </td>    <td class="tg-0lax">铜币 </td>  </tr>  <tr>    <td class="tg-0lax">图标 </td>    <td class="tg-0lax">icon_rechargeRewards </td>    <td class="tg-0lax">- </td>  </tr>  <tr>    <td class="tg-0lax">数量 </td>    <td class="tg-0lax">num_rechargeRewards </td>    <td class="tg-0lax">10000 </td>  </tr>  <tr>    <td class="tg-0lax">价格按钮 </td>    <td class="tg-0lax">butt_price </td>    <td class="tg-0lax">价格 <br> </td>    <td class="tg-0lax">text_price </td>    <td class="tg-0lax">免费 <br>￥6 </td>  </tr>  <tr>    <td class="tg-0lax" rowspan="2">限制条件 </td>    <td class="tg-0lax" rowspan="2">elem_restrictions </td>    <td class="tg-0lax">名称 </td>    <td class="tg-0lax">text_restrictions </td>    <td class="tg-0lax">限购 1 次 </td>  </tr>  <tr>    <td class="tg-0lax">图标 </td>    <td class="tg-0lax">icon_restrictions </td>    <td class="tg-0lax"> </td>  </tr>  <tr>    <td class="tg-0lax" rowspan="2">已有充值点 </td>    <td class="tg-0lax" rowspan="2">elem_rechargePoints </td>    <td class="tg-0lax">图标 </td>    <td class="tg-0lax">icon_gold </td>    <td class="tg-0lax">- </td>  </tr>  <tr>    <td class="tg-0lax">数额 </td>    <td class="tg-0lax">num_gold </td>    <td class="tg-0lax">200 </td>  </tr>  <tr>    <td class="tg-0lax">【付款失败】页面 </td>    <td class="tg-0lax">充值失败弹窗 </td>    <td class="tg-0lax">notice_chargeFail </td>    <td class="tg-0lax">提示内容 </td>    <td class="tg-0lax">text_chargeFail </td>    <td class="tg-0lax">充值失败 购买失败 </td>  </tr>  <tr>    <td class="tg-0lax" rowspan="2">【首充完成 - 第一天奖励待领取】页面 </td>    <td class="tg-0lax">【X】按钮 </td>    <td class="tg-0lax">butt_FRreturn </td>    <td class="tg-0lax">图标 </td>    <td class="tg-0lax">icon_FRreturn </td>    <td class="tg-0lax"> </td>  </tr>  <tr>    <td class="tg-0lax">【领取】按钮 </td>    <td class="tg-0lax">butt_FRreceive </td>    <td class="tg-0lax"> 名称 </td>    <td class="tg-0lax">text_FRreceive </td>    <td class="tg-0lax"> 领取 </td>  </tr>  <tr>    <td class="tg-0lax" rowspan="2">【首充完成 - 第一天奖励已领取】页面 </td>    <td class="tg-0lax">【X】按钮 </td>    <td class="tg-0lax">butt_FRreturn </td>    <td class="tg-0lax">图标 </td>    <td class="tg-0lax">icon_FRreturn </td>    <td class="tg-0lax"> </td>  </tr>  <tr>    <td class="tg-0lax">【明日再来】按钮 </td>    <td class="tg-0lax">butt_FRtomorrow </td>    <td class="tg-0lax"> 名称 </td>    <td class="tg-0lax">text_FRtomorrow </td>    <td class="tg-0lax"> 明日再来 </td>  </tr></tbody></table><h3 id="界面交互功能"><a href="#界面交互功能" class="headerlink" title="界面交互功能"></a>界面交互功能</h3><style type="text/css">.tg  {border-collapse:collapse;border-spacing:0;}.tg td{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;  overflow:hidden;padding:10px 5px;word-break:normal;}.tg th{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;  font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}.tg .tg-1wig{font-weight:bold;text-align:left;vertical-align:top}.tg .tg-fymr{border-color:inherit;font-weight:bold;text-align:left;vertical-align:top}.tg .tg-0lax{text-align:left;vertical-align:top}</style><table class="tg"><thead>  <tr>    <th class="tg-fymr">涉及页面 </th>    <th class="tg-1wig">点击位置 </th>    <th class="tg-1wig">元素名称 </th>    <th class="tg-1wig">点击效果 </th>  </tr></thead><tbody>  <tr>    <td class="tg-0lax">游戏主界面 </td>    <td class="tg-0lax">【首充】按钮 </td>    <td class="tg-0lax">首充 </td>    <td class="tg-0lax">前往【首充】页面 </td>  </tr>  <tr>    <td class="tg-0lax" rowspan="3">【首充】页面 </td>    <td class="tg-0lax">【X】 </td>    <td class="tg-0lax">返回 </td>    <td class="tg-0lax">返回【游戏主界面】 </td>  </tr>  <tr>    <td class="tg-0lax">【前往充值】按钮 </td>    <td class="tg-0lax">前往充值 </td>    <td class="tg-0lax">前往【充值】页面 </td>  </tr>  <tr>    <td class="tg-0lax">对应充值奖励 </td>    <td class="tg-0lax">- </td>    <td class="tg-0lax">显示该奖励的物品信息 </td>  </tr>  <tr>    <td class="tg-0lax">【首充页面-物品信息】 </td>    <td class="tg-0lax">除物品信息栏外的部分或者【→】 </td>    <td class="tg-0lax">- <br> </td>    <td class="tg-0lax">返回【首充】页面 </td>  </tr>  <tr>    <td class="tg-0lax" rowspan="3">【充值页面-新手特惠】 </td>    <td class="tg-0lax">【→】 </td>    <td class="tg-0lax">返回 </td>    <td class="tg-0lax">返回【首充】页面 </td>  </tr>  <tr>    <td class="tg-0lax">对应充值奖励 </td>    <td class="tg-0lax">- </td>    <td class="tg-0lax">显示该奖励的物品信息 </td>  </tr>  <tr>    <td class="tg-0lax">充值方案对应金额 </td>    <td class="tg-0lax">价格 </td>    <td class="tg-0lax">调用付款系统 </td>  </tr>  <tr>    <td class="tg-0lax" rowspan="2">【充值奖励领取】 </td>    <td class="tg-0lax">对应充值奖励 </td>    <td class="tg-0lax">- </td>    <td class="tg-0lax">显示该奖励的物品信息 </td>  </tr>  <tr>    <td class="tg-0lax">除物品信息栏外的部分 </td>    <td class="tg-0lax">- </td>    <td class="tg-0lax">返回【充值】页面 </td>  </tr>  <tr>    <td class="tg-0lax" rowspan="3">【首充完成 - 第一天奖励待领取】 </td>    <td class="tg-0lax">【X】 </td>    <td class="tg-0lax">返回 </td>    <td class="tg-0lax">返回【游戏主界面】 </td>  </tr>  <tr>    <td class="tg-0lax">【领取】按钮 </td>    <td class="tg-0lax">领取 </td>    <td class="tg-0lax">显示领取的奖励 </td>  </tr>  <tr>    <td class="tg-0lax">对应充值奖励 </td>    <td class="tg-0lax">- </td>    <td class="tg-0lax">显示该奖励的物品信息 </td>  </tr>  <tr>    <td class="tg-0lax" rowspan="2">【首充完成 - 第一天奖励已领取】 </td>    <td class="tg-0lax">【X】 </td>    <td class="tg-0lax">返回 <br> </td>    <td class="tg-0lax">返回【游戏主界面】 </td>  </tr>  <tr>    <td class="tg-0lax">对应充值奖励 </td>    <td class="tg-0lax">- </td>    <td class="tg-0lax">显示该奖励的物品信息 </td>  </tr></tbody></table><h2 id="数值需求"><a href="#数值需求" class="headerlink" title="数值需求"></a>数值需求</h2><ul><li>整体目标<ul><li>  需要让首充玩家体会到很高的性价比</li><li>  需要让首充玩家感觉与没充值时有了提升</li></ul></li></ul><h2 id="美术需求"><a href="#美术需求" class="headerlink" title="美术需求"></a>美术需求</h2><h3 id="涉及页面原型"><a href="#涉及页面原型" class="headerlink" title="涉及页面原型"></a>涉及页面原型</h3><h4 id="游戏主界面"><a href="#游戏主界面" class="headerlink" title="游戏主界面"></a>游戏主界面</h4><img src="https://4399.feishu.cn/space/api/box/stream/download/asynccode/?code=ZGE1ZjBiZTAwMzhlNDNmZDVlNTQzNTY0MTc0MzcyNzdfcm50S21hR0VEMktkancyckd3bzlRcWY2Y3V3VEF4R2hfVG9rZW46Ym94Y25iUlczaTV6VjRLVmNvb1lzdW9jOVJiXzE2MjcyOTU0MzU6MTYyNzI5OTAzNV9WNA" style="zoom: 33%;" /><h4 id="【首充】页面"><a href="#【首充】页面" class="headerlink" title="【首充】页面"></a>【首充】页面</h4><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/10291627172769_.pic_hd.jpg" style="zoom: 33%;" /><h4 id="【充值】页面"><a href="#【充值】页面" class="headerlink" title="【充值】页面"></a>【充值】页面</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/10301627172771_.pic_hd.jpg" style="zoom:30%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/10311627172772_.pic_hd.jpg" style="zoom: 25%;" /></p><h4 id="【付款】页面"><a href="#【付款】页面" class="headerlink" title="【付款】页面"></a>【付款】页面</h4><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210726142456.png" style="zoom: 33%;" /><h4 id="【付款失败】页面"><a href="#【付款失败】页面" class="headerlink" title="【付款失败】页面"></a>【付款失败】页面</h4><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/10351627172776_.pic_hd.jpg" style="zoom: 33%;" /><h4 id="【付款成功】页面"><a href="#【付款成功】页面" class="headerlink" title="【付款成功】页面"></a>【付款成功】页面</h4><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/10351627172776_.pic_hd.jpg" style="zoom: 33%;" /><h4 id="【充值奖励获取】页面"><a href="#【充值奖励获取】页面" class="headerlink" title="【充值奖励获取】页面"></a>【充值奖励获取】页面</h4><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/10361627172781_.pic_hd.jpg" style="zoom: 33%;" /><h4 id="【首充完成-第一天奖励待领取】页面"><a href="#【首充完成-第一天奖励待领取】页面" class="headerlink" title="【首充完成 - 第一天奖励待领取】页面"></a>【首充完成 - 第一天奖励待领取】页面</h4><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/10371627172783_.pic_hd.jpg" style="zoom: 33%;" /><h4 id="【首充完成-第一天奖励已领取】页面"><a href="#【首充完成-第一天奖励已领取】页面" class="headerlink" title="【首充完成 - 第一天奖励已领取】页面"></a>【首充完成 - 第一天奖励已领取】页面</h4><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/10391627173172_.pic_hd.jpg" style="zoom: 33%;" /><h3 id="图标-amp-UI-amp-特效需求-ICON-位置-式样-特效"><a href="#图标-amp-UI-amp-特效需求-ICON-位置-式样-特效" class="headerlink" title="图标 &amp; UI &amp; 特效需求 - ICON/位置/式样/特效"></a>图标 &amp; UI &amp; 特效需求 - ICON/位置/式样/特效</h3><style type="text/css">.tg  {border-collapse:collapse;border-spacing:0;}.tg td{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;  overflow:hidden;padding:10px 5px;word-break:normal;}.tg th{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;  font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}.tg .tg-c3ow{border-color:inherit;text-align:center;vertical-align:top}.tg .tg-fymr{border-color:inherit;font-weight:bold;text-align:left;vertical-align:top}.tg .tg-0pky{border-color:inherit;text-align:left;vertical-align:top}</style><table class="tg"><thead>  <tr>    <th class="tg-fymr">涉及页面 </th>    <th class="tg-fymr">目标元素 </th>    <th class="tg-fymr"> ICON </th>    <th class="tg-fymr">位置 </th>    <th class="tg-fymr">式样 </th>    <th class="tg-fymr">特效 </th>    <th class="tg-fymr">对应原型 </th>  </tr></thead><tbody>  <tr>    <td class="tg-0pky">游戏主界面 </td>    <td class="tg-0pky">【首充】按钮 </td>    <td class="tg-0pky">首充能获得的奖励 </td>    <td class="tg-0pky">需与主界面中其他 ICON 放置在一起 </td>    <td class="tg-0pky">需要突出显示，能与别的图标区分开 </td>    <td class="tg-0pky">按钮边缘高亮，需要能吸引玩家注意力 </td>    <td class="tg-0pky"><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/10381627172812_.pic_hd.jpg"> </td>  </tr>  <tr>    <td class="tg-c3ow" rowspan="4">【首充】页面 </td>    <td class="tg-0pky">【X】 </td>    <td class="tg-0pky">叉.jpg </td>    <td class="tg-0pky">屏幕右上方 </td>    <td class="tg-0pky">符合整体美术风格 </td>    <td class="tg-0pky">- </td>    <td class="tg-c3ow" rowspan="4"> <br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/10291627172769_.pic_hd.jpg"> </td>  </tr>  <tr>    <td class="tg-0pky">首充奖励中最好的奖励 </td>    <td class="tg-0pky">奖励的图片 </td>    <td class="tg-0pky">画面主体 </td>    <td class="tg-0pky">立绘 </td>    <td class="tg-0pky">动态显示 </td>  </tr>  <tr>    <td class="tg-0pky">对应充值奖励 </td>    <td class="tg-0pky">对应奖励的图标 </td>    <td class="tg-0pky">主体奖励下方 </td>    <td class="tg-0pky">分天显示 <br>每个奖励用框体框柱 <br>每个奖励根据其物品等级用不同颜色框体及颜色显示 </td>    <td class="tg-0pky">- </td>  </tr>  <tr>    <td class="tg-0pky">【前往充值】按钮 </td>    <td class="tg-0pky">前往充值美术字 </td>    <td class="tg-0pky">首充奖励下方 </td>    <td class="tg-0pky">显示在框体中 </td>    <td class="tg-0pky">- </td>  </tr>  <tr>    <td class="tg-c3ow" rowspan="6">【充值页面-新手特惠】 </td>    <td class="tg-0pky">充值方案的分类 </td>    <td class="tg-0pky">宝箱 </td>    <td class="tg-0pky">每个充值方案的左方 </td>    <td class="tg-0pky">符合整体美术风格 </td>    <td class="tg-0pky">- </td>    <td class="tg-c3ow" rowspan="6"> <br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/10311627172772_.pic_hd.jpg"> </td>  </tr>  <tr>    <td class="tg-0pky">对应充值奖励 </td>    <td class="tg-0pky">对应奖励的图标 </td>    <td class="tg-0pky">每个充值方案的主体 </td>    <td class="tg-0pky">每个奖励用框体框柱 <br>每个奖励根据其物品等级用不同颜色框体及颜色显示 </td>    <td class="tg-0pky">- </td>  </tr>  <tr>    <td class="tg-0pky">充值方案的特殊说明 </td>    <td class="tg-0pky">对应说明的美术字 </td>    <td class="tg-0pky">每个充值方案的右方 </td>    <td class="tg-0pky">挂坠 </td>    <td class="tg-0pky">- </td>  </tr>  <tr>    <td class="tg-0pky">充值方案的价格 </td>    <td class="tg-0pky">对应价格的美术字 </td>    <td class="tg-0pky">每个充值方案的下方 </td>    <td class="tg-0pky">用框体框柱 <br>高对比度 </td>    <td class="tg-0pky">- </td>  </tr>  <tr>    <td class="tg-0pky">当前所有玉帛 </td>    <td class="tg-0pky">玉帛.jpg </td>    <td class="tg-0pky">页面左下方 </td>    <td class="tg-0pky">见原型 </td>    <td class="tg-0pky">- </td>  </tr>  <tr>    <td class="tg-0pky">当前所有金币 </td>    <td class="tg-0pky">金币.jpg </td>    <td class="tg-0pky">玉帛右方 </td>    <td class="tg-0pky">见原型 </td>    <td class="tg-0pky">- </td>  </tr>  <tr>    <td class="tg-0pky">【付款失败】 </td>    <td class="tg-0pky">付款失败提醒 </td>    <td class="tg-0pky">- </td>    <td class="tg-0pky">屏幕中部 </td>    <td class="tg-0pky">弹窗 </td>    <td class="tg-0pky">- </td>    <td class="tg-0pky"><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/10351627172776_.pic_hd.jpg"> </td>  </tr>  <tr>    <td class="tg-0pky">【充值奖励领取】 </td>    <td class="tg-0pky">对应充值奖励 </td>    <td class="tg-0pky">对应奖励的图标 </td>    <td class="tg-0pky">主体奖励下方 </td>    <td class="tg-0pky">每个奖励用框体框柱 <br>每个奖励根据其物品等级用不同颜色框体及颜色显示 </td>    <td class="tg-0pky">- </td>    <td class="tg-0pky"><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/10361627172781_.pic_hd.jpg"> </td>  </tr>  <tr>    <td class="tg-c3ow" rowspan="4">【首充完成 - 第一天奖励待领取】 </td>    <td class="tg-0pky">【X】 </td>    <td class="tg-0pky">叉.jpg </td>    <td class="tg-0pky">屏幕右上方 </td>    <td class="tg-0pky">符合整体美术风格 </td>    <td class="tg-0pky">- </td>    <td class="tg-c3ow" rowspan="4"> <br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/10371627172783_.pic_hd.jpg"> </td>  </tr>  <tr>    <td class="tg-0pky">首充奖励中最好的奖励 </td>    <td class="tg-0pky">奖励的图片 </td>    <td class="tg-0pky">画面主体 </td>    <td class="tg-0pky">立绘 </td>    <td class="tg-0pky">动态显示 </td>  </tr>  <tr>    <td class="tg-0pky">对应充值奖励 </td>    <td class="tg-0pky">对应奖励的图标 </td>    <td class="tg-0pky">主体奖励下方 </td>    <td class="tg-0pky">分天显示 <br>每个奖励用框体框柱 <br>每个奖励根据其物品等级用不同颜色框体及颜色显示 </td>    <td class="tg-0pky">- </td>  </tr>  <tr>    <td class="tg-0pky">【领取】按钮 </td>    <td class="tg-0pky">领取美术字 </td>    <td class="tg-0pky">首充奖励下方 </td>    <td class="tg-0pky">显示在框体中 <br>高对比度 </td>    <td class="tg-0pky">- </td>  </tr>  <tr>    <td class="tg-c3ow" rowspan="5">【首充完成 - 第一天奖励已领取】 </td>    <td class="tg-0pky">【X】 </td>    <td class="tg-0pky">叉.jpg </td>    <td class="tg-0pky">屏幕右上方 </td>    <td class="tg-0pky">符合整体美术风格 </td>    <td class="tg-0pky">- </td>    <td class="tg-c3ow" rowspan="5"> <br><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/10391627173172_.pic_hd.jpg"> </td>  </tr>  <tr>    <td class="tg-0pky">首充奖励中最好的奖励 </td>    <td class="tg-0pky">奖励的图片 </td>    <td class="tg-0pky">画面主体 </td>    <td class="tg-0pky">立绘 </td>    <td class="tg-0pky">动态显示 </td>  </tr>  <tr>    <td class="tg-0pky">对应充值奖励 <br> </td>    <td class="tg-0pky">对应奖励的图标 </td>    <td class="tg-0pky">主体奖励下方 </td>    <td class="tg-0pky">分天显示 <br>每个奖励用框体框柱 <br>每个奖励根据其物品等级用不同颜色框体及颜色显示 </td>    <td class="tg-0pky">- </td>  </tr>  <tr>    <td class="tg-0pky">【已领取】提示 </td>    <td class="tg-0pky">已领取.jpg </td>    <td class="tg-0pky">显示在已领取的奖励前面 </td>    <td class="tg-0pky">半透明 <br>将已领取的奖励置为已领取状态 </td>    <td class="tg-0pky">- </td>  </tr>  <tr>    <td class="tg-0pky">【明日再来】按钮 </td>    <td class="tg-0pky">明日再来美术字 </td>    <td class="tg-0pky">首充奖励下方 </td>    <td class="tg-0pky">显示在框体中 </td>    <td class="tg-0pky">- </td>  </tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Study-Game-Proposal </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Portfolio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GAMES101-8 20200306/20210708 Shading 2 (Shading, Pipeline and Texture Mapping)</title>
      <link href="2021/07/16/games101-8-20200306-20210708-shading-2-shading-pipeline-and-texture-mapping/"/>
      <url>2021/07/16/games101-8-20200306-20210708-shading-2-shading-pipeline-and-texture-mapping/</url>
      
        <content type="html"><![CDATA[<h1 id="8-20200306-20210708-Shading-2-Shading-Pipeline-and-Texture-Mapping"><a href="#8-20200306-20210708-Shading-2-Shading-Pipeline-and-Texture-Mapping" class="headerlink" title="8 20200306/20210708 Shading 2 (Shading, Pipeline and Texture Mapping)"></a>8 20200306/20210708 Shading 2 (Shading, Pipeline and Texture Mapping)</h1><h2 id="A-Simple-Shading-Model-Blinn-Phong-Reflectance-Model"><a href="#A-Simple-Shading-Model-Blinn-Phong-Reflectance-Model" class="headerlink" title="A Simple Shading Model (Blinn-Phong Reflectance Model)"></a>A Simple Shading Model (Blinn-Phong Reflectance Model)</h2><h3 id="Diffuse-Term-last-time"><a href="#Diffuse-Term-last-time" class="headerlink" title="Diffuse Term (last time)"></a>Diffuse Term (last time)</h3><h3 id="Specular-Term-Blinn-Phong"><a href="#Specular-Term-Blinn-Phong" class="headerlink" title="Specular Term (Blinn-Phong)"></a>Specular Term (Blinn-Phong)</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709111209.png" alt="Specular Term (Blinn-Phong)" style="zoom: 25%;" /><ul><li><p>高光项是因为观察方向和镜面反射方向足够接近（$\bf{v,R}$ 足够接近）</p></li><li><p>相当于法线方向 $\vec n$ 和半程向量 $\vec h$（即 $\bf{I,v}$ 向量加和后归一的方向）很接近</p></li><li><p>diffuse<br>$L_d = k_d (I/r^2)\max(0,\bf{n · l})$</p></li><li><p>specular<br>$L_s = k_s (I/r^2)\max(0,\cos \alpha)^p\<br>= k_s (I/r^2)\max(0,\bf{n · h})^p$</p><ul><li><p>这里按理也要考虑能量吸收 $\max(0,\bf{n · l})$<br>但因为 blinn-phong 是经验模型 所以简化掉了</p></li><li><p>$p$ 指数为高光修正 用于控制高光可见范围  为保证只有小范围能看到高光 可能值为 100-200</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709112445.png" alt="Cosine Power Plots" style="zoom:33%;" />  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709112607.png" alt="Specular Term (Blinn-Phong)" style="zoom:33%;" /></li></ul></li></ul><h3 id="Ambient-Term-Blinn-Phong"><a href="#Ambient-Term-Blinn-Phong" class="headerlink" title="Ambient Term (Blinn-Phong)"></a>Ambient Term (Blinn-Phong)</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709112712.png" alt="Ambient Term (Blinn-Phong)" style="zoom:33%;" /><ul><li>$L_a = k_a I_a$<ul><li>环境光不管从哪里进来 和 v 无关</li><li>假设在哪里看都一样    和 w 无关</li><li>环境光是常数 作用是保证没有地方是完全黑的</li><li>精确计算需要环境光照</li></ul></li></ul><h3 id="Sum-Blinn-Phong-Reflection-Model"><a href="#Sum-Blinn-Phong-Reflection-Model" class="headerlink" title="Sum: Blinn-Phong Reflection Model"></a>Sum: Blinn-Phong Reflection Model</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709112858.png" alt="Sum: Blinn-Phong Reflection Model" style="zoom:33%;" /><ul><li>$L = L_a + L_d + L_s$</li></ul><h1 id="Shading-Frequencies-着色频率"><a href="#Shading-Frequencies-着色频率" class="headerlink" title="Shading Frequencies 着色频率"></a>Shading Frequencies 着色频率</h1><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709113253.png" alt="Shading Frequencies" style="zoom:33%;" /><ul><li><p>着色频率：（着色粒度）着色应用在哪些点</p><ul><li>分别表示着色在平面/顶点/像素上</li></ul></li><li><p>每个平面着色 (flat shading)</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709113347.png" alt="flat shading" style="zoom:33%;" /></li><li><p>每个顶点着色 (Gouraud shading)</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210713181855.png" alt="Gouraud shading" style="zoom:33%;" /><ul><li>内部插值</li></ul></li><li><p>每个像素着色 (Phong shading)</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210716125759.png" alt="Phong shading" style="zoom:33%;" /><ul><li>not the blinn-phong reflectance model (model 是着色模型，phong shading 是着色频率)</li></ul></li><li><p>计算量开销不一定谁大</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709113559.png" alt="计算量开销不一定谁大" style="zoom:33%;" /></li></ul><h2 id="Defining-Per-Vertex-Normal-Vectors-算逐顶点法线"><a href="#Defining-Per-Vertex-Normal-Vectors-算逐顶点法线" class="headerlink" title="Defining Per-Vertex Normal Vectors 算逐顶点法线"></a>Defining Per-Vertex Normal Vectors 算逐顶点法线</h2><ul><li><p>做顶点所关联的面的法线做加权平均</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709113816.png" alt="Defining Per-Vertex Normal Vectors" style="zoom:33%;" /></li></ul><h2 id="Defining-Per-Pixel-Normal-Vectors-算逐像素法线"><a href="#Defining-Per-Pixel-Normal-Vectors-算逐像素法线" class="headerlink" title="Defining Per-Pixel Normal Vectors 算逐像素法线"></a>Defining Per-Pixel Normal Vectors 算逐像素法线</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709113854.png" alt="Defining Per-Pixel Normal Vectors" style="zoom:33%;" /><ul><li>需要用重心坐标</li></ul><hr><blockquote><p>把以上内容合起来</p></blockquote><h1 id="Graphics-Real-time-Rendering-Pipeline"><a href="#Graphics-Real-time-Rendering-Pipeline" class="headerlink" title="Graphics (Real-time Rendering) Pipeline"></a>Graphics (Real-time Rendering) Pipeline</h1><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709114026.png" alt="Graphics (Real-time Rendering) Pipeline" style="zoom:33%;" /><ul><li><p>Graphics Pipeline</p><ul><li><p>vertex processing 输入一堆点</p></li><li><p>MVP 投影到屏幕上</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709114447.png" alt="Graphics Pipeline - MVP" style="zoom:33%;" /></li><li><p>Triangle Processing 形成三角形</p></li><li><p>Rasterization 光栅化离散成 fragments  （fragment 类比于像素）</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709114533.png" alt="Graphics Pipeline - Rasterization" style="zoom:33%;" /></li><li><p>Fragment Processing 着色 shading</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709114644.png" alt="Graphics Pipeline - Fragment Processing - Z-Buffer" style="zoom:33%;" />  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709114724.png" alt="Graphics Pipeline - Fragment Processing - Shading" style="zoom:33%;" /><ul><li>需要看到底是顶点着色还是像素着色</li><li>控制顶点/像素着色的着色器：shader</li><li>texture mapping 纹理映射</li></ul></li><li><p>显示 output</p></li></ul></li></ul><h1 id="Shader-Programs"><a href="#Shader-Programs" class="headerlink" title="Shader Programs"></a>Shader Programs</h1><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709114910.png" alt="Shader Programs" style="zoom:33%;" /><ul><li><p>每个顶点/fragment会执行一次 所以只考虑一个顶点/像素的操作</p></li><li><p>写的是通用程序</p><ul><li>如果写的是顶点操作 - vertex shader</li><li>如果写的是fragment - fragment shader</li></ul><p>  <a href="http://shadertoy.com/">Shadertoy BETA</a></p>  <img src="https://p88.tr2.n0.cdn.getcloudapp.com/items/eDuxj2Rd/Image+2020-03-06+at+10.49.08.png?v=2373a38c9d045c08edbe031686411c97.png" alt="Snail Shader Program" style="zoom: 50%;" /></li><li><p>Inigo Quilez</p><ul><li>Procedurally modeled, 800 line shader.</li><li><a href="http://shadertoy.com/view/ld3Gz2">http://shadertoy.com/view/ld3Gz2</a></li></ul></li></ul><hr><blockquote><p>线代图形学发展</p></blockquote><h1 id="Goal-Highly-Complex-3D-Scenes-in-Realtime"><a href="#Goal-Highly-Complex-3D-Scenes-in-Realtime" class="headerlink" title="Goal: Highly Complex 3D Scenes in Realtime"></a>Goal: Highly Complex 3D Scenes in Realtime</h1><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709115545.png" alt="Goal: Highly Complex 3D Scenes in Realtime" style="zoom:33%;" /><h1 id="Graphics-Pipeline-Implementation-GPUs"><a href="#Graphics-Pipeline-Implementation-GPUs" class="headerlink" title="Graphics Pipeline Implementation: GPUs"></a>Graphics Pipeline Implementation: GPUs</h1><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709115704.png" alt="Graphics Pipeline Implementation: GPUs" style="zoom:33%;" /><ul><li><p>实现</p></li><li><p>三角形怎么光栅化</p></li><li><p>如何投影</p></li><li><p>…</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709115812.png" alt="GPU" style="zoom:33%;" /><ul><li>GPU：可以理解为高度并行化的处理器</li></ul></li></ul><blockquote><p>以上为图形管线</p></blockquote><hr><h1 id="Texture-Mapping-纹理映射"><a href="#Texture-Mapping-纹理映射" class="headerlink" title="Texture Mapping 纹理映射"></a>Texture Mapping 纹理映射</h1><ul><li><p>Different Colors at different places</p>  <img src="https://p88.tr2.n0.cdn.getcloudapp.com/items/YEuARGkY/Image+2020-03-06+at+10.55.37.png?v=bcc81dcc9d56d81285227e584eea545d.png" alt="Different Colors at different places" style="zoom: 50%;" /></li><li><p>引入纹理映射的原因：在物体不同位置引入不同属性</p><ul><li>如漫反射属性</li></ul></li><li><p>纹理和着色的区别：</p><ul><li>纹理：定义着色的时候各个不同点的属性 不希望每个点都以相同方式进行着色</li></ul></li><li><p>Surfaces are 2D</p>  <img src="https://p88.tr2.n0.cdn.getcloudapp.com/items/Z4u5olD6/Image+2020-03-06+at+10.57.18.png?v=4af3e8b64feaa103359e7f0bbbef350a.png" alt="Surfaces are 2D" style="zoom: 50%;" /><ul><li>每个三维物体的表面都是二维</li><li>纹理：就是一张图 有一一对应关系</li></ul></li><li><p>Texture Applied to Surface</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709120336.png" alt="Texture Applied to Surface" style="zoom:33%;" /></li><li><p>如何把空间中的三角形映射到纹理上？</p><ul><li>美工/程序人工映射</li><li>自动映射 parameterazation 参数化 很难</li></ul></li><li><p>Visualization of Texutre Coordinates</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709120613.png" alt="Visualization of Texutre Coordinates" style="zoom:33%;" /></li><li><p>uv 纹理坐标系</p><ul><li>范围 0-1</li></ul></li><li><p>可重复使用</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709120714.png" alt="Texture Applied to Surface" style="zoom:33%;" /></li><li><p>Textures can be used multiple times</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210709120757.png" alt="Textures can be used multiple times" style="zoom:33%;" /><ul><li>纹理设计得好就可以无缝衔接</li><li>tileable texture</li><li>Wang tiling</li></ul></li></ul><hr><ul><li>next：知道三角形三个顶点 uv<br>如何知道三角形内部 uv - 插值</li></ul><hr>]]></content>
      
      
      <categories>
          
          <category> Study-CS-CG </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ComputerGraphics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GAMES101-7 20200303 20210708 Shading 1 (Illumination, Shading and Graphics Pipeline)</title>
      <link href="2021/07/16/games101-7-20200303-20210708-shading-1-illumination-shading-and-graphics-pipeline/"/>
      <url>2021/07/16/games101-7-20200303-20210708-shading-1-illumination-shading-and-graphics-pipeline/</url>
      
        <content type="html"><![CDATA[<h1 id="7-20200303-20210708-Shading-1-Illumination-Shading-and-Graphics-Pipeline"><a href="#7-20200303-20210708-Shading-1-Illumination-Shading-and-Graphics-Pipeline" class="headerlink" title="7 20200303 / 20210708 Shading 1 (Illumination, Shading and Graphics Pipeline)"></a>7 20200303 / 20210708 Shading 1 (Illumination, Shading and Graphics Pipeline)</h1><h1 id="深度缓存：解决可见性-遮挡问题"><a href="#深度缓存：解决可见性-遮挡问题" class="headerlink" title="深度缓存：解决可见性/遮挡问题"></a>深度缓存：解决可见性/遮挡问题</h1><h2 id="Painter’s-Algorithm"><a href="#Painter’s-Algorithm" class="headerlink" title="Painter’s Algorithm"></a>Painter’s Algorithm</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708125836.png" alt="Painter's Algorithm" style="zoom: 50%;" /><ul><li>从后向前绘制，<strong>overwrite</strong> in the frame buffer</li><li>需要考虑绘制顺序</li><li>Requires sorting in depth (O(n log n) for n triangles) Can have unresolvable depth order<ul><li>但会出现无法定义深度关系的情况</li></ul></li></ul><h3 id="Z-Buffer-深度缓存"><a href="#Z-Buffer-深度缓存" class="headerlink" title="Z-Buffer 深度缓存"></a>Z-Buffer 深度缓存</h3><ul><li><p>This is the algorithm that eventually won.</p></li><li><p>Idea:</p><ul><li>Store current min. z-value for each sample (pixel) 记录像素最浅深度</li><li>Needs an additional buffer for depth values</li><li>frame buffer stores color values (color buffer)</li><li>depth buffer (z-buffer) stores depth (depth buffer)</li></ul></li><li><p>IMPORTANT: For simplicity we suppose</p><ul><li><p>z is always positive<br>(smaller z -&gt; closer, larger z -&gt; further)</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708130237.png" alt="Z-Buffer examples" style="zoom: 33%;" /></li></ul></li><li><p>Algorighm</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708130440.png" alt="Z-Buffer Algorithm" style="zoom: 33%;" />  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708130621.png" alt="Z-Buffer Algorithm cont." style="zoom: 33%;" /><ul><li>初始深度无限远</li><li>把三角形做光栅化为像素</li><li>找到像素后找到其深度</li><li>z 值小就更新</li></ul></li><li><p>z-buffer Complexity</p></li><li><p>O(n) for n triangles (assuming constant coverage)</p></li><li><p>How is it possible to sort n triangles in linear time?</p><ul><li>并没有排序 只是进行了比较 找最小值</li></ul></li><li><p>绘制顺序不同不影响结果</p><ul><li>两个浮点数基本不可能完全相等</li></ul></li><li><p>Most important visibility algorithm</p><ul><li>Implemented in hardware for all GPUs</li></ul></li><li><p>z-buffer 处理不了透明物体</p></li></ul><h1 id="What-we’ve-covered-so-far"><a href="#What-we’ve-covered-so-far" class="headerlink" title="What we’ve covered so far"></a>What we’ve covered so far</h1><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708131319.png" alt="What we've covered so far" style="zoom: 33%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708131557.png" alt="Rotating Cubes" style="zoom:33%;" /><h1 id="Shading-着色"><a href="#Shading-着色" class="headerlink" title="Shading 着色"></a>Shading 着色</h1><h2 id="Definition"><a href="#Definition" class="headerlink" title="Definition"></a>Definition</h2><ul><li>In Merriam-Webster Dictionary<ul><li>shading,  noun<br>The darkening or coloring of an illustration or diagram with parallel lines or a block of color.</li><li>In this course<ul><li>The process of applying a material to an object.</li></ul></li></ul></li></ul><h2 id="A-Simple-Shading-Model-Blinn-Phong-Reflectance-Model"><a href="#A-Simple-Shading-Model-Blinn-Phong-Reflectance-Model" class="headerlink" title="A Simple Shading Model (Blinn-Phong Reflectance Model)"></a>A Simple Shading Model (Blinn-Phong Reflectance Model)</h2><ul><li><p>Perceptual Observations</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708132803.png" alt="Perceptual Observations" style="zoom:33%;" /><ul><li>高光 specular highlights</li><li>漫反射 diffuse reflection</li><li>环境光 ambient lighting</li></ul></li><li><p>Shading is Local - 着色局部性只看自己 不考虑其他任何物体的存在 所以没有阴影 (shading ≠ shadow)</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708133217.png" alt="Shading is Local" style="zoom:33%;" /></li></ul><h3 id="Diffuse-Reflection"><a href="#Diffuse-Reflection" class="headerlink" title="Diffuse Reflection"></a>Diffuse Reflection</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708133534.png" alt="Diffuse Reflection" style="zoom:33%;" /><ul><li><p>把光看作能量 （Lambert）<br>看着色点周围单位面积能够接收到多少能量<br>直射接收到的能量 &gt; 折射接收到的能量</p></li><li><p>Light Falloff</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708133918.png" alt="Light Falloff" style="zoom:33%;" /><ul><li>能量守恒 - 单位点的能量越来越小 （不同球体表面积所含能量相同）</li></ul></li><li><p>Lambertian (Diffuse) Shading</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708134228.png" alt="Lambertian (Diffuse) Shading" style="zoom:33%;" /></li><li><p>$L_d = k_d (I/r^2)\max(0,\bf{n · l})$</p><ul><li>$k_d$: 着色点对于光的吸收率<ul><li>如果 $k_d = 1$<ul><li>表示该点完全不吸收能量 - 最亮</li></ul></li><li>如果 $k_d = 0$<ul><li>表示该点完全吸收能量没有能量反射出去 - 最暗</li></ul></li><li>如果定义为三通道的 rgb 分别有 01<ul><li>那么就可以定义颜色值</li></ul></li></ul></li><li>$I/r^2$：传播到着色点的强度（结合能量球来看 总面积为 $4\pi r^2$ 距离为 r，那么单位强度就是 $\frac{I}{4\pi r^2}$，为平方反比关系）<ul><li>I: 点光源在单位距离上的强度</li><li>r: 点光源和着色点的距离</li></ul></li><li>$max(0, \bf{n · l})$<ul><li>为什么有 0<ul><li>如果是负数代表从反面照射没有意义</li></ul></li><li>$\bf{n · l}$ 为余弦角</li><li>整体表示被着色点能接收到的能量的比例</li></ul></li><li>漫反射与V无关 - 和观测点无关</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-CS-CG </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ComputerGraphics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GAMES101-6 20200228 20210708 Rasterization 2 anti - aliasing and Z - buffering</title>
      <link href="2021/07/16/games101-6-20200228-20210708-rasterization-2-anti-aliasing-and-z-buffering/"/>
      <url>2021/07/16/games101-6-20200228-20210708-rasterization-2-anti-aliasing-and-z-buffering/</url>
      
        <content type="html"><![CDATA[<h1 id="6-20200228-20210708-Rasterization-2-anti-aliasing-and-Z-buffering"><a href="#6-20200228-20210708-Rasterization-2-anti-aliasing-and-Z-buffering" class="headerlink" title="6 20200228/20210708 Rasterization 2 anti-aliasing and Z-buffering"></a>6 20200228/20210708 Rasterization 2 anti-aliasing and Z-buffering</h1><h2 id="Sampling-Artifacts-Errors-Mistakes-Inaccuracies-in-Computer-Graphics"><a href="#Sampling-Artifacts-Errors-Mistakes-Inaccuracies-in-Computer-Graphics" class="headerlink" title="Sampling Artifacts (Errors / Mistakes / Inaccuracies) in Computer Graphics"></a>Sampling Artifacts (Errors / Mistakes / Inaccuracies) in Computer Graphics</h2><ul><li><p>采样的例子</p><ul><li>rasterization = sample 2d positions</li><li>photograph = sample image sensor plane</li></ul></li><li><p>video = sample time</p></li><li><p>采样瑕疵的例子 sampling artifacts</p><ul><li><p>Jaggies (staircase pattern)</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708105306.png" alt="Jaggies (staircase pattern)" style="zoom: 25%;" /></li><li><p>Moiré Patterns in Imaging</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708105327.png" alt="Moiré Patterns in Imaging" style="zoom: 25%;" /></li><li><p>Wagon Wheel Illusion (False Motion)</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708105353.png" alt="Wagon Wheel Illusion (False Motion)" style="zoom: 25%;" /><ul><li>原因：人眼在时间上的采样跟不上运动速度</li></ul></li></ul></li><li><p>采样瑕疵的本质</p><ul><li>Signals are changing too fast (high frequency), but sampled too slowly</li></ul></li></ul><h1 id="Antialiasing-Idea-Blurring-Pre-Filtering-Before-Sampling"><a href="#Antialiasing-Idea-Blurring-Pre-Filtering-Before-Sampling" class="headerlink" title="Antialiasing Idea: Blurring (Pre-Filtering) Before Sampling"></a>Antialiasing Idea: Blurring (Pre-Filtering) Before Sampling</h1><ul><li><p>先模糊滤波再采样</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708105614.png" alt="Rasterization: Point Sampling in Space" style="zoom:25%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708105628.png" alt="Rasterization: Antialiased Sampling" style="zoom:25%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708105754.png" alt="效果对比" style="zoom:25%;" /></li></ul><h1 id="But-why"><a href="#But-why" class="headerlink" title="But why?"></a>But why?</h1><ol><li>Why undersampling introduces aliasing?</li><li>Why pre-filtering then sampling can do antialiasing?</li></ol><ul><li><p>Let’s dig into fundamental reasons</p><p>And look at how to implement antialiased rasterization</p></li><li><p>为什么先采样再模糊不行</p><ul><li>先采样后 频谱已经发生了混叠</li><li>此时再模糊 得到的结果还是混叠的频谱</li></ul></li></ul><h1 id="Frequency-domain-频域"><a href="#Frequency-domain-频域" class="headerlink" title="Frequency domain 频域"></a>Frequency domain 频域</h1><ul><li><p>Frequencies</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708105917.png" alt="Frequencies" style="zoom:25%;" /></li></ul><h2 id="Fourier-Transform"><a href="#Fourier-Transform" class="headerlink" title="Fourier Transform"></a>Fourier Transform</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708110031.png" alt="Fourier Transform" style="zoom:25%;" /><ul><li><p>傅里叶级数展开：任何一个周期函数都可以写成一系列正弦余弦函数线性组合以及一个常数项</p><ul><li>任何一个函数都可分解为不同频率</li></ul></li><li><p>fourier Transform Decomposes A Signal into Frequencies 傅里叶变换（把一个函数变为另一个，或者反过来）把函数分解为不同频率的段并分别显示出来</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708110225.png" alt="fourier Transform Decomposes A Signal into Frequencies" style="zoom:25%;" /></li><li><p>Higher Frequencies Need Faster Sampling</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708110352.png" alt="Higher Frequencies Need Faster Sampling" style="zoom:25%;" /></li><li><p>Undersampling Creates Frequency Aliases 欠采样导致了频率瑕疵以频率定义走样：假如蓝色和黑色分别是两个不同的函数 二者采样方法相同 但本身频率不同 导致了采样结果相同</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708110544.png" alt="Undersampling Creates Frequency Aliases" style="zoom:25%;" /></li></ul><h2 id="Filtering-Getting-rid-of-certain-frequency-contents"><a href="#Filtering-Getting-rid-of-certain-frequency-contents" class="headerlink" title="Filtering = Getting rid of certain frequency contents"></a>Filtering = Getting rid of certain frequency contents</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708110721.png" alt="Viasualizing Image Frequency Content" style="zoom:25%;" /><ul><li><p>傅里叶变换把图像从时域变成了频域</p></li><li><p>中心是最低频 周围是高频</p></li><li><p>多数信息集中在低频（中心）</p></li><li><p>水平和竖直亮线</p><ul><li>分析信号时会假设信号周期性重复（即假设图片水平重叠放置 AAAA）</li><li>但实际上并不重复</li><li>那么在左右边界部分会产生剧烈信号变化 - 产生高频</li><li>则产生白线</li><li>若分析单幅内容 可忽略</li></ul></li><li><p>高通滤波（抹掉低频信号）可得到图像内容轮廓边界 - 和周围内容相差巨大 - 信号变化非常大 - 高频信号</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708111303.png" alt="高通滤波" style="zoom:25%;" /></li><li><p>低通滤波（只有低频信号通过，抹掉高频信息）</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708112533.png" alt="低通滤波" style="zoom:25%;" /><ul><li>边界被抹去</li><li>水波纹</li></ul></li><li><p>去掉了高和低频率信息</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708112640.png" alt="同时过滤高低频信息" style="zoom:25%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708112659.png" alt="同时过滤高低频信息 cont." style="zoom:25%;" /><ul><li>提取到了不太明显的轮廓特征</li><li>数字图像处理</li></ul></li></ul><h1 id="Filtering-Convolution-卷积-Averaging-加权平均"><a href="#Filtering-Convolution-卷积-Averaging-加权平均" class="headerlink" title="Filtering = Convolution 卷积 (= Averaging) 加权平均"></a>Filtering = Convolution 卷积 (= Averaging) 加权平均</h1><ul><li><p>Convolution 卷积</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708113238.png" alt="Convolution" style="zoom:25%;" /></li><li><p>图形学中的简化定义</p><ul><li>卷积：通过窗口来进行点乘获取中心值（相当于加权平均）</li></ul></li><li><p>Convolution Theorem（卷积定理）</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708113517.png" alt="Convolution Theorem" style="zoom:25%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708113559.png" alt="Convolution Theorem cont." style="zoom:25%;" /><ul><li>Convolution in the spatial domain is equal to multiplication in the frequency domain, and vice versa - 在时域上想对信号进行卷积相当于在频域上进行乘积，反之亦然</li><li>Option 1:<ul><li>Filter by convolution in the spatial domain</li></ul></li><li>Option 2:<ul><li>Transform to frequency domain (Fourier transform)</li><li>Multiply by Fourier transform of convolution kernel</li><li>Transform back to spatial domain (inverse Fourier)</li></ul></li></ul></li></ul><h2 id="Box-Filter-低通滤波器"><a href="#Box-Filter-低通滤波器" class="headerlink" title="Box Filter 低通滤波器"></a>Box Filter 低通滤波器</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708114556.png" alt="Box Filter" style="zoom:25%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708114539.png" alt="Box Filter - Works as “Low Pass” Filter" style="zoom:25%;" /><ul><li>box 越大结果越模糊（留下的频率越低）<ul><li>相当于画笔变大</li></ul></li><li>考虑极端情况<ul><li>box 超级大 - 只有最中间有采样信息</li><li>box 超级小 - 全部频率都被留下来</li></ul></li></ul><h1 id="Sampling-Repeating-Frequency-Contents"><a href="#Sampling-Repeating-Frequency-Contents" class="headerlink" title="Sampling = Repeating Frequency Contents"></a>Sampling = Repeating Frequency Contents</h1><ul><li><p>冲激函数（某些位置有值有些没有，为0）</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708114726.png" alt="冲激函数" style="zoom:25%;" /><ul><li>采样：给定函数与冲激函数相乘得到采样结果</li><li>采样（从频域角度理解）：就是在重复原始信号的频谱</li></ul></li></ul><p>$$时域的乘积 = 频域的卷积$$</p><ul><li><p>为什么会走样</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708115306.png" alt="为什么会走样" style="zoom:25%;" /><ul><li>采样率不足（不够快），导致原始信号复制粘贴距离不够大，频率的频谱发生了混叠，即走样</li><li>相当于采样低 = 稀疏采样</li></ul></li></ul><h1 id="Anti-Aliasing"><a href="#Anti-Aliasing" class="headerlink" title="Anti-Aliasing"></a>Anti-Aliasing</h1><ul><li>How Can We Reduce Aliasing Error?</li><li>Option 1: Increase sampling rate<ul><li>Essentially increasing the distance between replicas in the<br>Fourier domain</li><li>Higher resolution displays, sensors, framebuffers…</li><li>But: costly &amp; may need very high resolution</li></ul></li><li>Option 2: Antialiasing<ul><li>Making Fourier contents “narrower” before repeating</li><li>i.e. Filtering out high frequencies before sampling</li></ul></li><li>步骤<ul><li>先卷积</li><li>再采样</li></ul></li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708115851.png" alt="如何反走样" style="zoom:25%;" /><ul><li><p>模糊之后的频谱覆盖范围小</p></li><li><p>所以采样堆叠几率小</p></li><li><p>如何模糊</p><ul><li><p>用一定大小的低通滤波器来处理图像</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708120101.png" alt="A Practical Pre-Filter" style="zoom:25%;" /></li></ul></li></ul><h2 id="Antialiasing-by-averaging-values-in-pixel-area"><a href="#Antialiasing-by-averaging-values-in-pixel-area" class="headerlink" title="Antialiasing by averaging values in pixel area"></a>Antialiasing by averaging values in pixel area</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708120227.png" alt="Antialiasing by averaging values in pixel area" style="zoom:25%;" /><ul><li><p>Solution:</p><ul><li>Convolve f(x,y) by a 1-pixel box-blur<ul><li>convolving = filtering = averaging</li></ul></li><li>Then sample at every pixel’s center</li></ul></li><li><p>怎么把三角形在像素内覆盖的区域算出来：</p></li></ul><h2 id="Antialiasing-By-Supersampling-MSAA"><a href="#Antialiasing-By-Supersampling-MSAA" class="headerlink" title="Antialiasing By Supersampling (MSAA)"></a>Antialiasing By Supersampling (MSAA)</h2><blockquote><p> 解决的是对信号的模糊操作 不是靠提升分辨率解决问题 只是为了解决三角形覆盖问题</p></blockquote><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708120523.png" alt="Supersampling" style="zoom:25%;" /><ul><li>给像素内部加采样点 看像素覆盖率</li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210708122814.png" alt="Supersampling cont." style="zoom:25%;" /><h2 id="Antialiasing-Today"><a href="#Antialiasing-Today" class="headerlink" title="Antialiasing Today"></a>Antialiasing Today</h2><ul><li>No free lunch!What’s the cost of MSAA?<ul><li>增加了计算量</li></ul></li><li>Milestones (personal idea)<ul><li>FXAA (Fast Approximate AA)<ul><li>和采样无关 相当于后期处理</li><li>得到一幅图 有锯齿 找到边界 将有锯齿的边界换成没有锯齿的边界</li></ul></li><li>TAA (Temporal AA)<ul><li>复用上一帧信息 在当前帧不引入新信息</li></ul></li></ul></li><li>Super resolution / super sampling 超分辨率<ul><li>From low resolution to high resolution</li><li>Essentially still “not enough samples“ problem</li><li>DLSS (Deep Learning Super Sampling)<ul><li>一切猜测 深度学习都适合</li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-CS-CG </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ComputerGraphics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GAMES101-5 20200225 20210706 07 Rasterization 1 (Triangles)</title>
      <link href="2021/07/16/games101-5-20200225-20210706-07-rasterization-1-triangles/"/>
      <url>2021/07/16/games101-5-20200225-20210706-07-rasterization-1-triangles/</url>
      
        <content type="html"><![CDATA[<h1 id="5-20200225-20210706-07-Rasterization-1-Triangles"><a href="#5-20200225-20210706-07-Rasterization-1-Triangles" class="headerlink" title="5 20200225 / 20210706/07 Rasterization 1 (Triangles)"></a>5 20200225 / 20210706/07 Rasterization 1 (Triangles)</h1><h3 id="Perspective-Projection"><a href="#Perspective-Projection" class="headerlink" title="Perspective Projection"></a>Perspective Projection</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210706094119.png" alt="Perspective Projection" style="zoom:50%;" /><ul><li><p>红线夹角（field-of-view, FOY）：垂直可视角度</p></li><li><p>How to convert from fovY and aspect to l,r,b,t?</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210706094725.png" alt="How to convert from fovY and aspect to l,r,b,t?" style="zoom:50%;" /></li></ul><h3 id="What’s-after-MVP"><a href="#What’s-after-MVP" class="headerlink" title="What’s after MVP?"></a>What’s after MVP?</h3><ul><li>Model transformation (placing objects)</li><li>View transformation (placing camera)</li><li>Projection transformation<ul><li>Orthographic projection (cuboid to “canonical” cube $[-1, 1]^3$)</li><li>Perspective projection (frustum to “canonical” cube)</li></ul></li><li>Canonical Cube to Screen （画在屏幕上）</li></ul><h3 id="Canonical-Cube-to-Screen"><a href="#Canonical-Cube-to-Screen" class="headerlink" title="Canonical Cube to Screen"></a>Canonical Cube to Screen</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707113705.png" alt="Canonical Cube to Screen" style="zoom:50%;" /><ul><li><p>What is a screen?</p><ul><li>An array of pixels</li><li>Size of the array: resolution</li><li>A typical kind of raster display</li></ul></li><li><p>Raster (光栅) == screen in German</p><ul><li>Rasterize == drawing onto the screen</li></ul></li><li><p>Pixel (FYl short for “picture element”)</p><ul><li>For now: A pixel is a little square with uniform color</li><li>Color is a mixture of (red, green, blue)</li></ul></li><li><p>Defining the screen space</p><ul><li><p>Slightly different from the “tiger book”</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707113221.png" alt="Canonical Cube to Screen - Defining the screen space" style="zoom:50%;" /></li><li><p>像素覆盖屏幕空间（宽 * 高）</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707113531.png" alt="Canonical Cube to Screen - Transform in xy plane" style="zoom:50%;" /></li></ul></li><li><p>Irrelevant to z</p></li><li><p>Transform in xy plane: $[-1: 1]^2$ to [o, width] x [o, height]</p></li><li><p>Viewport transform matrix: 视口变换</p><ul><li>先把 $[-1, 1]^2$ 映射到 $[0,width] x [0, height]$</li><li>再把屏幕中心左下角定义到原点 所以有平移变换</li><li>忽略 z 轴</li></ul></li></ul><h1 id="Rasterizing-Triangles-into-Pixels-光栅化"><a href="#Rasterizing-Triangles-into-Pixels-光栅化" class="headerlink" title="Rasterizing Triangles into Pixels 光栅化"></a>Rasterizing Triangles into Pixels 光栅化</h1><ul><li><p>Drawing machine</p><ul><li>CNC Sharpie Drawing Machine</li></ul>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210713171942.png" alt="CNC Sharpie Drawing Machine" style="zoom: 33%;" /><ul><li>Laser Cutters</li></ul>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210713170022.png" alt="Laser Cutters" style="zoom: 33%;" /></li></ul><h2 id="Different-Raster-Displays"><a href="#Different-Raster-Displays" class="headerlink" title="Different Raster Displays"></a>Different Raster Displays</h2><ul><li><p>Oscilloscope 示波器</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210713170200.png" alt="Oscilloscope" style="zoom: 33%;" /></li></ul><h3 id="示波器成像原理-Cathode-Ray-Tube-CRT-阴极射线管"><a href="#示波器成像原理-Cathode-Ray-Tube-CRT-阴极射线管" class="headerlink" title="示波器成像原理 - Cathode Ray Tube (CRT) 阴极射线管"></a>示波器成像原理 - Cathode Ray Tube (CRT) 阴极射线管</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707114713.png" alt="Cathode Ray Tube (CRT) 阴极射线管" style="zoom: 33%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210713170311.png" alt="Cathode Ray Tube (CRT) - Television" style="zoom: 25%;" /><ul><li>隔行扫描 （利用视觉暂留效应）高速运动画面会造成严重画面撕裂</li></ul><h3 id="Frame-Buffer-Memory-for-a-Raster-Display"><a href="#Frame-Buffer-Memory-for-a-Raster-Display" class="headerlink" title="Frame Buffer: Memory for a Raster Display"></a>Frame Buffer: Memory for a Raster Display</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707120919.png" alt="Frame Buffer: Memory for a Raster Display" style="zoom:50%;" /><h3 id="Flat-Panel-Displays"><a href="#Flat-Panel-Displays" class="headerlink" title="Flat Panel Displays"></a>Flat Panel Displays</h3><ul><li><p>LCD (liquid Crystal Display) Pixel</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707121123.png" alt="LCD (liquid Crystal Display) Pixel" style="zoom:50%;" /><ul><li>Principle: block or transmit light by twisting polarization</li><li>Illumination from backlight (e.g. fluorescent or LED)</li><li>Intermediate intensity levels by partial twist</li></ul></li><li><p>OLED</p></li><li><p>LED Array Display 发光二极管</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707121229.png" alt="LED Array Display 发光二极管" style="zoom:50%;" /></li><li><p>Electrophoretic (Electronic Ink) Display</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707121242.png" alt="Electrophoretic (Electronic Ink) Display" style="zoom:50%;" /><ul><li>问题<ul><li>刷新率比较低（肉眼可见）</li></ul></li></ul></li></ul><h1 id="Rasterization-Drawing-to-Raster-Displays"><a href="#Rasterization-Drawing-to-Raster-Displays" class="headerlink" title="Rasterization: Drawing to Raster Displays"></a>Rasterization: Drawing to Raster Displays</h1><h2 id="Triangles-Fundamental-Shape-Primitives"><a href="#Triangles-Fundamental-Shape-Primitives" class="headerlink" title="Triangles - Fundamental Shape Primitives"></a>Triangles - Fundamental Shape Primitives</h2><ul><li><p>Why triangles?</p><ul><li>Most basic polygon</li><li>Break up other polygons 其他多边形可被拆为三角形</li></ul></li><li><p>Unique properties</p><ul><li>Guaranteed to be planar 三角形内部一定在同一平面</li><li>Well-defined interior 内外定义清晰</li><li>Well-defined method for interpolating values at vertices over triangle (barycentric interpolation) 定义三个顶点属性后 可以根据位置方便地插值</li></ul></li><li><p>What Pixel Values Approximate a Triangle</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707121757.png" alt="What Pixel Values Approximate a Triangle" style="zoom:50%;" /></li></ul><h1 id="A-simple-approach-sampling"><a href="#A-simple-approach-sampling" class="headerlink" title="A simple approach - sampling"></a>A simple approach - sampling</h1><h2 id="Sampling-a-Function"><a href="#Sampling-a-Function" class="headerlink" title="Sampling a Function"></a>Sampling a Function</h2><ul><li>definition<ul><li>Evaluating a function at a point is sampling.<br>We can discretize a function by sampling.<br>采样就是把函数离散化的过程</li></ul></li></ul><pre class="line-numbers language-none"><code class="language-none">for (int x &#x3D; 0; x &lt; xmax; ++x;output [x] &#x3D; f(x);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>Sampling is a core idea in graphics.<br>We sample time (1D), area (2D), direction (2D), volume (3D) …</li></ul><h2 id="看给定点像素中心是否在三角形内"><a href="#看给定点像素中心是否在三角形内" class="headerlink" title="看给定点像素中心是否在三角形内"></a>看给定点像素中心是否在三角形内</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707122155.png" alt="Rasterization As 2D Sampling" style="zoom: 33%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707122204.png" alt="Sample if Each Pixel Center Is Inside Triangle" style="zoom: 33%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707122216.png" alt="Sample if Each Pixel Center Is Inside Triangle cont." style="zoom: 33%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707122225.png" alt="Define Binary Function" style="zoom: 33%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707122234.png" alt="Rasterization = Sampling A 2D Indicator Function" style="zoom: 33%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707122337.png" alt="Recall: Sample Location" style="zoom: 33%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707122357.png" alt="Evaluating inside" style="zoom: 33%;" /><ul><li><p>方法：叉乘</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707122408.png" alt="方法：叉乘" style="zoom: 33%;" /></li></ul><h2 id="Edge-Cases"><a href="#Edge-Cases" class="headerlink" title="Edge Cases"></a>Edge Cases</h2><ul><li><p>不作处理</p></li><li><p>都做特殊处理</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707122603.png" alt="Edge Cases" style="zoom: 33%;" /></li></ul><h2 id="Cheking-all-pixels-on-the-screen"><a href="#Cheking-all-pixels-on-the-screen" class="headerlink" title="Cheking all pixels on the screen"></a>Cheking all pixels on the screen</h2><ul><li><p>包围盒 Axis-aligned bounding box AABB</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707122729.png" alt="Cheking all pixels on the screen" style="zoom: 33%;" /></li><li><p>Incremental Triangle Traversal</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707122833.png" alt="Incremental Triangle Traversal" style="zoom: 33%;" /><ul><li>适用于细长型三角形（像素少，但 bounding box 大）</li></ul></li></ul><h1 id="实际案例"><a href="#实际案例" class="headerlink" title="实际案例"></a>实际案例</h1><ul><li><p>Real LCD Screen Pixel (Closeup)</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707122958.png" alt="Real LCD Screen Pixel (Closeup)" style="zoom: 33%;" /></li><li><p>Bayer pattern（右方）</p><ul><li>绿色的点比其他的多（红蓝几乎相等）</li><li>因为人眼对绿色更敏感</li></ul></li><li><p>Aside: What about other display methods</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707123414.png" alt="Aside: What about other display methods" style="zoom: 33%;" /></li><li><p>Assume display pixels emit square of light</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707123721.png" alt="Assume display pixels emit square of light" style="zoom: 33%;" />  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707123823.png" alt="The Display Physically Emits This Signal" style="zoom: 33%;" />  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210707123843.png" alt="Compare: The Continous Triangle Function" style="zoom: 33%;" /></li><li><p>question</p><ul><li>锯齿<ul><li>原因：采样率不够高</li><li>解决：next</li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-CS-CG </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ComputerGraphics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GAMES101-4 20200221 20210705 Transformation Cont</title>
      <link href="2021/07/16/games101-4-20200221-20210705-transformation-cont/"/>
      <url>2021/07/16/games101-4-20200221-20210705-transformation-cont/</url>
      
        <content type="html"><![CDATA[<h1 id="4-20200221-20210705-Transformation-Cont"><a href="#4-20200221-20210705-Transformation-Cont" class="headerlink" title="4 20200221 / 20210705 Transformation Cont."></a>4 20200221 / 20210705 Transformation Cont.</h1><ul><li><p>旋转的逆就是旋转的转置（正交）</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705215358.png" alt="旋转的逆就是旋转的转置"></p></li><li><p>3D transformations</p></li><li><p>Viewing (观测) transformation</p><ul><li>View (视图) / Camera transformation</li><li>Projection (投影) transformation<ul><li>Orthographic (正交) projection</li><li>Perspectve (透视) projection</li></ul></li></ul></li></ul><h3 id="3D-transformations"><a href="#3D-transformations" class="headerlink" title="3D transformations"></a>3D transformations</h3><ul><li><p>Use homogeneous coordinates again:</p><ul><li>3D point = (x, y, z, 1]</li><li>3D vector = (x, y, z, 0)</li></ul></li><li><p>In general, (x, y, z, w) (w != 0) is the 3D point:<br>(x/w, y/w, z/w)</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705215936.png" alt="3D transformations" style="zoom:50%;" /></li><li><p>Rotation</p><ul><li>循环对称使得y的矩阵和xz不同，因为是 z 叉乘 x 而不是 x 叉乘 z，所以符号反</li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705215949.png" alt="3D transformations - Rotation" style="zoom:50%;" /></li><li><p>3D Rotations</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705220226.png" alt="3D transformations - 3D Rotations" style="zoom:50%;" /><ul><li><p>把任意旋转拆解为 x/y/z 旋转</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705221000.png" alt="3D transformations - 3D Rotations cont." style="zoom:50%;" /></li></ul></li><li><p>Rodrigues’ Rotation Formula</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705221044.png" alt="Rodrigues’ Rotation Formula" style="zoom:50%;" /><ul><li>默认轴过原点，方向为 $n$</li><li>若要沿着任意轴旋转<ul><li>先把旋转的起点平移到原点</li><li>旋转后再平移回来（逆操作）</li></ul></li><li><strong>四元数</strong> （）的引入是为了旋转的差值应用<ul><li>转 10°和转 30°的均值并不是转 20°</li></ul></li></ul></li></ul><h1 id="Viewing-transformation"><a href="#Viewing-transformation" class="headerlink" title="Viewing transformation"></a>Viewing transformation</h1><h2 id="View-Camera-transformation-视图-相机变换"><a href="#View-Camera-transformation-视图-相机变换" class="headerlink" title="View/ Camera transformation (视图/相机变换)"></a>View/ Camera transformation (视图/相机变换)</h2><ul><li><p>what is view transformation （MVP）</p><ul><li>Think about how to take a photo (MVP)<ul><li>Find a good place and arrange people (model transformation) 找物体位置 - 模型变换</li><li>Find a good “angle” to put the camera (view transformation) 找相机位置 - 视图变换</li><li>Cheese! (projection transformation) - 投影变换</li></ul></li></ul></li><li><p>How to perform view transformation</p><ul><li>Define the camera first<ul><li>Position $\vec e$</li><li>Look-at / gaze direction</li><li>Up direction $\hat t$</li></ul></li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705221707.png" alt="View/ Camera transformation" style="zoom:50%;" /></li><li><p>Key observation</p><ul><li><p>如果相机和所有物体一起移动，那么成像一致</p></li><li><p>所以把相机位置固定到原点沿着-z方向看（所有物体的位置也做变换）</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705221756.png" alt="View/ Camera transformation - Key observation" style="zoom:50%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705221950.png" alt="View/ Camera transformation - Transform the camera" style="zoom:50%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705222442.png" alt="View/ Camera transformation - $M_{view}$ in math" style="zoom:50%;" /></li></ul></li><li><p>先平移再旋转</p><ul><li>先把中心移动到原点（平移）</li><li>将所看方向旋转至 -z 方向</li><li>将 up 方向旋转到 y 方向</li><li>$g \times t$ 旋转到 x 方向</li></ul></li><li><p>正着写难写<br>$g \rightarrow -Z, t \rightarrow Y, (g · t \rightarrow X)$<br>反过来写好写<br>$X \rightarrow (g · t), Y \rightarrow t, Z \rightarrow -g$<br>（先求逆矩阵再求原矩阵-对逆矩阵求转置矩阵）</p><ul><li>因为是正交矩阵</li><li>所以对视图矩阵求逆就是求其转置</li></ul></li><li><p>summary</p></li><li><p>Transform objects together with the camera</p></li><li><p>Until camera’s at the origin, up at Y, look at -Z</p></li><li><p>Also known as ModelView Transformation 模型视图变换</p></li></ul><h2 id="Projection-transformation"><a href="#Projection-transformation" class="headerlink" title="Projection transformation"></a>Projection transformation</h2><ul><li>正交投影（平行光 平截头体）<ul><li>平行的线永远平行</li></ul></li><li>透视投影（点光源 锥形体）<ul><li>平行的线会相交</li><li>近大远小</li></ul></li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705223855.png" alt="Projection transformation" style="zoom:50%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705223921.png" alt="Projection transformation - Comparasion" style="zoom:50%;" /><h3 id="Orthographic-projection-正交投影"><a href="#Orthographic-projection-正交投影" class="headerlink" title="Orthographic projection 正交投影"></a>Orthographic projection 正交投影</h3><ul><li><p>A simple way of understanding</p><ul><li>Camera located at origin, looking at -Z, up at Y (looks familiar?)</li><li>Drop Z coordinate</li><li>Translate and scale the resulting rectangle to $[-1, 1]^2$</li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705224348.png" alt="Orthographic projection - A simple way of understanding" style="zoom:50%;" /></li><li><p>In general</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705224415.png" alt="Orthographic projection - In general" style="zoom:50%;" /><ul><li><p>We want to map a cuboid [I, r] x [b, t] x [f, n] to<br>the “canonical ( 正 则 、 规 范 、 标 准 )“ cube $[-1, 1]^3$</p></li><li><p>Slightly different orders (to the “simple way”)</p><ul><li><p>Center cuboid by translating</p></li><li><p>Scale into “canonical” cube</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705224642.png" alt="Orthographic projection - Slightly different orders" style="zoom:50%;" /></li><li><p>Transformation matrix<br>先将各方向的中心平移到原点</p>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705224716.png" alt="Orthographic projection - Transformation matrix" style="zoom:50%;" /></li></ul></li></ul></li><li><p>Caveat</p><ul><li>Looking at / along -Z is making near and far not intuitive (n &gt; f)</li><li>FYI: that’s why OpenGL (a Graphics API) uses left hand coords. （观测方向为 z 方向：n 为正的 f 为负的 n &gt; f， -z 方向：n 为负的 far 为正的 n &lt; f）</li></ul></li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705224856.png" alt="Orthographic projection - Caveat" style="zoom:50%;" /><h3 id="Perspective-projection-透视投影-近大远小"><a href="#Perspective-projection-透视投影-近大远小" class="headerlink" title="Perspective projection 透视投影 近大远小"></a>Perspective projection 透视投影 近大远小</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705225239.png" alt="Perspective projection" style="zoom:50%;" /><ul><li><p>Most common in Computer Graphics, art, visual system</p></li><li><p>Further objects are smaller 近大远小</p></li><li><p>Parallel lines not parallel; converge to single point</p></li><li><p>Euclid</p><ul><li>平行线永不相交</li><li>但透视投影中会相交</li></ul></li><li><p>Before we move on</p></li><li><p>Recall: property of homogeneous coordinates</p><ul><li>(x,y,z,1), (kx, ky, kz, k != 0), (xz, yz, $z^2$, z != 0) all represent the same point (x, y, z) in 3D<ul><li>e.g. (1, 0, 0, 1) and (2, 0, 0, 2) both represent (1, 0, 0)</li></ul></li></ul></li><li><p>Simple, but useful</p></li><li><p>How to do perspective projection</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705225521.png" alt="How to do perspective projection" style="zoom:50%;" /><ul><li>把透视投影分解为两步骤<ul><li>1.挤压成长方体</li><li>2.进行正交投影</li></ul></li><li>如何挤压<ul><li>原则<ul><li>近平面永远不变</li><li>挤了之后各自平面z不变</li><li>远平面中心点挤后不变</li></ul></li><li>任何一个点变换前后z不变</li><li>中间一个点经过挤压后如何变化</li></ul></li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705230045.png" alt="Perspective Projection" style="zoom:50%;" /><ul><li>相似三角形</li><li>y’ 和 y 的关系 $y’ = \frac{n}{z}y$</li><li>x’ 和 x 的关系 $x’ = \frac{n}{z}x$ (与 y 同理)</li></ul></li><li><p>齐次坐标下乘以一个非零数 k 依然为原来那个点（都乘 z）</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705230359.png" alt="Perspective Projection" style="zoom:50%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705230537.png" alt="Perspective Projection cont." style="zoom:50%;" /></li><li><p>如何求剩余矩阵</p><ul><li><p>两个观察</p><ul><li><p>1.近平面上任意点都不会变</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705230936.png" alt="近平面上任意点都不会变" style="zoom:50%;" /><ul><li><p>$n^2$和 x y 无关</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705231317.png" alt="$n^2$和 x y 无关" style="zoom:50%;" /></li></ul></li><li><p>2.远平面上任意点的 z 不会变</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705231150.png" alt="Perspective Projection" style="zoom:50%;" /><ul><li><p>取远平面中心点</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705231329.png" alt="远平面上任意点的 z 不会变" style="zoom:50%;" /></li></ul></li></ul></li><li><p>求解方程之后可知 AB，则 $M_{persp \rightarrow ortho}$ 得解</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705231401.png" alt="求解方程" style="zoom: 67%;" /></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-CS-CG </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ComputerGraphics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GAMES101-3 20200218 20210704 Transformation</title>
      <link href="2021/07/16/games101-3-20200218-20210704-transformation/"/>
      <url>2021/07/16/games101-3-20200218-20210704-transformation/</url>
      
        <content type="html"><![CDATA[<h1 id="3-20200218-20210704-Transformation"><a href="#3-20200218-20210704-Transformation" class="headerlink" title="3 20200218 / 20210704 Transformation"></a>3 20200218 / 20210704 Transformation</h1><h1 id="Why-study-transformation"><a href="#Why-study-transformation" class="headerlink" title="Why study transformation"></a>Why study transformation</h1><ul><li>type<ul><li>Modeling 模型变换<ul><li>摄像机移动</li><li>rotation</li><li>scaling 皮克斯动画</li></ul></li><li>Viewing 视图变换 （3D to 2D projection）<ul><li>光栅化</li><li>投影</li></ul></li></ul></li><li>2D transformations</li><li>Homogeneous coordinates</li></ul><h1 id="2D-transformations"><a href="#2D-transformations" class="headerlink" title="2D transformations"></a>2D transformations</h1><h2 id="Scale"><a href="#Scale" class="headerlink" title="Scale"></a>Scale</h2><ul><li><p>uniform ($S_{0.5}$)</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704011357.png" alt="Scale Transform" style="zoom: 67%;" /><ul><li><p>scale matrix</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704011424.png" alt="Scale Matrix" style="zoom:67%;" /></li></ul></li><li><p>non-uniform</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704011507.png" alt="Scale (Non-Uniform)" style="zoom:67%;" /></li></ul><h2 id="Reflection-Matrix"><a href="#Reflection-Matrix" class="headerlink" title="Reflection Matrix"></a>Reflection Matrix</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704011606.png" alt="Reflection Matrix" style="zoom: 50%;" /><h2 id="Shear-Matrix-错切"><a href="#Shear-Matrix-错切" class="headerlink" title="Shear Matrix 错切"></a>Shear Matrix 错切</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704011632.png" alt="Shear Matrix" style="zoom: 50%;" /><h2 id="Rotate-围绕-0-0-逆时针"><a href="#Rotate-围绕-0-0-逆时针" class="headerlink" title="Rotate 围绕(0,0)逆时针"></a>Rotate 围绕(0,0)逆时针</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704011945.png" alt="Rotate 围绕(0,0)逆时针" style="zoom: 50%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704012002.png" alt="Rotation Matrix" style="zoom: 50%;" /><h2 id="Linear-Transforms-Matrices"><a href="#Linear-Transforms-Matrices" class="headerlink" title="Linear Transforms = Matrices"></a>Linear Transforms = Matrices</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704012456.png" alt="Linear Transforms = Matrices" style="zoom:67%;" /><h1 id="Homogeneous-coordinates"><a href="#Homogeneous-coordinates" class="headerlink" title="Homogeneous coordinates"></a>Homogeneous coordinates</h1><ul><li>why</li></ul><blockquote><p>低一维的加法可以用高一维的乘法替换，所以有了齐次坐标目的：用齐次坐标统一所有变换 trade-off</p></blockquote><h2 id="平移变换"><a href="#平移变换" class="headerlink" title="平移变换"></a>平移变换</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704012724.png" alt="Translation" style="zoom:50%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704012803.png" alt="Why Homogeneous Coordinates" style="zoom:50%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704013029.png" alt="Solution: Homogenous Coordinates" style="zoom:50%;" /><blockquote><p>向量具有平移不变性</p></blockquote><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704013352.png" alt="Homogenous Coordinates" style="zoom:50%;" /><blockquote><p>point + point = 两点中点</p></blockquote><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704013517.png" alt="Affine Transformations" style="zoom:50%;" /><h2 id="Affine-Transformations-仿射变换-（线性变换（左上角矩阵）-平移变换（最后一列））"><a href="#Affine-Transformations-仿射变换-（线性变换（左上角矩阵）-平移变换（最后一列））" class="headerlink" title="Affine Transformations 仿射变换 （线性变换（左上角矩阵）+平移变换（最后一列））"></a>Affine Transformations 仿射变换 （线性变换（左上角矩阵）+平移变换（最后一列））</h2><ul><li><p>先线性变换再平移</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704013617.png" alt="Affine Transformations"  /></li></ul><h2 id="2D-Transformations"><a href="#2D-Transformations" class="headerlink" title="2D Transformations"></a>2D Transformations</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705213256.png" alt="2D Transformations" style="zoom:67%;" /><blockquote><p>只有二维情况下仿射变换最后一行才是 001</p></blockquote><h2 id="Inverse-Transform-逆变换"><a href="#Inverse-Transform-逆变换" class="headerlink" title="Inverse Transform 逆变换"></a>Inverse Transform 逆变换</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705213700.png" alt="Inverse Transform" style="zoom:67%;" /><h2 id="Composing-Transform-组合变换"><a href="#Composing-Transform-组合变换" class="headerlink" title="Composing Transform 组合变换"></a>Composing Transform 组合变换</h2><ul><li><p>复杂变换可通过简单变换得到</p></li><li><p>变换的顺序很重要（矩阵乘法不满足交换律）</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705213946.png" alt="Transform Odering Matters!" style="zoom:50%;" /></li><li><p>矩阵放左边*向量</p></li><li><p>矩阵变换<strong>从右至左</strong>应用</p></li><li><p>矩阵没交换律但有结合律</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705214134.png" alt="Composing Transforms" style="zoom:50%;" /></li><li><p>可用一个矩阵表述非常复杂的变换</p></li></ul><h2 id="Decomposing-Complex-Transfroms-分解复杂矩阵"><a href="#Decomposing-Complex-Transfroms-分解复杂矩阵" class="headerlink" title="Decomposing Complex Transfroms 分解复杂矩阵"></a>Decomposing Complex Transfroms 分解复杂矩阵</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705214331.png" alt="Decomposing Complex Transfroms" style="zoom:50%;" /><ul><li>想要以某点为中心进行旋转<ul><li>先将该点移动到原点 - T(-c)</li><li>进行旋转 - R (a)</li><li>然后再逆操作移动到原位置 - T(c)</li><li>$T(c) · R(\alpha) · T(-c)$</li></ul></li></ul><h1 id="3D-Transforms"><a href="#3D-Transforms" class="headerlink" title="3D Transforms"></a>3D Transforms</h1><blockquote><p>和 2D 做类比</p></blockquote><ul><li>用四个数表示<ul><li>点则末尾加 1</li><li>向量则末尾加 0</li></ul></li></ul><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705214740.png" alt="3D Transformations" style="zoom:50%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210705214749.png" alt="3D Transformations 2" style="zoom:50%;" /><blockquote><p>仿射变换 = 线性变换 + 平移变换<br>先线性变换（缩放/旋转） 再平移变换</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Study-CS-CG </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ComputerGraphics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GAMES101-2 20200214 20210704 A Swift and Brutal Introduction to Linear Algebra</title>
      <link href="2021/07/16/games101-2-20200214-20210704-a-swift-and-brutal-introduction-to-linear-algebra/"/>
      <url>2021/07/16/games101-2-20200214-20210704-a-swift-and-brutal-introduction-to-linear-algebra/</url>
      
        <content type="html"><![CDATA[<h1 id="2-20200214-20210704-A-Swift-and-Brutal-Introduction-to-Linear-Algebra"><a href="#2-20200214-20210704-A-Swift-and-Brutal-Introduction-to-Linear-Algebra" class="headerlink" title="2 20200214 / 20210704 A Swift and Brutal Introduction to Linear Algebra!"></a>2 20200214 / 20210704 A Swift and Brutal Introduction to Linear Algebra!</h1><p>(in fact it’s relatively easy…)</p><ul><li>Graphics’ Dependencies<ul><li>Basic mathematics<ul><li>Linear algebra, calculus, statistics</li></ul></li><li>Basic physics<ul><li>Optics, Mechanics</li></ul></li><li>Misc<ul><li>Signal processing, Numerical analysis</li></ul></li><li>And a bit of aesthetics</li></ul></li></ul><h2 id="This-Course"><a href="#This-Course" class="headerlink" title="This Course"></a>This Course</h2><ul><li>More dependent on Linear Algebra<ul><li>Vectors (dot products, cross products, …)</li><li>Matrices (matrix-matrix, matrix-vector mult., …)</li></ul></li><li>For example,<ul><li>Apoint is a vector (?)</li><li>An operation like translating or rotating objects<br>can be matrix-vector multiplication</li></ul></li></ul><h2 id="Vectors"><a href="#Vectors" class="headerlink" title="Vectors"></a>Vectors</h2><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704003508.png" alt="Vectors" style="zoom:33%;" /><ul><li>Usually written as $\vec a$  or in bold $\bf{a}$</li><li>Or using start and end points $\vec{AB}=B-A$</li><li>Direction and length</li><li>No absolute starting position</li></ul><h3 id="Vector-Normalization"><a href="#Vector-Normalization" class="headerlink" title="Vector Normalization"></a>Vector Normalization</h3><ul><li>Magnitude (length) of a vector written as $||\vec a||$</li><li>Unit vector .<ul><li>Avector with magnitude of 1</li><li>Finding the unit vector of a vector (normalization): $\hat a = \vec a / ||\vec a||$</li><li>Used to represent directions</li></ul></li></ul><h3 id="Vector-Addition"><a href="#Vector-Addition" class="headerlink" title="Vector Addition"></a>Vector Addition</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704003523.png" alt="Vector Addition" style="zoom:33%;" /><ul><li>Geometrically: Parallelogram law &amp; Triangle law</li><li>Algebraically: Simply add coordinates</li></ul><h3 id="Cartesian-Coordinates"><a href="#Cartesian-Coordinates" class="headerlink" title="Cartesian Coordinates"></a>Cartesian Coordinates</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704003535.png" alt="Cartesian Coordinates" style="zoom:33%;" /><ul><li>X and Y can be any (usually orthogonal unit) vectors<ul><li>$A =<br>\left{<br>\begin{matrix}<br>x\<br>y<br>\end{matrix}<br>\right}$</li><li>$A =  |  A^T = (x,y) |$</li><li>$||A|| = \sqrt{x^2 + y^2}$</li></ul></li></ul><h3 id="Vector-Multiplication"><a href="#Vector-Multiplication" class="headerlink" title="Vector Multiplication"></a>Vector Multiplication</h3><ul><li>Dot product</li><li>Cross product</li><li>Orthonormal bases and coordinate frames</li></ul><h3 id="Dos-scalar-Product-点乘"><a href="#Dos-scalar-Product-点乘" class="headerlink" title="Dos (scalar) Product 点乘"></a>Dos (scalar) Product 点乘</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704003555.png" alt="Dos (scalar) Product" style="zoom:33%;" /><ul><li><p>Properties</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704003606.png" alt="Properties of Dot (scalar) Product" style="zoom:33%;" /></li><li><p>Dot Product in Cartesian Coordinates</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704003623.png" alt="Dot Product in Cartesian Coordinates" style="zoom: 33%;" /></li><li><p>Dot Product in Graphics</p><ul><li>Find angle between two vectors<br>(e.g. cosine of angle between light source and surface) 找夹角</li><li>Finding projection of one vector on another 找投影</li></ul></li><li><p>Dot Product for Projection</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704004106.png" alt="Dot Product for Projection" style="zoom: 33%;" /><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704004125.png" alt="Dot Product for Projection 2" style="zoom: 33%;" /><ul><li><p>Measure how close two directions are （两个向量方向上接近就是1 垂直就0 相反就-1）</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704003958.png" alt="Dot Product in Graphics" style="zoom:50%;" /></li><li><p>Decompose a vector</p></li><li><p>Determine forward / backward</p><ul><li>应用：镜面反射 入射光 高光</li></ul></li></ul></li></ul><h3 id="Cross-product"><a href="#Cross-product" class="headerlink" title="Cross product"></a>Cross product</h3><ul><li><p>Cross (vector) Product</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704004440.png" alt="Cross (vector) Product" style="zoom:50%;" /><ul><li>Cross product is orthogonal to two initial vectors</li><li>Direction determined by right-hand rule 不满足交换律</li><li>Useful in constructing coordinate systems (later)</li></ul></li><li><p>Properties</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704004642.png" alt="Properties of Cross Product" style="zoom:50%;" /><ul><li>向量叉乘得到的还是向量</li></ul></li><li><p>Cartesian Formula</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704004949.png" alt="Cartesian Formula" style="zoom:50%;" /></li><li><p>Cross Product in Graphics 应用</p><ul><li><p>Determine left / right 左侧-叉乘结果为正</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704005045.png" alt="Cross Product in Graphics" style="zoom:50%;" /></li><li><p>Determine inside / outside</p><blockquote><p>ab x ap<br>bc x bp<br>ca x cp<br>如果三个结果符号相同 那么就在内部 若结果为0则为Cornercase 可内可外</p></blockquote></li><li><p>应用 - 光栅化</p></li></ul></li></ul><h3 id="Orthonormal-Bases-Coordinate-Frames"><a href="#Orthonormal-Bases-Coordinate-Frames" class="headerlink" title="Orthonormal Bases / Coordinate Frames"></a>Orthonormal Bases / Coordinate Frames</h3><ul><li><p>Important for representing points, positions, locations</p></li><li><p>Often, many sets of coordinate systems</p></li><li><p>Global, local, world, model, parts of model (head, hands, …)</p></li><li><p>Critical issue is transforming between these systems/ bases</p></li><li><p>A topic for next week</p></li><li><p>Orthonormal Coordinate Frames 坐标系</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704005439.png" alt="Orthonormal Coordinate Frames" style="zoom:50%;" /></li></ul><hr><h3 id="Matrices"><a href="#Matrices" class="headerlink" title="Matrices"></a>Matrices</h3><ul><li><p>Magical 2D arrays that haunt in every CS course</p></li><li><p>In Graphics, pervasively used to represent transformations</p><ul><li>Translation, rotation, shear, scale (more details in the next lecture)</li></ul></li><li><p>What is a matrix</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704005611.png" alt="What is a matrix" style="zoom:50%;" /></li><li><p>Matrix-Matrix Multiplication</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704005701.png" alt="Matrix-Matrix Multiplication" style="zoom: 50%;" /></li><li><p>Properties</p><ul><li><p><strong>Non-commutative</strong><br>(AB and BA are different in general)</p></li><li><p>Associative and distributive</p><ul><li>(AB)C=A(BC)</li><li>A(B+C) = AB+AC</li><li>(A+B)C = AC + BC</li></ul></li><li><p>Matrix-Vector Multiplication</p><ul><li><p>Treat vector as a column matrix (mx1)</p></li><li><p>Key for transforming points (next lecture)</p></li><li><p>Official spoiler: 2D reflection about y-axis</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704005923.png" alt="Matrix-Vector Multiplication" style="zoom:50%;" /></li></ul></li><li><p>Transpose of a Matrix</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704010001.png" alt="Transpose of a Matrix" style="zoom: 50%;" /></li><li><p>Identity Matrix and Inverses</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704010020.png" alt="Identity Matrix and Inverses" style="zoom:33%;" /></li><li><p>Vector multiplication in matrix form</p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704010030.png" alt="Vector multiplication in matrix form" style="zoom:33%;" /></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-CS-CG </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ComputerGraphics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GAMES101-1 20200211 20210703 Overview of CG</title>
      <link href="2021/07/16/games101-1-20200211-20210703-overview-of-cg/"/>
      <url>2021/07/16/games101-1-20200211-20210703-overview-of-cg/</url>
      
        <content type="html"><![CDATA[<h1 id="1-20200211-20210703-Overview-of-CG"><a href="#1-20200211-20210703-Overview-of-CG" class="headerlink" title="1 20200211 / 20210703 Overview of CG"></a>1 20200211 / 20210703 Overview of CG</h1><ul><li>Topics</li></ul><h2 id="What-is-CG"><a href="#What-is-CG" class="headerlink" title="What is CG"></a>What is CG</h2><blockquote><p>The use of computers to <strong>synthesize</strong> and <strong>manipulate</strong> visual information.</p></blockquote><h2 id="Why-study"><a href="#Why-study" class="headerlink" title="Why study"></a>Why study</h2><h3 id="Application"><a href="#Application" class="headerlink" title="Application"></a>Application</h3><ul><li>Video Games<ul><li>什么是好的画面 - 看画面是否足够亮 - 全局光照做得好不好<ul><li>只狼</li><li>无主之地3</li></ul></li></ul></li><li>Movies<ul><li>The Matrix<ul><li>Special Effects</li><li>特效是图形学中最简单的一类 - 平常见不到 - 做得不对也不会觉得意外</li><li>最困难的是最常见的</li></ul></li></ul></li><li>Avatar<ul><li>引入了面部/动作捕捉</li></ul></li><li>Animations<ul><li>Zootopia - 疯狂动物城</li><li>Frozen 2 - 冰雪奇缘 2</li></ul></li><li>Design<ul><li>Autodesk Gallary</li><li>CAD<ul><li>环境模拟</li><li>碰撞检测</li></ul></li><li>Ikea</li></ul></li><li>Visualization<ul><li>Science</li><li>Engineering</li><li>Medicine</li><li>Journalism</li></ul></li><li>Virtual Reality<ul><li>Augmented Reality</li><li>Digital Illustration<ul><li>PS</li></ul></li></ul></li><li>Simulation<ul><li>The Dust Bowl phenomena</li><li>Black hole from Interstellar</li></ul></li><li>Graphical User Interfaces - GUI</li><li>Typography - 字体<ul><li>The Quick Brown Fox Jumps Over The Lazy Dog - 字体测试中的常见句</li><li>矢量图</li></ul></li></ul><h3 id="Fundamental-Intellectual-Challenges"><a href="#Fundamental-Intellectual-Challenges" class="headerlink" title="Fundamental Intellectual Challenges"></a>Fundamental Intellectual Challenges</h3><ul><li>Creates and interacts with realistic virtual world</li><li>Requires understanding of all aspects of physical world</li><li>New computing methods, displays, technologies</li></ul><h3 id="Technical-Challenges"><a href="#Technical-Challenges" class="headerlink" title="Technical Challenges"></a>Technical Challenges</h3><ul><li>Math of (perspective) projections, curves, surfaces</li><li>Physics of lighting and shading</li><li>Representing / operating shapes in 3D</li><li>Animation / simulation</li><li><del>3D graphics software programming and hardware</del></li></ul><h2 id="WHY-CG-is-AWESOME"><a href="#WHY-CG-is-AWESOME" class="headerlink" title="WHY - CG is AWESOME"></a>WHY - CG is AWESOME</h2><h3 id="Course-Topics-mainly-4-parts"><a href="#Course-Topics-mainly-4-parts" class="headerlink" title="Course Topics (mainly 4 parts)"></a>Course Topics (mainly 4 parts)</h3><ul><li>Rasterization<ul><li>Project geometry primitives (3D triangles / polygons) onto the screen</li><li>Break projected primitives into fragments (pixels)</li><li>Gold standard in Video Games (<strong>Real-time</strong> (30fps) Applications)</li></ul></li><li>Curves and Meshes<ul><li>How to represent geometry in Computer Graphics</li></ul></li><li>Ray Tracing<ul><li>Shoot rays from the camera though each pixel</li><li>Calculate <strong>intersection</strong> and <strong>shading</strong></li><li><strong>Continue to bounce</strong> the rays till they hit light sources</li><li>Gold standard in Animations / Movies (Offline Applications)</li><li>trad off - 慢但效果好</li><li>两个都要 - 实时光线追踪</li></ul></li><li>Animation / Simulation<ul><li>Key frame Animation</li><li>Mass-spring System</li></ul></li></ul><h3 id="GAMES101-is-NOT-about"><a href="#GAMES101-is-NOT-about" class="headerlink" title="GAMES101 is NOT about"></a>GAMES101 is NOT about</h3><ul><li>Using OpenGL / DirectX / Vulcan</li><li>The syntax of Shaders</li><li>3D modeling using Maya / 3DS MAX / Blender, or VR / game development using Unity / Unreal Engine (where can I learn them?)</li><li>Computer Vision / Deep Learning topics, e.g. XYZ-GAN (where can I learn them?)</li><li>CV - 一切需要猜测的内容</li><li>We learn Graphics, not Graphics APIs!</li><li>After this course, you’ll be able to learn these by yourself (I promise)</li></ul><h3 id="CG-V-S-CV"><a href="#CG-V-S-CV" class="headerlink" title="CG V.S. CV"></a>CG V.S. CV</h3><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210704003415.png" alt="Differences of CG and CV" style="zoom: 33%;" /><h2 id="Course-Logic"><a href="#Course-Logic" class="headerlink" title="Course Logic"></a>Course Logic</h2><h3 id="General-Information"><a href="#General-Information" class="headerlink" title="General Information"></a>General Information</h3><ul><li>Modern Course<ul><li>Comprehensive but<br>without hardware programming!</li><li>Pace/ contents subject to change</li></ul></li><li>Course Website<ul><li><a href="http://www.cs.ucsb.edu/~lingqi/teaching/games101.html">http://www.cs.ucsb.edu/~lingqi/teaching/games101.html</a></li><li>Has all the needed information</li><li>Syllabus, slides, reading materials, etc.</li></ul></li><li>Course slides and (pre)-reading materials</li><li>No Required Textbooks<ul><li>Reading materials (if any) will available online before lectures</li><li>Lecture slides will be available after class</li></ul></li><li>Most recommended reference<ul><li>Steve Marschner and Peter Shirley, “Fundamentals of Computer Graphics”, 3rd or later edition.</li><li>Sign up on our BBS for discussion<br>(<a href="http://games-cn.org/forums/forum/games-online-course-forum/">http://games-cn.org/forums/forum/games-online-course-forum/</a>)</li></ul></li></ul><h3 id="Assignments"><a href="#Assignments" class="headerlink" title="Assignments"></a>Assignments</h3><ul><li>Mostly programming tasks with provided code skeletons and virtual machine image</li><li>Weekly (usually no more than 20 lines of code per week)</li><li>Language: C++</li></ul><h3 id="Submission"><a href="#Submission" class="headerlink" title="Submission"></a>Submission</h3><ul><li>Submit your project by 11:59PM on/before the due dates (strictly enforced)</li><li>Feedback will be provided in a week</li><li>Assignment Submission Website<br>(<a href="http://www.smartchair.org/GAMES2020Course-YLQ/">http://www.smartchair.org/GAMES2020Course-YLQ/</a>)</li><li>No Exams</li><li>Course Project / Final Project<ul><li>Starting midway of this course</li><li>References will be provided, but you decide the topic</li><li>Best work will be posted online for showing off</li></ul></li></ul><h3 id="Use-An-IDE"><a href="#Use-An-IDE" class="headerlink" title="Use An IDE!"></a>Use An IDE!</h3><ul><li>IDE: Integrated Development Environment</li><li>Helps you parse a entire project<ul><li>And gives hints on syntax / usages of member functions, etc.</li></ul></li><li>Recommended IDEs<ul><li>Visual Studio (Windows only) / Visual Studio Code (cross platform)</li><li>Qt Creator (personal)</li></ul></li><li>Not Recommended IDEs (for C++ programming)<ul><li>CLion (慢), Eclipse (代码分析不好)</li><li>Sublime Text, Vi / Vim, Emacs (not even IDEs)</li></ul></li><li>Work alone for regular assignments<ul><li>no copy-pasting from any other sources</li></ul></li><li>Do not publish your code (on Github, etc.) for assignments using our skeleton code</li><li>Do not post your solution online<ul><li>Discussion / explanation is welcomed</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Study-CS-CG </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ComputerGraphics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GAMES101-Introduction To Mordern Computer Graphics</title>
      <link href="2021/07/16/games101-introduction-to-mordern-computer-graphics/"/>
      <url>2021/07/16/games101-introduction-to-mordern-computer-graphics/</url>
      
        <content type="html"><![CDATA[<h1 id="GAMES101——现代计算机图形学入门笔记"><a href="#GAMES101——现代计算机图形学入门笔记" class="headerlink" title="GAMES101——现代计算机图形学入门笔记"></a>GAMES101——现代计算机图形学入门笔记</h1><h2 id="Why-Note"><a href="#Why-Note" class="headerlink" title="Why Note"></a>Why Note</h2><p>为投递腾讯的技术研究-计算机图形学岗位，其中要求熟练掌握计算机图形学基本理论和算法，遂学习之，特此记录。</p><h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><ul><li>以下基本信息引用自<a href="http://games-cn.org/intro-graphics/">课程官网</a>：<ul><li><strong>课程简介</strong><ul><li>本课程将全面而系统地介绍现代计算机图形学的四大组成部分：（1）光栅化成像，（2）几何表示，（3）光的传播理论，以及（4）动画与模拟。每个方面都会从基础原理出发讲解到实际应用，并介绍前沿的理论研究。通过本课程，你可以学习到计算机图形学背后的数学和物理知识，并锻炼实际的编程能力。</li><li>顾名思义，作为入门，本课程会尽可能的覆盖图形学的方方面面，把每一部分的基本概念都尽可能说清楚，让大家对计算机图形学有一个完整的、自上而下的全局把握。全局的理解很重要，学完本课程后，你会了解到图形学不等于OpenGL，不等于光线追踪，而是一套生成整个虚拟世界的方法。从本课程的标题，大家还可以看到“现代”二字，也就是说，这门课所要给大家介绍的都是现代化的知识，也都是现代图形学工业界需要的图形学基础。</li><li>本课程与其它图形学教程还有一个重要的区别，那就是本课程不会讲授OpenGL，甚至不会提及这个概念。本课程所讲授的内容是图形学背后的原理，而不是如何使用一个特定的图形学API。在学习完这门课的时候，你一定有能力自己使用OpenGL写实时渲染的程序。另外，本课程并不涉及计算机视觉、图像视频处理、深度学习，也不会介绍游戏引擎与三维建模软件的使用。</li><li>具体课程内容请参见课程大纲:<a href="http://games-cn.org/intro-graphics%E3%80%82">http://games-cn.org/intro-graphics。</a></li></ul></li><li><strong>教师简介</strong><ul><li>闫令琪，博士，加州大学圣芭芭拉分校（UCSB）助理教授。闫令琪教授于2013年在清华大学获得学士学位，并于2018年在加州大学伯克利分校（UCB）获得博士学位。他的主要研究方向是真实感图形渲染（旧称绘制），具体请参考学术主页：<a href="https://sites.cs.ucsb.edu/~lingqi/%E3%80%82%E7%AE%80%E8%80%8C%E8%A8%80%E4%B9%8B%EF%BC%8C%E9%97%AB%E4%BB%A4%E7%90%AA%E6%95%99%E6%8E%88%E7%9B%AE%E5%89%8D%E6%9C%89%E4%B8%89%E4%B8%AA%E6%88%90%E5%B0%B1%EF%BC%9A%EF%BC%881%EF%BC%89%E5%9C%A8%E5%9B%BE%E5%BD%A2%E6%B8%B2%E6%9F%93%E9%A2%86%E5%9F%9F%EF%BC%8C%E4%BB%96%E4%BF%9D%E6%8C%81%E7%9D%80%E5%8D%9A%E5%A3%AB%E6%9C%9F%E9%97%B4%EF%BC%885%E5%B9%B4%EF%BC%89%E4%BB%A5%E7%AC%AC%E4%B8%80%E4%BD%9C%E8%80%85%E8%BA%AB%E4%BB%BD%E5%8F%91%E8%A1%A87%E7%AF%87SIGGRAPH%E7%B3%BB%E5%88%97%E8%AE%BA%E6%96%87%E7%9A%84%E6%9C%80%E9%AB%98%E7%BA%AA%E5%BD%95%EF%BC%88SIGGRAPH%EF%BC%8CSIGGRAPH">https://sites.cs.ucsb.edu/~lingqi/。简而言之，闫令琪教授目前有三个成就：（1）在图形渲染领域，他保持着博士期间（5年）以第一作者身份发表7篇SIGGRAPH系列论文的最高纪录（SIGGRAPH，SIGGRAPH</a> Asia，Transaction on Graphics）；（2）他的博士论文于2019年获得SIGGRAPH最佳博士论文奖，并得到官方盛赞“每章都可以作为一篇独立的博士论文”；（3）他的科研成果被直接应用于工业界，如影片《猩球崛起3：终极之战》与《狮子王2019》，以及与 NVIDIA 合作推动了实时光线追踪技术的产生；（4）在本课程的第一节课上，大家会了解到第四点也是最重要的一点：）</li></ul></li><li><strong>直播方式</strong><ul><li><a href="http://games虎牙直播间webinar.games-cn.org/">GAMES虎牙直播间webinar.games-cn.org</a></li></ul></li><li><strong>课程主页：</strong><ul><li><a href="https://sites.cs.ucsb.edu/~lingqi/teaching/games101.html">https://sites.cs.ucsb.edu/~lingqi/teaching/games101.html</a></li></ul></li><li><strong>课程BBS：</strong><ul><li><a href="http://games-cn.org/forums/forum/graphics-intro/">http://games-cn.org/forums/forum/graphics-intro/</a></li></ul></li><li><strong>课程PPT和视频：</strong><ul><li><a href="http://games-cn.org/graphics-intro-ppt-video/">http://games-cn.org/graphics-intro-ppt-video/</a></li></ul></li><li><strong>课程需求：</strong><ul><li>【必须】：高等数学（微积分、线性代数）、算法、数据结构</li><li>【非必须】：信号处理、数值分析、大学物理（光学）</li></ul></li><li><strong>课程安排：</strong><ul><li>【课时】：共安排20节课，每节一小时，每周两节，安排在北京时间周二和周五上午10:00-11:00，2020年2月11日开始</li><li>【作业（非必须）】：共7次小作业，1次大作业，全部是编程任务，会提供代码框架。作业不作强制要求，自愿完成</li><li>【考试】：无考试安排</li><li>【其它】：中文授课，英文课件，采用直播互动形式，以轻松愉快为主，每课结束当天会放出录像</li></ul></li><li><strong>教材：</strong><ul><li>【非必须】：Steve Marschner and Peter Shirley, “Fundamentals of Computer Graphics”, 第三版或更新版本。很遗憾中文版应该只有第二版，大家也可以对照着看。不过英文版写得非常好，浅显易懂，所以应该并无太大问题</li></ul></li></ul></li></ul><h2 id="Content"><a href="#Content" class="headerlink" title="Content"></a>Content</h2><ol><li><p><a href="https://medill-east.github.io/2021/07/16/games101-1-20200211-20210703-overview-of-cg/">GAMES101-1 20200211 20210703 Overview of CG</a></p></li><li><p><a href="https://medill-east.github.io/2021/07/16/games101-2-20200214-20210704-a-swift-and-brutal-introduction-to-linear-algebra/">GAMES101-2 20200214 20210704 A Swift and Brutal Introduction to Linear Algebra</a></p></li><li><p><a href="https://medill-east.github.io/2021/07/16/games101-3-20200218-20210704-transformation/">GAMES101-3 20200218 20210704 Transformation</a></p></li><li><p><a href="https://medill-east.github.io/2021/07/16/games101-4-20200221-20210705-transformation-cont/">GAMES101-4 20200221 20210705 Transformation Cont</a></p></li><li><p><a href="https://medill-east.github.io/2021/07/16/games101-5-20200225-20210706-07-rasterization-1-triangles/">GAMES101-5 20200225 20210706 07 Rasterization 1 (Triangles)</a></p></li><li><p><a href="https://medill-east.github.io/2021/07/16/games101-6-20200228-20210708-rasterization-2-anti-aliasing-and-z-buffering/">GAMES101-6 20200228 20210708 Rasterization 2 anti - aliasing and Z - buffering</a></p></li><li><p><a href="https://medill-east.github.io/2021/07/16/games101-7-20200303-20210708-shading-1-illumination-shading-and-graphics-pipeline/">GAMES101-7 20200303 20210708 Shading 1 (Illumination, Shading and Graphics Pipeline)</a></p></li><li><p><a href="https://medill-east.github.io/2021/07/16/games101-8-20200306-20210708-shading-2-shading-pipeline-and-texture-mapping/">GAMES101-8 20200306/20210708 Shading 2 (Shading, Pipeline and Texture Mapping)</a></p></li><li></li></ol>]]></content>
      
      
      <categories>
          
          <category> Study-CS-CG </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ComputerGraphics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo + Github 搭建 Blog (MacOS)</title>
      <link href="2021/05/24/my-first-post/"/>
      <url>2021/05/24/my-first-post/</url>
      
        <content type="html"><![CDATA[<h2 id="20210524-Start-to-build"><a href="#20210524-Start-to-build" class="headerlink" title="20210524 Start to build"></a>20210524 Start to build</h2><h3 id="Why"><a href="#Why" class="headerlink" title="Why"></a>Why</h3><p>最近在学产品经理的课，有了呈现作品集的需求，遂在网上寻找教程搭建 Blog，最终选定了<a href="https://zhuanlan.zhihu.com/p/35668237">这篇</a>详细的教程，在此记录搭建过程。</p><h3 id="What"><a href="#What" class="headerlink" title="What"></a>What</h3><h4 id="Node-js-安装"><a href="#Node-js-安装" class="headerlink" title="Node.js 安装"></a>Node.js 安装</h4><p>去到官网下载<a href="https://nodejs.org/zh-cn/download/">Node.js 安装包</a>，按提示安装就好啦。</p><p>之后打开命令行输入以下指令，若出现版本号则证明安装成功：</p><pre class="line-numbers language-none"><code class="language-none">node -v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="Git-安装"><a href="#Git-安装" class="headerlink" title="Git 安装"></a>Git 安装</h4><p><a href="https://git-scm.com/downloads">Git 下载页面</a></p><blockquote><p>因为很久之前已经安装过 Git，所以详细步骤先按下不表</p></blockquote><h4 id="Github-注册及仓库新建"><a href="#Github-注册及仓库新建" class="headerlink" title="Github 注册及仓库新建"></a>Github 注册及仓库新建</h4><h5 id="Github-注册"><a href="#Github-注册" class="headerlink" title="Github 注册"></a>Github 注册</h5><p>移步 <a href="https://github.com/">Github 官网</a> 完成注册。</p><blockquote><p>详细过程这里也按下不表，理由同上</p></blockquote><h5 id="仓库搭建"><a href="#仓库搭建" class="headerlink" title="仓库搭建"></a>仓库搭建</h5><p>注册完账号后回到自己的页面，然后选择新建仓库：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210524114739.png"></p><p>这里对项目名字进行更改，其中名字需要有 <code>github.io</code> 后缀，<code>这里的名字一定要和自己的 github name 相同！</code>，然后记得选中 <code>Add a README file</code>：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210524114910.png"></p><p>然后找到该 repository 之后，点击 <code>settings</code>：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210524115240.png"></p><p>直接往下滑之后会看到 <code>Github Pages</code>：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210524115314.png"></p><p>点进去之后 <code>Choose a theme</code> 可以先随机挑选一个主题，之后回到 <code>GitHub Pages</code>，可以看到下面的界面：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210524115755.png"></p><p>点进去之后就能看到自己的网页啦。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210524121147.png"></p><h4 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h4><p><a href="https://zhuanlan.zhihu.com/p/35668237">教程</a>中这里是在本地找了一个位置新建了一个文件夹来存放博客文件，暂时没搞懂和直接放 <code>github</code> 上的区别… </p><p>这里我先用 <a href="https://desktop.github.com/">Github Desktop</a> 把之前新建的仓库下载到本地：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210524121018.png"></p><p>所以我就先也在 之前新建的仓库文件夹下创建新的 <code>blog</code> 文件夹。</p><p>用命令行进入到该路径下，输入如下指令安装 Hexo，此处若有报错可无视：</p><pre class="line-numbers language-none"><code class="language-none">sudo npm i hexo-cli -g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装后输入如下指令验证安装结果：</p><pre class="line-numbers language-none"><code class="language-none">hexo -v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>之后输入如下指令初始化网站：</p><pre class="line-numbers language-none"><code class="language-none">hexo init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>输入如下指令安装必备组件：</p><pre class="line-numbers language-none"><code class="language-none">npm install<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>以上完成了本地的网站配置，然后是如下几个有用的指令：</p><ul><li><p>生成静态网页</p><pre class="line-numbers language-none"><code class="language-none">hexo g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>打开本地服务器</p></li></ul><pre class="line-numbers language-none"><code class="language-none">hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>之后在浏览器键入<a href="http://localhost:4000/">http://localhost:4000/</a>就可以打开查看啦。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210524121816.png"></p><p>然后按 <code>ctrl + c</code> 关闭本地服务器。</p><h4 id="连接-Github-与本地"><a href="#连接-Github-与本地" class="headerlink" title="连接 Github 与本地"></a>连接 Github 与本地</h4><p>打开命令行后输入如下指令，记得将相应用户名和邮箱改成自己的：</p><pre class="line-numbers language-none"><code class="language-none">git config --global user.name &quot;YourGitName&quot;git config --global user.email &quot;YourEmail&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>之后生成密钥：</p><pre class="line-numbers language-none"><code class="language-none">ssh-keygen -t rsa -C &quot;haodong.liao@gmail.com&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这里会提示你键入保存密钥的地址，只需要不断回车即可：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210524122153.png"></p><p>打开自己的 <a href="https://github.com/">github</a>，点击头像之后点击 <code>settings</code>，然后选择 <code>SSH and GPG keys</code>，新建一个 SSH，名字我起名为 <code>blog</code>，然后在命令行中输入以下指令：</p><pre class="line-numbers language-none"><code class="language-none">cat ~&#x2F;.ssh&#x2F;id_rsa.pub<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>将输出的内容保存到密钥的内容框中，点击保存。</p><p>之后在命令行中键入如下内容，若出现用户名则成功：</p><pre class="line-numbers language-none"><code class="language-none">ssh -T git@github.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210524122557.png"></p><p>打开博客根目录下的 <code>_config.yml</code> 文件，即博客的配置文件，修改以下配置为你自己的配置：</p><pre class="line-numbers language-none"><code class="language-none">deploy:  type: git  repository: git@github.com:Medill-East&#x2F;haodong.github.io.git  branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>注意 <code>repository</code> 的地址可以从仓库的这里获取：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20210524122756.png"></p><h4 id="写文章-发布文章"><a href="#写文章-发布文章" class="headerlink" title="写文章 发布文章"></a>写文章 发布文章</h4><p>在博客根目录下输入以下指令安装扩展：</p><pre class="line-numbers language-none"><code class="language-none">npm i hexo-deployer-git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>输入以下指令以新建文章：</p><pre class="line-numbers language-none"><code class="language-none">hexo new post &quot;my first post&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后在路径 <code>.\blog\source\_posts</code> 目录下就可以看到多出了 <code>my-first-post.md</code> 文件，这就是文章文件啦。</p><p>对 md 文件进行相应编辑后，在根目录下键入以下指令以生成静态网页和进行本地预览：</p><ul><li><p>生成静态网页</p><pre class="line-numbers language-none"><code class="language-none">hexo g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>打开本地服务器</p></li></ul><pre class="line-numbers language-none"><code class="language-none">hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>上传到 github</li></ul><pre class="line-numbers language-none"><code class="language-none">hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>注意需要确保 <code>Github Pages</code> <code>settings</code> 下的 <code>Source</code> 下的 <code>Branch</code> 为 <code>master</code></p></blockquote><blockquote><p>然后如果本地做过一些改动的话需要同步到 github 上</p></blockquote><hr><h2 id="20210526-解决-CSS-样式不加载的问题"><a href="#20210526-解决-CSS-样式不加载的问题" class="headerlink" title="20210526 解决 CSS 样式不加载的问题"></a>20210526 解决 CSS 样式不加载的问题</h2><p>按照如上步骤配置之后出现了一个问题：在本地预览能够看到的效果部署到网页之后没了 CSS 的效果，所以这里先对这个问题进行一下解决。</p><p>尝试了多篇帖子的办法，最终以如下途径成功加载上了 CSS：</p><ol><li><p>把仓库名改为了<br><code>your github name.github.io</code><br>比如我的 github name 为 <code>Medill-East</code><br>那么仓库名就需要为 <code>medill-east.github.io</code></p></li><li><p>更改根目录下的 _config.yml 配置文件的开头部分 <code>URL</code> 和 <code>root</code> 配置：</p></li></ol><pre class="line-numbers language-none"><code class="language-none"># URLurl: https:&#x2F;&#x2F;medill-east.github.io&#x2F; # 这里记得改成自己的 url 哦root: &#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>感谢这篇帖子：<a href="https://github.com/hexojs/hexo/issues/1121">生成路径的问题，导致css，js无法加载 #1121</a></p><hr><h2 id="20210527-更换主题"><a href="#20210527-更换主题" class="headerlink" title="20210527 更换主题"></a>20210527 更换主题</h2><p>这里和 <a href="https://zhuanlan.zhihu.com/p/35668237">超详细Hexo+Github博客搭建小白教程</a> 中一样，采用的是 <a href="https://blinkfox.github.io/">blinkfox</a> 的 <a href="http://blinkfox.com/2018/09/28/qian-duan/hexo-bo-ke-zhu-ti-zhi-hexo-theme-matery-de-jie-shao/">Hexo博客主题之hexo-theme-matery的介绍</a> 该主题。</p><p>以下为过程记录。</p><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>进入根目录的 <code>themes</code> 文件夹下，用命令行下载：</p><pre class="line-numbers language-none"><code class="language-none">git clone https:&#x2F;&#x2F;github.com&#x2F;blinkfox&#x2F;hexo-theme-matery.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h4 id="切换主题"><a href="#切换主题" class="headerlink" title="切换主题"></a>切换主题</h4><p>修改根目录下 <code>_config.yml</code> 的 <code>theme</code> 的值：</p><pre class="line-numbers language-none"><code class="language-none">theme: hexo-theme-matery<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>建议修改</li><li> 两个 <code>per_page</code> 的分页条数设为 <code>6</code> 的倍数，以优化显示</li><li> 若是中文用户可以修改 <code>language</code> 的值为 <code>zh-CN</code></li></ul><h4 id="新建分类-categories-页"><a href="#新建分类-categories-页" class="headerlink" title="新建分类 categories 页"></a>新建分类 categories 页</h4><p><code>categories</code> 用于展示所有分类， 若是 <code>source</code> 目录下还没有 <code>categories/index.md</code> 文件，就需要新建一个，回到博客根目录(<code>blog</code>文件夹)之后运行以下代码：</p><pre class="line-numbers language-none"><code class="language-none">hexo new page &quot;categories&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑刚新建的页面文件 <code>/source/categories/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-none"><code class="language-none">---title: categoriesdate: 2021-05-27 11:44:43type: &quot;categories&quot;layout: &quot;categories&quot;---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="新建标签-tags-页"><a href="#新建标签-tags-页" class="headerlink" title="新建标签 tags 页"></a>新建标签 tags 页</h4><p><code>tags</code>页用于展示所有标签，若是 <code>source</code> 目录下还没有 <code>tags/index.md</code> 文件，就需要新建一个，回到博客根目录(<code>blog</code>文件夹)之后运行以下代码：</p><pre class="line-numbers language-none"><code class="language-none">hexo new page &quot;tags&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑刚新建的页面文件 <code>/source/tags/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-none"><code class="language-none">---title: tagsdate: 2021-05-27 11:44:43type: &quot;tags&quot;layout: &quot;tags&quot;---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="新建关于我-about-页"><a href="#新建关于我-about-页" class="headerlink" title="新建关于我 about 页"></a>新建关于我 about 页</h4><p><code>about</code> 页用于展示关于我和我的博客的信息，若是 <code>source</code> 目录下还没有 <code>about/index.md</code> 文件，就需要新建一个，回到博客根目录(<code>blog</code>文件夹)之后运行以下代码：</p><pre class="line-numbers language-none"><code class="language-none">hexo new page &quot;about&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑刚新建的页面文件 <code>/source/about/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-none"><code class="language-none">---title: aboutdate: 2021-05-27 11:49:31type: &quot;about&quot;layout: &quot;about&quot;---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="新建友链-friends-页（可选）"><a href="#新建友链-friends-页（可选）" class="headerlink" title="新建友链 friends 页（可选）"></a>新建友链 friends 页（可选）</h4><p><code>friends</code> 页用于展示友情链接，若是 <code>source</code> 目录下还没有 <code>friends/index.md</code> 文件，就需要新建一个，回到博客根目录(<code>blog</code>文件夹)之后运行以下代码：</p><pre class="line-numbers language-none"><code class="language-none">hexo new page &quot;friends&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑刚新建的页面文件 <code>/source/about/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-none"><code class="language-none">---title: friendsdate: 2021-05-27 11:51:08type: &quot;friends&quot;layout: &quot;friends&quot;---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>同时在博客 <code>source</code> 目录下新建 <code>_data</code> 目录，在 <code>_data</code> 目录中新建 <code>friends.json</code> 文件，内容如下：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json">[&#123;    &quot;avatar&quot;: &quot;http:&#x2F;&#x2F;image.luokangyuan.com&#x2F;1_qq_27922023.jpg&quot;,    &quot;name&quot;: &quot;码酱&quot;,    &quot;introduction&quot;: &quot;我不是大佬，只是在追寻大佬的脚步&quot;,    &quot;url&quot;: &quot;http:&#x2F;&#x2F;luokangyuan.com&#x2F;&quot;,    &quot;title&quot;: &quot;前去学习&quot;&#125;, &#123;    &quot;avatar&quot;: &quot;http:&#x2F;&#x2F;image.luokangyuan.com&#x2F;4027734.jpeg&quot;,    &quot;name&quot;: &quot;闪烁之狐&quot;,    &quot;introduction&quot;: &quot;编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬&quot;,    &quot;url&quot;: &quot;https:&#x2F;&#x2F;blinkfox.github.io&#x2F;&quot;,    &quot;title&quot;: &quot;前去学习&quot;&#125;, &#123;    &quot;avatar&quot;: &quot;http:&#x2F;&#x2F;image.luokangyuan.com&#x2F;avatar.jpg&quot;,    &quot;name&quot;: &quot;ja_rome&quot;,    &quot;introduction&quot;: &quot;平凡的脚步也可以走出伟大的行程&quot;,    &quot;url&quot;: &quot;ttps:&#x2F;&#x2F;me.csdn.net&#x2F;jlh912008548&quot;,    &quot;title&quot;: &quot;前去学习&quot;&#125;]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h4><p>使用了 <a href="https://github.com/ele828/hexo-prism-plugin">hexo-prism-plugin</a> 的 Hexo 插件做代码高亮。返回根目录 <code>blog</code> 之后运行如下代码：</p><pre class="line-numbers language-none"><code class="language-none">npm i -S hexo-prism-plugin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后修改根目录下 <code>_config.yml</code> 文件中的 <code>higlight.enable</code> 值为 <code>false</code>，并新增 <code>prism</code> 插件相关配置：</p><pre class="line-numbers language-none"><code class="language-none">highlight:  enable: falseprism_plugin:  mode: &#39;preprocess&#39;    # realtime&#x2F;preprocess  theme: &#39;tomorrow&#39;  line_number: false    # default false  custom_css:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="20210530"><a href="#20210530" class="headerlink" title="20210530"></a>20210530</h2><h4 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h4><p>主题中使用了 <a href="https://github.com/wzpan/hexo-generator-search">hexo-generator-search</a> 的 Hexo 插件来做内容搜索，先回到根目录后，命令如下：</p><pre class="line-numbers language-none"><code class="language-none">npm install hexo-generator-search --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在根目录下的 <code>_config.yml</code> 文件中新增以下配置：</p><pre class="line-numbers language-none"><code class="language-none">search:  path: search.xml  field: post<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="中文链接转拼音（可选）"><a href="#中文链接转拼音（可选）" class="headerlink" title="中文链接转拼音（可选）"></a>中文链接转拼音（可选）</h4><p>Hexo 默认会使得名称为中文的文章的永久链接中也有中文，这样会降低兼容性，而且 <code>gitment</code> 评论对中文链接也不支持，这里和教程中一样，使用 <a href="https://github.com/viko16/hexo-permalink-pinyin">hexo-permalink-pinyin </a> Hexo 插件在生成文章时生成中文拼音的永久链接：</p><pre class="line-numbers language-none"><code class="language-none">npm i hexo-permalink-pinyin --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在根目录下的 <code>_config.yml</code> 文件中新增以下配置：</p><pre class="line-numbers language-none"><code class="language-none">permalink_pinyin:  enable: true  separator: &#39;-&#39; # default: &#39;-&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="文章字数统计（可选）"><a href="#文章字数统计（可选）" class="headerlink" title="文章字数统计（可选）"></a>文章字数统计（可选）</h4><p>这里和教程中一样，使用 <a href="https://github.com/willin/hexo-wordcount">hexo-wordcount </a> Hexo 插件统计文章字数、阅读时长信息：</p><pre class="line-numbers language-none"><code class="language-none">npm i --save hexo-wordcount<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在根目录下的 <code>_config.yml</code> 文件中新增以下配置：</p><pre class="line-numbers language-none"><code class="language-none">wordCount:  enable: true  postWordCount: true  min2read: true  totalCount: true<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="添加-RSS-订阅支持（可选）"><a href="#添加-RSS-订阅支持（可选）" class="headerlink" title="添加 RSS 订阅支持（可选）"></a>添加 RSS 订阅支持（可选）</h4><p>这里和教程中一样，使用 <a href="https://github.com/hexojs/hexo-generator-feed">hexo-generator-feed </a> Hexo 插件提供 RSS 订阅功能：</p><pre class="line-numbers language-none"><code class="language-none">npm install hexo-generator-feed --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在根目录下的 <code>_config.yml</code> 文件中新增以下配置：</p><pre class="line-numbers language-none"><code class="language-none">feed:  type: atom  path: atom.xml  limit: 20  hub:  content:  content_limit: 140  content_limit_delim: &#39; &#39;  order_by: -date<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行<br><code>hexo clean &amp;&amp; hexo g</code></p><p>重新生成博客文件，然后在 <code>public</code> 文件夹中即可看到 <code>atom.xml</code> 文件，说明你已经安装成功了。</p><h4 id="修改页脚"><a href="#修改页脚" class="headerlink" title="修改页脚"></a>修改页脚</h4><p>页脚修改的配置文件在主题文件(即<code>themes/hexo-theme-matery</code>文件夹)的<br><code>/layout/_partial/footer.ejs</code>，包括站点、使用的主题、访问量等。</p><p>这里我对作者信息进行了一下修改，需要到 <code>_config.yml</code> 文件中找到 <code>author:</code> 然后改成自己的信息。之后别忘了</p><pre class="line-numbers language-none"><code class="language-none">hexo clean &amp;&amp; hexo g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>还有同步 <code>github</code> 哦</p><h4 id="修改社交链接"><a href="#修改社交链接" class="headerlink" title="修改社交链接"></a>修改社交链接</h4><p>在主题 <code>_config.yml</code> 文件中，默认支持 <code>QQ</code>/<code>Github</code>和邮箱的配置，可以在主题文件的 <code>/layout/_partial/social-link.ejs</code> 文件中，新增、修改你需要的社交链接地址，增加链接可参考如下代码：</p><pre class="line-numbers language-none"><code class="language-none">&lt;a href&#x3D;&quot;https:&#x2F;&#x2F;github.com&#x2F;blinkfox&quot; class&#x3D;&quot;tooltipped&quot; target&#x3D;&quot;_blank&quot; data-tooltip&#x3D;&quot;访问我的GitHub&quot; data-position&#x3D;&quot;top&quot; data-delay&#x3D;&quot;50&quot;&gt;    &lt;i class&#x3D;&quot;fa fa-github&quot;&gt;&lt;&#x2F;i&gt;&lt;&#x2F;a&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>其中，社交图标（如：fa-github）你可以在 <a href="https://fontawesome.com/v5.15/icons">Font Awesome</a> 中搜索找到。以下是常用社交图标的标识，供参考：</p><ul><li>Facebook: fa-facebook</li><li>Twitter: fa-twitter</li><li>Google-plus: fa-google-plus</li><li>Linkedin: fa-linkedin</li><li>Tumblr: fa-tumblr</li><li>Medium: fa-medium</li><li>Slack: fa-slack</li><li>新浪微博: fa-weibo</li><li>微信: fa-wechat</li><li>QQ: fa-qq</li></ul><h4 id="修改打赏的二维码图片"><a href="#修改打赏的二维码图片" class="headerlink" title="修改打赏的二维码图片"></a>修改打赏的二维码图片</h4><p>在主题文件的 <code>source/medias/reward</code> 文件中，你可以替换成你的的微信和支付宝的打赏二维码图片。</p><h4 id="配置音乐播放器（可选）"><a href="#配置音乐播放器（可选）" class="headerlink" title="配置音乐播放器（可选）"></a>配置音乐播放器（可选）</h4><p>要支持音乐播放，就必须开启音乐的播放配置和音乐数据的文件。</p><p>首先，在你的博客 <code>source</code> 目录下的 <code>_data</code> 目录（没有的话就新建一个）中新建 <code>musics.json</code> 文件，文件内容如下所示：</p><pre class="line-numbers language-none"><code class="language-none">[&#123;    &quot;name&quot;: &quot;五月雨变奏电音&quot;,    &quot;artist&quot;: &quot;AnimeVibe&quot;,    &quot;url&quot;: &quot;http:&#x2F;&#x2F;xxx.com&#x2F;music1.mp3&quot;,    &quot;cover&quot;: &quot;http:&#x2F;&#x2F;xxx.com&#x2F;music-cover1.png&quot;&#125;, &#123;    &quot;name&quot;: &quot;Take me hand&quot;,    &quot;artist&quot;: &quot;DAISHI DANCE,Cecile Corbel&quot;,    &quot;url&quot;: &quot;&#x2F;medias&#x2F;music&#x2F;music2.mp3&quot;,    &quot;cover&quot;: &quot;&#x2F;medias&#x2F;music&#x2F;cover2.png&quot;&#125;, &#123;    &quot;name&quot;: &quot;Shape of You&quot;,    &quot;artist&quot;: &quot;J.Fla&quot;,    &quot;url&quot;: &quot;http:&#x2F;&#x2F;xxx.com&#x2F;music3.mp3&quot;,    &quot;cover&quot;: &quot;http:&#x2F;&#x2F;xxx.com&#x2F;music-cover3.png&quot;&#125;]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注：以上 JSON 中的属性：name、artist、url、cover 分别表示音乐的名称、作者、音乐文件地址、音乐封面。</p></blockquote><p>然后，在主题的 <code>_config.yml</code> 配置文件中激活配置即可：</p><pre class="line-numbers language-none"><code class="language-none"># 是否在首页显示音乐.music:  enable: true  showTitle: false  title: 听听音乐  fixed: false # 是否开启吸底模式  autoplay: false # 是否自动播放  theme: &#39;#42b983&#39;  loop: &#39;all&#39; # 音频循环播放, 可选值: &#39;all&#39;, &#39;one&#39;, &#39;none&#39;  order: &#39;list&#39; # 音频循环顺序, 可选值: &#39;list&#39;, &#39;random&#39;  preload: &#39;auto&#39; # 预加载，可选值: &#39;none&#39;, &#39;metadata&#39;, &#39;auto&#39;  volume: 0.7 # 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效  listFolded: false # 列表默认折叠  listMaxHeight: # 列表最大高度<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="文章-Front-matter-介绍"><a href="#文章-Front-matter-介绍" class="headerlink" title="文章 Front-matter 介绍"></a>文章 Front-matter 介绍</h3><h4 id="Front-matter-选项详解"><a href="#Front-matter-选项详解" class="headerlink" title="Front-matter 选项详解"></a>Front-matter 选项详解</h4><p><code>Front-matter</code> 选项中的所有内容均为非必填的。但教程的作者仍然建议至少填写 <code>title</code> 和 <code>date</code> 的值。</p><table><thead><tr><th>配置选项</th><th align="right">默认值</th><th align="center">描述</th></tr></thead><tbody><tr><td>title</td><td align="right">Markdown 的文件标题</td><td align="center">文章标题，<strong>强烈建议填写此选项</strong></td></tr><tr><td>date</td><td align="right">文件创建时的日期时间</td><td align="center">发布时间，<strong>强烈建议填写此选</strong>项，且最好保证<strong>全局唯一</strong></td></tr><tr><td>author</td><td align="right">根 <code>_config.yml</code> 中的 <code>author</code></td><td align="center">文章作者</td></tr><tr><td>img</td><td align="right">featureImages 中的某个值</td><td align="center">文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等，我自己使用的是 picgo + github )来做图片的路径. 如: <a href="http://xxx.com/xxx.jpg">http://xxx.com/xxx.jpg</a></td></tr><tr><td>top</td><td align="right">true</td><td align="center">推荐文章（文章是否置顶），如果 top 值为 true，则会作为首页推荐文章</td></tr><tr><td>cover</td><td align="right">false</td><td align="center">v1.0.2版本新增，表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td>coverImg</td><td align="right">无</td><td align="center">v1.0.2版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td>password</td><td align="right">无</td><td align="center">文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 password 的值，该值必须是用 SHA256 加密后的密码，防止被他人识破。前提是在主题的 config.yml 中激活了 verifyPassword 选项</td></tr><tr><td>toc</td><td align="right">true</td><td align="center">是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 config.yml 中激活了 toc 选项</td></tr><tr><td>mathjax</td><td align="right">false</td><td align="center">是否开启数学公式支持 ，本文章是否开启 mathjax，且需要在主题的 _config.yml 文件中也需要开启才行</td></tr><tr><td>summary</td><td align="right">无</td><td align="center">文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td>categories</td><td align="right">无</td><td align="center">文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td>tags</td><td align="right">无</td><td align="center">文章标签，一篇文章可以多个标签</td></tr></tbody></table><blockquote><p>注意:</p></blockquote><blockquote><p>如果 <code>img</code> 属性不填写的话，文章特色图会根据文章标题的 <code>hashcode</code> 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章都的特色图各有特色。<br><code>date</code> 的值尽量保证每篇文章是唯一的，因为本主题中 <code>Gitalk</code> 和 <code>Gitment</code> 识别 id 是通过 date 的值来作为唯一标识的。<br>如果要对文章设置阅读验证密码的功能，不仅要在 <code>Front-matter</code> 中设置采用了 SHA256 加密的 <code>password</code> 的值，还需要在主题的 <code>_config.yml</code> 中激活了配置。有些在线的 SHA256 加密的地址，可供使用：<a href="https://tool.oschina.net/encrypt?type=2">开源中国在线工具</a>、<a href="http://encode.chahuo.com/">chahuo</a>、<a href="http://tool.chinaz.com/tools/hash.aspx">站长工具</a>。</p></blockquote><p>以下为教程作者给出的示例：</p><h4 id="最简示例"><a href="#最简示例" class="headerlink" title="最简示例"></a>最简示例</h4><pre class="line-numbers language-none"><code class="language-none">---title: typora-vue-theme主题介绍date: 2018-09-07 09:25:00---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="最全示例"><a href="#最全示例" class="headerlink" title="最全示例"></a>最全示例</h4><pre class="line-numbers language-none"><code class="language-none">---title: typora-vue-theme主题介绍date: 2018-09-07 09:25:00author: 赵奇img: &#x2F;source&#x2F;images&#x2F;xxx.jpgtop: truecover: truecoverImg: &#x2F;images&#x2F;1.jpgpassword: 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92toc: falsemathjax: falsesummary: 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要categories: Markdowntags:  - Typora  - Markdown---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="自动添加文章头"><a href="#自动添加文章头" class="headerlink" title="自动添加文章头"></a>自动添加文章头</h4><p>这里参考 <a href="https://zhuanlan.zhihu.com/p/35668237">超详细Hexo+Github博客搭建小白教程</a> 中所写，把 <code>/scaffolds/post.md</code> 修改为如下代码，这样创建新 <code>post</code> 的时候就不用手动填充，只需要修改对应信息了：</p><pre class="line-numbers language-none"><code class="language-none">---title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;top: falsecover: falsepassword:toc: truemathjax: truesummary:tags:categories:---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="20210605"><a href="#20210605" class="headerlink" title="20210605"></a>20210605</h2><h3 id="自定制修改"><a href="#自定制修改" class="headerlink" title="自定制修改"></a>自定制修改</h3><p>在本主题的 <code>_config.yml</code> 中可以修改部分自定义信息，有以下几个部分：</p><ul><li>菜单</li><li>我的梦想</li><li>首页的音乐播放器和视频播放器配置</li><li>是否显示推荐文章名称和按钮配置</li><li>favicon 和 Logo</li><li>个人信息</li><li>TOC 目录</li><li>文章打赏信息</li><li>复制文章内容时追加版权信息</li><li>MathJax</li><li>文章字数统计、阅读时长</li><li>点击页面的’爱心’效果</li><li>我的项目</li><li>我的技能</li><li>我的相册</li><li>Gitalk、Gitment、Valine 和 disqus 评论配置</li><li>不蒜子统计和谷歌分析（Google Analytics）</li><li>默认特色图的集合。当文章没有设置特色图时，本主题会根据文章标题的 hashcode 值取余，来选择展示对应的特色图</li></ul><h3 id="更多修改可能性"><a href="#更多修改可能性" class="headerlink" title="更多修改可能性"></a>更多修改可能性</h3><h4 id="修改主题颜色"><a href="#修改主题颜色" class="headerlink" title="修改主题颜色"></a>修改主题颜色</h4><p>在主题文件的 <code>/source/css/matery.css</code> 文件中，搜索 <code>.bg-color</code> 来修改背景颜色：</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;* 整体背景颜色，包括导航、移动端的导航、页尾、标签页等的背景颜色. *&#x2F;.bg-color &#123;    background-image: linear-gradient(to right, #373B44 0%, #4286f4 100%);&#125;@-webkit-keyframes rainbow &#123;   &#x2F;* 动态切换背景颜色. *&#x2F;&#125;@keyframes rainbow &#123;    &#x2F;* 动态切换背景颜色. *&#x2F;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="修改-banner-图和文章特色图"><a href="#修改-banner-图和文章特色图" class="headerlink" title="修改 banner 图和文章特色图"></a>修改 banner 图和文章特色图</h4><p>可以直接在 <code>/source/medias/banner</code> 文件夹中更换喜欢的 <code>banner</code> 图片，原教程中主题代码中是每天动态切换一张，只需 7 张即可。<br>这里我从自己照的照片找了 26 张出来，所以稍微做了一些更改：<br>找到 <code>banner</code> 切换的  <code>JavaScript</code> 代码位置 <code>/layout/_partial/bg-cover-content.ejs</code> 文件的 <code>&lt;script&gt;&lt;/script&gt;</code> 代码中：</p><pre class="line-numbers language-none"><code class="language-none">var num &#x3D; new Date().getSeconds() % 26;$(&#39;.bg-cover&#39;).css(&#39;background-image&#39;, &#39;url(&#x2F;medias&#x2F;banner&#x2F;&#39; + num + &#39;.jpg)&#39;);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><code>/source/medias/featureimages</code> 文件夹中默认有 24 张图片，我也将其改为了 26 张图片，并在主题文件夹下的 <code>_config.yml</code> 的 <code>featureImages</code> 部分做同步修改。</p><h4 id="修改了主页的打字效果相关文字"><a href="#修改了主页的打字效果相关文字" class="headerlink" title="修改了主页的打字效果相关文字"></a>修改了主页的打字效果相关文字</h4><p>主题文件夹下的 <code>_config.yml</code> 中找到 <code>sutitle</code> 部分的 <code>sub</code> 部分可以对文字进行相应修改</p><h4 id="更改了-myGallery"><a href="#更改了-myGallery" class="headerlink" title="更改了 myGallery"></a>更改了 myGallery</h4><p><code>关于</code> 页面的 <code>我的相册</code> 部分可以展示图片，这里我也是把所有的图片都摆上来了：</p><pre class="line-numbers language-none"><code class="language-none">myGallery:  enable: true  data:    - &#x2F;medias&#x2F;featureimages&#x2F;0.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;1.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;2.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;3.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;4.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;5.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;6.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;7.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;8.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;9.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;10.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;11.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;12.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;13.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;14.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;15.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;16.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;17.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;18.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;19.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;20.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;21.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;22.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;23.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;24.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;25.jpg    - &#x2F;medias&#x2F;featureimages&#x2F;26.jpg<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="其余更改"><a href="#其余更改" class="headerlink" title="其余更改"></a>其余更改</h4><ul><li>更改 favicon</li><li>更改 logo</li><li>更改 githubLink 为 false</li><li>更新 profile</li><li>把 my projects 和 my skills 暂时留空</li><li>更改了 根目录 <code>_config.yml</code> 文件中的 <code>description</code></li><li>因为出现了 <code>can not get /</code> 问题，所以暂时删掉了 contact 页面</li></ul><hr><h2 id="20211116-添加评论功能"><a href="#20211116-添加评论功能" class="headerlink" title="20211116 添加评论功能"></a>20211116 添加评论功能</h2><p>和教程中一样，这里也使用了畅言评论插件。</p><ol><li>首先<a href="http://changyan.kuaizhan.com/">在这里</a>注册一个畅言账号。</li><li>打开<code>进入工作台-安装畅言-通用代码安装</code>页面，复制页面中的代码：</li></ol><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211116142114.png"></p><ol start="3"><li>打开 <code>.../blog/themes/hexo-theme-matery/layout/post.ejs</code></li><li>将上面的代码复制到最底部就可以啦！</li></ol><p>效果如下：</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20211116142429.png"></p><h2 id="Todo：域名问题"><a href="#Todo：域名问题" class="headerlink" title="Todo：域名问题"></a>Todo：域名问题</h2><p>暂时先凑合用，后面再琢磨域名问题(￣▽￣)”</p><hr><h2 id="20220516-添加-Google-搜索收录以及-Google-Analytics"><a href="#20220516-添加-Google-搜索收录以及-Google-Analytics" class="headerlink" title="20220516 添加 Google 搜索收录以及 Google Analytics"></a>20220516 添加 Google 搜索收录以及 Google Analytics</h2><h3 id="添加-Google-搜索收录"><a href="#添加-Google-搜索收录" class="headerlink" title="添加 Google 搜索收录"></a>添加 Google 搜索收录</h3><p>参考 <a href="https://blog.csdn.net/qq_36759224/article/details/100899489?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_title~default-0-100899489-blog-98593529.pc_relevant_aa&spm=1001.2101.3001.4242.1&utm_relevant_index=3">Hexo 博客提交百度、谷歌搜索引擎收录</a></p><h4 id="先生成-sitemap"><a href="#先生成-sitemap" class="headerlink" title="先生成 sitemap"></a>先生成 sitemap</h4><p>切换到 blog 根目录，然后安装相应插件</p><pre class="line-numbers language-none"><code class="language-none">npm install hexo-generator-sitemap -save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>之后找到 hexo 主题下的  <code>_config.yml</code> 文件，可以在最后添加以下内容：</p><pre class="line-numbers language-none"><code class="language-none"># extensionsplugins:- hexo-generator-sitemap#sitemapsitemap:path: sitemap.xml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后部署：</p><pre class="line-numbers language-none"><code class="language-none">hexo g &amp;&amp; hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>此时访问主页的 sitemap 应该能看到了<br>如：<br><a href="https://medill-east.github.io/sitemap.xml">https://medill-east.github.io/sitemap.xml</a></p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220516141909.png"></p><h4 id="设置-Google-Search-Console"><a href="#设置-Google-Search-Console" class="headerlink" title="设置 Google Search Console"></a>设置 Google Search Console</h4><ul><li><p>进入<a href="https://developers.google.com/search">相应网址</a></p></li><li><p>登录</p></li><li><p>然后转到 <a href="https://search.google.com/search-console?resource_id=https://medill-east.github.io/">Google Search Console</a></p></li><li><p>左上方添加资源：<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220516141310.png"></p><ul><li>其实使用网域方法是优选，但因为我的网站还没搞，就选择用了网址前缀方法</li></ul></li><li><p>添加站点地图<br>  <img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220516141413.png"><br>  这里输入 <code>sitemap.xml</code> 就可以。要注意的是这里它可能需要一段时间才能成功获取，可以等个一天再来看看。最终会显示为成功。</p></li></ul><h4 id="验证已经加入搜索"><a href="#验证已经加入搜索" class="headerlink" title="验证已经加入搜索"></a>验证已经加入搜索</h4><p>直接在 google 中搜索<code>site:</code>+自己的网址，可以看到是否被抓取</p><p><code>site:https://medill-east.github.io/</code></p><h3 id="添加-Google-Analytics"><a href="#添加-Google-Analytics" class="headerlink" title="添加 Google Analytics"></a>添加 Google Analytics</h3><h4 id="创建账号"><a href="#创建账号" class="headerlink" title="创建账号"></a>创建账号</h4><p>首先我们需要创建账户，访问<a href="https://analytics.google.com/">这里</a>**进行操作。</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220516144209.png"></p><p>根据需要填写信息。</p><h4 id="获取-id-并添加"><a href="#获取-id-并添加" class="headerlink" title="获取 id 并添加"></a>获取 id 并添加</h4><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220516144323.png"></p><p>找到上述位置的 衡量 ID，复制它</p><p>来到 hexo 文件夹下相应 <code>_config.yml</code> 文件，matery 主题已经集成好了相应功能，找到下面的代码，将 enable 改为 <code>true</code> 并填入相应 id （就是刚才复制的衡量 ID）即可</p><pre class="line-numbers language-none"><code class="language-none"># Add google analytics configuration# 添加 Google Analytics 配置googleAnalytics:  enable: true  id: <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后记得部署</p><pre class="line-numbers language-none"><code class="language-none">hexo g &amp;&amp; hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="查看数据"><a href="#查看数据" class="headerlink" title="查看数据"></a>查看数据</h4><p>之后来到 探索页面，就可以看到网站的被访问情况啦！</p><p><img src="https://raw.githubusercontent.com/Medill-East/IMGStorage/master/img/PicGo-Github-PicBed/20220516144612.png"></p><hr><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul><li><a href="https://zhuanlan.zhihu.com/p/35668237">超详细Hexo+Github博客搭建小白教程</a></li><li><a href="http://blinkfox.com/2018/09/28/qian-duan/hexo-bo-ke-zhu-ti-zhi-hexo-theme-matery-de-jie-shao/">Hexo博客主题之hexo-theme-matery的介绍</a></li><li><a href="https://github.com/hexojs/hexo/issues/1121">生成路径的问题，导致css，js无法加载 #1121</a></li><li><a href="https://blog.csdn.net/qq_36759224/article/details/100899489?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_title~default-0-100899489-blog-98593529.pc_relevant_aa&spm=1001.2101.3001.4242.1&utm_relevant_index=3">Hexo 博客提交百度、谷歌搜索引擎收录</a></li><li><a href="https://www.superweb999.com/article/332856.html">手把手教你用Hexo+Github搭建属于自己的博客(详细图文)</a></li><li><a href="https://qchaha.github.io/2018/09/19/homepageStatistics.html">在github主页中增加访问量统计和google分析</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog-building </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
